

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Wed Apr 20 13:20:10 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F886
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK3,global,class=CODE,delta=2,noexec
     7                           	psect	strings,global,class=STRING,delta=2,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    14                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    15                           	psect	inittext,global,class=CODE,delta=2
    16                           	psect	clrtext,global,class=CODE,delta=2
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	maintext,global,class=CODE,split=1,delta=2
    21                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    22                           	psect	text2,local,class=CODE,merge=1,delta=2
    23                           	psect	text3,local,class=CODE,merge=1,delta=2
    24                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text9,local,class=CODE,merge=1,delta=2
    30                           	psect	text10,local,class=CODE,merge=1,delta=2
    31                           	psect	text11,local,class=CODE,merge=1,delta=2
    32                           	psect	text12,local,class=CODE,merge=1,delta=2
    33                           	psect	text13,local,class=CODE,merge=1,delta=2
    34                           	psect	text14,local,class=CODE,merge=1,delta=2
    35                           	psect	text15,local,class=CODE,merge=1,delta=2
    36                           	psect	text16,local,class=CODE,merge=1,delta=2
    37                           	psect	text17,local,class=CODE,merge=1,delta=2
    38                           	psect	text18,local,class=CODE,merge=1,delta=2
    39                           	psect	text19,local,class=CODE,merge=1,delta=2
    40                           	psect	text20,local,class=CODE,merge=1,delta=2
    41                           	psect	text21,local,class=CODE,merge=1,delta=2
    42                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text23,local,class=CODE,merge=1,delta=2,group=3
    44                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    46                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    47                           	psect	text27,local,class=CODE,merge=1,delta=2
    48                           	psect	text28,local,class=CODE,merge=1,delta=2
    49                           	psect	text29,local,class=CODE,merge=1,delta=2
    50                           	psect	text30,local,class=CODE,merge=1,delta=2
    51                           	psect	text31,local,class=CODE,merge=1,delta=2
    52                           	psect	text32,local,class=CODE,merge=1,delta=2
    53                           	psect	text33,local,class=CODE,merge=1,delta=2
    54                           	psect	text34,local,class=CODE,merge=1,delta=2
    55                           	psect	text35,local,class=CODE,merge=1,delta=2
    56                           	psect	text36,local,class=CODE,merge=1,delta=2
    57                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    58                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    59                           	dabs	1,0x7E,2
    60  0000                     
    61                           ; Version 2.40
    62                           ; Generated 17/11/2021 GMT
    63                           ; 
    64                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    65                           ; All rights reserved.
    66                           ; 
    67                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    68                           ; 
    69                           ; Redistribution and use in source and binary forms, with or without modification, are
    70                           ; permitted provided that the following conditions are met:
    71                           ; 
    72                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    73                           ;        conditions and the following disclaimer.
    74                           ; 
    75                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    76                           ;        of conditions and the following disclaimer in the documentation and/or other
    77                           ;        materials provided with the distribution. Publication is not required when
    78                           ;        this file is used in an embedded application.
    79                           ; 
    80                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    81                           ;        software without specific prior written permission.
    82                           ; 
    83                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    84                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    85                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    86                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    87                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    88                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    89                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    90                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    91                           ; 
    92                           ; 
    93                           ; Code-generator required, PIC16F886 Definitions
    94                           ; 
    95                           ; SFR Addresses
    96  0000                     	;# 
    97  0001                     	;# 
    98  0002                     	;# 
    99  0003                     	;# 
   100  0004                     	;# 
   101  0005                     	;# 
   102  0006                     	;# 
   103  0007                     	;# 
   104  0009                     	;# 
   105  000A                     	;# 
   106  000B                     	;# 
   107  000C                     	;# 
   108  000D                     	;# 
   109  000E                     	;# 
   110  000E                     	;# 
   111  000F                     	;# 
   112  0010                     	;# 
   113  0011                     	;# 
   114  0012                     	;# 
   115  0013                     	;# 
   116  0014                     	;# 
   117  0015                     	;# 
   118  0015                     	;# 
   119  0016                     	;# 
   120  0017                     	;# 
   121  0018                     	;# 
   122  0019                     	;# 
   123  001A                     	;# 
   124  001B                     	;# 
   125  001B                     	;# 
   126  001C                     	;# 
   127  001D                     	;# 
   128  001E                     	;# 
   129  001F                     	;# 
   130  0081                     	;# 
   131  0085                     	;# 
   132  0086                     	;# 
   133  0087                     	;# 
   134  0089                     	;# 
   135  008C                     	;# 
   136  008D                     	;# 
   137  008E                     	;# 
   138  008F                     	;# 
   139  0090                     	;# 
   140  0091                     	;# 
   141  0092                     	;# 
   142  0093                     	;# 
   143  0093                     	;# 
   144  0093                     	;# 
   145  0094                     	;# 
   146  0095                     	;# 
   147  0096                     	;# 
   148  0097                     	;# 
   149  0098                     	;# 
   150  0099                     	;# 
   151  009A                     	;# 
   152  009B                     	;# 
   153  009C                     	;# 
   154  009D                     	;# 
   155  009E                     	;# 
   156  009F                     	;# 
   157  0105                     	;# 
   158  0107                     	;# 
   159  0108                     	;# 
   160  0109                     	;# 
   161  010C                     	;# 
   162  010C                     	;# 
   163  010D                     	;# 
   164  010E                     	;# 
   165  010F                     	;# 
   166  0185                     	;# 
   167  0187                     	;# 
   168  0188                     	;# 
   169  0189                     	;# 
   170  018C                     	;# 
   171  018D                     	;# 
   172  0000                     	;# 
   173  0001                     	;# 
   174  0002                     	;# 
   175  0003                     	;# 
   176  0004                     	;# 
   177  0005                     	;# 
   178  0006                     	;# 
   179  0007                     	;# 
   180  0009                     	;# 
   181  000A                     	;# 
   182  000B                     	;# 
   183  000C                     	;# 
   184  000D                     	;# 
   185  000E                     	;# 
   186  000E                     	;# 
   187  000F                     	;# 
   188  0010                     	;# 
   189  0011                     	;# 
   190  0012                     	;# 
   191  0013                     	;# 
   192  0014                     	;# 
   193  0015                     	;# 
   194  0015                     	;# 
   195  0016                     	;# 
   196  0017                     	;# 
   197  0018                     	;# 
   198  0019                     	;# 
   199  001A                     	;# 
   200  001B                     	;# 
   201  001B                     	;# 
   202  001C                     	;# 
   203  001D                     	;# 
   204  001E                     	;# 
   205  001F                     	;# 
   206  0081                     	;# 
   207  0085                     	;# 
   208  0086                     	;# 
   209  0087                     	;# 
   210  0089                     	;# 
   211  008C                     	;# 
   212  008D                     	;# 
   213  008E                     	;# 
   214  008F                     	;# 
   215  0090                     	;# 
   216  0091                     	;# 
   217  0092                     	;# 
   218  0093                     	;# 
   219  0093                     	;# 
   220  0093                     	;# 
   221  0094                     	;# 
   222  0095                     	;# 
   223  0096                     	;# 
   224  0097                     	;# 
   225  0098                     	;# 
   226  0099                     	;# 
   227  009A                     	;# 
   228  009B                     	;# 
   229  009C                     	;# 
   230  009D                     	;# 
   231  009E                     	;# 
   232  009F                     	;# 
   233  0105                     	;# 
   234  0107                     	;# 
   235  0108                     	;# 
   236  0109                     	;# 
   237  010C                     	;# 
   238  010C                     	;# 
   239  010D                     	;# 
   240  010E                     	;# 
   241  010F                     	;# 
   242  0185                     	;# 
   243  0187                     	;# 
   244  0188                     	;# 
   245  0189                     	;# 
   246  018C                     	;# 
   247  018D                     	;# 
   248  0000                     	;# 
   249  0001                     	;# 
   250  0002                     	;# 
   251  0003                     	;# 
   252  0004                     	;# 
   253  0005                     	;# 
   254  0006                     	;# 
   255  0007                     	;# 
   256  0009                     	;# 
   257  000A                     	;# 
   258  000B                     	;# 
   259  000C                     	;# 
   260  000D                     	;# 
   261  000E                     	;# 
   262  000E                     	;# 
   263  000F                     	;# 
   264  0010                     	;# 
   265  0011                     	;# 
   266  0012                     	;# 
   267  0013                     	;# 
   268  0014                     	;# 
   269  0015                     	;# 
   270  0015                     	;# 
   271  0016                     	;# 
   272  0017                     	;# 
   273  0018                     	;# 
   274  0019                     	;# 
   275  001A                     	;# 
   276  001B                     	;# 
   277  001B                     	;# 
   278  001C                     	;# 
   279  001D                     	;# 
   280  001E                     	;# 
   281  001F                     	;# 
   282  0081                     	;# 
   283  0085                     	;# 
   284  0086                     	;# 
   285  0087                     	;# 
   286  0089                     	;# 
   287  008C                     	;# 
   288  008D                     	;# 
   289  008E                     	;# 
   290  008F                     	;# 
   291  0090                     	;# 
   292  0091                     	;# 
   293  0092                     	;# 
   294  0093                     	;# 
   295  0093                     	;# 
   296  0093                     	;# 
   297  0094                     	;# 
   298  0095                     	;# 
   299  0096                     	;# 
   300  0097                     	;# 
   301  0098                     	;# 
   302  0099                     	;# 
   303  009A                     	;# 
   304  009B                     	;# 
   305  009C                     	;# 
   306  009D                     	;# 
   307  009E                     	;# 
   308  009F                     	;# 
   309  0105                     	;# 
   310  0107                     	;# 
   311  0108                     	;# 
   312  0109                     	;# 
   313  010C                     	;# 
   314  010C                     	;# 
   315  010D                     	;# 
   316  010E                     	;# 
   317  010F                     	;# 
   318  0185                     	;# 
   319  0187                     	;# 
   320  0188                     	;# 
   321  0189                     	;# 
   322  018C                     	;# 
   323  018D                     	;# 
   324  0000                     	;# 
   325  0001                     	;# 
   326  0002                     	;# 
   327  0003                     	;# 
   328  0004                     	;# 
   329  0005                     	;# 
   330  0006                     	;# 
   331  0007                     	;# 
   332  0009                     	;# 
   333  000A                     	;# 
   334  000B                     	;# 
   335  000C                     	;# 
   336  000D                     	;# 
   337  000E                     	;# 
   338  000E                     	;# 
   339  000F                     	;# 
   340  0010                     	;# 
   341  0011                     	;# 
   342  0012                     	;# 
   343  0013                     	;# 
   344  0014                     	;# 
   345  0015                     	;# 
   346  0015                     	;# 
   347  0016                     	;# 
   348  0017                     	;# 
   349  0018                     	;# 
   350  0019                     	;# 
   351  001A                     	;# 
   352  001B                     	;# 
   353  001B                     	;# 
   354  001C                     	;# 
   355  001D                     	;# 
   356  001E                     	;# 
   357  001F                     	;# 
   358  0081                     	;# 
   359  0085                     	;# 
   360  0086                     	;# 
   361  0087                     	;# 
   362  0089                     	;# 
   363  008C                     	;# 
   364  008D                     	;# 
   365  008E                     	;# 
   366  008F                     	;# 
   367  0090                     	;# 
   368  0091                     	;# 
   369  0092                     	;# 
   370  0093                     	;# 
   371  0093                     	;# 
   372  0093                     	;# 
   373  0094                     	;# 
   374  0095                     	;# 
   375  0096                     	;# 
   376  0097                     	;# 
   377  0098                     	;# 
   378  0099                     	;# 
   379  009A                     	;# 
   380  009B                     	;# 
   381  009C                     	;# 
   382  009D                     	;# 
   383  009E                     	;# 
   384  009F                     	;# 
   385  0105                     	;# 
   386  0107                     	;# 
   387  0108                     	;# 
   388  0109                     	;# 
   389  010C                     	;# 
   390  010C                     	;# 
   391  010D                     	;# 
   392  010E                     	;# 
   393  010F                     	;# 
   394  0185                     	;# 
   395  0187                     	;# 
   396  0188                     	;# 
   397  0189                     	;# 
   398  018C                     	;# 
   399  018D                     	;# 
   400  0000                     	;# 
   401  0001                     	;# 
   402  0002                     	;# 
   403  0003                     	;# 
   404  0004                     	;# 
   405  0005                     	;# 
   406  0006                     	;# 
   407  0007                     	;# 
   408  0009                     	;# 
   409  000A                     	;# 
   410  000B                     	;# 
   411  000C                     	;# 
   412  000D                     	;# 
   413  000E                     	;# 
   414  000E                     	;# 
   415  000F                     	;# 
   416  0010                     	;# 
   417  0011                     	;# 
   418  0012                     	;# 
   419  0013                     	;# 
   420  0014                     	;# 
   421  0015                     	;# 
   422  0015                     	;# 
   423  0016                     	;# 
   424  0017                     	;# 
   425  0018                     	;# 
   426  0019                     	;# 
   427  001A                     	;# 
   428  001B                     	;# 
   429  001B                     	;# 
   430  001C                     	;# 
   431  001D                     	;# 
   432  001E                     	;# 
   433  001F                     	;# 
   434  0081                     	;# 
   435  0085                     	;# 
   436  0086                     	;# 
   437  0087                     	;# 
   438  0089                     	;# 
   439  008C                     	;# 
   440  008D                     	;# 
   441  008E                     	;# 
   442  008F                     	;# 
   443  0090                     	;# 
   444  0091                     	;# 
   445  0092                     	;# 
   446  0093                     	;# 
   447  0093                     	;# 
   448  0093                     	;# 
   449  0094                     	;# 
   450  0095                     	;# 
   451  0096                     	;# 
   452  0097                     	;# 
   453  0098                     	;# 
   454  0099                     	;# 
   455  009A                     	;# 
   456  009B                     	;# 
   457  009C                     	;# 
   458  009D                     	;# 
   459  009E                     	;# 
   460  009F                     	;# 
   461  0105                     	;# 
   462  0107                     	;# 
   463  0108                     	;# 
   464  0109                     	;# 
   465  010C                     	;# 
   466  010C                     	;# 
   467  010D                     	;# 
   468  010E                     	;# 
   469  010F                     	;# 
   470  0185                     	;# 
   471  0187                     	;# 
   472  0188                     	;# 
   473  0189                     	;# 
   474  018C                     	;# 
   475  018D                     	;# 
   476  0000                     	;# 
   477  0001                     	;# 
   478  0002                     	;# 
   479  0003                     	;# 
   480  0004                     	;# 
   481  0005                     	;# 
   482  0006                     	;# 
   483  0007                     	;# 
   484  0009                     	;# 
   485  000A                     	;# 
   486  000B                     	;# 
   487  000C                     	;# 
   488  000D                     	;# 
   489  000E                     	;# 
   490  000E                     	;# 
   491  000F                     	;# 
   492  0010                     	;# 
   493  0011                     	;# 
   494  0012                     	;# 
   495  0013                     	;# 
   496  0014                     	;# 
   497  0015                     	;# 
   498  0015                     	;# 
   499  0016                     	;# 
   500  0017                     	;# 
   501  0018                     	;# 
   502  0019                     	;# 
   503  001A                     	;# 
   504  001B                     	;# 
   505  001B                     	;# 
   506  001C                     	;# 
   507  001D                     	;# 
   508  001E                     	;# 
   509  001F                     	;# 
   510  0081                     	;# 
   511  0085                     	;# 
   512  0086                     	;# 
   513  0087                     	;# 
   514  0089                     	;# 
   515  008C                     	;# 
   516  008D                     	;# 
   517  008E                     	;# 
   518  008F                     	;# 
   519  0090                     	;# 
   520  0091                     	;# 
   521  0092                     	;# 
   522  0093                     	;# 
   523  0093                     	;# 
   524  0093                     	;# 
   525  0094                     	;# 
   526  0095                     	;# 
   527  0096                     	;# 
   528  0097                     	;# 
   529  0098                     	;# 
   530  0099                     	;# 
   531  009A                     	;# 
   532  009B                     	;# 
   533  009C                     	;# 
   534  009D                     	;# 
   535  009E                     	;# 
   536  009F                     	;# 
   537  0105                     	;# 
   538  0107                     	;# 
   539  0108                     	;# 
   540  0109                     	;# 
   541  010C                     	;# 
   542  010C                     	;# 
   543  010D                     	;# 
   544  010E                     	;# 
   545  010F                     	;# 
   546  0185                     	;# 
   547  0187                     	;# 
   548  0188                     	;# 
   549  0189                     	;# 
   550  018C                     	;# 
   551  018D                     	;# 
   552                           
   553                           	psect	idataBANK0
   554  12AE                     __pidataBANK0:
   555                           
   556                           ;initializer for _BackLight_State
   557  12AE  3408               	retlw	8
   558                           
   559                           	psect	idataBANK1
   560  0003                     __pidataBANK1:
   561                           
   562                           ;initializer for _AM_PM
   563  0003  3405               	retlw	5
   564                           
   565                           ;initializer for _Clock_type
   566  0004  3406               	retlw	6
   567                           
   568                           	psect	idataBANK3
   569  08BC                     __pidataBANK3:
   570                           
   571                           ;initializer for _days
   572  08BC  3453               	retlw	83
   573  08BD  344D               	retlw	77
   574  08BE  3454               	retlw	84
   575  08BF  3457               	retlw	87
   576  08C0  3474               	retlw	116
   577  08C1  3446               	retlw	70
   578  08C2  3473               	retlw	115
   579                           
   580                           	psect	strings
   581  0800                     __pstrings:
   582  0800                     stringtab:
   583  0800                     __stringtab:
   584                           
   585                           ;	String table - string pointers are 1 byte each
   586  0800  1BFF               	btfsc	btemp+1,7
   587  0801  280A               	ljmp	stringcode
   588  0802  1383               	bcf	3,7
   589  0803  187F               	btfsc	btemp+1,0
   590  0804  1783               	bsf	3,7
   591  0805  0800               	movf	0,w
   592  0806  0A84               	incf	4,f
   593  0807  1903               	skipnz
   594  0808  0AFF               	incf	btemp+1,f
   595  0809  0008               	return
   596  080A                     stringcode:
   597  080A                     stringdir:
   598  080A  3008               	movlw	high stringdir
   599  080B  008A               	movwf	10
   600  080C  0804               	movf	4,w
   601  080D  0A84               	incf	4,f
   602  080E  0782               	addwf	2,f
   603  080F                     __stringbase:
   604  080F  3400               	retlw	0
   605  0810                     __end_of__stringtab:
   606  0810                     _dpowers:
   607  0810  3401               	retlw	1
   608  0811  3400               	retlw	0
   609  0812  340A               	retlw	10
   610  0813  3400               	retlw	0
   611  0814  3464               	retlw	100
   612  0815  3400               	retlw	0
   613  0816  34E8               	retlw	232
   614  0817  3403               	retlw	3
   615  0818  3410               	retlw	16
   616  0819  3427               	retlw	39
   617  081A                     __end_of_dpowers:
   618  081A                     _hexpowers:
   619  081A  3401               	retlw	1
   620  081B  3400               	retlw	0
   621  081C  3410               	retlw	16
   622  081D  3400               	retlw	0
   623  081E  3400               	retlw	0
   624  081F  3401               	retlw	1
   625  0820  3400               	retlw	0
   626  0821  3410               	retlw	16
   627  0822                     __end_of_hexpowers:
   628  000B                     _INTCONbits	set	11
   629  0012                     _T2CONbits	set	18
   630  0015                     _CCPR1L	set	21
   631  0017                     _CCP1CONbits	set	23
   632  0006                     _PORTB	set	6
   633  000C                     _PIR1bits	set	12
   634  001E                     _ADRESH	set	30
   635  001F                     _ADCON0bits	set	31
   636  0014                     _SSPCON	set	20
   637  0013                     _SSPBUF	set	19
   638  0035                     _RB5	set	53
   639  0063                     _SSPIF	set	99
   640  008C                     _PIE1bits	set	140
   641  009F                     _ADCON1bits	set	159
   642  009D                     _PSTRCONbits	set	157
   643  0092                     _PR2	set	146
   644  0089                     _TRISE	set	137
   645  0087                     _TRISC	set	135
   646  0086                     _TRISB	set	134
   647  009E                     _ADRESL	set	158
   648  0091                     _SSPCON2bits	set	145
   649  0093                     _SSPADD	set	147
   650  0091                     _SSPCON2	set	145
   651  0094                     _SSPSTAT	set	148
   652  0087                     _TRISCbits	set	135
   653  0094                     _SSPSTATbits	set	148
   654  048C                     _ACKEN	set	1164
   655  048D                     _ACKDT	set	1165
   656  048A                     _PEN	set	1162
   657  0489                     _RSEN	set	1161
   658  048E                     _ACKSTAT	set	1166
   659  0463                     _SSPIE	set	1123
   660  048B                     _RCEN	set	1163
   661  0188                     _ANSELbits	set	392
   662  0189                     _ANSELH	set	393
   663  0188                     _ANSEL	set	392
   664  0822                     STR_29:
   665  0822  3430               	retlw	48	;'0'
   666  0823  3431               	retlw	49	;'1'
   667  0824  3432               	retlw	50	;'2'
   668  0825  3433               	retlw	51	;'3'
   669  0826  3434               	retlw	52	;'4'
   670  0827  3435               	retlw	53	;'5'
   671  0828  3436               	retlw	54	;'6'
   672  0829  3437               	retlw	55	;'7'
   673  082A  3438               	retlw	56	;'8'
   674  082B  3439               	retlw	57	;'9'
   675  082C  3461               	retlw	97	;'a'
   676  082D  3462               	retlw	98	;'b'
   677  082E  3463               	retlw	99	;'c'
   678  082F  3464               	retlw	100	;'d'
   679  0830  3465               	retlw	101	;'e'
   680  0831  3466               	retlw	102	;'f'
   681  0832  3400               	retlw	0
   682  0833                     STR_4:
   683  0833  3450               	retlw	80	;'P'
   684  0834  3472               	retlw	114	;'r'
   685  0835  3465               	retlw	101	;'e'
   686  0836  3473               	retlw	115	;'s'
   687  0837  3473               	retlw	115	;'s'
   688  0838  3420               	retlw	32	;' '
   689  0839  3452               	retlw	82	;'R'
   690  083A  3442               	retlw	66	;'B'
   691  083B  3435               	retlw	53	;'5'
   692  083C  3420               	retlw	32	;' '
   693  083D  3432               	retlw	50	;'2'
   694  083E  3420               	retlw	32	;' '
   695  083F  3453               	retlw	83	;'S'
   696  0840  3474               	retlw	116	;'t'
   697  0841  3472               	retlw	114	;'r'
   698  0842  3474               	retlw	116	;'t'
   699  0843  3400               	retlw	0
   700  0844                     STR_24:
   701  0844  3453               	retlw	83	;'S'
   702  0845  3470               	retlw	112	;'p'
   703  0846  3465               	retlw	101	;'e'
   704  0847  3461               	retlw	97	;'a'
   705  0848  346B               	retlw	107	;'k'
   706  0849  3465               	retlw	101	;'e'
   707  084A  3472               	retlw	114	;'r'
   708  084B  343A               	retlw	58	;':'
   709  084C  3425               	retlw	37	;'%'
   710  084D  3464               	retlw	100	;'d'
   711  084E  3400               	retlw	0
   712  084F                     STR_1:
   713  084F  3454               	retlw	84	;'T'
   714  0850  3465               	retlw	101	;'e'
   715  0851  346D               	retlw	109	;'m'
   716  0852  3470               	retlw	112	;'p'
   717  0853  343A               	retlw	58	;':'
   718  0854  3425               	retlw	37	;'%'
   719  0855  3433               	retlw	51	;'3'
   720  0856  3464               	retlw	100	;'d'
   721  0857  342A               	retlw	42	;'*'
   722  0858  3443               	retlw	67	;'C'
   723  0859  3400               	retlw	0
   724  085A                     STR_2:
   725  085A  3454               	retlw	84	;'T'
   726  085B  3465               	retlw	101	;'e'
   727  085C  346D               	retlw	109	;'m'
   728  085D  3470               	retlw	112	;'p'
   729  085E  343A               	retlw	58	;':'
   730  085F  3425               	retlw	37	;'%'
   731  0860  3433               	retlw	51	;'3'
   732  0861  3464               	retlw	100	;'d'
   733  0862  342A               	retlw	42	;'*'
   734  0863  3446               	retlw	70	;'F'
   735  0864  3400               	retlw	0
   736  0865                     STR_26:
   737  0865  3452               	retlw	82	;'R'
   738  0866  3449               	retlw	73	;'I'
   739  0867  344E               	retlw	78	;'N'
   740  0868  3447               	retlw	71	;'G'
   741  0869  3420               	retlw	32	;' '
   742  086A  3452               	retlw	82	;'R'
   743  086B  3449               	retlw	73	;'I'
   744  086C  344E               	retlw	78	;'N'
   745  086D  3447               	retlw	71	;'G'
   746  086E  3400               	retlw	0
   747  086F                     STR_27:
   748  086F  3441               	retlw	65	;'A'
   749  0870  346C               	retlw	108	;'l'
   750  0871  3461               	retlw	97	;'a'
   751  0872  3472               	retlw	114	;'r'
   752  0873  346D               	retlw	109	;'m'
   753  0874  343A               	retlw	58	;':'
   754  0875  3425               	retlw	37	;'%'
   755  0876  3464               	retlw	100	;'d'
   756  0877  3400               	retlw	0
   757  0878                     STR_13:
   758  0878  3443               	retlw	67	;'C'
   759  0879  3461               	retlw	97	;'a'
   760  087A  346C               	retlw	108	;'l'
   761  087B  343A               	retlw	58	;':'
   762  087C  3425               	retlw	37	;'%'
   763  087D  3478               	retlw	120	;'x'
   764  087E  342D               	retlw	45	;'-'
   765  087F  3400               	retlw	0
   766  0880                     STR_9:
   767  0880  3454               	retlw	84	;'T'
   768  0881  3469               	retlw	105	;'i'
   769  0882  346D               	retlw	109	;'m'
   770  0883  343A               	retlw	58	;':'
   771  0884  3425               	retlw	37	;'%'
   772  0885  3478               	retlw	120	;'x'
   773  0886  343A               	retlw	58	;':'
   774  0887  3400               	retlw	0
   775  0888                     STR_28:
   776  0888  3428               	retlw	40	;'('
   777  0889  346E               	retlw	110	;'n'
   778  088A  3475               	retlw	117	;'u'
   779  088B  346C               	retlw	108	;'l'
   780  088C  346C               	retlw	108	;'l'
   781  088D  3429               	retlw	41	;')'
   782  088E  3400               	retlw	0
   783  088F                     STR_7:
   784  088F  3425               	retlw	37	;'%'
   785  0890  3478               	retlw	120	;'x'
   786  0891  3420               	retlw	32	;' '
   787  0892  3400               	retlw	0
   788  0893                     STR_19:
   789  0893  3457               	retlw	87	;'W'
   790  0894  3465               	retlw	101	;'e'
   791  0895  3464               	retlw	100	;'d'
   792  0896  3400               	retlw	0
   793  0897                     STR_18:
   794  0897  3454               	retlw	84	;'T'
   795  0898  3475               	retlw	117	;'u'
   796  0899  3465               	retlw	101	;'e'
   797  089A  3400               	retlw	0
   798  089B                     STR_21:
   799  089B  3446               	retlw	70	;'F'
   800  089C  3472               	retlw	114	;'r'
   801  089D  3469               	retlw	105	;'i'
   802  089E  3400               	retlw	0
   803  089F                     STR_17:
   804  089F  344D               	retlw	77	;'M'
   805  08A0  346F               	retlw	111	;'o'
   806  08A1  346E               	retlw	110	;'n'
   807  08A2  3400               	retlw	0
   808  08A3                     STR_16:
   809  08A3  3453               	retlw	83	;'S'
   810  08A4  3475               	retlw	117	;'u'
   811  08A5  346E               	retlw	110	;'n'
   812  08A6  3400               	retlw	0
   813  08A7                     STR_22:
   814  08A7  3453               	retlw	83	;'S'
   815  08A8  3461               	retlw	97	;'a'
   816  08A9  3474               	retlw	116	;'t'
   817  08AA  3400               	retlw	0
   818  08AB                     STR_20:
   819  08AB  3454               	retlw	84	;'T'
   820  08AC  3468               	retlw	104	;'h'
   821  08AD  3475               	retlw	117	;'u'
   822  08AE  3400               	retlw	0
   823  08AF                     STR_23:
   824  08AF  3449               	retlw	73	;'I'
   825  08B0  346E               	retlw	110	;'n'
   826  08B1  3476               	retlw	118	;'v'
   827  08B2  3400               	retlw	0
   828  08B3                     STR_6:
   829  08B3  3441               	retlw	65	;'A'
   830  08B4  344D               	retlw	77	;'M'
   831  08B5  3400               	retlw	0
   832  08B6                     STR_5:
   833  08B6  3450               	retlw	80	;'P'
   834  08B7  344D               	retlw	77	;'M'
   835  08B8  3400               	retlw	0
   836  08B9                     STR_3:
   837  08B9  3425               	retlw	37	;'%'
   838  08BA  3473               	retlw	115	;'s'
   839  08BB  3400               	retlw	0
   840  088F                     
   841                           	psect	cinit
   842  07BF                     start_initialization:	
   843                           ; #config settings
   844                           
   845  07BF                     __initialization:
   846                           
   847                           ; Initialize objects allocated to BANK3
   848  07BF  1783               	bsf	3,7	;select IRP bank2
   849  07C0  30D9               	movlw	low (__pdataBANK3+7)
   850  07C1  00FD               	movwf	btemp+-1
   851  07C2  3008               	movlw	high __pidataBANK3
   852  07C3  00FE               	movwf	btemp
   853  07C4  30BC               	movlw	low __pidataBANK3
   854  07C5  00FF               	movwf	btemp+1
   855  07C6  30D2               	movlw	low __pdataBANK3
   856  07C7  0084               	movwf	4
   857  07C8  160A  118A  2304  120A  118A  	fcall	init_ram0
   858                           
   859                           ; Initialize objects allocated to BANK1
   860  07CD  1683               	bsf	3,5	;RP0=1, select bank1
   861  07CE  1303               	bcf	3,6	;RP1=0, select bank1
   862  07CF  120A  118A  2003  120A  118A  	fcall	__pidataBANK1	;fetch initializer
   863  07D4  00EE               	movwf	__pdataBANK1& (0+127)
   864  07D5  120A  118A  2004  120A  118A  	fcall	__pidataBANK1+1	;fetch initializer
   865  07DA  00EF               	movwf	(__pdataBANK1+1)& (0+127)
   866                           
   867                           ; Initialize objects allocated to BANK0
   868  07DB  1283               	bcf	3,5	;RP0=0, select bank0
   869  07DC  1303               	bcf	3,6	;RP1=0, select bank0
   870  07DD  160A  118A  22AE  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   871  07E2  00EF               	movwf	__pdataBANK0& (0+127)
   872                           
   873                           ; Clear objects allocated to BANK3
   874  07E3  3090               	movlw	low __pbssBANK3
   875  07E4  0084               	movwf	4
   876  07E5  30D2               	movlw	low (__pbssBANK3+66)
   877  07E6  160A  118A  22B7  120A  118A  	fcall	clear_ram0
   878                           
   879                           ; Clear objects allocated to BANK1
   880  07EB  1383               	bcf	3,7	;select IRP bank0
   881  07EC  30E6               	movlw	low __pbssBANK1
   882  07ED  0084               	movwf	4
   883  07EE  30EE               	movlw	low (__pbssBANK1+8)
   884  07EF  160A  118A  22B7  120A  118A  	fcall	clear_ram0
   885                           
   886                           ; Clear objects allocated to BANK0
   887  07F4  3062               	movlw	low __pbssBANK0
   888  07F5  0084               	movwf	4
   889  07F6  306F               	movlw	low (__pbssBANK0+13)
   890  07F7  160A  118A  22B7  120A  118A  	fcall	clear_ram0
   891  07FC                     end_of_initialization:	
   892                           ;End of C runtime variable initialization code
   893                           
   894  07FC                     __end_of__initialization:
   895  07FC  0183               	clrf	3
   896  07FD  120A  118A  2B0D   	ljmp	_main	;jump to C main() function
   897                           
   898                           	psect	bssBANK0
   899  0062                     __pbssBANK0:
   900  0062                     _Date:
   901  0062                     	ds	2
   902  0064                     _Day:
   903  0064                     	ds	2
   904  0066                     _alarmFlag:
   905  0066                     	ds	2
   906  0068                     _temperature_f:
   907  0068                     	ds	2
   908  006A                     _temperature_c:
   909  006A                     	ds	2
   910  006C                     _RS:
   911  006C                     	ds	1
   912  006D                     _result:
   913  006D                     	ds	2
   914                           
   915                           	psect	dataBANK0
   916  006F                     __pdataBANK0:
   917  006F                     _BackLight_State:
   918  006F                     	ds	1
   919                           
   920                           	psect	bssBANK1
   921  00E6                     __pbssBANK1:
   922  00E6                     _hour:
   923  00E6                     	ds	2
   924  00E8                     _min:
   925  00E8                     	ds	2
   926  00EA                     _sec:
   927  00EA                     	ds	2
   928  00EC                     _alarmTime:
   929  00EC                     	ds	2
   930                           
   931                           	psect	dataBANK1
   932  00EE                     __pdataBANK1:
   933  00EE                     _AM_PM:
   934  00EE                     	ds	1
   935  00EF                     _Clock_type:
   936  00EF                     	ds	1
   937                           
   938                           	psect	bssBANK3
   939  0190                     __pbssBANK3:
   940  0190                     _Year:
   941  0190                     	ds	2
   942  0192                     _Month:
   943  0192                     	ds	2
   944  0194                     _Temp_Mode:
   945  0194                     	ds	2
   946  0196                     _year:
   947  0196                     	ds	10
   948  01A0                     _month:
   949  01A0                     	ds	10
   950  01AA                     _date:
   951  01AA                     	ds	10
   952  01B4                     _hours:
   953  01B4                     	ds	10
   954  01BE                     _mins:
   955  01BE                     	ds	10
   956  01C8                     _secs:
   957  01C8                     	ds	10
   958                           
   959                           	psect	dataBANK3
   960  01D2                     __pdataBANK3:
   961  01D2                     _days:
   962  01D2                     	ds	7
   963                           
   964                           	psect	inittext
   965  1300                     init_fetch0:	
   966                           ;	Called with low address in FSR and high address in W
   967                           
   968  1300  087E               	movf	btemp,w
   969  1301  008A               	movwf	10
   970  1302  087F               	movf	btemp+1,w
   971  1303  0082               	movwf	2
   972  1304                     init_ram0:	
   973                           ;Called with:
   974                           ;	high address of idata address in btemp 
   975                           ;	low address of idata address in btemp+1 
   976                           ;	low address of data in FSR
   977                           ;	high address + 1 of data in btemp-1
   978                           
   979  1304  160A  118A  2300  160A  118A  	fcall	init_fetch0
   980  1309  0080               	movwf	0
   981  130A  0A84               	incf	4,f
   982  130B  0804               	movf	4,w
   983  130C  067D               	xorwf	btemp+-1,w
   984  130D  1903               	btfsc	3,2
   985  130E  3400               	retlw	0
   986  130F  0AFF               	incf	btemp+1,f
   987  1310  1903               	btfsc	3,2
   988  1311  0AFE               	incf	btemp,f
   989  1312  2B04               	goto	init_ram0
   990                           
   991                           	psect	clrtext
   992  12B7                     clear_ram0:	
   993                           ;	Called with FSR containing the base address, and
   994                           ;	W with the last address+1
   995                           
   996  12B7  0064               	clrwdt	;clear the watchdog before getting into this loop
   997  12B8                     clrloop0:
   998  12B8  0180               	clrf	0	;clear RAM location pointed to by FSR
   999  12B9  0A84               	incf	4,f	;increment pointer
  1000  12BA  0604               	xorwf	4,w	;XOR with final address
  1001  12BB  1903               	btfsc	3,2	;have we reached the end yet?
  1002  12BC  3400               	retlw	0	;all done for this memory range, return
  1003  12BD  0604               	xorwf	4,w	;XOR again to restore value
  1004  12BE  2AB8               	goto	clrloop0	;do the next byte
  1005                           
  1006                           	psect	cstackBANK1
  1007  00A0                     __pcstackBANK1:
  1008  00A0                     main@buffer3:
  1009                           
  1010                           ; 16 bytes @ 0x0
  1011  00A0                     	ds	16
  1012  00B0                     main@buffer3_742:
  1013                           
  1014                           ; 16 bytes @ 0x10
  1015  00B0                     	ds	16
  1016  00C0                     main@buffer3_745:
  1017                           
  1018                           ; 16 bytes @ 0x20
  1019  00C0                     	ds	16
  1020  00D0                     main@buffer3_748:
  1021                           
  1022                           ; 16 bytes @ 0x30
  1023  00D0                     	ds	16
  1024  00E0                     main@tmp_744:
  1025                           
  1026                           ; 2 bytes @ 0x40
  1027  00E0                     	ds	2
  1028  00E2                     main@tmp:
  1029                           
  1030                           ; 2 bytes @ 0x42
  1031  00E2                     	ds	2
  1032  00E4                     main@displayMode:
  1033                           
  1034                           ; 2 bytes @ 0x44
  1035  00E4                     	ds	2
  1036                           
  1037                           	psect	cstackCOMMON
  1038  0070                     __pcstackCOMMON:
  1039  0070                     ?_isdigit:
  1040  0070                     ?_I2C_Ack:	
  1041                           ; 1 bit 
  1042                           
  1043  0070                     ??_I2C_Ack:	
  1044                           ; 1 bytes @ 0x0
  1045                           
  1046  0070                     ?_I2C_Nack:	
  1047                           ; 1 bytes @ 0x0
  1048                           
  1049  0070                     ??_I2C_Nack:	
  1050                           ; 1 bytes @ 0x0
  1051                           
  1052  0070                     ?_I2C_Ready:	
  1053                           ; 1 bytes @ 0x0
  1054                           
  1055  0070                     ??_I2C_Ready:	
  1056                           ; 1 bytes @ 0x0
  1057                           
  1058  0070                     ?_I2C_Write:	
  1059                           ; 1 bytes @ 0x0
  1060                           
  1061  0070                     ??_I2C_Write:	
  1062                           ; 1 bytes @ 0x0
  1063                           
  1064  0070                     ?_I2C_Stop:	
  1065                           ; 1 bytes @ 0x0
  1066                           
  1067  0070                     ??_I2C_Stop:	
  1068                           ; 1 bytes @ 0x0
  1069                           
  1070  0070                     ?_LCD_CMD:	
  1071                           ; 1 bytes @ 0x0
  1072                           
  1073  0070                     ?_IO_Expander_Write:	
  1074                           ; 1 bytes @ 0x0
  1075                           
  1076  0070                     ?_RTC_Read_Clock:	
  1077                           ; 1 bytes @ 0x0
  1078                           
  1079  0070                     ?_RTC_Read_Calendar:	
  1080                           ; 1 bytes @ 0x0
  1081                           
  1082  0070                     ??_isdigit:	
  1083                           ; 1 bytes @ 0x0
  1084                           
  1085  0070                     ?_I2C_Read:	
  1086                           ; 1 bytes @ 0x0
  1087                           
  1088  0070                     ??_I2C_Read:	
  1089                           ; 1 bytes @ 0x0
  1090                           
  1091  0070                     ?_I2C_Init:	
  1092                           ; 1 bytes @ 0x0
  1093                           
  1094  0070                     ??_I2C_Init:	
  1095                           ; 1 bytes @ 0x0
  1096                           
  1097  0070                     ?_I2C_Start:	
  1098                           ; 1 bytes @ 0x0
  1099                           
  1100  0070                     ?_I2C_Repeated_Start:	
  1101                           ; 1 bytes @ 0x0
  1102                           
  1103  0070                     ?_LCD_Init:	
  1104                           ; 1 bytes @ 0x0
  1105                           
  1106  0070                     ?_LCD_Write_4Bit:	
  1107                           ; 1 bytes @ 0x0
  1108                           
  1109  0070                     ?_LCD_Write_Char:	
  1110                           ; 1 bytes @ 0x0
  1111                           
  1112  0070                     ?_LCD_Clear:	
  1113                           ; 1 bytes @ 0x0
  1114                           
  1115  0070                     ?_Update_Farenheit:	
  1116                           ; 1 bytes @ 0x0
  1117                           
  1118  0070                     ?_Update_Celsius:	
  1119                           ; 1 bytes @ 0x0
  1120                           
  1121  0070                     ?_DisplayTemp:	
  1122                           ; 1 bytes @ 0x0
  1123                           
  1124  0070                     ?_main:	
  1125                           ; 1 bytes @ 0x0
  1126                           
  1127  0070                     ?_abs:	
  1128                           ; 1 bytes @ 0x0
  1129                           
  1130  0070                     ?__Umul8_16:	
  1131                           ; 2 bytes @ 0x0
  1132                           
  1133  0070                     ?___wmul:	
  1134                           ; 2 bytes @ 0x0
  1135                           
  1136  0070                     ?___lwdiv:	
  1137                           ; 2 bytes @ 0x0
  1138                           
  1139  0070                     ?___xxtofl:	
  1140                           ; 2 bytes @ 0x0
  1141                           
  1142  0070                     I2C_Write@data:	
  1143                           ; 4 bytes @ 0x0
  1144                           
  1145  0070                     __Umul8_16@multiplicand:	
  1146                           ; 1 bytes @ 0x0
  1147                           
  1148  0070                     _isdigit$1238:	
  1149                           ; 1 bytes @ 0x0
  1150                           
  1151  0070                     ___wmul@multiplier:	
  1152                           ; 1 bytes @ 0x0
  1153                           
  1154  0070                     ___lwdiv@divisor:	
  1155                           ; 2 bytes @ 0x0
  1156                           
  1157  0070                     abs@a:	
  1158                           ; 2 bytes @ 0x0
  1159                           
  1160  0070                     ___xxtofl@val:	
  1161                           ; 2 bytes @ 0x0
  1162                           
  1163                           
  1164                           ; 4 bytes @ 0x0
  1165  0070                     	ds	1
  1166  0071                     ??_I2C_Start:
  1167  0071                     ??_I2C_Repeated_Start:	
  1168                           ; 1 bytes @ 0x1
  1169                           
  1170  0071                     I2C_Read@flag:	
  1171                           ; 1 bytes @ 0x1
  1172                           
  1173  0071                     I2C_Start@slave_write_address:	
  1174                           ; 1 bytes @ 0x1
  1175                           
  1176  0071                     I2C_Repeated_Start@slave_read_address:	
  1177                           ; 1 bytes @ 0x1
  1178                           
  1179  0071                     isdigit@c:	
  1180                           ; 1 bytes @ 0x1
  1181                           
  1182                           
  1183                           ; 1 bytes @ 0x1
  1184  0071                     	ds	1
  1185  0072                     ??_IO_Expander_Write:
  1186  0072                     ?_RTC_Clock_Write:	
  1187                           ; 1 bytes @ 0x2
  1188                           
  1189  0072                     ?_RTC_Calendar_Write:	
  1190                           ; 1 bytes @ 0x2
  1191                           
  1192  0072                     ??_abs:	
  1193                           ; 1 bytes @ 0x2
  1194                           
  1195  0072                     ??__Umul8_16:	
  1196                           ; 1 bytes @ 0x2
  1197                           
  1198  0072                     I2C_Read@buffer:	
  1199                           ; 1 bytes @ 0x2
  1200                           
  1201  0072                     IO_Expander_Write@Data:	
  1202                           ; 1 bytes @ 0x2
  1203                           
  1204  0072                     RTC_Clock_Write@min:	
  1205                           ; 1 bytes @ 0x2
  1206                           
  1207  0072                     RTC_Calendar_Write@date:	
  1208                           ; 1 bytes @ 0x2
  1209                           
  1210  0072                     ___wmul@multiplicand:	
  1211                           ; 1 bytes @ 0x2
  1212                           
  1213  0072                     ___lwdiv@dividend:	
  1214                           ; 2 bytes @ 0x2
  1215                           
  1216                           
  1217                           ; 2 bytes @ 0x2
  1218  0072                     	ds	1
  1219  0073                     ??_RTC_Read_Clock:
  1220  0073                     ??_RTC_Read_Calendar:	
  1221                           ; 1 bytes @ 0x3
  1222                           
  1223  0073                     ??_LCD_Write_4Bit:	
  1224                           ; 1 bytes @ 0x3
  1225                           
  1226  0073                     RTC_Clock_Write@hour:	
  1227                           ; 1 bytes @ 0x3
  1228                           
  1229  0073                     RTC_Calendar_Write@month:	
  1230                           ; 1 bytes @ 0x3
  1231                           
  1232                           
  1233                           ; 1 bytes @ 0x3
  1234  0073                     	ds	1
  1235  0074                     ??___wmul:
  1236  0074                     ??___lwdiv:	
  1237                           ; 1 bytes @ 0x4
  1238                           
  1239  0074                     ??___xxtofl:	
  1240                           ; 1 bytes @ 0x4
  1241                           
  1242  0074                     LCD_Write_4Bit@Nibble:	
  1243                           ; 1 bytes @ 0x4
  1244                           
  1245  0074                     RTC_Clock_Write@AM_PM:	
  1246                           ; 1 bytes @ 0x4
  1247                           
  1248  0074                     RTC_Calendar_Write@year:	
  1249                           ; 1 bytes @ 0x4
  1250                           
  1251  0074                     ___wmul@product:	
  1252                           ; 1 bytes @ 0x4
  1253                           
  1254  0074                     __Umul8_16@product:	
  1255                           ; 2 bytes @ 0x4
  1256                           
  1257                           
  1258                           ; 2 bytes @ 0x4
  1259  0074                     	ds	1
  1260  0075                     ??_LCD_CMD:
  1261  0075                     ??_RTC_Clock_Write:	
  1262                           ; 1 bytes @ 0x5
  1263                           
  1264  0075                     ??_RTC_Calendar_Write:	
  1265                           ; 1 bytes @ 0x5
  1266                           
  1267  0075                     ??_LCD_Write_Char:	
  1268                           ; 1 bytes @ 0x5
  1269                           
  1270  0075                     RTC_Read_Clock@read_clock_address:	
  1271                           ; 1 bytes @ 0x5
  1272                           
  1273  0075                     RTC_Read_Calendar@read_calendar_address:	
  1274                           ; 1 bytes @ 0x5
  1275                           
  1276  0075                     RTC_Calendar_Write@day:	
  1277                           ; 1 bytes @ 0x5
  1278                           
  1279  0075                     ___lwdiv@quotient:	
  1280                           ; 1 bytes @ 0x5
  1281                           
  1282                           
  1283                           ; 2 bytes @ 0x5
  1284  0075                     	ds	1
  1285  0076                     LCD_CMD@CMD:
  1286  0076                     LCD_Write_Char@Data:	
  1287                           ; 1 bytes @ 0x6
  1288                           
  1289  0076                     RTC_Clock_Write@sec:	
  1290                           ; 1 bytes @ 0x6
  1291                           
  1292  0076                     __Umul8_16@word_mpld:	
  1293                           ; 1 bytes @ 0x6
  1294                           
  1295                           
  1296                           ; 2 bytes @ 0x6
  1297  0076                     	ds	1
  1298  0077                     ?_LCD_Write_String:
  1299  0077                     ??_LCD_Init:	
  1300                           ; 1 bytes @ 0x7
  1301                           
  1302  0077                     ?_LCD_Set_Cursor:	
  1303                           ; 1 bytes @ 0x7
  1304                           
  1305  0077                     ??_LCD_Clear:	
  1306                           ; 1 bytes @ 0x7
  1307                           
  1308  0077                     LCD_Set_Cursor@COL:	
  1309                           ; 1 bytes @ 0x7
  1310                           
  1311  0077                     ___lwdiv@counter:	
  1312                           ; 1 bytes @ 0x7
  1313                           
  1314  0077                     LCD_Write_String@Str:	
  1315                           ; 1 bytes @ 0x7
  1316                           
  1317                           
  1318                           ; 2 bytes @ 0x7
  1319  0077                     	ds	1
  1320  0078                     ??_LCD_Set_Cursor:
  1321  0078                     ?___lwmod:	
  1322                           ; 1 bytes @ 0x8
  1323                           
  1324  0078                     __Umul8_16@multiplier:	
  1325                           ; 2 bytes @ 0x8
  1326                           
  1327  0078                     ___xxtofl@sign:	
  1328                           ; 1 bytes @ 0x8
  1329                           
  1330  0078                     ___lwmod@divisor:	
  1331                           ; 1 bytes @ 0x8
  1332                           
  1333                           
  1334                           ; 2 bytes @ 0x8
  1335  0078                     	ds	1
  1336  0079                     ??_LCD_Write_String:
  1337  0079                     ___xxtofl@exp:	
  1338                           ; 1 bytes @ 0x9
  1339                           
  1340                           
  1341                           ; 1 bytes @ 0x9
  1342  0079                     	ds	1
  1343  007A                     LCD_Set_Cursor@ROW:
  1344  007A                     ___lwmod@dividend:	
  1345                           ; 1 bytes @ 0xA
  1346                           
  1347  007A                     ___xxtofl@arg:	
  1348                           ; 2 bytes @ 0xA
  1349                           
  1350                           
  1351                           ; 4 bytes @ 0xA
  1352  007A                     	ds	2
  1353  007C                     ??___lwmod:
  1354  007C                     LCD_Write_String@i:	
  1355                           ; 1 bytes @ 0xC
  1356                           
  1357                           
  1358                           ; 2 bytes @ 0xC
  1359  007C                     	ds	1
  1360  007D                     ___lwmod@counter:
  1361                           
  1362                           ; 1 bytes @ 0xD
  1363  007D                     	ds	1
  1364                           
  1365                           	psect	cstackBANK0
  1366  0020                     __pcstackBANK0:
  1367  0020                     ?_LCD_String_xy:
  1368  0020                     ?_sprintf:	
  1369                           ; 1 bytes @ 0x0
  1370                           
  1371  0020                     ?___flmul:	
  1372                           ; 2 bytes @ 0x0
  1373                           
  1374  0020                     LCD_String_xy@pos:	
  1375                           ; 4 bytes @ 0x0
  1376                           
  1377  0020                     sprintf@sp:	
  1378                           ; 1 bytes @ 0x0
  1379                           
  1380  0020                     ___flmul@b:	
  1381                           ; 2 bytes @ 0x0
  1382                           
  1383                           
  1384                           ; 4 bytes @ 0x0
  1385  0020                     	ds	1
  1386  0021                     LCD_String_xy@msg:
  1387                           
  1388                           ; 2 bytes @ 0x1
  1389  0021                     	ds	1
  1390  0022                     sprintf@f:
  1391                           
  1392                           ; 1 bytes @ 0x2
  1393  0022                     	ds	1
  1394  0023                     ??_LCD_String_xy:
  1395                           
  1396                           ; 1 bytes @ 0x3
  1397  0023                     	ds	1
  1398  0024                     LCD_String_xy@row:
  1399  0024                     ___flmul@a:	
  1400                           ; 1 bytes @ 0x4
  1401                           
  1402                           
  1403                           ; 4 bytes @ 0x4
  1404  0024                     	ds	1
  1405  0025                     ??_sprintf:
  1406  0025                     LCD_String_xy@location:	
  1407                           ; 1 bytes @ 0x5
  1408                           
  1409                           
  1410                           ; 1 bytes @ 0x5
  1411  0025                     	ds	3
  1412  0028                     ??___flmul:
  1413  0028                     sprintf@idx:	
  1414                           ; 1 bytes @ 0x8
  1415                           
  1416                           
  1417                           ; 1 bytes @ 0x8
  1418  0028                     	ds	1
  1419  0029                     sprintf@prec:
  1420                           
  1421                           ; 1 bytes @ 0x9
  1422  0029                     	ds	1
  1423  002A                     sprintf@cp:
  1424                           
  1425                           ; 2 bytes @ 0xA
  1426  002A                     	ds	2
  1427  002C                     sprintf@ap:
  1428                           
  1429                           ; 1 bytes @ 0xC
  1430  002C                     	ds	1
  1431  002D                     ___flmul@sign:
  1432  002D                     sprintf@len:	
  1433                           ; 1 bytes @ 0xD
  1434                           
  1435                           
  1436                           ; 2 bytes @ 0xD
  1437  002D                     	ds	1
  1438  002E                     ___flmul@grs:
  1439                           
  1440                           ; 4 bytes @ 0xE
  1441  002E                     	ds	1
  1442  002F                     sprintf@flag:
  1443                           
  1444                           ; 1 bytes @ 0xF
  1445  002F                     	ds	1
  1446  0030                     sprintf@val:
  1447                           
  1448                           ; 2 bytes @ 0x10
  1449  0030                     	ds	2
  1450  0032                     ___flmul@aexp:
  1451  0032                     sprintf@width:	
  1452                           ; 1 bytes @ 0x12
  1453                           
  1454                           
  1455                           ; 2 bytes @ 0x12
  1456  0032                     	ds	1
  1457  0033                     ___flmul@bexp:
  1458                           
  1459                           ; 1 bytes @ 0x13
  1460  0033                     	ds	1
  1461  0034                     sprintf@c:
  1462  0034                     ___flmul@prod:	
  1463                           ; 1 bytes @ 0x14
  1464                           
  1465                           
  1466                           ; 4 bytes @ 0x14
  1467  0034                     	ds	1
  1468  0035                     ??_DisplayTemp:
  1469                           
  1470                           ; 1 bytes @ 0x15
  1471  0035                     	ds	3
  1472  0038                     ___flmul@temp:
  1473  0038                     DisplayTemp@buffer1:	
  1474                           ; 2 bytes @ 0x18
  1475                           
  1476                           
  1477                           ; 16 bytes @ 0x18
  1478  0038                     	ds	2
  1479  003A                     ?___fladd:
  1480  003A                     ___fladd@b:	
  1481                           ; 4 bytes @ 0x1A
  1482                           
  1483                           
  1484                           ; 4 bytes @ 0x1A
  1485  003A                     	ds	4
  1486  003E                     ___fladd@a:
  1487                           
  1488                           ; 4 bytes @ 0x1E
  1489  003E                     	ds	4
  1490  0042                     ??___fladd:
  1491                           
  1492                           ; 1 bytes @ 0x22
  1493  0042                     	ds	6
  1494  0048                     DisplayTemp@buffer2:
  1495                           
  1496                           ; 16 bytes @ 0x28
  1497  0048                     	ds	2
  1498  004A                     ___fladd@signs:
  1499                           
  1500                           ; 1 bytes @ 0x2A
  1501  004A                     	ds	1
  1502  004B                     ___fladd@aexp:
  1503                           
  1504                           ; 1 bytes @ 0x2B
  1505  004B                     	ds	1
  1506  004C                     ___fladd@bexp:
  1507                           
  1508                           ; 1 bytes @ 0x2C
  1509  004C                     	ds	1
  1510  004D                     ___fladd@grs:
  1511                           
  1512                           ; 1 bytes @ 0x2D
  1513  004D                     	ds	1
  1514  004E                     ?___fltol:
  1515  004E                     ___fltol@f1:	
  1516                           ; 4 bytes @ 0x2E
  1517                           
  1518                           
  1519                           ; 4 bytes @ 0x2E
  1520  004E                     	ds	4
  1521  0052                     ??___fltol:
  1522                           
  1523                           ; 1 bytes @ 0x32
  1524  0052                     	ds	5
  1525  0057                     ___fltol@sign1:
  1526                           
  1527                           ; 1 bytes @ 0x37
  1528  0057                     	ds	1
  1529  0058                     ___fltol@exp1:
  1530                           
  1531                           ; 1 bytes @ 0x38
  1532  0058                     	ds	1
  1533  0059                     ??_Update_Farenheit:
  1534  0059                     ??_Update_Celsius:	
  1535                           ; 1 bytes @ 0x39
  1536                           
  1537                           
  1538                           ; 1 bytes @ 0x39
  1539  0059                     	ds	2
  1540  005B                     _Update_Farenheit$1439:
  1541  005B                     _Update_Celsius$1440:	
  1542                           ; 4 bytes @ 0x3B
  1543                           
  1544                           
  1545                           ; 4 bytes @ 0x3B
  1546  005B                     	ds	4
  1547  005F                     ??_main:
  1548                           
  1549                           ; 1 bytes @ 0x3F
  1550  005F                     	ds	3
  1551                           
  1552                           	psect	maintext
  1553  030D                     __pmaintext:	
  1554 ;;
  1555 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1556 ;;
  1557 ;; *************** function _main *****************
  1558 ;; Defined at:
  1559 ;;		line 40 in file "interface_main.c"
  1560 ;; Parameters:    Size  Location     Type
  1561 ;;		None
  1562 ;; Auto vars:     Size  Location     Type
  1563 ;;  buffer3        16   48[BANK1 ] unsigned char [16]
  1564 ;;  buffer3        16   32[BANK1 ] unsigned char [16]
  1565 ;;  tmp             2   64[BANK1 ] unsigned int 
  1566 ;;  buffer3        16   16[BANK1 ] unsigned char [16]
  1567 ;;  tmp             2   66[BANK1 ] unsigned int 
  1568 ;;  buffer3        16    0[BANK1 ] unsigned char [16]
  1569 ;;  displayMode     2   68[BANK1 ] short 
  1570 ;; Return value:  Size  Location     Type
  1571 ;;                  1    wreg      void 
  1572 ;; Registers used:
  1573 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1574 ;; Tracked objects:
  1575 ;;		On entry : B00/0
  1576 ;;		On exit  : 0/0
  1577 ;;		Unchanged: 0/0
  1578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1579 ;;      Params:         0       0       0       0       0
  1580 ;;      Locals:         0       0      70       0       0
  1581 ;;      Temps:          0       3       0       0       0
  1582 ;;      Totals:         0       3      70       0       0
  1583 ;;Total ram usage:       73 bytes
  1584 ;; Hardware stack levels required when called: 8
  1585 ;; This function calls:
  1586 ;;		_DisplayTemp
  1587 ;;		_I2C_Init
  1588 ;;		_I2C_Stop
  1589 ;;		_LCD_Clear
  1590 ;;		_LCD_Init
  1591 ;;		_LCD_String_xy
  1592 ;;		_LCD_Write_String
  1593 ;;		_RTC_Calendar_Write
  1594 ;;		_RTC_Clock_Write
  1595 ;;		_RTC_Read_Calendar
  1596 ;;		_RTC_Read_Clock
  1597 ;;		_Update_Celsius
  1598 ;;		_Update_Farenheit
  1599 ;;		___lwdiv
  1600 ;;		_abs
  1601 ;;		_sprintf
  1602 ;; This function is called by:
  1603 ;;		Startup code after reset
  1604 ;; This function uses a non-reentrant model
  1605 ;;
  1606                           
  1607  030D                     _main:	
  1608                           ;psect for function _main
  1609                           
  1610  030D                     l3333:	
  1611                           ;incstack = 0
  1612                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1613                           
  1614                           
  1615                           ;interface_main.c: 41:     TRISB = 0x0;
  1616  030D  1683               	bsf	3,5	;RP0=1, select bank1
  1617  030E  1303               	bcf	3,6	;RP1=0, select bank1
  1618  030F  0186               	clrf	6	;volatile
  1619                           
  1620                           ;interface_main.c: 42:     TRISC = 0x0;
  1621  0310  0187               	clrf	7	;volatile
  1622                           
  1623                           ;interface_main.c: 43:     ANSEL = 0x0;
  1624  0311  1683               	bsf	3,5	;RP0=1, select bank3
  1625  0312  1703               	bsf	3,6	;RP1=1, select bank3
  1626  0313  0188               	clrf	8	;volatile
  1627                           
  1628                           ;interface_main.c: 44:     ANSELH = 0x00;
  1629  0314  0189               	clrf	9	;volatile
  1630  0315                     l3335:
  1631                           
  1632                           ;interface_main.c: 46:     TRISB = 0b00110000;
  1633  0315  3030               	movlw	48
  1634  0316  1683               	bsf	3,5	;RP0=1, select bank1
  1635  0317  1303               	bcf	3,6	;RP1=0, select bank1
  1636  0318  0086               	movwf	6	;volatile
  1637  0319                     l3337:
  1638                           
  1639                           ;interface_main.c: 47:     PORTB = 0b00110000;
  1640  0319  3030               	movlw	48
  1641  031A  1283               	bcf	3,5	;RP0=0, select bank0
  1642  031B  1303               	bcf	3,6	;RP1=0, select bank0
  1643  031C  0086               	movwf	6	;volatile
  1644                           
  1645                           ;interface_main.c: 48:     TRISE = 0x0;
  1646  031D  1683               	bsf	3,5	;RP0=1, select bank1
  1647  031E  1303               	bcf	3,6	;RP1=0, select bank1
  1648  031F  0189               	clrf	9	;volatile
  1649  0320                     l3339:
  1650                           
  1651                           ;interface_main.c: 52:     CCP1CONbits.CCP1M3 = 1;
  1652  0320  1283               	bcf	3,5	;RP0=0, select bank0
  1653  0321  1303               	bcf	3,6	;RP1=0, select bank0
  1654  0322  1597               	bsf	23,3	;volatile
  1655  0323                     l3341:
  1656                           
  1657                           ;interface_main.c: 53:     CCP1CONbits.CCP1M2 = 1;
  1658  0323  1517               	bsf	23,2	;volatile
  1659  0324                     l3343:
  1660                           
  1661                           ;interface_main.c: 54:     CCP1CONbits.P1M = 0b00;
  1662  0324  303F               	movlw	-193
  1663  0325  0597               	andwf	23,f	;volatile
  1664  0326                     l3345:
  1665                           
  1666                           ;interface_main.c: 57:     CCPR1L = 0;
  1667  0326  0195               	clrf	21	;volatile
  1668  0327                     l3347:
  1669                           
  1670                           ;interface_main.c: 60:     PR2 = 0x65;
  1671  0327  3065               	movlw	101
  1672  0328  1683               	bsf	3,5	;RP0=1, select bank1
  1673  0329  1303               	bcf	3,6	;RP1=0, select bank1
  1674  032A  0092               	movwf	18	;volatile
  1675  032B                     l3349:
  1676                           
  1677                           ;interface_main.c: 63:     T2CONbits.TOUTPS = 0b0000;
  1678  032B  3087               	movlw	-121
  1679  032C  1283               	bcf	3,5	;RP0=0, select bank0
  1680  032D  1303               	bcf	3,6	;RP1=0, select bank0
  1681  032E  0592               	andwf	18,f	;volatile
  1682  032F                     l3351:
  1683                           
  1684                           ;interface_main.c: 64:     T2CONbits.TMR2ON = 1;
  1685  032F  1512               	bsf	18,2	;volatile
  1686  0330                     l3353:
  1687                           
  1688                           ;interface_main.c: 65:     T2CONbits.T2CKPS = 0b0;
  1689  0330  30FC               	movlw	-4
  1690  0331  0592               	andwf	18,f	;volatile
  1691  0332                     l3355:
  1692                           
  1693                           ;interface_main.c: 68:     INTCONbits.GIE = 1;
  1694  0332  178B               	bsf	11,7	;volatile
  1695  0333                     l3357:
  1696                           
  1697                           ;interface_main.c: 69:     INTCONbits.PEIE = 1;
  1698  0333  170B               	bsf	11,6	;volatile
  1699  0334                     l3359:
  1700                           
  1701                           ;interface_main.c: 72:     PSTRCONbits.STRC = 1;
  1702  0334  1683               	bsf	3,5	;RP0=1, select bank1
  1703  0335  1303               	bcf	3,6	;RP1=0, select bank1
  1704  0336  151D               	bsf	29,2	;volatile
  1705  0337                     l3361:
  1706                           
  1707                           ;interface_main.c: 74:     I2C_Init();
  1708  0337  160A  118A  2327  120A  118A  	fcall	_I2C_Init
  1709  033C                     l3363:
  1710                           
  1711                           ;interface_main.c: 75:     LCD_Init();
  1712  033C  160A  118A  26E5  120A  118A  	fcall	_LCD_Init
  1713  0341                     l3365:
  1714                           
  1715                           ;interface_main.c: 76:     LCD_Clear();
  1716  0341  160A  118A  22D1  120A  118A  	fcall	_LCD_Clear
  1717  0346                     l3367:
  1718                           
  1719                           ;interface_main.c: 77:     _delay((unsigned long)((10)*(8000000/4000.0)));
  1720  0346  301A               	movlw	26
  1721  0347  1283               	bcf	3,5	;RP0=0, select bank0
  1722  0348  1303               	bcf	3,6	;RP1=0, select bank0
  1723  0349  00E0               	movwf	??_main+1
  1724  034A  30F7               	movlw	247
  1725  034B  00DF               	movwf	??_main
  1726  034C                     u3937:
  1727  034C  0BDF               	decfsz	??_main,f
  1728  034D  2B4C               	goto	u3937
  1729  034E  0BE0               	decfsz	??_main+1,f
  1730  034F  2B4C               	goto	u3937
  1731  0350  2B51               	nop2
  1732  0351                     l3369:
  1733                           
  1734                           ;interface_main.c: 79:     RTC_Clock_Write(0x00, 0x30, 0x1, 0x60);
  1735  0351  3030               	movlw	48
  1736  0352  1283               	bcf	3,5	;RP0=0, select bank0
  1737  0353  1303               	bcf	3,6	;RP1=0, select bank0
  1738  0354  00DF               	movwf	??_main
  1739  0355  085F               	movf	??_main,w
  1740  0356  00F2               	movwf	RTC_Clock_Write@min
  1741  0357  01F3               	clrf	RTC_Clock_Write@hour
  1742  0358  0AF3               	incf	RTC_Clock_Write@hour,f
  1743  0359  3060               	movlw	96
  1744  035A  00E0               	movwf	??_main+1
  1745  035B  0860               	movf	??_main+1,w
  1746  035C  00F4               	movwf	RTC_Clock_Write@AM_PM
  1747  035D  3000               	movlw	0
  1748  035E  160A  118A  2447  120A  118A  	fcall	_RTC_Clock_Write
  1749  0363                     l3371:
  1750                           
  1751                           ;interface_main.c: 80:     RTC_Calendar_Write(0x3, 0x22, 0x4, 0x20);
  1752  0363  3022               	movlw	34
  1753  0364  1283               	bcf	3,5	;RP0=0, select bank0
  1754  0365  1303               	bcf	3,6	;RP1=0, select bank0
  1755  0366  00DF               	movwf	??_main
  1756  0367  085F               	movf	??_main,w
  1757  0368  00F2               	movwf	RTC_Calendar_Write@date
  1758  0369  3004               	movlw	4
  1759  036A  00E0               	movwf	??_main+1
  1760  036B  0860               	movf	??_main+1,w
  1761  036C  00F3               	movwf	RTC_Calendar_Write@month
  1762  036D  3020               	movlw	32
  1763  036E  00E1               	movwf	??_main+2
  1764  036F  0861               	movf	??_main+2,w
  1765  0370  00F4               	movwf	RTC_Calendar_Write@year
  1766  0371  3003               	movlw	3
  1767  0372  160A  118A  2471  120A  118A  	fcall	_RTC_Calendar_Write
  1768  0377                     l3373:
  1769                           
  1770                           ;interface_main.c: 82:     short int displayMode = 0;
  1771  0377  1683               	bsf	3,5	;RP0=1, select bank1
  1772  0378  1303               	bcf	3,6	;RP1=0, select bank1
  1773  0379  01E4               	clrf	main@displayMode^(0+128)
  1774  037A  01E5               	clrf	(main@displayMode+1)^(0+128)
  1775  037B                     l3375:
  1776                           
  1777                           ;interface_main.c: 86:         LCD_Clear();
  1778  037B  160A  118A  22D1  120A  118A  	fcall	_LCD_Clear
  1779  0380                     l3377:
  1780                           
  1781                           ;interface_main.c: 89:         if (displayMode == 0)
  1782  0380  1683               	bsf	3,5	;RP0=1, select bank1
  1783  0381  1303               	bcf	3,6	;RP1=0, select bank1
  1784  0382  0864               	movf	main@displayMode^(0+128),w
  1785  0383  0465               	iorwf	(main@displayMode+1)^(0+128),w
  1786  0384  1D03               	btfss	3,2
  1787  0385  2B87               	goto	u3711
  1788  0386  2B88               	goto	u3710
  1789  0387                     u3711:
  1790  0387  2BCC               	goto	l3389
  1791  0388                     u3710:
  1792  0388                     l3379:
  1793                           
  1794                           ;interface_main.c: 90:         {;interface_main.c: 91:             char buffer3[16];;int
      +                          erface_main.c: 92:             sprintf(buffer3, "%s", "Press RB5 2 Strt");
  1795  0388  30A0               	movlw	(low (main@buffer3| 0))& (0+255)
  1796  0389  1283               	bcf	3,5	;RP0=0, select bank0
  1797  038A  1303               	bcf	3,6	;RP1=0, select bank0
  1798  038B  00A0               	movwf	sprintf@sp
  1799  038C  3000               	movlw	0
  1800  038D  00A1               	movwf	sprintf@sp+1
  1801  038E  30AA               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1802  038F  00DF               	movwf	??_main
  1803  0390  085F               	movf	??_main,w
  1804  0391  00A2               	movwf	sprintf@f
  1805  0392  3024               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1806  0393  00A3               	movwf	low ((?_sprintf| 0+3))
  1807  0394  3080               	movlw	128
  1808  0395  00A4               	movwf	(low ((?_sprintf| 0+3))+1)
  1809  0396  120A  118A  2052  120A  118A  	fcall	_sprintf
  1810                           
  1811                           ;interface_main.c: 93:             LCD_String_xy(0,0,buffer3);
  1812  039B  1283               	bcf	3,5	;RP0=0, select bank0
  1813  039C  1303               	bcf	3,6	;RP1=0, select bank0
  1814  039D  01A0               	clrf	LCD_String_xy@pos
  1815  039E  30A0               	movlw	(low (main@buffer3| 0))& (0+255)
  1816  039F  00A1               	movwf	LCD_String_xy@msg
  1817  03A0  3000               	movlw	0
  1818  03A1  00A2               	movwf	LCD_String_xy@msg+1
  1819  03A2  3000               	movlw	0
  1820  03A3  160A  118A  249C  120A  118A  	fcall	_LCD_String_xy
  1821  03A8                     l3381:
  1822                           
  1823                           ;interface_main.c: 94:             _delay((unsigned long)((100)*(8000000/4000.0)));
  1824  03A8  3002               	movlw	2
  1825  03A9  1283               	bcf	3,5	;RP0=0, select bank0
  1826  03AA  1303               	bcf	3,6	;RP1=0, select bank0
  1827  03AB  00E1               	movwf	??_main+2
  1828  03AC  3004               	movlw	4
  1829  03AD  00E0               	movwf	??_main+1
  1830  03AE  30B9               	movlw	185
  1831  03AF  00DF               	movwf	??_main
  1832  03B0                     u3947:
  1833  03B0  0BDF               	decfsz	??_main,f
  1834  03B1  2BB0               	goto	u3947
  1835  03B2  0BE0               	decfsz	??_main+1,f
  1836  03B3  2BB0               	goto	u3947
  1837  03B4  0BE1               	decfsz	??_main+2,f
  1838  03B5  2BB0               	goto	u3947
  1839  03B6  2BB7               	nop2
  1840  03B7                     l3383:
  1841                           
  1842                           ;interface_main.c: 96:             if(RB5 == 0)
  1843  03B7  1283               	bcf	3,5	;RP0=0, select bank0
  1844  03B8  1303               	bcf	3,6	;RP1=0, select bank0
  1845  03B9  1A86               	btfsc	6,5	;volatile
  1846  03BA  2BBC               	goto	u3721
  1847  03BB  2BBD               	goto	u3720
  1848  03BC                     u3721:
  1849  03BC  2FA1               	goto	l3583
  1850  03BD                     u3720:
  1851  03BD                     l335:
  1852  03BD  1E86               	btfss	6,5	;volatile
  1853  03BE  2BC0               	goto	u3731
  1854  03BF  2BC1               	goto	u3730
  1855  03C0                     u3731:
  1856  03C0  2BBD               	goto	l335
  1857  03C1                     u3730:
  1858  03C1                     l3387:
  1859                           
  1860                           ;interface_main.c: 99:                 displayMode = displayMode+1;
  1861  03C1  1683               	bsf	3,5	;RP0=1, select bank1
  1862  03C2  1303               	bcf	3,6	;RP1=0, select bank1
  1863  03C3  0864               	movf	main@displayMode^(0+128),w
  1864  03C4  3E01               	addlw	1
  1865  03C5  00E4               	movwf	main@displayMode^(0+128)
  1866  03C6  0865               	movf	(main@displayMode+1)^(0+128),w
  1867  03C7  1803               	skipnc
  1868  03C8  3E01               	addlw	1
  1869  03C9  3E00               	addlw	0
  1870  03CA  00E5               	movwf	(main@displayMode+1)^(0+128)
  1871  03CB  2FA1               	goto	l3583
  1872  03CC                     l3389:
  1873  03CC  0364               	decf	main@displayMode^(0+128),w
  1874  03CD  0465               	iorwf	(main@displayMode+1)^(0+128),w
  1875  03CE  1D03               	btfss	3,2
  1876  03CF  2BD1               	goto	u3741
  1877  03D0  2BD2               	goto	u3740
  1878  03D1                     u3741:
  1879  03D1  2DE5               	goto	l3473
  1880  03D2                     u3740:
  1881  03D2                     l3391:
  1882                           
  1883                           ;interface_main.c: 104:         {;interface_main.c: 105:             RTC_Read_Clock(0);
  1884  03D2  3000               	movlw	0
  1885  03D3  160A  118A  253A  120A  118A  	fcall	_RTC_Read_Clock
  1886                           
  1887                           ;interface_main.c: 106:             I2C_Stop();
  1888  03D8  160A  118A  22BF  120A  118A  	fcall	_I2C_Stop
  1889  03DD                     l3393:
  1890                           
  1891                           ;interface_main.c: 107:             if(hour & (1<<Clock_type)){
  1892  03DD  1683               	bsf	3,5	;RP0=1, select bank1
  1893  03DE  1303               	bcf	3,6	;RP1=0, select bank1
  1894  03DF  1F66               	btfss	_hour^(0+128),6
  1895  03E0  2BE2               	goto	u3751
  1896  03E1  2BE3               	goto	u3750
  1897  03E2                     u3751:
  1898  03E2  2C81               	goto	l3415
  1899  03E3                     u3750:
  1900  03E3                     l3395:
  1901                           
  1902                           ;interface_main.c: 109:                 if(hour & (1<<AM_PM)){
  1903  03E3  1EE6               	btfss	_hour^(0+128),5
  1904  03E4  2BE6               	goto	u3761
  1905  03E5  2BE7               	goto	u3760
  1906  03E6                     u3761:
  1907  03E6  2BF8               	goto	l3399
  1908  03E7                     u3760:
  1909  03E7                     l3397:
  1910                           
  1911                           ;interface_main.c: 110:                     LCD_String_xy(1,13,"PM");
  1912  03E7  300D               	movlw	13
  1913  03E8  1283               	bcf	3,5	;RP0=0, select bank0
  1914  03E9  1303               	bcf	3,6	;RP1=0, select bank0
  1915  03EA  00DF               	movwf	??_main
  1916  03EB  085F               	movf	??_main,w
  1917  03EC  00A0               	movwf	LCD_String_xy@pos
  1918  03ED  30A7               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1919  03EE  00A1               	movwf	LCD_String_xy@msg
  1920  03EF  3080               	movlw	128
  1921  03F0  00A2               	movwf	LCD_String_xy@msg+1
  1922  03F1  3001               	movlw	1
  1923  03F2  160A  118A  249C  120A  118A  	fcall	_LCD_String_xy
  1924                           
  1925                           ;interface_main.c: 111:                 }
  1926  03F7  2C08               	goto	l3401
  1927  03F8                     l3399:
  1928                           
  1929                           ;interface_main.c: 113:                     LCD_String_xy(1,13,"AM");
  1930  03F8  300D               	movlw	13
  1931  03F9  1283               	bcf	3,5	;RP0=0, select bank0
  1932  03FA  1303               	bcf	3,6	;RP1=0, select bank0
  1933  03FB  00DF               	movwf	??_main
  1934  03FC  085F               	movf	??_main,w
  1935  03FD  00A0               	movwf	LCD_String_xy@pos
  1936  03FE  30A4               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1937  03FF  00A1               	movwf	LCD_String_xy@msg
  1938  0400  3080               	movlw	128
  1939  0401  00A2               	movwf	LCD_String_xy@msg+1
  1940  0402  3001               	movlw	1
  1941  0403  160A  118A  249C  120A  118A  	fcall	_LCD_String_xy
  1942  0408                     l3401:
  1943                           
  1944                           ;interface_main.c: 116:                 hour = hour & (0x1f);
  1945  0408  301F               	movlw	31
  1946  0409  1683               	bsf	3,5	;RP0=1, select bank1
  1947  040A  1303               	bcf	3,6	;RP1=0, select bank1
  1948  040B  0566               	andwf	_hour^(0+128),w
  1949  040C  00E6               	movwf	_hour^(0+128)
  1950  040D  3000               	movlw	0
  1951  040E  0567               	andwf	(_hour+1)^(0+128),w
  1952  040F  00E7               	movwf	(_hour+1)^(0+128)
  1953  0410                     l3403:
  1954                           
  1955                           ;interface_main.c: 117:                 sprintf(secs,"%x ",sec);
  1956  0410  30C8               	movlw	(low (_secs| (0+256)))& (0+255)
  1957  0411  1283               	bcf	3,5	;RP0=0, select bank0
  1958  0412  1303               	bcf	3,6	;RP1=0, select bank0
  1959  0413  00A0               	movwf	sprintf@sp
  1960  0414  3001               	movlw	1
  1961  0415  00A1               	movwf	sprintf@sp+1
  1962  0416  3080               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1963  0417  00DF               	movwf	??_main
  1964  0418  085F               	movf	??_main,w
  1965  0419  00A2               	movwf	sprintf@f
  1966  041A  1683               	bsf	3,5	;RP0=1, select bank1
  1967  041B  1303               	bcf	3,6	;RP1=0, select bank1
  1968  041C  086B               	movf	(_sec+1)^(0+128),w
  1969  041D  1283               	bcf	3,5	;RP0=0, select bank0
  1970  041E  1303               	bcf	3,6	;RP1=0, select bank0
  1971  041F  00A4               	movwf	?_sprintf+4
  1972  0420  1683               	bsf	3,5	;RP0=1, select bank1
  1973  0421  1303               	bcf	3,6	;RP1=0, select bank1
  1974  0422  086A               	movf	_sec^(0+128),w
  1975  0423  1283               	bcf	3,5	;RP0=0, select bank0
  1976  0424  1303               	bcf	3,6	;RP1=0, select bank0
  1977  0425  00A3               	movwf	?_sprintf+3
  1978  0426  120A  118A  2052  120A  118A  	fcall	_sprintf
  1979  042B                     l3405:
  1980                           
  1981                           ;interface_main.c: 118:                 sprintf(mins,"%x:",min);
  1982  042B  30BE               	movlw	(low (_mins| (0+256)))& (0+255)
  1983  042C  1283               	bcf	3,5	;RP0=0, select bank0
  1984  042D  1303               	bcf	3,6	;RP1=0, select bank0
  1985  042E  00A0               	movwf	sprintf@sp
  1986  042F  3001               	movlw	1
  1987  0430  00A1               	movwf	sprintf@sp+1
  1988  0431  3075               	movlw	(low (((STR_9+4)-__stringbase)| (0+32768)))& (0+255)
  1989  0432  00DF               	movwf	??_main
  1990  0433  085F               	movf	??_main,w
  1991  0434  00A2               	movwf	sprintf@f
  1992  0435  1683               	bsf	3,5	;RP0=1, select bank1
  1993  0436  1303               	bcf	3,6	;RP1=0, select bank1
  1994  0437  0869               	movf	(_min+1)^(0+128),w
  1995  0438  1283               	bcf	3,5	;RP0=0, select bank0
  1996  0439  1303               	bcf	3,6	;RP1=0, select bank0
  1997  043A  00A4               	movwf	?_sprintf+4
  1998  043B  1683               	bsf	3,5	;RP0=1, select bank1
  1999  043C  1303               	bcf	3,6	;RP1=0, select bank1
  2000  043D  0868               	movf	_min^(0+128),w
  2001  043E  1283               	bcf	3,5	;RP0=0, select bank0
  2002  043F  1303               	bcf	3,6	;RP1=0, select bank0
  2003  0440  00A3               	movwf	?_sprintf+3
  2004  0441  120A  118A  2052  120A  118A  	fcall	_sprintf
  2005  0446                     l3407:
  2006                           
  2007                           ;interface_main.c: 119:                 sprintf(hours,"Tim:%x:",hour);
  2008  0446  30B4               	movlw	(low (_hours| (0+256)))& (0+255)
  2009  0447  1283               	bcf	3,5	;RP0=0, select bank0
  2010  0448  1303               	bcf	3,6	;RP1=0, select bank0
  2011  0449  00A0               	movwf	sprintf@sp
  2012  044A  3001               	movlw	1
  2013  044B  00A1               	movwf	sprintf@sp+1
  2014  044C  3071               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  2015  044D  00DF               	movwf	??_main
  2016  044E  085F               	movf	??_main,w
  2017  044F  00A2               	movwf	sprintf@f
  2018  0450  1683               	bsf	3,5	;RP0=1, select bank1
  2019  0451  1303               	bcf	3,6	;RP1=0, select bank1
  2020  0452  0867               	movf	(_hour+1)^(0+128),w
  2021  0453  1283               	bcf	3,5	;RP0=0, select bank0
  2022  0454  1303               	bcf	3,6	;RP1=0, select bank0
  2023  0455  00A4               	movwf	?_sprintf+4
  2024  0456  1683               	bsf	3,5	;RP0=1, select bank1
  2025  0457  1303               	bcf	3,6	;RP1=0, select bank1
  2026  0458  0866               	movf	_hour^(0+128),w
  2027  0459  1283               	bcf	3,5	;RP0=0, select bank0
  2028  045A  1303               	bcf	3,6	;RP1=0, select bank0
  2029  045B  00A3               	movwf	?_sprintf+3
  2030  045C  120A  118A  2052  120A  118A  	fcall	_sprintf
  2031  0461                     l3409:
  2032                           
  2033                           ;interface_main.c: 120:                 LCD_String_xy(0,0,hours);
  2034  0461  1283               	bcf	3,5	;RP0=0, select bank0
  2035  0462  1303               	bcf	3,6	;RP1=0, select bank0
  2036  0463  01A0               	clrf	LCD_String_xy@pos
  2037  0464  30B4               	movlw	(low (_hours| (0+256)))& (0+255)
  2038  0465  00A1               	movwf	LCD_String_xy@msg
  2039  0466  3001               	movlw	1
  2040  0467  00A2               	movwf	LCD_String_xy@msg+1
  2041  0468  3000               	movlw	0
  2042  0469  160A  118A  249C  120A  118A  	fcall	_LCD_String_xy
  2043  046E                     l3411:
  2044                           
  2045                           ;interface_main.c: 121:                 LCD_Write_String(mins);
  2046  046E  30BE               	movlw	(low (_mins| (0+256)))& (0+255)
  2047  046F  00F7               	movwf	LCD_Write_String@Str
  2048  0470  3001               	movlw	1
  2049  0471  00F8               	movwf	LCD_Write_String@Str+1
  2050  0472  160A  118A  2578  120A  118A  	fcall	_LCD_Write_String
  2051  0477                     l3413:
  2052                           
  2053                           ;interface_main.c: 122:                 LCD_Write_String(secs);
  2054  0477  30C8               	movlw	(low (_secs| (0+256)))& (0+255)
  2055  0478  00F7               	movwf	LCD_Write_String@Str
  2056  0479  3001               	movlw	1
  2057  047A  00F8               	movwf	LCD_Write_String@Str+1
  2058  047B  160A  118A  2578  120A  118A  	fcall	_LCD_Write_String
  2059                           
  2060                           ;interface_main.c: 123:             }
  2061  0480  2CE6               	goto	l3429
  2062  0481                     l3415:
  2063                           
  2064                           ;interface_main.c: 126:                 hour = hour & (0x3f);
  2065  0481  303F               	movlw	63
  2066  0482  0566               	andwf	_hour^(0+128),w
  2067  0483  00E6               	movwf	_hour^(0+128)
  2068  0484  3000               	movlw	0
  2069  0485  0567               	andwf	(_hour+1)^(0+128),w
  2070  0486  00E7               	movwf	(_hour+1)^(0+128)
  2071  0487                     l3417:
  2072                           
  2073                           ;interface_main.c: 127:                 sprintf(secs,"%x ",sec);
  2074  0487  30C8               	movlw	(low (_secs| (0+256)))& (0+255)
  2075  0488  1283               	bcf	3,5	;RP0=0, select bank0
  2076  0489  1303               	bcf	3,6	;RP1=0, select bank0
  2077  048A  00A0               	movwf	sprintf@sp
  2078  048B  3001               	movlw	1
  2079  048C  00A1               	movwf	sprintf@sp+1
  2080  048D  3080               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2081  048E  00DF               	movwf	??_main
  2082  048F  085F               	movf	??_main,w
  2083  0490  00A2               	movwf	sprintf@f
  2084  0491  1683               	bsf	3,5	;RP0=1, select bank1
  2085  0492  1303               	bcf	3,6	;RP1=0, select bank1
  2086  0493  086B               	movf	(_sec+1)^(0+128),w
  2087  0494  1283               	bcf	3,5	;RP0=0, select bank0
  2088  0495  1303               	bcf	3,6	;RP1=0, select bank0
  2089  0496  00A4               	movwf	?_sprintf+4
  2090  0497  1683               	bsf	3,5	;RP0=1, select bank1
  2091  0498  1303               	bcf	3,6	;RP1=0, select bank1
  2092  0499  086A               	movf	_sec^(0+128),w
  2093  049A  1283               	bcf	3,5	;RP0=0, select bank0
  2094  049B  1303               	bcf	3,6	;RP1=0, select bank0
  2095  049C  00A3               	movwf	?_sprintf+3
  2096  049D  120A  118A  2052  120A  118A  	fcall	_sprintf
  2097  04A2                     l3419:
  2098                           
  2099                           ;interface_main.c: 128:                 sprintf(mins,"%x:",min);
  2100  04A2  30BE               	movlw	(low (_mins| (0+256)))& (0+255)
  2101  04A3  1283               	bcf	3,5	;RP0=0, select bank0
  2102  04A4  1303               	bcf	3,6	;RP1=0, select bank0
  2103  04A5  00A0               	movwf	sprintf@sp
  2104  04A6  3001               	movlw	1
  2105  04A7  00A1               	movwf	sprintf@sp+1
  2106  04A8  3075               	movlw	(low (((STR_9+4)-__stringbase)| (0+32768)))& (0+255)
  2107  04A9  00DF               	movwf	??_main
  2108  04AA  085F               	movf	??_main,w
  2109  04AB  00A2               	movwf	sprintf@f
  2110  04AC  1683               	bsf	3,5	;RP0=1, select bank1
  2111  04AD  1303               	bcf	3,6	;RP1=0, select bank1
  2112  04AE  0869               	movf	(_min+1)^(0+128),w
  2113  04AF  1283               	bcf	3,5	;RP0=0, select bank0
  2114  04B0  1303               	bcf	3,6	;RP1=0, select bank0
  2115  04B1  00A4               	movwf	?_sprintf+4
  2116  04B2  1683               	bsf	3,5	;RP0=1, select bank1
  2117  04B3  1303               	bcf	3,6	;RP1=0, select bank1
  2118  04B4  0868               	movf	_min^(0+128),w
  2119  04B5  1283               	bcf	3,5	;RP0=0, select bank0
  2120  04B6  1303               	bcf	3,6	;RP1=0, select bank0
  2121  04B7  00A3               	movwf	?_sprintf+3
  2122  04B8  120A  118A  2052  120A  118A  	fcall	_sprintf
  2123  04BD                     l3421:
  2124                           
  2125                           ;interface_main.c: 129:                 sprintf(hours,"Tim:%x:",hour);
  2126  04BD  30B4               	movlw	(low (_hours| (0+256)))& (0+255)
  2127  04BE  1283               	bcf	3,5	;RP0=0, select bank0
  2128  04BF  1303               	bcf	3,6	;RP1=0, select bank0
  2129  04C0  00A0               	movwf	sprintf@sp
  2130  04C1  3001               	movlw	1
  2131  04C2  00A1               	movwf	sprintf@sp+1
  2132  04C3  3071               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  2133  04C4  00DF               	movwf	??_main
  2134  04C5  085F               	movf	??_main,w
  2135  04C6  00A2               	movwf	sprintf@f
  2136  04C7  1683               	bsf	3,5	;RP0=1, select bank1
  2137  04C8  1303               	bcf	3,6	;RP1=0, select bank1
  2138  04C9  0867               	movf	(_hour+1)^(0+128),w
  2139  04CA  1283               	bcf	3,5	;RP0=0, select bank0
  2140  04CB  1303               	bcf	3,6	;RP1=0, select bank0
  2141  04CC  00A4               	movwf	?_sprintf+4
  2142  04CD  1683               	bsf	3,5	;RP0=1, select bank1
  2143  04CE  1303               	bcf	3,6	;RP1=0, select bank1
  2144  04CF  0866               	movf	_hour^(0+128),w
  2145  04D0  1283               	bcf	3,5	;RP0=0, select bank0
  2146  04D1  1303               	bcf	3,6	;RP1=0, select bank0
  2147  04D2  00A3               	movwf	?_sprintf+3
  2148  04D3  120A  118A  2052  120A  118A  	fcall	_sprintf
  2149  04D8                     l3423:
  2150                           
  2151                           ;interface_main.c: 130:                 LCD_String_xy(0,0,hours);
  2152  04D8  1283               	bcf	3,5	;RP0=0, select bank0
  2153  04D9  1303               	bcf	3,6	;RP1=0, select bank0
  2154  04DA  01A0               	clrf	LCD_String_xy@pos
  2155  04DB  30B4               	movlw	(low (_hours| (0+256)))& (0+255)
  2156  04DC  00A1               	movwf	LCD_String_xy@msg
  2157  04DD  3001               	movlw	1
  2158  04DE  00A2               	movwf	LCD_String_xy@msg+1
  2159  04DF  3000               	movlw	0
  2160  04E0  160A  118A  249C  120A  118A  	fcall	_LCD_String_xy
  2161  04E5  2C6E               	goto	l3411
  2162  04E6                     l3429:
  2163                           
  2164                           ;interface_main.c: 135:             RTC_Read_Calendar(3);
  2165  04E6  3003               	movlw	3
  2166  04E7  160A  118A  25BA  120A  118A  	fcall	_RTC_Read_Calendar
  2167  04EC                     l3431:
  2168                           
  2169                           ;interface_main.c: 136:             I2C_Stop();
  2170  04EC  160A  118A  22BF  120A  118A  	fcall	_I2C_Stop
  2171  04F1                     l3433:
  2172                           
  2173                           ;interface_main.c: 137:             sprintf(date,"Cal:%x-",Date);
  2174  04F1  30AA               	movlw	(low (_date| (0+256)))& (0+255)
  2175  04F2  1283               	bcf	3,5	;RP0=0, select bank0
  2176  04F3  1303               	bcf	3,6	;RP1=0, select bank0
  2177  04F4  00A0               	movwf	sprintf@sp
  2178  04F5  3001               	movlw	1
  2179  04F6  00A1               	movwf	sprintf@sp+1
  2180  04F7  3069               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  2181  04F8  00DF               	movwf	??_main
  2182  04F9  085F               	movf	??_main,w
  2183  04FA  00A2               	movwf	sprintf@f
  2184  04FB  0863               	movf	_Date+1,w
  2185  04FC  00A4               	movwf	?_sprintf+4
  2186  04FD  0862               	movf	_Date,w
  2187  04FE  00A3               	movwf	?_sprintf+3
  2188  04FF  120A  118A  2052  120A  118A  	fcall	_sprintf
  2189  0504                     l3435:
  2190                           
  2191                           ;interface_main.c: 138:             sprintf(month,"%x-",Month);
  2192  0504  30A0               	movlw	(low (_month| (0+256)))& (0+255)
  2193  0505  1283               	bcf	3,5	;RP0=0, select bank0
  2194  0506  1303               	bcf	3,6	;RP1=0, select bank0
  2195  0507  00A0               	movwf	sprintf@sp
  2196  0508  3001               	movlw	1
  2197  0509  00A1               	movwf	sprintf@sp+1
  2198  050A  306D               	movlw	(low (((STR_13+4)-__stringbase)| (0+32768)))& (0+255)
  2199  050B  00DF               	movwf	??_main
  2200  050C  085F               	movf	??_main,w
  2201  050D  00A2               	movwf	sprintf@f
  2202  050E  1683               	bsf	3,5	;RP0=1, select bank3
  2203  050F  1703               	bsf	3,6	;RP1=1, select bank3
  2204  0510  0813               	movf	(_Month+1)^(0+384),w
  2205  0511  1283               	bcf	3,5	;RP0=0, select bank0
  2206  0512  1303               	bcf	3,6	;RP1=0, select bank0
  2207  0513  00A4               	movwf	?_sprintf+4
  2208  0514  1683               	bsf	3,5	;RP0=1, select bank3
  2209  0515  1703               	bsf	3,6	;RP1=1, select bank3
  2210  0516  0812               	movf	_Month^(0+384),w
  2211  0517  1283               	bcf	3,5	;RP0=0, select bank0
  2212  0518  1303               	bcf	3,6	;RP1=0, select bank0
  2213  0519  00A3               	movwf	?_sprintf+3
  2214  051A  120A  118A  2052  120A  118A  	fcall	_sprintf
  2215  051F                     l3437:
  2216                           
  2217                           ;interface_main.c: 139:             sprintf(year,"%x ",Year);
  2218  051F  3096               	movlw	(low (_year| (0+256)))& (0+255)
  2219  0520  1283               	bcf	3,5	;RP0=0, select bank0
  2220  0521  1303               	bcf	3,6	;RP1=0, select bank0
  2221  0522  00A0               	movwf	sprintf@sp
  2222  0523  3001               	movlw	1
  2223  0524  00A1               	movwf	sprintf@sp+1
  2224  0525  3080               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2225  0526  00DF               	movwf	??_main
  2226  0527  085F               	movf	??_main,w
  2227  0528  00A2               	movwf	sprintf@f
  2228  0529  1683               	bsf	3,5	;RP0=1, select bank3
  2229  052A  1703               	bsf	3,6	;RP1=1, select bank3
  2230  052B  0811               	movf	(_Year+1)^(0+384),w
  2231  052C  1283               	bcf	3,5	;RP0=0, select bank0
  2232  052D  1303               	bcf	3,6	;RP1=0, select bank0
  2233  052E  00A4               	movwf	?_sprintf+4
  2234  052F  1683               	bsf	3,5	;RP0=1, select bank3
  2235  0530  1703               	bsf	3,6	;RP1=1, select bank3
  2236  0531  0810               	movf	_Year^(0+384),w
  2237  0532  1283               	bcf	3,5	;RP0=0, select bank0
  2238  0533  1303               	bcf	3,6	;RP1=0, select bank0
  2239  0534  00A3               	movwf	?_sprintf+3
  2240  0535  120A  118A  2052  120A  118A  	fcall	_sprintf
  2241  053A                     l3439:
  2242                           
  2243                           ;interface_main.c: 140:             LCD_String_xy(2,0,date);
  2244  053A  1283               	bcf	3,5	;RP0=0, select bank0
  2245  053B  1303               	bcf	3,6	;RP1=0, select bank0
  2246  053C  01A0               	clrf	LCD_String_xy@pos
  2247  053D  30AA               	movlw	(low (_date| (0+256)))& (0+255)
  2248  053E  00A1               	movwf	LCD_String_xy@msg
  2249  053F  3001               	movlw	1
  2250  0540  00A2               	movwf	LCD_String_xy@msg+1
  2251  0541  3002               	movlw	2
  2252  0542  160A  118A  249C  120A  118A  	fcall	_LCD_String_xy
  2253  0547                     l3441:
  2254                           
  2255                           ;interface_main.c: 141:             LCD_Write_String(month);
  2256  0547  30A0               	movlw	(low (_month| (0+256)))& (0+255)
  2257  0548  00F7               	movwf	LCD_Write_String@Str
  2258  0549  3001               	movlw	1
  2259  054A  00F8               	movwf	LCD_Write_String@Str+1
  2260  054B  160A  118A  2578  120A  118A  	fcall	_LCD_Write_String
  2261  0550                     l3443:
  2262                           
  2263                           ;interface_main.c: 142:             LCD_Write_String(year);
  2264  0550  3096               	movlw	(low (_year| (0+256)))& (0+255)
  2265  0551  00F7               	movwf	LCD_Write_String@Str
  2266  0552  3001               	movlw	1
  2267  0553  00F8               	movwf	LCD_Write_String@Str+1
  2268  0554  160A  118A  2578  120A  118A  	fcall	_LCD_Write_String
  2269                           
  2270                           ;interface_main.c: 145:             switch(days[Day])
  2271  0559  2DAA               	goto	l3463
  2272  055A                     l3445:
  2273                           
  2274                           ;interface_main.c: 148:                         LCD_Write_String("Sun");
  2275  055A  3094               	movlw	(low ((STR_16-__stringbase)| (0+32768)))& (0+255)
  2276  055B  00F7               	movwf	LCD_Write_String@Str
  2277  055C  3080               	movlw	128
  2278  055D  00F8               	movwf	LCD_Write_String@Str+1
  2279  055E  160A  118A  2578  120A  118A  	fcall	_LCD_Write_String
  2280                           
  2281                           ;interface_main.c: 149:                         break;
  2282  0563  2DCF               	goto	l3465
  2283  0564                     l3447:
  2284                           
  2285                           ;interface_main.c: 151:                         LCD_Write_String("Mon");
  2286  0564  3090               	movlw	(low ((STR_17-__stringbase)| (0+32768)))& (0+255)
  2287  0565  00F7               	movwf	LCD_Write_String@Str
  2288  0566  3080               	movlw	128
  2289  0567  00F8               	movwf	LCD_Write_String@Str+1
  2290  0568  160A  118A  2578  120A  118A  	fcall	_LCD_Write_String
  2291                           
  2292                           ;interface_main.c: 152:                         break;
  2293  056D  2DCF               	goto	l3465
  2294  056E                     l3449:
  2295                           
  2296                           ;interface_main.c: 154:                         LCD_Write_String("Tue");
  2297  056E  3088               	movlw	(low ((STR_18-__stringbase)| (0+32768)))& (0+255)
  2298  056F  00F7               	movwf	LCD_Write_String@Str
  2299  0570  3080               	movlw	128
  2300  0571  00F8               	movwf	LCD_Write_String@Str+1
  2301  0572  160A  118A  2578  120A  118A  	fcall	_LCD_Write_String
  2302                           
  2303                           ;interface_main.c: 155:                         break;
  2304  0577  2DCF               	goto	l3465
  2305  0578                     l3451:
  2306                           
  2307                           ;interface_main.c: 157:                         LCD_Write_String("Wed");
  2308  0578  3084               	movlw	(low ((STR_19-__stringbase)| (0+32768)))& (0+255)
  2309  0579  00F7               	movwf	LCD_Write_String@Str
  2310  057A  3080               	movlw	128
  2311  057B  00F8               	movwf	LCD_Write_String@Str+1
  2312  057C  160A  118A  2578  120A  118A  	fcall	_LCD_Write_String
  2313                           
  2314                           ;interface_main.c: 158:                         break;
  2315  0581  2DCF               	goto	l3465
  2316  0582                     l3453:
  2317                           
  2318                           ;interface_main.c: 160:                         LCD_Write_String("Thu");
  2319  0582  309C               	movlw	(low ((STR_20-__stringbase)| (0+32768)))& (0+255)
  2320  0583  00F7               	movwf	LCD_Write_String@Str
  2321  0584  3080               	movlw	128
  2322  0585  00F8               	movwf	LCD_Write_String@Str+1
  2323  0586  160A  118A  2578  120A  118A  	fcall	_LCD_Write_String
  2324                           
  2325                           ;interface_main.c: 161:                         break;
  2326  058B  2DCF               	goto	l3465
  2327  058C                     l3455:
  2328                           
  2329                           ;interface_main.c: 163:                         LCD_Write_String("Fri");
  2330  058C  308C               	movlw	(low ((STR_21-__stringbase)| (0+32768)))& (0+255)
  2331  058D  00F7               	movwf	LCD_Write_String@Str
  2332  058E  3080               	movlw	128
  2333  058F  00F8               	movwf	LCD_Write_String@Str+1
  2334  0590  160A  118A  2578  120A  118A  	fcall	_LCD_Write_String
  2335                           
  2336                           ;interface_main.c: 164:                         break;
  2337  0595  2DCF               	goto	l3465
  2338  0596                     l3457:
  2339                           
  2340                           ;interface_main.c: 166:                         LCD_Write_String("Sat");
  2341  0596  3098               	movlw	(low ((STR_22-__stringbase)| (0+32768)))& (0+255)
  2342  0597  00F7               	movwf	LCD_Write_String@Str
  2343  0598  3080               	movlw	128
  2344  0599  00F8               	movwf	LCD_Write_String@Str+1
  2345  059A  160A  118A  2578  120A  118A  	fcall	_LCD_Write_String
  2346                           
  2347                           ;interface_main.c: 167:                         break;
  2348  059F  2DCF               	goto	l3465
  2349  05A0                     l3459:
  2350                           
  2351                           ;interface_main.c: 169:                         LCD_Write_String("Inv");
  2352  05A0  30A0               	movlw	(low ((STR_23-__stringbase)| (0+32768)))& (0+255)
  2353  05A1  00F7               	movwf	LCD_Write_String@Str
  2354  05A2  3080               	movlw	128
  2355  05A3  00F8               	movwf	LCD_Write_String@Str+1
  2356  05A4  160A  118A  2578  120A  118A  	fcall	_LCD_Write_String
  2357                           
  2358                           ;interface_main.c: 170:                         break;
  2359  05A9  2DCF               	goto	l3465
  2360  05AA                     l3463:
  2361  05AA  1283               	bcf	3,5	;RP0=0, select bank0
  2362  05AB  1303               	bcf	3,6	;RP1=0, select bank0
  2363  05AC  0864               	movf	_Day,w
  2364  05AD  3ED2               	addlw	(low (_days| (0+256)))& (0+255)
  2365  05AE  0084               	movwf	4
  2366  05AF  1783               	bsf	3,7	;select IRP bank3
  2367  05B0  0800               	movf	0,w
  2368  05B1  00DF               	movwf	??_main
  2369  05B2  01E0               	clrf	??_main+1
  2370                           
  2371                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2372                           ; Switch size 1, requested type "simple"
  2373                           ; Number of cases is 1, Range of values is 0 to 0
  2374                           ; switch strategies available:
  2375                           ; Name         Instructions Cycles
  2376                           ; simple_byte            4     3 (average)
  2377                           ; direct_byte           11     8 (fixed)
  2378                           ; jumptable            260     6 (fixed)
  2379                           ;	Chosen strategy is simple_byte
  2380  05B3  0860               	movf	??_main+1,w
  2381  05B4  3A00               	xorlw	0	; case 0
  2382  05B5  1903               	skipnz
  2383  05B6  2DB8               	goto	l3735
  2384  05B7  2DA0               	goto	l3459
  2385  05B8                     l3735:
  2386                           
  2387                           ; Switch size 1, requested type "simple"
  2388                           ; Number of cases is 7, Range of values is 70 to 116
  2389                           ; switch strategies available:
  2390                           ; Name         Instructions Cycles
  2391                           ; simple_byte           22    12 (average)
  2392                           ; direct_byte          152    11 (fixed)
  2393                           ; jumptable            263     9 (fixed)
  2394                           ;	Chosen strategy is simple_byte
  2395  05B8  085F               	movf	??_main,w
  2396  05B9  3A46               	xorlw	70	; case 70
  2397  05BA  1903               	skipnz
  2398  05BB  2D8C               	goto	l3455
  2399  05BC  3A0B               	xorlw	11	; case 77
  2400  05BD  1903               	skipnz
  2401  05BE  2D64               	goto	l3447
  2402  05BF  3A1E               	xorlw	30	; case 83
  2403  05C0  1903               	skipnz
  2404  05C1  2D5A               	goto	l3445
  2405  05C2  3A07               	xorlw	7	; case 84
  2406  05C3  1903               	skipnz
  2407  05C4  2D6E               	goto	l3449
  2408  05C5  3A03               	xorlw	3	; case 87
  2409  05C6  1903               	skipnz
  2410  05C7  2D78               	goto	l3451
  2411  05C8  3A24               	xorlw	36	; case 115
  2412  05C9  1903               	skipnz
  2413  05CA  2D96               	goto	l3457
  2414  05CB  3A07               	xorlw	7	; case 116
  2415  05CC  1903               	skipnz
  2416  05CD  2D82               	goto	l3453
  2417  05CE  2DA0               	goto	l3459
  2418  05CF                     l3465:
  2419                           
  2420                           ;interface_main.c: 174:             _delay((unsigned long)((10)*(8000000/4000.0)));
  2421  05CF  301A               	movlw	26
  2422  05D0  1283               	bcf	3,5	;RP0=0, select bank0
  2423  05D1  1303               	bcf	3,6	;RP1=0, select bank0
  2424  05D2  00E0               	movwf	??_main+1
  2425  05D3  30F7               	movlw	247
  2426  05D4  00DF               	movwf	??_main
  2427  05D5                     u3957:
  2428  05D5  0BDF               	decfsz	??_main,f
  2429  05D6  2DD5               	goto	u3957
  2430  05D7  0BE0               	decfsz	??_main+1,f
  2431  05D8  2DD5               	goto	u3957
  2432  05D9  2DDA               	nop2
  2433  05DA                     l3467:
  2434                           
  2435                           ;interface_main.c: 176:             if(RB5 == 0)
  2436  05DA  1283               	bcf	3,5	;RP0=0, select bank0
  2437  05DB  1303               	bcf	3,6	;RP1=0, select bank0
  2438  05DC  1A86               	btfsc	6,5	;volatile
  2439  05DD  2DDF               	goto	u3771
  2440  05DE  2DE0               	goto	u3770
  2441  05DF                     u3771:
  2442  05DF  2FA1               	goto	l3583
  2443  05E0                     u3770:
  2444  05E0                     l355:
  2445  05E0  1E86               	btfss	6,5	;volatile
  2446  05E1  2DE3               	goto	u3781
  2447  05E2  2DE4               	goto	u3780
  2448  05E3                     u3781:
  2449  05E3  2DE0               	goto	l355
  2450  05E4                     u3780:
  2451  05E4  2BC1               	goto	l3387
  2452  05E5                     l3473:
  2453  05E5  3002               	movlw	2
  2454  05E6  0664               	xorwf	main@displayMode^(0+128),w
  2455  05E7  0465               	iorwf	(main@displayMode+1)^(0+128),w
  2456  05E8  1D03               	btfss	3,2
  2457  05E9  2DEB               	goto	u3791
  2458  05EA  2DEC               	goto	u3790
  2459  05EB                     u3791:
  2460  05EB  2E1F               	goto	l3503
  2461  05EC                     u3790:
  2462  05EC                     l3475:
  2463                           
  2464                           ;interface_main.c: 184:         {;interface_main.c: 186:             ANSELbits.ANS3 = 1;
  2465  05EC  1683               	bsf	3,5	;RP0=1, select bank3
  2466  05ED  1703               	bsf	3,6	;RP1=1, select bank3
  2467  05EE  1588               	bsf	8,3	;volatile
  2468  05EF                     l3477:
  2469                           
  2470                           ;interface_main.c: 189:             ADCON0bits.ADCS = 0b11;
  2471  05EF  30C0               	movlw	192
  2472  05F0  1283               	bcf	3,5	;RP0=0, select bank0
  2473  05F1  1303               	bcf	3,6	;RP1=0, select bank0
  2474  05F2  049F               	iorwf	31,f	;volatile
  2475                           
  2476                           ;interface_main.c: 190:             ADCON0bits.CHS = 0b0011;
  2477  05F3  081F               	movf	31,w	;volatile
  2478  05F4  39C3               	andlw	-61
  2479  05F5  380C               	iorlw	12
  2480  05F6  009F               	movwf	31	;volatile
  2481  05F7                     l3479:
  2482                           
  2483                           ;interface_main.c: 193:             ADCON1bits.VCFG1 = 0;
  2484  05F7  1683               	bsf	3,5	;RP0=1, select bank1
  2485  05F8  1303               	bcf	3,6	;RP1=0, select bank1
  2486  05F9  129F               	bcf	31,5	;volatile
  2487  05FA                     l3481:
  2488                           
  2489                           ;interface_main.c: 194:             ADCON1bits.VCFG0 = 0;
  2490  05FA  121F               	bcf	31,4	;volatile
  2491  05FB                     l3483:
  2492                           
  2493                           ;interface_main.c: 195:             ADCON1bits.ADFM = 1;
  2494  05FB  179F               	bsf	31,7	;volatile
  2495  05FC                     l3485:
  2496                           
  2497                           ;interface_main.c: 198:             PIR1bits.ADIF = 0;
  2498  05FC  1283               	bcf	3,5	;RP0=0, select bank0
  2499  05FD  1303               	bcf	3,6	;RP1=0, select bank0
  2500  05FE  130C               	bcf	12,6	;volatile
  2501  05FF                     l3487:
  2502                           
  2503                           ;interface_main.c: 201:             PIE1bits.ADIE = 1;
  2504  05FF  1683               	bsf	3,5	;RP0=1, select bank1
  2505  0600  1303               	bcf	3,6	;RP1=0, select bank1
  2506  0601  170C               	bsf	12,6	;volatile
  2507  0602                     l3489:
  2508                           
  2509                           ;interface_main.c: 203:             ADCON0bits.ADON = 1;
  2510  0602  1283               	bcf	3,5	;RP0=0, select bank0
  2511  0603  1303               	bcf	3,6	;RP1=0, select bank0
  2512  0604  141F               	bsf	31,0	;volatile
  2513  0605                     l3491:
  2514                           
  2515                           ;interface_main.c: 206:             Update_Celsius();
  2516  0605  120A  158A  20C3  120A  118A  	fcall	_Update_Celsius
  2517  060A                     l3493:
  2518                           
  2519                           ;interface_main.c: 207:             Update_Farenheit();
  2520  060A  160A  118A  276C  120A  118A  	fcall	_Update_Farenheit
  2521  060F                     l3495:
  2522                           
  2523                           ;interface_main.c: 208:             DisplayTemp();
  2524  060F  160A  118A  260B  120A  118A  	fcall	_DisplayTemp
  2525  0614                     l3497:
  2526                           
  2527                           ;interface_main.c: 210:             if(RB5 == 0)
  2528  0614  1283               	bcf	3,5	;RP0=0, select bank0
  2529  0615  1303               	bcf	3,6	;RP1=0, select bank0
  2530  0616  1A86               	btfsc	6,5	;volatile
  2531  0617  2E19               	goto	u3801
  2532  0618  2E1A               	goto	u3800
  2533  0619                     u3801:
  2534  0619  2FA1               	goto	l3583
  2535  061A                     u3800:
  2536  061A                     l361:
  2537  061A  1E86               	btfss	6,5	;volatile
  2538  061B  2E1D               	goto	u3811
  2539  061C  2E1E               	goto	u3810
  2540  061D                     u3811:
  2541  061D  2E1A               	goto	l361
  2542  061E                     u3810:
  2543  061E  2BC1               	goto	l3387
  2544  061F                     l3503:
  2545  061F  3003               	movlw	3
  2546  0620  0664               	xorwf	main@displayMode^(0+128),w
  2547  0621  0465               	iorwf	(main@displayMode+1)^(0+128),w
  2548  0622  1D03               	btfss	3,2
  2549  0623  2E25               	goto	u3821
  2550  0624  2E26               	goto	u3820
  2551  0625                     u3821:
  2552  0625  2EE3               	goto	l3551
  2553  0626                     u3820:
  2554  0626                     l3505:
  2555                           
  2556                           ;interface_main.c: 218:             ANSELbits.ANS4 = 1;
  2557  0626  1683               	bsf	3,5	;RP0=1, select bank3
  2558  0627  1703               	bsf	3,6	;RP1=1, select bank3
  2559  0628  1608               	bsf	8,4	;volatile
  2560  0629                     l3507:
  2561                           
  2562                           ;interface_main.c: 221:             ADCON0bits.ADCS = 0b11;
  2563  0629  30C0               	movlw	192
  2564  062A  1283               	bcf	3,5	;RP0=0, select bank0
  2565  062B  1303               	bcf	3,6	;RP1=0, select bank0
  2566  062C  049F               	iorwf	31,f	;volatile
  2567                           
  2568                           ;interface_main.c: 222:             ADCON0bits.CHS = 0b0100;
  2569  062D  081F               	movf	31,w	;volatile
  2570  062E  39C3               	andlw	-61
  2571  062F  3810               	iorlw	16
  2572  0630  009F               	movwf	31	;volatile
  2573  0631                     l3509:
  2574                           
  2575                           ;interface_main.c: 225:             ADCON1bits.VCFG1 = 0;
  2576  0631  1683               	bsf	3,5	;RP0=1, select bank1
  2577  0632  1303               	bcf	3,6	;RP1=0, select bank1
  2578  0633  129F               	bcf	31,5	;volatile
  2579  0634                     l3511:
  2580                           
  2581                           ;interface_main.c: 226:             ADCON1bits.VCFG0 = 0;
  2582  0634  121F               	bcf	31,4	;volatile
  2583  0635                     l3513:
  2584                           
  2585                           ;interface_main.c: 227:             ADCON1bits.ADFM = 1;
  2586  0635  179F               	bsf	31,7	;volatile
  2587  0636                     l3515:
  2588                           
  2589                           ;interface_main.c: 230:             PIR1bits.ADIF = 0;
  2590  0636  1283               	bcf	3,5	;RP0=0, select bank0
  2591  0637  1303               	bcf	3,6	;RP1=0, select bank0
  2592  0638  130C               	bcf	12,6	;volatile
  2593  0639                     l3517:
  2594                           
  2595                           ;interface_main.c: 233:             PIE1bits.ADIE = 1;
  2596  0639  1683               	bsf	3,5	;RP0=1, select bank1
  2597  063A  1303               	bcf	3,6	;RP1=0, select bank1
  2598  063B  170C               	bsf	12,6	;volatile
  2599  063C                     l3519:
  2600                           
  2601                           ;interface_main.c: 235:             ADCON0bits.ADON = 1;
  2602  063C  1283               	bcf	3,5	;RP0=0, select bank0
  2603  063D  1303               	bcf	3,6	;RP1=0, select bank0
  2604  063E  141F               	bsf	31,0	;volatile
  2605  063F                     l3521:
  2606                           
  2607                           ;interface_main.c: 237:             ADCON0bits.GO = 1;
  2608  063F  149F               	bsf	31,1	;volatile
  2609  0640                     l3523:
  2610                           
  2611                           ;interface_main.c: 239:             unsigned tmp = 0;
  2612  0640  1683               	bsf	3,5	;RP0=1, select bank1
  2613  0641  1303               	bcf	3,6	;RP1=0, select bank1
  2614  0642  01E2               	clrf	main@tmp^(0+128)
  2615  0643  01E3               	clrf	(main@tmp+1)^(0+128)
  2616  0644                     l366:	
  2617                           ;interface_main.c: 241:             while(ADCON0bits.GO == 1);
  2618                           
  2619  0644  1283               	bcf	3,5	;RP0=0, select bank0
  2620  0645  189F               	btfsc	31,1	;volatile
  2621  0646  2E48               	goto	u3831
  2622  0647  2E49               	goto	u3830
  2623  0648                     u3831:
  2624  0648  2E44               	goto	l366
  2625  0649                     u3830:
  2626  0649                     l3525:
  2627                           
  2628                           ;interface_main.c: 244:             tmp = 0x0000;
  2629  0649  1683               	bsf	3,5	;RP0=1, select bank1
  2630  064A  1303               	bcf	3,6	;RP1=0, select bank1
  2631  064B  01E2               	clrf	main@tmp^(0+128)
  2632  064C  01E3               	clrf	(main@tmp+1)^(0+128)
  2633  064D                     l3527:
  2634                           
  2635                           ;interface_main.c: 245:             tmp = ADRESH;
  2636  064D  1283               	bcf	3,5	;RP0=0, select bank0
  2637  064E  1303               	bcf	3,6	;RP1=0, select bank0
  2638  064F  081E               	movf	30,w	;volatile
  2639  0650  00DF               	movwf	??_main
  2640  0651  01E0               	clrf	??_main+1
  2641  0652  085F               	movf	??_main,w
  2642  0653  1683               	bsf	3,5	;RP0=1, select bank1
  2643  0654  1303               	bcf	3,6	;RP1=0, select bank1
  2644  0655  00E2               	movwf	main@tmp^(0+128)
  2645  0656  1283               	bcf	3,5	;RP0=0, select bank0
  2646  0657  1303               	bcf	3,6	;RP1=0, select bank0
  2647  0658  0860               	movf	??_main+1,w
  2648  0659  1683               	bsf	3,5	;RP0=1, select bank1
  2649  065A  1303               	bcf	3,6	;RP1=0, select bank1
  2650  065B  00E3               	movwf	(main@tmp+1)^(0+128)
  2651  065C                     l3529:
  2652                           
  2653                           ;interface_main.c: 246:             tmp = tmp << 8;
  2654  065C  0862               	movf	main@tmp^(0+128),w
  2655  065D  1283               	bcf	3,5	;RP0=0, select bank0
  2656  065E  1303               	bcf	3,6	;RP1=0, select bank0
  2657  065F  00E0               	movwf	??_main+1
  2658  0660  01DF               	clrf	??_main
  2659  0661  085F               	movf	??_main,w
  2660  0662  1683               	bsf	3,5	;RP0=1, select bank1
  2661  0663  1303               	bcf	3,6	;RP1=0, select bank1
  2662  0664  00E2               	movwf	main@tmp^(0+128)
  2663  0665  1283               	bcf	3,5	;RP0=0, select bank0
  2664  0666  1303               	bcf	3,6	;RP1=0, select bank0
  2665  0667  0860               	movf	??_main+1,w
  2666  0668  1683               	bsf	3,5	;RP0=1, select bank1
  2667  0669  1303               	bcf	3,6	;RP1=0, select bank1
  2668  066A  00E3               	movwf	(main@tmp+1)^(0+128)
  2669  066B                     l3531:
  2670                           
  2671                           ;interface_main.c: 247:             tmp = tmp | ADRESL;
  2672  066B  0862               	movf	main@tmp^(0+128),w
  2673  066C  041E               	iorwf	30,w	;volatile
  2674  066D  1283               	bcf	3,5	;RP0=0, select bank0
  2675  066E  1303               	bcf	3,6	;RP1=0, select bank0
  2676  066F  00DF               	movwf	??_main
  2677  0670  1683               	bsf	3,5	;RP0=1, select bank1
  2678  0671  1303               	bcf	3,6	;RP1=0, select bank1
  2679  0672  0863               	movf	(main@tmp+1)^(0+128),w
  2680  0673  1283               	bcf	3,5	;RP0=0, select bank0
  2681  0674  1303               	bcf	3,6	;RP1=0, select bank0
  2682  0675  00E0               	movwf	??_main+1
  2683  0676  085F               	movf	??_main,w
  2684  0677  1683               	bsf	3,5	;RP0=1, select bank1
  2685  0678  1303               	bcf	3,6	;RP1=0, select bank1
  2686  0679  00E2               	movwf	main@tmp^(0+128)
  2687  067A  1283               	bcf	3,5	;RP0=0, select bank0
  2688  067B  1303               	bcf	3,6	;RP1=0, select bank0
  2689  067C  0860               	movf	??_main+1,w
  2690  067D  1683               	bsf	3,5	;RP0=1, select bank1
  2691  067E  1303               	bcf	3,6	;RP1=0, select bank1
  2692  067F  00E3               	movwf	(main@tmp+1)^(0+128)
  2693  0680                     l3533:
  2694                           
  2695                           ;interface_main.c: 249:             PIR1bits.ADIF = 0;
  2696  0680  1283               	bcf	3,5	;RP0=0, select bank0
  2697  0681  1303               	bcf	3,6	;RP1=0, select bank0
  2698  0682  130C               	bcf	12,6	;volatile
  2699  0683                     l3535:
  2700                           
  2701                           ;interface_main.c: 251:             CCPR1L = (tmp / 10);
  2702  0683  300A               	movlw	10
  2703  0684  00F0               	movwf	___lwdiv@divisor
  2704  0685  3000               	movlw	0
  2705  0686  00F1               	movwf	___lwdiv@divisor+1
  2706  0687  1683               	bsf	3,5	;RP0=1, select bank1
  2707  0688  1303               	bcf	3,6	;RP1=0, select bank1
  2708  0689  0863               	movf	(main@tmp+1)^(0+128),w
  2709  068A  00F3               	movwf	___lwdiv@dividend+1
  2710  068B  0862               	movf	main@tmp^(0+128),w
  2711  068C  00F2               	movwf	___lwdiv@dividend
  2712  068D  120A  118A  200E  120A  118A  	fcall	___lwdiv
  2713  0692  0870               	movf	?___lwdiv,w
  2714  0693  1283               	bcf	3,5	;RP0=0, select bank0
  2715  0694  1303               	bcf	3,6	;RP1=0, select bank0
  2716  0695  0095               	movwf	21	;volatile
  2717  0696                     l3537:
  2718                           
  2719                           ;interface_main.c: 253:             char buffer3[16];;interface_main.c: 254:            
      +                           sprintf(buffer3, "Speaker:%d", tmp);
  2720  0696  30B0               	movlw	(low (main@buffer3_742| 0))& (0+255)
  2721  0697  00A0               	movwf	sprintf@sp
  2722  0698  3000               	movlw	0
  2723  0699  00A1               	movwf	sprintf@sp+1
  2724  069A  3035               	movlw	(low ((STR_24-__stringbase)| (0+32768)))& (0+255)
  2725  069B  00DF               	movwf	??_main
  2726  069C  085F               	movf	??_main,w
  2727  069D  00A2               	movwf	sprintf@f
  2728  069E  1683               	bsf	3,5	;RP0=1, select bank1
  2729  069F  1303               	bcf	3,6	;RP1=0, select bank1
  2730  06A0  0863               	movf	(main@tmp+1)^(0+128),w
  2731  06A1  1283               	bcf	3,5	;RP0=0, select bank0
  2732  06A2  1303               	bcf	3,6	;RP1=0, select bank0
  2733  06A3  00A4               	movwf	?_sprintf+4
  2734  06A4  1683               	bsf	3,5	;RP0=1, select bank1
  2735  06A5  1303               	bcf	3,6	;RP1=0, select bank1
  2736  06A6  0862               	movf	main@tmp^(0+128),w
  2737  06A7  1283               	bcf	3,5	;RP0=0, select bank0
  2738  06A8  1303               	bcf	3,6	;RP1=0, select bank0
  2739  06A9  00A3               	movwf	?_sprintf+3
  2740  06AA  120A  118A  2052  120A  118A  	fcall	_sprintf
  2741  06AF                     l3539:
  2742                           
  2743                           ;interface_main.c: 255:             LCD_String_xy(0,0,buffer3);
  2744  06AF  1283               	bcf	3,5	;RP0=0, select bank0
  2745  06B0  1303               	bcf	3,6	;RP1=0, select bank0
  2746  06B1  01A0               	clrf	LCD_String_xy@pos
  2747  06B2  30B0               	movlw	(low (main@buffer3_742| 0))& (0+255)
  2748  06B3  00A1               	movwf	LCD_String_xy@msg
  2749  06B4  3000               	movlw	0
  2750  06B5  00A2               	movwf	LCD_String_xy@msg+1
  2751  06B6  3000               	movlw	0
  2752  06B7  160A  118A  249C  120A  118A  	fcall	_LCD_String_xy
  2753  06BC                     l3541:
  2754                           
  2755                           ;interface_main.c: 256:             _delay((unsigned long)((100)*(8000000/4000.0)));
  2756  06BC  3002               	movlw	2
  2757  06BD  1283               	bcf	3,5	;RP0=0, select bank0
  2758  06BE  1303               	bcf	3,6	;RP1=0, select bank0
  2759  06BF  00E1               	movwf	??_main+2
  2760  06C0  3004               	movlw	4
  2761  06C1  00E0               	movwf	??_main+1
  2762  06C2  30B9               	movlw	185
  2763  06C3  00DF               	movwf	??_main
  2764  06C4                     u3967:
  2765  06C4  0BDF               	decfsz	??_main,f
  2766  06C5  2EC4               	goto	u3967
  2767  06C6  0BE0               	decfsz	??_main+1,f
  2768  06C7  2EC4               	goto	u3967
  2769  06C8  0BE1               	decfsz	??_main+2,f
  2770  06C9  2EC4               	goto	u3967
  2771  06CA  2ECB               	nop2
  2772  06CB                     l3543:
  2773                           
  2774                           ;interface_main.c: 258:             if(RB5 == 0)
  2775  06CB  1283               	bcf	3,5	;RP0=0, select bank0
  2776  06CC  1303               	bcf	3,6	;RP1=0, select bank0
  2777  06CD  1A86               	btfsc	6,5	;volatile
  2778  06CE  2ED0               	goto	u3841
  2779  06CF  2ED1               	goto	u3840
  2780  06D0                     u3841:
  2781  06D0  2FA1               	goto	l3583
  2782  06D1                     u3840:
  2783  06D1                     l370:
  2784  06D1  1E86               	btfss	6,5	;volatile
  2785  06D2  2ED4               	goto	u3851
  2786  06D3  2ED5               	goto	u3850
  2787  06D4                     u3851:
  2788  06D4  2ED1               	goto	l370
  2789  06D5                     u3850:
  2790  06D5                     l3547:
  2791                           
  2792                           ;interface_main.c: 261:                 displayMode = displayMode+1;
  2793  06D5  1683               	bsf	3,5	;RP0=1, select bank1
  2794  06D6  1303               	bcf	3,6	;RP1=0, select bank1
  2795  06D7  0864               	movf	main@displayMode^(0+128),w
  2796  06D8  3E01               	addlw	1
  2797  06D9  00E4               	movwf	main@displayMode^(0+128)
  2798  06DA  0865               	movf	(main@displayMode+1)^(0+128),w
  2799  06DB  1803               	skipnc
  2800  06DC  3E01               	addlw	1
  2801  06DD  3E00               	addlw	0
  2802  06DE  00E5               	movwf	(main@displayMode+1)^(0+128)
  2803  06DF                     l3549:
  2804                           
  2805                           ;interface_main.c: 262:                 CCPR1L = 0;
  2806  06DF  1283               	bcf	3,5	;RP0=0, select bank0
  2807  06E0  1303               	bcf	3,6	;RP1=0, select bank0
  2808  06E1  0195               	clrf	21	;volatile
  2809  06E2  2FA1               	goto	l3583
  2810  06E3                     l3551:
  2811  06E3  3004               	movlw	4
  2812  06E4  0664               	xorwf	main@displayMode^(0+128),w
  2813  06E5  0465               	iorwf	(main@displayMode+1)^(0+128),w
  2814  06E6  1D03               	btfss	3,2
  2815  06E7  2EE9               	goto	u3861
  2816  06E8  2EEA               	goto	u3860
  2817  06E9                     u3861:
  2818  06E9  2FA1               	goto	l3583
  2819  06EA                     u3860:
  2820  06EA                     l3553:
  2821                           
  2822                           ;interface_main.c: 267:             RTC_Read_Clock(0);
  2823  06EA  3000               	movlw	0
  2824  06EB  160A  118A  253A  120A  118A  	fcall	_RTC_Read_Clock
  2825                           
  2826                           ;interface_main.c: 268:             I2C_Stop();
  2827  06F0  160A  118A  22BF  120A  118A  	fcall	_I2C_Stop
  2828  06F5                     l3555:
  2829                           
  2830                           ;interface_main.c: 270:             if (alarmFlag == 0){
  2831  06F5  1283               	bcf	3,5	;RP0=0, select bank0
  2832  06F6  1303               	bcf	3,6	;RP1=0, select bank0
  2833  06F7  0866               	movf	_alarmFlag,w
  2834  06F8  0467               	iorwf	_alarmFlag+1,w
  2835  06F9  1D03               	btfss	3,2
  2836  06FA  2EFC               	goto	u3871
  2837  06FB  2EFD               	goto	u3870
  2838  06FC                     u3871:
  2839  06FC  2F09               	goto	l3559
  2840  06FD                     u3870:
  2841  06FD                     l3557:
  2842                           
  2843                           ;interface_main.c: 271:                 alarmTime = sec;
  2844  06FD  1683               	bsf	3,5	;RP0=1, select bank1
  2845  06FE  1303               	bcf	3,6	;RP1=0, select bank1
  2846  06FF  086B               	movf	(_sec+1)^(0+128),w
  2847  0700  00ED               	movwf	(_alarmTime+1)^(0+128)
  2848  0701  086A               	movf	_sec^(0+128),w
  2849  0702  00EC               	movwf	_alarmTime^(0+128)
  2850                           
  2851                           ;interface_main.c: 272:                 alarmFlag = 1;
  2852  0703  3001               	movlw	1
  2853  0704  1283               	bcf	3,5	;RP0=0, select bank0
  2854  0705  1303               	bcf	3,6	;RP1=0, select bank0
  2855  0706  00E6               	movwf	_alarmFlag
  2856  0707  3000               	movlw	0
  2857  0708  00E7               	movwf	_alarmFlag+1
  2858  0709                     l3559:
  2859                           
  2860                           ;interface_main.c: 275:             unsigned tmp = abs(alarmTime - sec);
  2861  0709  1683               	bsf	3,5	;RP0=1, select bank1
  2862  070A  1303               	bcf	3,6	;RP1=0, select bank1
  2863  070B  086A               	movf	_sec^(0+128),w
  2864  070C  026C               	subwf	_alarmTime^(0+128),w
  2865  070D  00F0               	movwf	abs@a
  2866  070E  086B               	movf	(_sec+1)^(0+128),w
  2867  070F  1C03               	skipc
  2868  0710  0A6B               	incf	(_sec+1)^(0+128),w
  2869  0711  026D               	subwf	(_alarmTime+1)^(0+128),w
  2870  0712  00F1               	movwf	abs@a+1
  2871  0713  160A  118A  22DD  120A  118A  	fcall	_abs
  2872  0718  0871               	movf	?_abs+1,w
  2873  0719  1683               	bsf	3,5	;RP0=1, select bank1
  2874  071A  1303               	bcf	3,6	;RP1=0, select bank1
  2875  071B  00E1               	movwf	(main@tmp_744+1)^(0+128)
  2876  071C  0870               	movf	?_abs,w
  2877  071D  00E0               	movwf	main@tmp_744^(0+128)
  2878  071E                     l3561:
  2879                           
  2880                           ;interface_main.c: 277:             if (tmp > 6){
  2881  071E  3000               	movlw	0
  2882  071F  0261               	subwf	(main@tmp_744+1)^(0+128),w
  2883  0720  3007               	movlw	7
  2884  0721  1903               	skipnz
  2885  0722  0260               	subwf	main@tmp_744^(0+128),w
  2886  0723  1C03               	skipc
  2887  0724  2F26               	goto	u3881
  2888  0725  2F27               	goto	u3880
  2889  0726                     u3881:
  2890  0726  2F2D               	goto	l376
  2891  0727                     u3880:
  2892  0727                     l3563:
  2893                           
  2894                           ;interface_main.c: 278:                 tmp -= 6;
  2895  0727  3006               	movlw	6
  2896  0728  02E0               	subwf	main@tmp_744^(0+128),f
  2897  0729  3000               	movlw	0
  2898  072A  1C03               	skipc
  2899  072B  03E1               	decf	(main@tmp_744+1)^(0+128),f
  2900  072C  02E1               	subwf	(main@tmp_744+1)^(0+128),f
  2901  072D                     l376:	
  2902                           ;interface_main.c: 279:             }
  2903                           
  2904                           
  2905                           ;interface_main.c: 282:             if (tmp > 10){
  2906  072D  3000               	movlw	0
  2907  072E  0261               	subwf	(main@tmp_744+1)^(0+128),w
  2908  072F  300B               	movlw	11
  2909  0730  1903               	skipnz
  2910  0731  0260               	subwf	main@tmp_744^(0+128),w
  2911  0732  1C03               	skipc
  2912  0733  2F35               	goto	u3891
  2913  0734  2F36               	goto	u3890
  2914  0735                     u3891:
  2915  0735  2F6E               	goto	l3575
  2916  0736                     u3890:
  2917  0736                     l3565:
  2918                           
  2919                           ;interface_main.c: 283:                 char buffer3[16];;interface_main.c: 284:        
      +                                   sprintf(buffer3, "%s", "RING RING");
  2920  0736  30C0               	movlw	(low (main@buffer3_745| 0))& (0+255)
  2921  0737  1283               	bcf	3,5	;RP0=0, select bank0
  2922  0738  1303               	bcf	3,6	;RP1=0, select bank0
  2923  0739  00A0               	movwf	sprintf@sp
  2924  073A  3000               	movlw	0
  2925  073B  00A1               	movwf	sprintf@sp+1
  2926  073C  30AA               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2927  073D  00DF               	movwf	??_main
  2928  073E  085F               	movf	??_main,w
  2929  073F  00A2               	movwf	sprintf@f
  2930  0740  3056               	movlw	(low ((STR_26-__stringbase)| (0+32768)))& (0+255)
  2931  0741  00A3               	movwf	low ((?_sprintf| 0+3))
  2932  0742  3080               	movlw	128
  2933  0743  00A4               	movwf	(low ((?_sprintf| 0+3))+1)
  2934  0744  120A  118A  2052  120A  118A  	fcall	_sprintf
  2935                           
  2936                           ;interface_main.c: 285:                 LCD_String_xy(0,0,buffer3);
  2937  0749  1283               	bcf	3,5	;RP0=0, select bank0
  2938  074A  1303               	bcf	3,6	;RP1=0, select bank0
  2939  074B  01A0               	clrf	LCD_String_xy@pos
  2940  074C  30C0               	movlw	(low (main@buffer3_745| 0))& (0+255)
  2941  074D  00A1               	movwf	LCD_String_xy@msg
  2942  074E  3000               	movlw	0
  2943  074F  00A2               	movwf	LCD_String_xy@msg+1
  2944  0750  3000               	movlw	0
  2945  0751  160A  118A  249C  120A  118A  	fcall	_LCD_String_xy
  2946  0756                     l3567:
  2947                           
  2948                           ;interface_main.c: 287:                 CCPR1L = 25;
  2949  0756  3019               	movlw	25
  2950  0757  1283               	bcf	3,5	;RP0=0, select bank0
  2951  0758  1303               	bcf	3,6	;RP1=0, select bank0
  2952  0759  0095               	movwf	21	;volatile
  2953  075A                     l3569:
  2954                           
  2955                           ;interface_main.c: 288:                 _delay((unsigned long)((1000)*(8000000/4000.0)))
      +                          ;
  2956  075A  300B               	movlw	11
  2957  075B  1283               	bcf	3,5	;RP0=0, select bank0
  2958  075C  1303               	bcf	3,6	;RP1=0, select bank0
  2959  075D  00E1               	movwf	??_main+2
  2960  075E  3026               	movlw	38
  2961  075F  00E0               	movwf	??_main+1
  2962  0760  305D               	movlw	93
  2963  0761  00DF               	movwf	??_main
  2964  0762                     u3977:
  2965  0762  0BDF               	decfsz	??_main,f
  2966  0763  2F62               	goto	u3977
  2967  0764  0BE0               	decfsz	??_main+1,f
  2968  0765  2F62               	goto	u3977
  2969  0766  0BE1               	decfsz	??_main+2,f
  2970  0767  2F62               	goto	u3977
  2971  0768                     l3571:
  2972                           
  2973                           ;interface_main.c: 289:                 CCPR1L = 0;
  2974  0768  1283               	bcf	3,5	;RP0=0, select bank0
  2975  0769  1303               	bcf	3,6	;RP1=0, select bank0
  2976  076A  0195               	clrf	21	;volatile
  2977  076B                     l3573:
  2978                           
  2979                           ;interface_main.c: 290:                 alarmFlag = 0;
  2980  076B  01E6               	clrf	_alarmFlag
  2981  076C  01E7               	clrf	_alarmFlag+1
  2982                           
  2983                           ;interface_main.c: 291:             }
  2984  076D  2F96               	goto	l3577
  2985  076E                     l3575:
  2986                           
  2987                           ;interface_main.c: 293:                 char buffer3[16];;interface_main.c: 294:        
      +                                   sprintf(buffer3, "Alarm:%d", tmp);
  2988  076E  30D0               	movlw	(low (main@buffer3_748| 0))& (0+255)
  2989  076F  1283               	bcf	3,5	;RP0=0, select bank0
  2990  0770  1303               	bcf	3,6	;RP1=0, select bank0
  2991  0771  00A0               	movwf	sprintf@sp
  2992  0772  3000               	movlw	0
  2993  0773  00A1               	movwf	sprintf@sp+1
  2994  0774  3060               	movlw	(low ((STR_27-__stringbase)| (0+32768)))& (0+255)
  2995  0775  00DF               	movwf	??_main
  2996  0776  085F               	movf	??_main,w
  2997  0777  00A2               	movwf	sprintf@f
  2998  0778  1683               	bsf	3,5	;RP0=1, select bank1
  2999  0779  1303               	bcf	3,6	;RP1=0, select bank1
  3000  077A  0861               	movf	(main@tmp_744+1)^(0+128),w
  3001  077B  1283               	bcf	3,5	;RP0=0, select bank0
  3002  077C  1303               	bcf	3,6	;RP1=0, select bank0
  3003  077D  00A4               	movwf	?_sprintf+4
  3004  077E  1683               	bsf	3,5	;RP0=1, select bank1
  3005  077F  1303               	bcf	3,6	;RP1=0, select bank1
  3006  0780  0860               	movf	main@tmp_744^(0+128),w
  3007  0781  1283               	bcf	3,5	;RP0=0, select bank0
  3008  0782  1303               	bcf	3,6	;RP1=0, select bank0
  3009  0783  00A3               	movwf	?_sprintf+3
  3010  0784  120A  118A  2052  120A  118A  	fcall	_sprintf
  3011                           
  3012                           ;interface_main.c: 295:                 LCD_String_xy(0,0,buffer3);
  3013  0789  1283               	bcf	3,5	;RP0=0, select bank0
  3014  078A  1303               	bcf	3,6	;RP1=0, select bank0
  3015  078B  01A0               	clrf	LCD_String_xy@pos
  3016  078C  30D0               	movlw	(low (main@buffer3_748| 0))& (0+255)
  3017  078D  00A1               	movwf	LCD_String_xy@msg
  3018  078E  3000               	movlw	0
  3019  078F  00A2               	movwf	LCD_String_xy@msg+1
  3020  0790  3000               	movlw	0
  3021  0791  160A  118A  249C  120A  118A  	fcall	_LCD_String_xy
  3022  0796                     l3577:
  3023                           
  3024                           ;interface_main.c: 302:             if(RB5 == 0)
  3025  0796  1283               	bcf	3,5	;RP0=0, select bank0
  3026  0797  1303               	bcf	3,6	;RP1=0, select bank0
  3027  0798  1A86               	btfsc	6,5	;volatile
  3028  0799  2F9B               	goto	u3901
  3029  079A  2F9C               	goto	u3900
  3030  079B                     u3901:
  3031  079B  2FA1               	goto	l3583
  3032  079C                     u3900:
  3033  079C                     l380:
  3034  079C  1E86               	btfss	6,5	;volatile
  3035  079D  2F9F               	goto	u3911
  3036  079E  2FA0               	goto	u3910
  3037  079F                     u3911:
  3038  079F  2F9C               	goto	l380
  3039  07A0                     u3910:
  3040  07A0  2BC1               	goto	l3387
  3041  07A1                     l3583:
  3042                           
  3043                           ;interface_main.c: 309:        _delay((unsigned long)((10)*(8000000/4000.0)));
  3044  07A1  301A               	movlw	26
  3045  07A2  1283               	bcf	3,5	;RP0=0, select bank0
  3046  07A3  1303               	bcf	3,6	;RP1=0, select bank0
  3047  07A4  00E0               	movwf	??_main+1
  3048  07A5  30F7               	movlw	247
  3049  07A6  00DF               	movwf	??_main
  3050  07A7                     u3987:
  3051  07A7  0BDF               	decfsz	??_main,f
  3052  07A8  2FA7               	goto	u3987
  3053  07A9  0BE0               	decfsz	??_main+1,f
  3054  07AA  2FA7               	goto	u3987
  3055  07AB  2FAC               	nop2
  3056  07AC                     l3585:
  3057                           
  3058                           ;interface_main.c: 310:        if(displayMode >= 5)
  3059  07AC  1683               	bsf	3,5	;RP0=1, select bank1
  3060  07AD  1303               	bcf	3,6	;RP1=0, select bank1
  3061  07AE  0865               	movf	(main@displayMode+1)^(0+128),w
  3062  07AF  3A80               	xorlw	128
  3063  07B0  00FF               	movwf	btemp+1
  3064  07B1  3080               	movlw	128
  3065  07B2  027F               	subwf	btemp+1,w
  3066  07B3  1D03               	skipz
  3067  07B4  2FB7               	goto	u3925
  3068  07B5  3005               	movlw	5
  3069  07B6  0264               	subwf	main@displayMode^(0+128),w
  3070  07B7                     u3925:
  3071  07B7  1C03               	skipc
  3072  07B8  2FBA               	goto	u3921
  3073  07B9  2FBB               	goto	u3920
  3074  07BA                     u3921:
  3075  07BA  2B7B               	goto	l3375
  3076  07BB                     u3920:
  3077  07BB  2B77               	goto	l3373
  3078  07BC  120A  118A  2800   	ljmp	start
  3079  07BF                     __end_of_main:
  3080                           
  3081                           	psect	text1
  3082  12DD                     __ptext1:	
  3083 ;; *************** function _abs *****************
  3084 ;; Defined at:
  3085 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\abs.c"
  3086 ;; Parameters:    Size  Location     Type
  3087 ;;  a               2    0[COMMON] int 
  3088 ;; Auto vars:     Size  Location     Type
  3089 ;;		None
  3090 ;; Return value:  Size  Location     Type
  3091 ;;                  2    0[COMMON] int 
  3092 ;; Registers used:
  3093 ;;		wreg, status,2, status,0
  3094 ;; Tracked objects:
  3095 ;;		On entry : 0/0
  3096 ;;		On exit  : 0/0
  3097 ;;		Unchanged: 0/0
  3098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3099 ;;      Params:         2       0       0       0       0
  3100 ;;      Locals:         0       0       0       0       0
  3101 ;;      Temps:          2       0       0       0       0
  3102 ;;      Totals:         4       0       0       0       0
  3103 ;;Total ram usage:        4 bytes
  3104 ;; Hardware stack levels used: 1
  3105 ;; This function calls:
  3106 ;;		Nothing
  3107 ;; This function is called by:
  3108 ;;		_main
  3109 ;; This function uses a non-reentrant model
  3110 ;;
  3111                           
  3112  12DD                     _abs:	
  3113                           ;psect for function _abs
  3114                           
  3115  12DD                     l3303:	
  3116                           ;incstack = 0
  3117                           ; Regs used in _abs: [wreg+status,2+status,0]
  3118                           
  3119  12DD  1FF1               	btfss	abs@a+1,7
  3120  12DE  2AE0               	goto	u3671
  3121  12DF  2AE1               	goto	u3670
  3122  12E0                     u3671:
  3123  12E0  2AED               	goto	l1027
  3124  12E1                     u3670:
  3125  12E1                     l3305:
  3126  12E1  0970               	comf	abs@a,w
  3127  12E2  00F2               	movwf	??_abs
  3128  12E3  0971               	comf	abs@a+1,w
  3129  12E4  00F3               	movwf	??_abs+1
  3130  12E5  0AF2               	incf	??_abs,f
  3131  12E6  1903               	skipnz
  3132  12E7  0AF3               	incf	??_abs+1,f
  3133  12E8  0872               	movf	??_abs,w
  3134  12E9  00F0               	movwf	?_abs
  3135  12EA  0873               	movf	??_abs+1,w
  3136  12EB  00F1               	movwf	?_abs+1
  3137  12EC  2AED               	goto	l1028
  3138  12ED                     l1027:
  3139  12ED                     l1028:
  3140  12ED  0008               	return
  3141  12EE                     __end_of_abs:
  3142                           
  3143                           	psect	text2
  3144  176C                     __ptext2:	
  3145 ;; *************** function _Update_Farenheit *****************
  3146 ;; Defined at:
  3147 ;;		line 8 in file "Temp.c"
  3148 ;; Parameters:    Size  Location     Type
  3149 ;;		None
  3150 ;; Auto vars:     Size  Location     Type
  3151 ;;		None
  3152 ;; Return value:  Size  Location     Type
  3153 ;;                  1    wreg      void 
  3154 ;; Registers used:
  3155 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3156 ;; Tracked objects:
  3157 ;;		On entry : 0/0
  3158 ;;		On exit  : 0/0
  3159 ;;		Unchanged: 0/0
  3160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3161 ;;      Params:         0       0       0       0       0
  3162 ;;      Locals:         0       4       0       0       0
  3163 ;;      Temps:          0       2       0       0       0
  3164 ;;      Totals:         0       6       0       0       0
  3165 ;;Total ram usage:        6 bytes
  3166 ;; Hardware stack levels used: 1
  3167 ;; Hardware stack levels required when called: 2
  3168 ;; This function calls:
  3169 ;;		___fladd
  3170 ;;		___flmul
  3171 ;;		___fltol
  3172 ;;		___xxtofl
  3173 ;; This function is called by:
  3174 ;;		_main
  3175 ;; This function uses a non-reentrant model
  3176 ;;
  3177                           
  3178  176C                     _Update_Farenheit:	
  3179                           ;psect for function _Update_Farenheit
  3180                           
  3181  176C                     l3235:	
  3182                           ;incstack = 0
  3183                           ; Regs used in _Update_Farenheit: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3184                           
  3185                           
  3186                           ;Temp.c: 20:     ADCON0bits.GO = 1;
  3187  176C  1283               	bcf	3,5	;RP0=0, select bank0
  3188  176D  1303               	bcf	3,6	;RP1=0, select bank0
  3189  176E  149F               	bsf	31,1	;volatile
  3190  176F                     l205:	
  3191                           ;Temp.c: 22:     while(ADCON0bits.GO == 1);
  3192                           
  3193  176F  189F               	btfsc	31,1	;volatile
  3194  1770  2F72               	goto	u3651
  3195  1771  2F73               	goto	u3650
  3196  1772                     u3651:
  3197  1772  2F6F               	goto	l205
  3198  1773                     u3650:
  3199  1773                     l3237:
  3200                           
  3201                           ;Temp.c: 25:     result = 0x0000;
  3202  1773  01ED               	clrf	_result
  3203  1774  01EE               	clrf	_result+1
  3204  1775                     l3239:
  3205                           
  3206                           ;Temp.c: 26:     result = ADRESH;
  3207  1775  081E               	movf	30,w	;volatile
  3208  1776  00D9               	movwf	??_Update_Farenheit
  3209  1777  01DA               	clrf	??_Update_Farenheit+1
  3210  1778  0859               	movf	??_Update_Farenheit,w
  3211  1779  00ED               	movwf	_result
  3212  177A  085A               	movf	??_Update_Farenheit+1,w
  3213  177B  00EE               	movwf	_result+1
  3214  177C                     l3241:
  3215                           
  3216                           ;Temp.c: 27:     result = result << 8;
  3217  177C  086D               	movf	_result,w
  3218  177D  00DA               	movwf	??_Update_Farenheit+1
  3219  177E  01D9               	clrf	??_Update_Farenheit
  3220  177F  0859               	movf	??_Update_Farenheit,w
  3221  1780  00ED               	movwf	_result
  3222  1781  085A               	movf	??_Update_Farenheit+1,w
  3223  1782  00EE               	movwf	_result+1
  3224  1783                     l3243:
  3225                           
  3226                           ;Temp.c: 28:     result = result | ADRESL;
  3227  1783  086D               	movf	_result,w
  3228  1784  1683               	bsf	3,5	;RP0=1, select bank1
  3229  1785  1303               	bcf	3,6	;RP1=0, select bank1
  3230  1786  041E               	iorwf	30,w	;volatile
  3231  1787  1283               	bcf	3,5	;RP0=0, select bank0
  3232  1788  1303               	bcf	3,6	;RP1=0, select bank0
  3233  1789  00D9               	movwf	??_Update_Farenheit
  3234  178A  086E               	movf	_result+1,w
  3235  178B  00DA               	movwf	??_Update_Farenheit+1
  3236  178C  0859               	movf	??_Update_Farenheit,w
  3237  178D  00ED               	movwf	_result
  3238  178E  085A               	movf	??_Update_Farenheit+1,w
  3239  178F  00EE               	movwf	_result+1
  3240  1790                     l3245:
  3241                           
  3242                           ;Temp.c: 29:     temperature_f = .32640625*result -67+64;
  3243  1790  086D               	movf	_result,w
  3244  1791  00F0               	movwf	___xxtofl@val
  3245  1792  086E               	movf	_result+1,w
  3246  1793  00F1               	movwf	___xxtofl@val+1
  3247  1794  01F2               	clrf	___xxtofl@val+2
  3248  1795  01F3               	clrf	___xxtofl@val+3
  3249  1796  3000               	movlw	0
  3250  1797  120A  158A  215D  160A  118A  	fcall	___xxtofl
  3251  179C  0873               	movf	?___xxtofl+3,w
  3252  179D  1283               	bcf	3,5	;RP0=0, select bank0
  3253  179E  1303               	bcf	3,6	;RP1=0, select bank0
  3254  179F  00A7               	movwf	___flmul@a+3
  3255  17A0  0872               	movf	?___xxtofl+2,w
  3256  17A1  00A6               	movwf	___flmul@a+2
  3257  17A2  0871               	movf	?___xxtofl+1,w
  3258  17A3  00A5               	movwf	___flmul@a+1
  3259  17A4  0870               	movf	?___xxtofl,w
  3260  17A5  00A4               	movwf	___flmul@a
  3261  17A6  303E               	movlw	62
  3262  17A7  00A3               	movwf	___flmul@b+3
  3263  17A8  30A7               	movlw	167
  3264  17A9  00A2               	movwf	___flmul@b+2
  3265  17AA  301E               	movlw	30
  3266  17AB  00A1               	movwf	___flmul@b+1
  3267  17AC  30B8               	movlw	184
  3268  17AD  00A0               	movwf	___flmul@b
  3269  17AE  120A  158A  249F  160A  118A  	fcall	___flmul
  3270  17B3  1283               	bcf	3,5	;RP0=0, select bank0
  3271  17B4  1303               	bcf	3,6	;RP1=0, select bank0
  3272  17B5  0823               	movf	?___flmul+3,w
  3273  17B6  00C1               	movwf	___fladd@a+3
  3274  17B7  0822               	movf	?___flmul+2,w
  3275  17B8  00C0               	movwf	___fladd@a+2
  3276  17B9  0821               	movf	?___flmul+1,w
  3277  17BA  00BF               	movwf	___fladd@a+1
  3278  17BB  0820               	movf	?___flmul,w
  3279  17BC  00BE               	movwf	___fladd@a
  3280  17BD  30C2               	movlw	194
  3281  17BE  00BD               	movwf	___fladd@b+3
  3282  17BF  3086               	movlw	134
  3283  17C0  00BC               	movwf	___fladd@b+2
  3284  17C1  3000               	movlw	0
  3285  17C2  00BB               	movwf	___fladd@b+1
  3286  17C3  3000               	movlw	0
  3287  17C4  00BA               	movwf	___fladd@b
  3288  17C5  120A  158A  2217  160A  118A  	fcall	___fladd
  3289  17CA  1283               	bcf	3,5	;RP0=0, select bank0
  3290  17CB  1303               	bcf	3,6	;RP1=0, select bank0
  3291  17CC  083D               	movf	?___fladd+3,w
  3292  17CD  00DE               	movwf	_Update_Farenheit$1439+3
  3293  17CE  083C               	movf	?___fladd+2,w
  3294  17CF  00DD               	movwf	_Update_Farenheit$1439+2
  3295  17D0  083B               	movf	?___fladd+1,w
  3296  17D1  00DC               	movwf	_Update_Farenheit$1439+1
  3297  17D2  083A               	movf	?___fladd,w
  3298  17D3  00DB               	movwf	_Update_Farenheit$1439
  3299  17D4                     l3247:
  3300                           
  3301                           ;Temp.c: 29:     temperature_f = .32640625*result -67+64;
  3302  17D4  085E               	movf	_Update_Farenheit$1439+3,w
  3303  17D5  00C1               	movwf	___fladd@a+3
  3304  17D6  085D               	movf	_Update_Farenheit$1439+2,w
  3305  17D7  00C0               	movwf	___fladd@a+2
  3306  17D8  085C               	movf	_Update_Farenheit$1439+1,w
  3307  17D9  00BF               	movwf	___fladd@a+1
  3308  17DA  085B               	movf	_Update_Farenheit$1439,w
  3309  17DB  00BE               	movwf	___fladd@a
  3310  17DC  3042               	movlw	66
  3311  17DD  00BD               	movwf	___fladd@b+3
  3312  17DE  3080               	movlw	128
  3313  17DF  00BC               	movwf	___fladd@b+2
  3314  17E0  3000               	movlw	0
  3315  17E1  00BB               	movwf	___fladd@b+1
  3316  17E2  3000               	movlw	0
  3317  17E3  00BA               	movwf	___fladd@b
  3318  17E4  120A  158A  2217  160A  118A  	fcall	___fladd
  3319  17E9  1283               	bcf	3,5	;RP0=0, select bank0
  3320  17EA  1303               	bcf	3,6	;RP1=0, select bank0
  3321  17EB  083D               	movf	?___fladd+3,w
  3322  17EC  00D1               	movwf	___fltol@f1+3
  3323  17ED  083C               	movf	?___fladd+2,w
  3324  17EE  00D0               	movwf	___fltol@f1+2
  3325  17EF  083B               	movf	?___fladd+1,w
  3326  17F0  00CF               	movwf	___fltol@f1+1
  3327  17F1  083A               	movf	?___fladd,w
  3328  17F2  00CE               	movwf	___fltol@f1
  3329  17F3  160A  118A  2669  160A  118A  	fcall	___fltol
  3330  17F8  1283               	bcf	3,5	;RP0=0, select bank0
  3331  17F9  1303               	bcf	3,6	;RP1=0, select bank0
  3332  17FA  084F               	movf	?___fltol+1,w
  3333  17FB  00E9               	movwf	_temperature_f+1
  3334  17FC  084E               	movf	?___fltol,w
  3335  17FD  00E8               	movwf	_temperature_f
  3336  17FE                     l3249:
  3337                           
  3338                           ;Temp.c: 31:     PIR1bits.ADIF = 0;
  3339  17FE  130C               	bcf	12,6	;volatile
  3340  17FF                     l208:
  3341  17FF  0008               	return
  3342  1800                     __end_of_Update_Farenheit:
  3343                           
  3344                           	psect	text3
  3345  08C3                     __ptext3:	
  3346 ;; *************** function _Update_Celsius *****************
  3347 ;; Defined at:
  3348 ;;		line 37 in file "Temp.c"
  3349 ;; Parameters:    Size  Location     Type
  3350 ;;		None
  3351 ;; Auto vars:     Size  Location     Type
  3352 ;;		None
  3353 ;; Return value:  Size  Location     Type
  3354 ;;                  1    wreg      void 
  3355 ;; Registers used:
  3356 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3357 ;; Tracked objects:
  3358 ;;		On entry : 0/0
  3359 ;;		On exit  : 0/0
  3360 ;;		Unchanged: 0/0
  3361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3362 ;;      Params:         0       0       0       0       0
  3363 ;;      Locals:         0       4       0       0       0
  3364 ;;      Temps:          0       2       0       0       0
  3365 ;;      Totals:         0       6       0       0       0
  3366 ;;Total ram usage:        6 bytes
  3367 ;; Hardware stack levels used: 1
  3368 ;; Hardware stack levels required when called: 2
  3369 ;; This function calls:
  3370 ;;		___fladd
  3371 ;;		___flmul
  3372 ;;		___fltol
  3373 ;;		___xxtofl
  3374 ;; This function is called by:
  3375 ;;		_main
  3376 ;; This function uses a non-reentrant model
  3377 ;;
  3378                           
  3379  08C3                     _Update_Celsius:	
  3380                           ;psect for function _Update_Celsius
  3381                           
  3382  08C3                     l3251:	
  3383                           ;incstack = 0
  3384                           ; Regs used in _Update_Celsius: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3385                           
  3386                           
  3387                           ;Temp.c: 40:     ADCON0bits.GO = 1;
  3388  08C3  1283               	bcf	3,5	;RP0=0, select bank0
  3389  08C4  1303               	bcf	3,6	;RP1=0, select bank0
  3390  08C5  149F               	bsf	31,1	;volatile
  3391  08C6                     l211:	
  3392                           ;Temp.c: 42:     while(ADCON0bits.GO == 1);
  3393                           
  3394  08C6  189F               	btfsc	31,1	;volatile
  3395  08C7  28C9               	goto	u3661
  3396  08C8  28CA               	goto	u3660
  3397  08C9                     u3661:
  3398  08C9  28C6               	goto	l211
  3399  08CA                     u3660:
  3400  08CA                     l3253:
  3401                           
  3402                           ;Temp.c: 45:     result = 0x0000;
  3403  08CA  01ED               	clrf	_result
  3404  08CB  01EE               	clrf	_result+1
  3405  08CC                     l3255:
  3406                           
  3407                           ;Temp.c: 46:     result = ADRESH;
  3408  08CC  081E               	movf	30,w	;volatile
  3409  08CD  00D9               	movwf	??_Update_Celsius
  3410  08CE  01DA               	clrf	??_Update_Celsius+1
  3411  08CF  0859               	movf	??_Update_Celsius,w
  3412  08D0  00ED               	movwf	_result
  3413  08D1  085A               	movf	??_Update_Celsius+1,w
  3414  08D2  00EE               	movwf	_result+1
  3415  08D3                     l3257:
  3416                           
  3417                           ;Temp.c: 47:     result = result << 8;
  3418  08D3  086D               	movf	_result,w
  3419  08D4  00DA               	movwf	??_Update_Celsius+1
  3420  08D5  01D9               	clrf	??_Update_Celsius
  3421  08D6  0859               	movf	??_Update_Celsius,w
  3422  08D7  00ED               	movwf	_result
  3423  08D8  085A               	movf	??_Update_Celsius+1,w
  3424  08D9  00EE               	movwf	_result+1
  3425  08DA                     l3259:
  3426                           
  3427                           ;Temp.c: 48:     result = result | ADRESL;
  3428  08DA  086D               	movf	_result,w
  3429  08DB  1683               	bsf	3,5	;RP0=1, select bank1
  3430  08DC  1303               	bcf	3,6	;RP1=0, select bank1
  3431  08DD  041E               	iorwf	30,w	;volatile
  3432  08DE  1283               	bcf	3,5	;RP0=0, select bank0
  3433  08DF  1303               	bcf	3,6	;RP1=0, select bank0
  3434  08E0  00D9               	movwf	??_Update_Celsius
  3435  08E1  086E               	movf	_result+1,w
  3436  08E2  00DA               	movwf	??_Update_Celsius+1
  3437  08E3  0859               	movf	??_Update_Celsius,w
  3438  08E4  00ED               	movwf	_result
  3439  08E5  085A               	movf	??_Update_Celsius+1,w
  3440  08E6  00EE               	movwf	_result+1
  3441  08E7                     l3261:
  3442                           
  3443                           ;Temp.c: 50:     PIR1bits.ADIF = 0;
  3444  08E7  130C               	bcf	12,6	;volatile
  3445  08E8                     l3263:
  3446                           
  3447                           ;Temp.c: 51:     temperature_c = .17578125*result - 55+35;
  3448  08E8  086D               	movf	_result,w
  3449  08E9  00F0               	movwf	___xxtofl@val
  3450  08EA  086E               	movf	_result+1,w
  3451  08EB  00F1               	movwf	___xxtofl@val+1
  3452  08EC  01F2               	clrf	___xxtofl@val+2
  3453  08ED  01F3               	clrf	___xxtofl@val+3
  3454  08EE  3000               	movlw	0
  3455  08EF  120A  158A  215D  120A  158A  	fcall	___xxtofl
  3456  08F4  0873               	movf	?___xxtofl+3,w
  3457  08F5  1283               	bcf	3,5	;RP0=0, select bank0
  3458  08F6  1303               	bcf	3,6	;RP1=0, select bank0
  3459  08F7  00A7               	movwf	___flmul@a+3
  3460  08F8  0872               	movf	?___xxtofl+2,w
  3461  08F9  00A6               	movwf	___flmul@a+2
  3462  08FA  0871               	movf	?___xxtofl+1,w
  3463  08FB  00A5               	movwf	___flmul@a+1
  3464  08FC  0870               	movf	?___xxtofl,w
  3465  08FD  00A4               	movwf	___flmul@a
  3466  08FE  303E               	movlw	62
  3467  08FF  00A3               	movwf	___flmul@b+3
  3468  0900  3034               	movlw	52
  3469  0901  00A2               	movwf	___flmul@b+2
  3470  0902  3000               	movlw	0
  3471  0903  00A1               	movwf	___flmul@b+1
  3472  0904  3000               	movlw	0
  3473  0905  00A0               	movwf	___flmul@b
  3474  0906  120A  158A  249F  120A  158A  	fcall	___flmul
  3475  090B  1283               	bcf	3,5	;RP0=0, select bank0
  3476  090C  1303               	bcf	3,6	;RP1=0, select bank0
  3477  090D  0823               	movf	?___flmul+3,w
  3478  090E  00C1               	movwf	___fladd@a+3
  3479  090F  0822               	movf	?___flmul+2,w
  3480  0910  00C0               	movwf	___fladd@a+2
  3481  0911  0821               	movf	?___flmul+1,w
  3482  0912  00BF               	movwf	___fladd@a+1
  3483  0913  0820               	movf	?___flmul,w
  3484  0914  00BE               	movwf	___fladd@a
  3485  0915  30C2               	movlw	194
  3486  0916  00BD               	movwf	___fladd@b+3
  3487  0917  305C               	movlw	92
  3488  0918  00BC               	movwf	___fladd@b+2
  3489  0919  3000               	movlw	0
  3490  091A  00BB               	movwf	___fladd@b+1
  3491  091B  3000               	movlw	0
  3492  091C  00BA               	movwf	___fladd@b
  3493  091D  120A  158A  2217  120A  158A  	fcall	___fladd
  3494  0922  1283               	bcf	3,5	;RP0=0, select bank0
  3495  0923  1303               	bcf	3,6	;RP1=0, select bank0
  3496  0924  083D               	movf	?___fladd+3,w
  3497  0925  00DE               	movwf	_Update_Celsius$1440+3
  3498  0926  083C               	movf	?___fladd+2,w
  3499  0927  00DD               	movwf	_Update_Celsius$1440+2
  3500  0928  083B               	movf	?___fladd+1,w
  3501  0929  00DC               	movwf	_Update_Celsius$1440+1
  3502  092A  083A               	movf	?___fladd,w
  3503  092B  00DB               	movwf	_Update_Celsius$1440
  3504  092C                     l3265:
  3505                           
  3506                           ;Temp.c: 51:     temperature_c = .17578125*result - 55+35;
  3507  092C  085E               	movf	_Update_Celsius$1440+3,w
  3508  092D  00C1               	movwf	___fladd@a+3
  3509  092E  085D               	movf	_Update_Celsius$1440+2,w
  3510  092F  00C0               	movwf	___fladd@a+2
  3511  0930  085C               	movf	_Update_Celsius$1440+1,w
  3512  0931  00BF               	movwf	___fladd@a+1
  3513  0932  085B               	movf	_Update_Celsius$1440,w
  3514  0933  00BE               	movwf	___fladd@a
  3515  0934  3042               	movlw	66
  3516  0935  00BD               	movwf	___fladd@b+3
  3517  0936  300C               	movlw	12
  3518  0937  00BC               	movwf	___fladd@b+2
  3519  0938  3000               	movlw	0
  3520  0939  00BB               	movwf	___fladd@b+1
  3521  093A  3000               	movlw	0
  3522  093B  00BA               	movwf	___fladd@b
  3523  093C  120A  158A  2217  120A  158A  	fcall	___fladd
  3524  0941  1283               	bcf	3,5	;RP0=0, select bank0
  3525  0942  1303               	bcf	3,6	;RP1=0, select bank0
  3526  0943  083D               	movf	?___fladd+3,w
  3527  0944  00D1               	movwf	___fltol@f1+3
  3528  0945  083C               	movf	?___fladd+2,w
  3529  0946  00D0               	movwf	___fltol@f1+2
  3530  0947  083B               	movf	?___fladd+1,w
  3531  0948  00CF               	movwf	___fltol@f1+1
  3532  0949  083A               	movf	?___fladd,w
  3533  094A  00CE               	movwf	___fltol@f1
  3534  094B  160A  118A  2669  120A  158A  	fcall	___fltol
  3535  0950  1283               	bcf	3,5	;RP0=0, select bank0
  3536  0951  1303               	bcf	3,6	;RP1=0, select bank0
  3537  0952  084F               	movf	?___fltol+1,w
  3538  0953  00EB               	movwf	_temperature_c+1
  3539  0954  084E               	movf	?___fltol,w
  3540  0955  00EA               	movwf	_temperature_c
  3541  0956                     l3267:
  3542                           
  3543                           ;Temp.c: 53:     Temp_Mode = 1;
  3544  0956  3001               	movlw	1
  3545  0957  1683               	bsf	3,5	;RP0=1, select bank3
  3546  0958  1703               	bsf	3,6	;RP1=1, select bank3
  3547  0959  0094               	movwf	_Temp_Mode^(0+384)
  3548  095A  3000               	movlw	0
  3549  095B  0095               	movwf	(_Temp_Mode^(0+384)+1)
  3550  095C                     l214:
  3551  095C  0008               	return
  3552  095D                     __end_of_Update_Celsius:
  3553                           
  3554                           	psect	text4
  3555  095D                     __ptext4:	
  3556 ;; *************** function ___xxtofl *****************
  3557 ;; Defined at:
  3558 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\xxtofl.c"
  3559 ;; Parameters:    Size  Location     Type
  3560 ;;  sign            1    wreg     unsigned char 
  3561 ;;  val             4    0[COMMON] long 
  3562 ;; Auto vars:     Size  Location     Type
  3563 ;;  sign            1    8[COMMON] unsigned char 
  3564 ;;  arg             4   10[COMMON] unsigned long 
  3565 ;;  exp             1    9[COMMON] unsigned char 
  3566 ;; Return value:  Size  Location     Type
  3567 ;;                  4    0[COMMON] unsigned char 
  3568 ;; Registers used:
  3569 ;;		wreg, status,2, status,0
  3570 ;; Tracked objects:
  3571 ;;		On entry : 0/0
  3572 ;;		On exit  : 0/0
  3573 ;;		Unchanged: 0/0
  3574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3575 ;;      Params:         4       0       0       0       0
  3576 ;;      Locals:         6       0       0       0       0
  3577 ;;      Temps:          4       0       0       0       0
  3578 ;;      Totals:        14       0       0       0       0
  3579 ;;Total ram usage:       14 bytes
  3580 ;; Hardware stack levels used: 1
  3581 ;; This function calls:
  3582 ;;		Nothing
  3583 ;; This function is called by:
  3584 ;;		_Update_Farenheit
  3585 ;;		_Update_Celsius
  3586 ;; This function uses a non-reentrant model
  3587 ;;
  3588                           
  3589  095D                     ___xxtofl:	
  3590                           ;psect for function ___xxtofl
  3591                           
  3592                           
  3593                           ;incstack = 0
  3594                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  3595                           ;___xxtofl@sign stored from wreg
  3596  095D  00F8               	movwf	___xxtofl@sign
  3597  095E                     l3135:
  3598  095E  0878               	movf	___xxtofl@sign,w
  3599  095F  1903               	btfsc	3,2
  3600  0960  2962               	goto	u3501
  3601  0961  2963               	goto	u3500
  3602  0962                     u3501:
  3603  0962  2977               	goto	l3141
  3604  0963                     u3500:
  3605  0963                     l3137:
  3606  0963  1FF3               	btfss	___xxtofl@val+3,7
  3607  0964  2966               	goto	u3511
  3608  0965  2967               	goto	u3510
  3609  0966                     u3511:
  3610  0966  2977               	goto	l3141
  3611  0967                     u3510:
  3612  0967                     l3139:
  3613  0967  0970               	comf	___xxtofl@val,w
  3614  0968  00FA               	movwf	___xxtofl@arg
  3615  0969  0971               	comf	___xxtofl@val+1,w
  3616  096A  00FB               	movwf	___xxtofl@arg+1
  3617  096B  0972               	comf	___xxtofl@val+2,w
  3618  096C  00FC               	movwf	___xxtofl@arg+2
  3619  096D  0973               	comf	___xxtofl@val+3,w
  3620  096E  00FD               	movwf	___xxtofl@arg+3
  3621  096F  0AFA               	incf	___xxtofl@arg,f
  3622  0970  1903               	skipnz
  3623  0971  0AFB               	incf	___xxtofl@arg+1,f
  3624  0972  1903               	skipnz
  3625  0973  0AFC               	incf	___xxtofl@arg+2,f
  3626  0974  1903               	skipnz
  3627  0975  0AFD               	incf	___xxtofl@arg+3,f
  3628  0976  297F               	goto	l1009
  3629  0977                     l3141:
  3630  0977  0873               	movf	___xxtofl@val+3,w
  3631  0978  00FD               	movwf	___xxtofl@arg+3
  3632  0979  0872               	movf	___xxtofl@val+2,w
  3633  097A  00FC               	movwf	___xxtofl@arg+2
  3634  097B  0871               	movf	___xxtofl@val+1,w
  3635  097C  00FB               	movwf	___xxtofl@arg+1
  3636  097D  0870               	movf	___xxtofl@val,w
  3637  097E  00FA               	movwf	___xxtofl@arg
  3638  097F                     l1009:
  3639  097F  0873               	movf	___xxtofl@val+3,w
  3640  0980  0472               	iorwf	___xxtofl@val+2,w
  3641  0981  0471               	iorwf	___xxtofl@val+1,w
  3642  0982  0470               	iorwf	___xxtofl@val,w
  3643  0983  1D03               	skipz
  3644  0984  2986               	goto	u3521
  3645  0985  2987               	goto	u3520
  3646  0986                     u3521:
  3647  0986  2990               	goto	l3147
  3648  0987                     u3520:
  3649  0987                     l3143:
  3650  0987  3000               	movlw	0
  3651  0988  00F3               	movwf	?___xxtofl+3
  3652  0989  3000               	movlw	0
  3653  098A  00F2               	movwf	?___xxtofl+2
  3654  098B  3000               	movlw	0
  3655  098C  00F1               	movwf	?___xxtofl+1
  3656  098D  3000               	movlw	0
  3657  098E  00F0               	movwf	?___xxtofl
  3658  098F  2A16               	goto	l1011
  3659  0990                     l3147:
  3660  0990  3096               	movlw	150
  3661  0991  00F4               	movwf	??___xxtofl
  3662  0992  0874               	movf	??___xxtofl,w
  3663  0993  00F9               	movwf	___xxtofl@exp
  3664  0994  29A2               	goto	l3151
  3665  0995                     l3149:
  3666  0995  3001               	movlw	1
  3667  0996  00F4               	movwf	??___xxtofl
  3668  0997  0874               	movf	??___xxtofl,w
  3669  0998  07F9               	addwf	___xxtofl@exp,f
  3670  0999  3001               	movlw	1
  3671  099A                     u3535:
  3672  099A  1003               	clrc
  3673  099B  0CFD               	rrf	___xxtofl@arg+3,f
  3674  099C  0CFC               	rrf	___xxtofl@arg+2,f
  3675  099D  0CFB               	rrf	___xxtofl@arg+1,f
  3676  099E  0CFA               	rrf	___xxtofl@arg,f
  3677  099F  3EFF               	addlw	-1
  3678  09A0  1D03               	skipz
  3679  09A1  299A               	goto	u3535
  3680  09A2                     l3151:
  3681  09A2  30FE               	movlw	254
  3682  09A3  057D               	andwf	___xxtofl@arg+3,w
  3683  09A4  1D03               	btfss	3,2
  3684  09A5  29A7               	goto	u3541
  3685  09A6  29A8               	goto	u3540
  3686  09A7                     u3541:
  3687  09A7  2995               	goto	l3149
  3688  09A8                     u3540:
  3689  09A8  29C4               	goto	l1015
  3690  09A9                     l3153:
  3691  09A9  3001               	movlw	1
  3692  09AA  00F4               	movwf	??___xxtofl
  3693  09AB  0874               	movf	??___xxtofl,w
  3694  09AC  07F9               	addwf	___xxtofl@exp,f
  3695  09AD                     l3155:
  3696  09AD  3001               	movlw	1
  3697  09AE  07FA               	addwf	___xxtofl@arg,f
  3698  09AF  3000               	movlw	0
  3699  09B0  1803               	skipnc
  3700  09B1  3001               	movlw	1
  3701  09B2  07FB               	addwf	___xxtofl@arg+1,f
  3702  09B3  3000               	movlw	0
  3703  09B4  1803               	skipnc
  3704  09B5  3001               	movlw	1
  3705  09B6  07FC               	addwf	___xxtofl@arg+2,f
  3706  09B7  3000               	movlw	0
  3707  09B8  1803               	skipnc
  3708  09B9  3001               	movlw	1
  3709  09BA  07FD               	addwf	___xxtofl@arg+3,f
  3710  09BB                     l3157:
  3711  09BB  3001               	movlw	1
  3712  09BC                     u3555:
  3713  09BC  1003               	clrc
  3714  09BD  0CFD               	rrf	___xxtofl@arg+3,f
  3715  09BE  0CFC               	rrf	___xxtofl@arg+2,f
  3716  09BF  0CFB               	rrf	___xxtofl@arg+1,f
  3717  09C0  0CFA               	rrf	___xxtofl@arg,f
  3718  09C1  3EFF               	addlw	-1
  3719  09C2  1D03               	skipz
  3720  09C3  29BC               	goto	u3555
  3721  09C4                     l1015:
  3722  09C4  30FF               	movlw	255
  3723  09C5  057D               	andwf	___xxtofl@arg+3,w
  3724  09C6  1D03               	btfss	3,2
  3725  09C7  29C9               	goto	u3561
  3726  09C8  29CA               	goto	u3560
  3727  09C9                     u3561:
  3728  09C9  29A9               	goto	l3153
  3729  09CA                     u3560:
  3730  09CA  29D6               	goto	l3161
  3731  09CB                     l3159:
  3732  09CB  3001               	movlw	1
  3733  09CC  02F9               	subwf	___xxtofl@exp,f
  3734  09CD  3001               	movlw	1
  3735  09CE  00F4               	movwf	??___xxtofl
  3736  09CF                     u3575:
  3737  09CF  1003               	clrc
  3738  09D0  0DFA               	rlf	___xxtofl@arg,f
  3739  09D1  0DFB               	rlf	___xxtofl@arg+1,f
  3740  09D2  0DFC               	rlf	___xxtofl@arg+2,f
  3741  09D3  0DFD               	rlf	___xxtofl@arg+3,f
  3742  09D4  0BF4               	decfsz	??___xxtofl,f
  3743  09D5  29CF               	goto	u3575
  3744  09D6                     l3161:
  3745  09D6  1BFC               	btfsc	___xxtofl@arg+2,7
  3746  09D7  29D9               	goto	u3581
  3747  09D8  29DA               	goto	u3580
  3748  09D9                     u3581:
  3749  09D9  29E0               	goto	l1022
  3750  09DA                     u3580:
  3751  09DA                     l3163:
  3752  09DA  3002               	movlw	2
  3753  09DB  0279               	subwf	___xxtofl@exp,w
  3754  09DC  1803               	skipnc
  3755  09DD  29DF               	goto	u3591
  3756  09DE  29E0               	goto	u3590
  3757  09DF                     u3591:
  3758  09DF  29CB               	goto	l3159
  3759  09E0                     u3590:
  3760  09E0                     l1022:
  3761  09E0  1879               	btfsc	___xxtofl@exp,0
  3762  09E1  29E3               	goto	u3601
  3763  09E2  29E4               	goto	u3600
  3764  09E3                     u3601:
  3765  09E3  29EC               	goto	l1023
  3766  09E4                     u3600:
  3767  09E4                     l3165:
  3768  09E4  30FF               	movlw	255
  3769  09E5  05FA               	andwf	___xxtofl@arg,f
  3770  09E6  30FF               	movlw	255
  3771  09E7  05FB               	andwf	___xxtofl@arg+1,f
  3772  09E8  307F               	movlw	127
  3773  09E9  05FC               	andwf	___xxtofl@arg+2,f
  3774  09EA  30FF               	movlw	255
  3775  09EB  05FD               	andwf	___xxtofl@arg+3,f
  3776  09EC                     l1023:
  3777  09EC  1003               	clrc
  3778  09ED  0CF9               	rrf	___xxtofl@exp,f
  3779  09EE                     l3167:
  3780  09EE  0879               	movf	___xxtofl@exp,w
  3781  09EF  00F4               	movwf	??___xxtofl
  3782  09F0  01F5               	clrf	??___xxtofl+1
  3783  09F1  01F6               	clrf	??___xxtofl+2
  3784  09F2  01F7               	clrf	??___xxtofl+3
  3785  09F3  3018               	movlw	24
  3786  09F4                     u3615:
  3787  09F4  1003               	clrc
  3788  09F5  0DF4               	rlf	??___xxtofl,f
  3789  09F6  0DF5               	rlf	??___xxtofl+1,f
  3790  09F7  0DF6               	rlf	??___xxtofl+2,f
  3791  09F8  0DF7               	rlf	??___xxtofl+3,f
  3792  09F9                     u3610:
  3793  09F9  3EFF               	addlw	-1
  3794  09FA  1D03               	skipz
  3795  09FB  29F4               	goto	u3615
  3796  09FC  0874               	movf	??___xxtofl,w
  3797  09FD  04FA               	iorwf	___xxtofl@arg,f
  3798  09FE  0875               	movf	??___xxtofl+1,w
  3799  09FF  04FB               	iorwf	___xxtofl@arg+1,f
  3800  0A00  0876               	movf	??___xxtofl+2,w
  3801  0A01  04FC               	iorwf	___xxtofl@arg+2,f
  3802  0A02  0877               	movf	??___xxtofl+3,w
  3803  0A03  04FD               	iorwf	___xxtofl@arg+3,f
  3804  0A04                     l3169:
  3805  0A04  0878               	movf	___xxtofl@sign,w
  3806  0A05  1903               	btfsc	3,2
  3807  0A06  2A08               	goto	u3621
  3808  0A07  2A09               	goto	u3620
  3809  0A08                     u3621:
  3810  0A08  2A0E               	goto	l3175
  3811  0A09                     u3620:
  3812  0A09                     l3171:
  3813  0A09  1FF3               	btfss	___xxtofl@val+3,7
  3814  0A0A  2A0C               	goto	u3631
  3815  0A0B  2A0D               	goto	u3630
  3816  0A0C                     u3631:
  3817  0A0C  2A0E               	goto	l3175
  3818  0A0D                     u3630:
  3819  0A0D                     l3173:
  3820  0A0D  17FD               	bsf	___xxtofl@arg+3,7
  3821  0A0E                     l3175:
  3822  0A0E  087D               	movf	___xxtofl@arg+3,w
  3823  0A0F  00F3               	movwf	?___xxtofl+3
  3824  0A10  087C               	movf	___xxtofl@arg+2,w
  3825  0A11  00F2               	movwf	?___xxtofl+2
  3826  0A12  087B               	movf	___xxtofl@arg+1,w
  3827  0A13  00F1               	movwf	?___xxtofl+1
  3828  0A14  087A               	movf	___xxtofl@arg,w
  3829  0A15  00F0               	movwf	?___xxtofl
  3830  0A16                     l1011:
  3831  0A16  0008               	return
  3832  0A17                     __end_of___xxtofl:
  3833                           
  3834                           	psect	text5
  3835  1669                     __ptext5:	
  3836 ;; *************** function ___fltol *****************
  3837 ;; Defined at:
  3838 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\fltol.c"
  3839 ;; Parameters:    Size  Location     Type
  3840 ;;  f1              4   46[BANK0 ] unsigned char 
  3841 ;; Auto vars:     Size  Location     Type
  3842 ;;  exp1            1   56[BANK0 ] unsigned char 
  3843 ;;  sign1           1   55[BANK0 ] unsigned char 
  3844 ;; Return value:  Size  Location     Type
  3845 ;;                  4   46[BANK0 ] long 
  3846 ;; Registers used:
  3847 ;;		wreg, status,2, status,0
  3848 ;; Tracked objects:
  3849 ;;		On entry : 0/0
  3850 ;;		On exit  : 0/0
  3851 ;;		Unchanged: 0/0
  3852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3853 ;;      Params:         0       4       0       0       0
  3854 ;;      Locals:         0       2       0       0       0
  3855 ;;      Temps:          0       5       0       0       0
  3856 ;;      Totals:         0      11       0       0       0
  3857 ;;Total ram usage:       11 bytes
  3858 ;; Hardware stack levels used: 1
  3859 ;; This function calls:
  3860 ;;		Nothing
  3861 ;; This function is called by:
  3862 ;;		_Update_Farenheit
  3863 ;;		_Update_Celsius
  3864 ;; This function uses a non-reentrant model
  3865 ;;
  3866                           
  3867  1669                     ___fltol:	
  3868                           ;psect for function ___fltol
  3869                           
  3870  1669                     l2765:	
  3871                           ;incstack = 0
  3872                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  3873                           
  3874  1669  1003               	clrc
  3875  166A  1283               	bcf	3,5	;RP0=0, select bank0
  3876  166B  1303               	bcf	3,6	;RP1=0, select bank0
  3877  166C  0D50               	rlf	___fltol@f1+2,w
  3878  166D  0D51               	rlf	___fltol@f1+3,w
  3879  166E  00D2               	movwf	??___fltol
  3880  166F  0852               	movf	??___fltol,w
  3881  1670  00D8               	movwf	___fltol@exp1
  3882  1671  0858               	movf	___fltol@exp1,w
  3883  1672  1D03               	btfss	3,2
  3884  1673  2E75               	goto	u2571
  3885  1674  2E76               	goto	u2570
  3886  1675                     u2571:
  3887  1675  2E7F               	goto	l2771
  3888  1676                     u2570:
  3889  1676                     l2767:
  3890  1676  3000               	movlw	0
  3891  1677  00D1               	movwf	?___fltol+3
  3892  1678  3000               	movlw	0
  3893  1679  00D0               	movwf	?___fltol+2
  3894  167A  3000               	movlw	0
  3895  167B  00CF               	movwf	?___fltol+1
  3896  167C  3000               	movlw	0
  3897  167D  00CE               	movwf	?___fltol
  3898  167E  2EE4               	goto	l762
  3899  167F                     l2771:
  3900  167F  084E               	movf	___fltol@f1,w
  3901  1680  00D2               	movwf	??___fltol
  3902  1681  084F               	movf	___fltol@f1+1,w
  3903  1682  00D3               	movwf	??___fltol+1
  3904  1683  0850               	movf	___fltol@f1+2,w
  3905  1684  00D4               	movwf	??___fltol+2
  3906  1685  0851               	movf	___fltol@f1+3,w
  3907  1686  00D5               	movwf	??___fltol+3
  3908  1687  301F               	movlw	31
  3909  1688                     u2585:
  3910  1688  1003               	clrc
  3911  1689  0CD5               	rrf	??___fltol+3,f
  3912  168A  0CD4               	rrf	??___fltol+2,f
  3913  168B  0CD3               	rrf	??___fltol+1,f
  3914  168C  0CD2               	rrf	??___fltol,f
  3915  168D                     u2580:
  3916  168D  3EFF               	addlw	-1
  3917  168E  1D03               	skipz
  3918  168F  2E88               	goto	u2585
  3919  1690  0852               	movf	??___fltol,w
  3920  1691  00D6               	movwf	??___fltol+4
  3921  1692  0856               	movf	??___fltol+4,w
  3922  1693  00D7               	movwf	___fltol@sign1
  3923  1694                     l2773:
  3924  1694  17D0               	bsf	___fltol@f1+2,7
  3925  1695                     l2775:
  3926  1695  30FF               	movlw	255
  3927  1696  05CE               	andwf	___fltol@f1,f
  3928  1697  30FF               	movlw	255
  3929  1698  05CF               	andwf	___fltol@f1+1,f
  3930  1699  30FF               	movlw	255
  3931  169A  05D0               	andwf	___fltol@f1+2,f
  3932  169B  3000               	movlw	0
  3933  169C  05D1               	andwf	___fltol@f1+3,f
  3934  169D                     l2777:
  3935  169D  3096               	movlw	150
  3936  169E  02D8               	subwf	___fltol@exp1,f
  3937  169F                     l2779:
  3938  169F  1FD8               	btfss	___fltol@exp1,7
  3939  16A0  2EA2               	goto	u2591
  3940  16A1  2EA3               	goto	u2590
  3941  16A2                     u2591:
  3942  16A2  2EBD               	goto	l2789
  3943  16A3                     u2590:
  3944  16A3                     l2781:
  3945  16A3  0858               	movf	___fltol@exp1,w
  3946  16A4  3A80               	xorlw	128
  3947  16A5  3E97               	addlw	151
  3948  16A6  1803               	skipnc
  3949  16A7  2EA9               	goto	u2601
  3950  16A8  2EAA               	goto	u2600
  3951  16A9                     u2601:
  3952  16A9  2EAB               	goto	l2787
  3953  16AA                     u2600:
  3954  16AA  2E76               	goto	l2767
  3955  16AB                     l2787:
  3956  16AB  3001               	movlw	1
  3957  16AC                     u2615:
  3958  16AC  1003               	clrc
  3959  16AD  0CD1               	rrf	___fltol@f1+3,f
  3960  16AE  0CD0               	rrf	___fltol@f1+2,f
  3961  16AF  0CCF               	rrf	___fltol@f1+1,f
  3962  16B0  0CCE               	rrf	___fltol@f1,f
  3963  16B1  3EFF               	addlw	-1
  3964  16B2  1D03               	skipz
  3965  16B3  2EAC               	goto	u2615
  3966  16B4  3001               	movlw	1
  3967  16B5  00D2               	movwf	??___fltol
  3968  16B6  0852               	movf	??___fltol,w
  3969  16B7  07D8               	addwf	___fltol@exp1,f
  3970  16B8  1D03               	btfss	3,2
  3971  16B9  2EBB               	goto	u2621
  3972  16BA  2EBC               	goto	u2620
  3973  16BB                     u2621:
  3974  16BB  2EAB               	goto	l2787
  3975  16BC                     u2620:
  3976  16BC  2ED4               	goto	l2797
  3977  16BD                     l2789:
  3978  16BD  3020               	movlw	32
  3979  16BE  0258               	subwf	___fltol@exp1,w
  3980  16BF  1C03               	skipc
  3981  16C0  2EC2               	goto	u2631
  3982  16C1  2EC3               	goto	u2630
  3983  16C2                     u2631:
  3984  16C2  2ECF               	goto	l769
  3985  16C3                     u2630:
  3986  16C3  2E76               	goto	l2767
  3987  16C4                     l2795:
  3988  16C4  3001               	movlw	1
  3989  16C5  00D2               	movwf	??___fltol
  3990  16C6                     u2645:
  3991  16C6  1003               	clrc
  3992  16C7  0DCE               	rlf	___fltol@f1,f
  3993  16C8  0DCF               	rlf	___fltol@f1+1,f
  3994  16C9  0DD0               	rlf	___fltol@f1+2,f
  3995  16CA  0DD1               	rlf	___fltol@f1+3,f
  3996  16CB  0BD2               	decfsz	??___fltol,f
  3997  16CC  2EC6               	goto	u2645
  3998  16CD  3001               	movlw	1
  3999  16CE  02D8               	subwf	___fltol@exp1,f
  4000  16CF                     l769:
  4001  16CF  0858               	movf	___fltol@exp1,w
  4002  16D0  1D03               	btfss	3,2
  4003  16D1  2ED3               	goto	u2651
  4004  16D2  2ED4               	goto	u2650
  4005  16D3                     u2651:
  4006  16D3  2EC4               	goto	l2795
  4007  16D4                     u2650:
  4008  16D4                     l2797:
  4009  16D4  0857               	movf	___fltol@sign1,w
  4010  16D5  1903               	btfsc	3,2
  4011  16D6  2ED8               	goto	u2661
  4012  16D7  2ED9               	goto	u2660
  4013  16D8                     u2661:
  4014  16D8  2EE4               	goto	l772
  4015  16D9                     u2660:
  4016  16D9                     l2799:
  4017  16D9  09CE               	comf	___fltol@f1,f
  4018  16DA  09CF               	comf	___fltol@f1+1,f
  4019  16DB  09D0               	comf	___fltol@f1+2,f
  4020  16DC  09D1               	comf	___fltol@f1+3,f
  4021  16DD  0ACE               	incf	___fltol@f1,f
  4022  16DE  1903               	skipnz
  4023  16DF  0ACF               	incf	___fltol@f1+1,f
  4024  16E0  1903               	skipnz
  4025  16E1  0AD0               	incf	___fltol@f1+2,f
  4026  16E2  1903               	skipnz
  4027  16E3  0AD1               	incf	___fltol@f1+3,f
  4028  16E4                     l772:
  4029  16E4                     l762:
  4030  16E4  0008               	return
  4031  16E5                     __end_of___fltol:
  4032                           
  4033                           	psect	text6
  4034  0C9F                     __ptext6:	
  4035 ;; *************** function ___flmul *****************
  4036 ;; Defined at:
  4037 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\sprcmul.c"
  4038 ;; Parameters:    Size  Location     Type
  4039 ;;  b               4    0[BANK0 ] long 
  4040 ;;  a               4    4[BANK0 ] long 
  4041 ;; Auto vars:     Size  Location     Type
  4042 ;;  prod            4   20[BANK0 ] struct .
  4043 ;;  grs             4   14[BANK0 ] unsigned long 
  4044 ;;  temp            2   24[BANK0 ] struct .
  4045 ;;  bexp            1   19[BANK0 ] unsigned char 
  4046 ;;  aexp            1   18[BANK0 ] unsigned char 
  4047 ;;  sign            1   13[BANK0 ] unsigned char 
  4048 ;; Return value:  Size  Location     Type
  4049 ;;                  4    0[BANK0 ] unsigned char 
  4050 ;; Registers used:
  4051 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4052 ;; Tracked objects:
  4053 ;;		On entry : 0/0
  4054 ;;		On exit  : 0/0
  4055 ;;		Unchanged: 0/0
  4056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4057 ;;      Params:         0       8       0       0       0
  4058 ;;      Locals:         0      13       0       0       0
  4059 ;;      Temps:          0       5       0       0       0
  4060 ;;      Totals:         0      26       0       0       0
  4061 ;;Total ram usage:       26 bytes
  4062 ;; Hardware stack levels used: 1
  4063 ;; Hardware stack levels required when called: 1
  4064 ;; This function calls:
  4065 ;;		__Umul8_16
  4066 ;; This function is called by:
  4067 ;;		_Update_Farenheit
  4068 ;;		_Update_Celsius
  4069 ;; This function uses a non-reentrant model
  4070 ;;
  4071                           
  4072  0C9F                     ___flmul:	
  4073                           ;psect for function ___flmul
  4074                           
  4075  0C9F                     l2995:	
  4076                           ;incstack = 0
  4077                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4078                           
  4079  0C9F  1283               	bcf	3,5	;RP0=0, select bank0
  4080  0CA0  1303               	bcf	3,6	;RP1=0, select bank0
  4081  0CA1  0823               	movf	___flmul@b+3,w
  4082  0CA2  3980               	andlw	128
  4083  0CA3  00A8               	movwf	??___flmul
  4084  0CA4  0828               	movf	??___flmul,w
  4085  0CA5  00AD               	movwf	___flmul@sign
  4086  0CA6                     l2997:
  4087  0CA6  0823               	movf	___flmul@b+3,w
  4088  0CA7  00A8               	movwf	??___flmul
  4089  0CA8  0728               	addwf	??___flmul,w
  4090  0CA9  00A9               	movwf	??___flmul+1
  4091  0CAA  0829               	movf	??___flmul+1,w
  4092  0CAB  00B3               	movwf	___flmul@bexp
  4093  0CAC                     l2999:
  4094  0CAC  1FA2               	btfss	___flmul@b+2,7
  4095  0CAD  2CAF               	goto	u3131
  4096  0CAE  2CB0               	goto	u3130
  4097  0CAF                     u3131:
  4098  0CAF  2CB1               	goto	l3003
  4099  0CB0                     u3130:
  4100  0CB0                     l3001:
  4101  0CB0  1433               	bsf	___flmul@bexp,0
  4102  0CB1                     l3003:
  4103  0CB1  0833               	movf	___flmul@bexp,w
  4104  0CB2  1903               	btfsc	3,2
  4105  0CB3  2CB5               	goto	u3141
  4106  0CB4  2CB6               	goto	u3140
  4107  0CB5                     u3141:
  4108  0CB5  2CC5               	goto	l3011
  4109  0CB6                     u3140:
  4110  0CB6                     l3005:
  4111  0CB6  0A33               	incf	___flmul@bexp,w
  4112  0CB7  1D03               	btfss	3,2
  4113  0CB8  2CBA               	goto	u3151
  4114  0CB9  2CBB               	goto	u3150
  4115  0CBA                     u3151:
  4116  0CBA  2CC3               	goto	l3009
  4117  0CBB                     u3150:
  4118  0CBB                     l3007:
  4119  0CBB  3000               	movlw	0
  4120  0CBC  00A3               	movwf	___flmul@b+3
  4121  0CBD  3000               	movlw	0
  4122  0CBE  00A2               	movwf	___flmul@b+2
  4123  0CBF  3000               	movlw	0
  4124  0CC0  00A1               	movwf	___flmul@b+1
  4125  0CC1  3000               	movlw	0
  4126  0CC2  00A0               	movwf	___flmul@b
  4127  0CC3                     l3009:
  4128  0CC3  17A2               	bsf	___flmul@b+2,7
  4129  0CC4  2CCD               	goto	l3013
  4130  0CC5                     l3011:
  4131  0CC5  3000               	movlw	0
  4132  0CC6  00A3               	movwf	___flmul@b+3
  4133  0CC7  3000               	movlw	0
  4134  0CC8  00A2               	movwf	___flmul@b+2
  4135  0CC9  3000               	movlw	0
  4136  0CCA  00A1               	movwf	___flmul@b+1
  4137  0CCB  3000               	movlw	0
  4138  0CCC  00A0               	movwf	___flmul@b
  4139  0CCD                     l3013:
  4140  0CCD  0827               	movf	___flmul@a+3,w
  4141  0CCE  3980               	andlw	128
  4142  0CCF  00A8               	movwf	??___flmul
  4143  0CD0  0828               	movf	??___flmul,w
  4144  0CD1  06AD               	xorwf	___flmul@sign,f
  4145  0CD2                     l3015:
  4146  0CD2  0827               	movf	___flmul@a+3,w
  4147  0CD3  00A8               	movwf	??___flmul
  4148  0CD4  0728               	addwf	??___flmul,w
  4149  0CD5  00A9               	movwf	??___flmul+1
  4150  0CD6  0829               	movf	??___flmul+1,w
  4151  0CD7  00B2               	movwf	___flmul@aexp
  4152  0CD8                     l3017:
  4153  0CD8  1FA6               	btfss	___flmul@a+2,7
  4154  0CD9  2CDB               	goto	u3161
  4155  0CDA  2CDC               	goto	u3160
  4156  0CDB                     u3161:
  4157  0CDB  2CDD               	goto	l3021
  4158  0CDC                     u3160:
  4159  0CDC                     l3019:
  4160  0CDC  1432               	bsf	___flmul@aexp,0
  4161  0CDD                     l3021:
  4162  0CDD  0832               	movf	___flmul@aexp,w
  4163  0CDE  1903               	btfsc	3,2
  4164  0CDF  2CE1               	goto	u3171
  4165  0CE0  2CE2               	goto	u3170
  4166  0CE1                     u3171:
  4167  0CE1  2CF1               	goto	l3029
  4168  0CE2                     u3170:
  4169  0CE2                     l3023:
  4170  0CE2  0A32               	incf	___flmul@aexp,w
  4171  0CE3  1D03               	btfss	3,2
  4172  0CE4  2CE6               	goto	u3181
  4173  0CE5  2CE7               	goto	u3180
  4174  0CE6                     u3181:
  4175  0CE6  2CEF               	goto	l3027
  4176  0CE7                     u3180:
  4177  0CE7                     l3025:
  4178  0CE7  3000               	movlw	0
  4179  0CE8  00A7               	movwf	___flmul@a+3
  4180  0CE9  3000               	movlw	0
  4181  0CEA  00A6               	movwf	___flmul@a+2
  4182  0CEB  3000               	movlw	0
  4183  0CEC  00A5               	movwf	___flmul@a+1
  4184  0CED  3000               	movlw	0
  4185  0CEE  00A4               	movwf	___flmul@a
  4186  0CEF                     l3027:
  4187  0CEF  17A6               	bsf	___flmul@a+2,7
  4188  0CF0  2CF9               	goto	l3031
  4189  0CF1                     l3029:
  4190  0CF1  3000               	movlw	0
  4191  0CF2  00A7               	movwf	___flmul@a+3
  4192  0CF3  3000               	movlw	0
  4193  0CF4  00A6               	movwf	___flmul@a+2
  4194  0CF5  3000               	movlw	0
  4195  0CF6  00A5               	movwf	___flmul@a+1
  4196  0CF7  3000               	movlw	0
  4197  0CF8  00A4               	movwf	___flmul@a
  4198  0CF9                     l3031:
  4199  0CF9  0832               	movf	___flmul@aexp,w
  4200  0CFA  1903               	btfsc	3,2
  4201  0CFB  2CFD               	goto	u3191
  4202  0CFC  2CFE               	goto	u3190
  4203  0CFD                     u3191:
  4204  0CFD  2D03               	goto	l3035
  4205  0CFE                     u3190:
  4206  0CFE                     l3033:
  4207  0CFE  0833               	movf	___flmul@bexp,w
  4208  0CFF  1D03               	btfss	3,2
  4209  0D00  2D02               	goto	u3201
  4210  0D01  2D03               	goto	u3200
  4211  0D02                     u3201:
  4212  0D02  2D0C               	goto	l3039
  4213  0D03                     u3200:
  4214  0D03                     l3035:
  4215  0D03  3000               	movlw	0
  4216  0D04  00A3               	movwf	?___flmul+3
  4217  0D05  3000               	movlw	0
  4218  0D06  00A2               	movwf	?___flmul+2
  4219  0D07  3000               	movlw	0
  4220  0D08  00A1               	movwf	?___flmul+1
  4221  0D09  3000               	movlw	0
  4222  0D0A  00A0               	movwf	?___flmul
  4223  0D0B  2FFF               	goto	l965
  4224  0D0C                     l3039:
  4225  0D0C  0820               	movf	___flmul@b,w
  4226  0D0D  00A8               	movwf	??___flmul
  4227  0D0E  0828               	movf	??___flmul,w
  4228  0D0F  00F0               	movwf	__Umul8_16@multiplicand
  4229  0D10  0826               	movf	___flmul@a+2,w
  4230  0D11  160A  118A  2420  120A  158A  	fcall	__Umul8_16
  4231  0D16  0871               	movf	?__Umul8_16+1,w
  4232  0D17  1283               	bcf	3,5	;RP0=0, select bank0
  4233  0D18  1303               	bcf	3,6	;RP1=0, select bank0
  4234  0D19  00B9               	movwf	___flmul@temp+1
  4235  0D1A  0870               	movf	?__Umul8_16,w
  4236  0D1B  00B8               	movwf	___flmul@temp
  4237  0D1C                     l3041:
  4238  0D1C  0838               	movf	___flmul@temp,w
  4239  0D1D  00A8               	movwf	??___flmul
  4240  0D1E  01A9               	clrf	??___flmul+1
  4241  0D1F  01AA               	clrf	??___flmul+2
  4242  0D20  01AB               	clrf	??___flmul+3
  4243  0D21  082B               	movf	??___flmul+3,w
  4244  0D22  00B1               	movwf	___flmul@grs+3
  4245  0D23  082A               	movf	??___flmul+2,w
  4246  0D24  00B0               	movwf	___flmul@grs+2
  4247  0D25  0829               	movf	??___flmul+1,w
  4248  0D26  00AF               	movwf	___flmul@grs+1
  4249  0D27  0828               	movf	??___flmul,w
  4250  0D28  00AE               	movwf	___flmul@grs
  4251  0D29                     l3043:
  4252  0D29  0839               	movf	___flmul@temp+1,w
  4253  0D2A  00A8               	movwf	??___flmul
  4254  0D2B  01A9               	clrf	??___flmul+1
  4255  0D2C  01AA               	clrf	??___flmul+2
  4256  0D2D  01AB               	clrf	??___flmul+3
  4257  0D2E  082B               	movf	??___flmul+3,w
  4258  0D2F  00B7               	movwf	___flmul@prod+3
  4259  0D30  082A               	movf	??___flmul+2,w
  4260  0D31  00B6               	movwf	___flmul@prod+2
  4261  0D32  0829               	movf	??___flmul+1,w
  4262  0D33  00B5               	movwf	___flmul@prod+1
  4263  0D34  0828               	movf	??___flmul,w
  4264  0D35  00B4               	movwf	___flmul@prod
  4265  0D36  0821               	movf	___flmul@b+1,w
  4266  0D37  00A8               	movwf	??___flmul
  4267  0D38  0828               	movf	??___flmul,w
  4268  0D39  00F0               	movwf	__Umul8_16@multiplicand
  4269  0D3A  0825               	movf	___flmul@a+1,w
  4270  0D3B  160A  118A  2420  120A  158A  	fcall	__Umul8_16
  4271  0D40  0871               	movf	?__Umul8_16+1,w
  4272  0D41  1283               	bcf	3,5	;RP0=0, select bank0
  4273  0D42  1303               	bcf	3,6	;RP1=0, select bank0
  4274  0D43  00B9               	movwf	___flmul@temp+1
  4275  0D44  0870               	movf	?__Umul8_16,w
  4276  0D45  00B8               	movwf	___flmul@temp
  4277  0D46                     l3045:
  4278  0D46  0838               	movf	___flmul@temp,w
  4279  0D47  00A8               	movwf	??___flmul
  4280  0D48  01A9               	clrf	??___flmul+1
  4281  0D49  01AA               	clrf	??___flmul+2
  4282  0D4A  01AB               	clrf	??___flmul+3
  4283  0D4B  0828               	movf	??___flmul,w
  4284  0D4C  07AE               	addwf	___flmul@grs,f
  4285  0D4D  0829               	movf	??___flmul+1,w
  4286  0D4E  1103               	clrz
  4287  0D4F  1803               	skipnc
  4288  0D50  3E01               	addlw	1
  4289  0D51  1903               	skipnz
  4290  0D52  2D54               	goto	u3211
  4291  0D53  07AF               	addwf	___flmul@grs+1,f
  4292  0D54                     u3211:
  4293  0D54  082A               	movf	??___flmul+2,w
  4294  0D55  1103               	clrz
  4295  0D56  1803               	skipnc
  4296  0D57  3E01               	addlw	1
  4297  0D58  1903               	skipnz
  4298  0D59  2D5B               	goto	u3212
  4299  0D5A  07B0               	addwf	___flmul@grs+2,f
  4300  0D5B                     u3212:
  4301  0D5B  082B               	movf	??___flmul+3,w
  4302  0D5C  1103               	clrz
  4303  0D5D  1803               	skipnc
  4304  0D5E  3E01               	addlw	1
  4305  0D5F  1903               	skipnz
  4306  0D60  2D62               	goto	u3213
  4307  0D61  07B1               	addwf	___flmul@grs+3,f
  4308  0D62                     u3213:
  4309  0D62                     l3047:
  4310  0D62  0839               	movf	___flmul@temp+1,w
  4311  0D63  00A8               	movwf	??___flmul
  4312  0D64  01A9               	clrf	??___flmul+1
  4313  0D65  01AA               	clrf	??___flmul+2
  4314  0D66  01AB               	clrf	??___flmul+3
  4315  0D67  0828               	movf	??___flmul,w
  4316  0D68  07B4               	addwf	___flmul@prod,f
  4317  0D69  0829               	movf	??___flmul+1,w
  4318  0D6A  1103               	clrz
  4319  0D6B  1803               	skipnc
  4320  0D6C  3E01               	addlw	1
  4321  0D6D  1903               	skipnz
  4322  0D6E  2D70               	goto	u3221
  4323  0D6F  07B5               	addwf	___flmul@prod+1,f
  4324  0D70                     u3221:
  4325  0D70  082A               	movf	??___flmul+2,w
  4326  0D71  1103               	clrz
  4327  0D72  1803               	skipnc
  4328  0D73  3E01               	addlw	1
  4329  0D74  1903               	skipnz
  4330  0D75  2D77               	goto	u3222
  4331  0D76  07B6               	addwf	___flmul@prod+2,f
  4332  0D77                     u3222:
  4333  0D77  082B               	movf	??___flmul+3,w
  4334  0D78  1103               	clrz
  4335  0D79  1803               	skipnc
  4336  0D7A  3E01               	addlw	1
  4337  0D7B  1903               	skipnz
  4338  0D7C  2D7E               	goto	u3223
  4339  0D7D  07B7               	addwf	___flmul@prod+3,f
  4340  0D7E                     u3223:
  4341  0D7E  0822               	movf	___flmul@b+2,w
  4342  0D7F  00A8               	movwf	??___flmul
  4343  0D80  0828               	movf	??___flmul,w
  4344  0D81  00F0               	movwf	__Umul8_16@multiplicand
  4345  0D82  0824               	movf	___flmul@a,w
  4346  0D83  160A  118A  2420  120A  158A  	fcall	__Umul8_16
  4347  0D88  0871               	movf	?__Umul8_16+1,w
  4348  0D89  1283               	bcf	3,5	;RP0=0, select bank0
  4349  0D8A  1303               	bcf	3,6	;RP1=0, select bank0
  4350  0D8B  00B9               	movwf	___flmul@temp+1
  4351  0D8C  0870               	movf	?__Umul8_16,w
  4352  0D8D  00B8               	movwf	___flmul@temp
  4353  0D8E                     l3049:
  4354  0D8E  0838               	movf	___flmul@temp,w
  4355  0D8F  00A8               	movwf	??___flmul
  4356  0D90  01A9               	clrf	??___flmul+1
  4357  0D91  01AA               	clrf	??___flmul+2
  4358  0D92  01AB               	clrf	??___flmul+3
  4359  0D93  0828               	movf	??___flmul,w
  4360  0D94  07AE               	addwf	___flmul@grs,f
  4361  0D95  0829               	movf	??___flmul+1,w
  4362  0D96  1103               	clrz
  4363  0D97  1803               	skipnc
  4364  0D98  3E01               	addlw	1
  4365  0D99  1903               	skipnz
  4366  0D9A  2D9C               	goto	u3231
  4367  0D9B  07AF               	addwf	___flmul@grs+1,f
  4368  0D9C                     u3231:
  4369  0D9C  082A               	movf	??___flmul+2,w
  4370  0D9D  1103               	clrz
  4371  0D9E  1803               	skipnc
  4372  0D9F  3E01               	addlw	1
  4373  0DA0  1903               	skipnz
  4374  0DA1  2DA3               	goto	u3232
  4375  0DA2  07B0               	addwf	___flmul@grs+2,f
  4376  0DA3                     u3232:
  4377  0DA3  082B               	movf	??___flmul+3,w
  4378  0DA4  1103               	clrz
  4379  0DA5  1803               	skipnc
  4380  0DA6  3E01               	addlw	1
  4381  0DA7  1903               	skipnz
  4382  0DA8  2DAA               	goto	u3233
  4383  0DA9  07B1               	addwf	___flmul@grs+3,f
  4384  0DAA                     u3233:
  4385  0DAA                     l3051:
  4386  0DAA  0839               	movf	___flmul@temp+1,w
  4387  0DAB  00A8               	movwf	??___flmul
  4388  0DAC  01A9               	clrf	??___flmul+1
  4389  0DAD  01AA               	clrf	??___flmul+2
  4390  0DAE  01AB               	clrf	??___flmul+3
  4391  0DAF  0828               	movf	??___flmul,w
  4392  0DB0  07B4               	addwf	___flmul@prod,f
  4393  0DB1  0829               	movf	??___flmul+1,w
  4394  0DB2  1103               	clrz
  4395  0DB3  1803               	skipnc
  4396  0DB4  3E01               	addlw	1
  4397  0DB5  1903               	skipnz
  4398  0DB6  2DB8               	goto	u3241
  4399  0DB7  07B5               	addwf	___flmul@prod+1,f
  4400  0DB8                     u3241:
  4401  0DB8  082A               	movf	??___flmul+2,w
  4402  0DB9  1103               	clrz
  4403  0DBA  1803               	skipnc
  4404  0DBB  3E01               	addlw	1
  4405  0DBC  1903               	skipnz
  4406  0DBD  2DBF               	goto	u3242
  4407  0DBE  07B6               	addwf	___flmul@prod+2,f
  4408  0DBF                     u3242:
  4409  0DBF  082B               	movf	??___flmul+3,w
  4410  0DC0  1103               	clrz
  4411  0DC1  1803               	skipnc
  4412  0DC2  3E01               	addlw	1
  4413  0DC3  1903               	skipnz
  4414  0DC4  2DC6               	goto	u3243
  4415  0DC5  07B7               	addwf	___flmul@prod+3,f
  4416  0DC6                     u3243:
  4417  0DC6                     l3053:
  4418  0DC6  3008               	movlw	8
  4419  0DC7  00A8               	movwf	??___flmul
  4420  0DC8                     u3255:
  4421  0DC8  1003               	clrc
  4422  0DC9  0DAE               	rlf	___flmul@grs,f
  4423  0DCA  0DAF               	rlf	___flmul@grs+1,f
  4424  0DCB  0DB0               	rlf	___flmul@grs+2,f
  4425  0DCC  0DB1               	rlf	___flmul@grs+3,f
  4426  0DCD  0BA8               	decfsz	??___flmul,f
  4427  0DCE  2DC8               	goto	u3255
  4428  0DCF                     l3055:
  4429  0DCF  0821               	movf	___flmul@b+1,w
  4430  0DD0  00A8               	movwf	??___flmul
  4431  0DD1  0828               	movf	??___flmul,w
  4432  0DD2  00F0               	movwf	__Umul8_16@multiplicand
  4433  0DD3  0824               	movf	___flmul@a,w
  4434  0DD4  160A  118A  2420  120A  158A  	fcall	__Umul8_16
  4435  0DD9  0871               	movf	?__Umul8_16+1,w
  4436  0DDA  1283               	bcf	3,5	;RP0=0, select bank0
  4437  0DDB  1303               	bcf	3,6	;RP1=0, select bank0
  4438  0DDC  00B9               	movwf	___flmul@temp+1
  4439  0DDD  0870               	movf	?__Umul8_16,w
  4440  0DDE  00B8               	movwf	___flmul@temp
  4441  0DDF                     l3057:
  4442  0DDF  0838               	movf	___flmul@temp,w
  4443  0DE0  00A8               	movwf	??___flmul
  4444  0DE1  0839               	movf	___flmul@temp+1,w
  4445  0DE2  00A9               	movwf	??___flmul+1
  4446  0DE3  01AA               	clrf	??___flmul+2
  4447  0DE4  01AB               	clrf	??___flmul+3
  4448  0DE5  0828               	movf	??___flmul,w
  4449  0DE6  07AE               	addwf	___flmul@grs,f
  4450  0DE7  0829               	movf	??___flmul+1,w
  4451  0DE8  1103               	clrz
  4452  0DE9  1803               	skipnc
  4453  0DEA  3E01               	addlw	1
  4454  0DEB  1903               	skipnz
  4455  0DEC  2DEE               	goto	u3261
  4456  0DED  07AF               	addwf	___flmul@grs+1,f
  4457  0DEE                     u3261:
  4458  0DEE  082A               	movf	??___flmul+2,w
  4459  0DEF  1103               	clrz
  4460  0DF0  1803               	skipnc
  4461  0DF1  3E01               	addlw	1
  4462  0DF2  1903               	skipnz
  4463  0DF3  2DF5               	goto	u3262
  4464  0DF4  07B0               	addwf	___flmul@grs+2,f
  4465  0DF5                     u3262:
  4466  0DF5  082B               	movf	??___flmul+3,w
  4467  0DF6  1103               	clrz
  4468  0DF7  1803               	skipnc
  4469  0DF8  3E01               	addlw	1
  4470  0DF9  1903               	skipnz
  4471  0DFA  2DFC               	goto	u3263
  4472  0DFB  07B1               	addwf	___flmul@grs+3,f
  4473  0DFC                     u3263:
  4474  0DFC                     l3059:
  4475  0DFC  0820               	movf	___flmul@b,w
  4476  0DFD  00A8               	movwf	??___flmul
  4477  0DFE  0828               	movf	??___flmul,w
  4478  0DFF  00F0               	movwf	__Umul8_16@multiplicand
  4479  0E00  0825               	movf	___flmul@a+1,w
  4480  0E01  160A  118A  2420  120A  158A  	fcall	__Umul8_16
  4481  0E06  0871               	movf	?__Umul8_16+1,w
  4482  0E07  1283               	bcf	3,5	;RP0=0, select bank0
  4483  0E08  1303               	bcf	3,6	;RP1=0, select bank0
  4484  0E09  00B9               	movwf	___flmul@temp+1
  4485  0E0A  0870               	movf	?__Umul8_16,w
  4486  0E0B  00B8               	movwf	___flmul@temp
  4487  0E0C                     l3061:
  4488  0E0C  0838               	movf	___flmul@temp,w
  4489  0E0D  00A8               	movwf	??___flmul
  4490  0E0E  0839               	movf	___flmul@temp+1,w
  4491  0E0F  00A9               	movwf	??___flmul+1
  4492  0E10  01AA               	clrf	??___flmul+2
  4493  0E11  01AB               	clrf	??___flmul+3
  4494  0E12  0828               	movf	??___flmul,w
  4495  0E13  07AE               	addwf	___flmul@grs,f
  4496  0E14  0829               	movf	??___flmul+1,w
  4497  0E15  1103               	clrz
  4498  0E16  1803               	skipnc
  4499  0E17  3E01               	addlw	1
  4500  0E18  1903               	skipnz
  4501  0E19  2E1B               	goto	u3271
  4502  0E1A  07AF               	addwf	___flmul@grs+1,f
  4503  0E1B                     u3271:
  4504  0E1B  082A               	movf	??___flmul+2,w
  4505  0E1C  1103               	clrz
  4506  0E1D  1803               	skipnc
  4507  0E1E  3E01               	addlw	1
  4508  0E1F  1903               	skipnz
  4509  0E20  2E22               	goto	u3272
  4510  0E21  07B0               	addwf	___flmul@grs+2,f
  4511  0E22                     u3272:
  4512  0E22  082B               	movf	??___flmul+3,w
  4513  0E23  1103               	clrz
  4514  0E24  1803               	skipnc
  4515  0E25  3E01               	addlw	1
  4516  0E26  1903               	skipnz
  4517  0E27  2E29               	goto	u3273
  4518  0E28  07B1               	addwf	___flmul@grs+3,f
  4519  0E29                     u3273:
  4520  0E29                     l3063:
  4521  0E29  3008               	movlw	8
  4522  0E2A  00A8               	movwf	??___flmul
  4523  0E2B                     u3285:
  4524  0E2B  1003               	clrc
  4525  0E2C  0DAE               	rlf	___flmul@grs,f
  4526  0E2D  0DAF               	rlf	___flmul@grs+1,f
  4527  0E2E  0DB0               	rlf	___flmul@grs+2,f
  4528  0E2F  0DB1               	rlf	___flmul@grs+3,f
  4529  0E30  0BA8               	decfsz	??___flmul,f
  4530  0E31  2E2B               	goto	u3285
  4531  0E32  0820               	movf	___flmul@b,w
  4532  0E33  00A8               	movwf	??___flmul
  4533  0E34  0828               	movf	??___flmul,w
  4534  0E35  00F0               	movwf	__Umul8_16@multiplicand
  4535  0E36  0824               	movf	___flmul@a,w
  4536  0E37  160A  118A  2420  120A  158A  	fcall	__Umul8_16
  4537  0E3C  0871               	movf	?__Umul8_16+1,w
  4538  0E3D  1283               	bcf	3,5	;RP0=0, select bank0
  4539  0E3E  1303               	bcf	3,6	;RP1=0, select bank0
  4540  0E3F  00B9               	movwf	___flmul@temp+1
  4541  0E40  0870               	movf	?__Umul8_16,w
  4542  0E41  00B8               	movwf	___flmul@temp
  4543  0E42                     l3065:
  4544  0E42  0838               	movf	___flmul@temp,w
  4545  0E43  00A8               	movwf	??___flmul
  4546  0E44  0839               	movf	___flmul@temp+1,w
  4547  0E45  00A9               	movwf	??___flmul+1
  4548  0E46  01AA               	clrf	??___flmul+2
  4549  0E47  01AB               	clrf	??___flmul+3
  4550  0E48  0828               	movf	??___flmul,w
  4551  0E49  07AE               	addwf	___flmul@grs,f
  4552  0E4A  0829               	movf	??___flmul+1,w
  4553  0E4B  1103               	clrz
  4554  0E4C  1803               	skipnc
  4555  0E4D  3E01               	addlw	1
  4556  0E4E  1903               	skipnz
  4557  0E4F  2E51               	goto	u3291
  4558  0E50  07AF               	addwf	___flmul@grs+1,f
  4559  0E51                     u3291:
  4560  0E51  082A               	movf	??___flmul+2,w
  4561  0E52  1103               	clrz
  4562  0E53  1803               	skipnc
  4563  0E54  3E01               	addlw	1
  4564  0E55  1903               	skipnz
  4565  0E56  2E58               	goto	u3292
  4566  0E57  07B0               	addwf	___flmul@grs+2,f
  4567  0E58                     u3292:
  4568  0E58  082B               	movf	??___flmul+3,w
  4569  0E59  1103               	clrz
  4570  0E5A  1803               	skipnc
  4571  0E5B  3E01               	addlw	1
  4572  0E5C  1903               	skipnz
  4573  0E5D  2E5F               	goto	u3293
  4574  0E5E  07B1               	addwf	___flmul@grs+3,f
  4575  0E5F                     u3293:
  4576  0E5F                     l3067:
  4577  0E5F  0821               	movf	___flmul@b+1,w
  4578  0E60  00A8               	movwf	??___flmul
  4579  0E61  0828               	movf	??___flmul,w
  4580  0E62  00F0               	movwf	__Umul8_16@multiplicand
  4581  0E63  0826               	movf	___flmul@a+2,w
  4582  0E64  160A  118A  2420  120A  158A  	fcall	__Umul8_16
  4583  0E69  0871               	movf	?__Umul8_16+1,w
  4584  0E6A  1283               	bcf	3,5	;RP0=0, select bank0
  4585  0E6B  1303               	bcf	3,6	;RP1=0, select bank0
  4586  0E6C  00B9               	movwf	___flmul@temp+1
  4587  0E6D  0870               	movf	?__Umul8_16,w
  4588  0E6E  00B8               	movwf	___flmul@temp
  4589  0E6F  0838               	movf	___flmul@temp,w
  4590  0E70  00A8               	movwf	??___flmul
  4591  0E71  0839               	movf	___flmul@temp+1,w
  4592  0E72  00A9               	movwf	??___flmul+1
  4593  0E73  01AA               	clrf	??___flmul+2
  4594  0E74  01AB               	clrf	??___flmul+3
  4595  0E75  0828               	movf	??___flmul,w
  4596  0E76  07B4               	addwf	___flmul@prod,f
  4597  0E77  0829               	movf	??___flmul+1,w
  4598  0E78  1103               	clrz
  4599  0E79  1803               	skipnc
  4600  0E7A  3E01               	addlw	1
  4601  0E7B  1903               	skipnz
  4602  0E7C  2E7E               	goto	u3301
  4603  0E7D  07B5               	addwf	___flmul@prod+1,f
  4604  0E7E                     u3301:
  4605  0E7E  082A               	movf	??___flmul+2,w
  4606  0E7F  1103               	clrz
  4607  0E80  1803               	skipnc
  4608  0E81  3E01               	addlw	1
  4609  0E82  1903               	skipnz
  4610  0E83  2E85               	goto	u3302
  4611  0E84  07B6               	addwf	___flmul@prod+2,f
  4612  0E85                     u3302:
  4613  0E85  082B               	movf	??___flmul+3,w
  4614  0E86  1103               	clrz
  4615  0E87  1803               	skipnc
  4616  0E88  3E01               	addlw	1
  4617  0E89  1903               	skipnz
  4618  0E8A  2E8C               	goto	u3303
  4619  0E8B  07B7               	addwf	___flmul@prod+3,f
  4620  0E8C                     u3303:
  4621  0E8C                     l3069:
  4622  0E8C  0822               	movf	___flmul@b+2,w
  4623  0E8D  00A8               	movwf	??___flmul
  4624  0E8E  0828               	movf	??___flmul,w
  4625  0E8F  00F0               	movwf	__Umul8_16@multiplicand
  4626  0E90  0825               	movf	___flmul@a+1,w
  4627  0E91  160A  118A  2420  120A  158A  	fcall	__Umul8_16
  4628  0E96  0871               	movf	?__Umul8_16+1,w
  4629  0E97  1283               	bcf	3,5	;RP0=0, select bank0
  4630  0E98  1303               	bcf	3,6	;RP1=0, select bank0
  4631  0E99  00B9               	movwf	___flmul@temp+1
  4632  0E9A  0870               	movf	?__Umul8_16,w
  4633  0E9B  00B8               	movwf	___flmul@temp
  4634  0E9C                     l3071:
  4635  0E9C  0838               	movf	___flmul@temp,w
  4636  0E9D  00A8               	movwf	??___flmul
  4637  0E9E  0839               	movf	___flmul@temp+1,w
  4638  0E9F  00A9               	movwf	??___flmul+1
  4639  0EA0  01AA               	clrf	??___flmul+2
  4640  0EA1  01AB               	clrf	??___flmul+3
  4641  0EA2  0828               	movf	??___flmul,w
  4642  0EA3  07B4               	addwf	___flmul@prod,f
  4643  0EA4  0829               	movf	??___flmul+1,w
  4644  0EA5  1103               	clrz
  4645  0EA6  1803               	skipnc
  4646  0EA7  3E01               	addlw	1
  4647  0EA8  1903               	skipnz
  4648  0EA9  2EAB               	goto	u3311
  4649  0EAA  07B5               	addwf	___flmul@prod+1,f
  4650  0EAB                     u3311:
  4651  0EAB  082A               	movf	??___flmul+2,w
  4652  0EAC  1103               	clrz
  4653  0EAD  1803               	skipnc
  4654  0EAE  3E01               	addlw	1
  4655  0EAF  1903               	skipnz
  4656  0EB0  2EB2               	goto	u3312
  4657  0EB1  07B6               	addwf	___flmul@prod+2,f
  4658  0EB2                     u3312:
  4659  0EB2  082B               	movf	??___flmul+3,w
  4660  0EB3  1103               	clrz
  4661  0EB4  1803               	skipnc
  4662  0EB5  3E01               	addlw	1
  4663  0EB6  1903               	skipnz
  4664  0EB7  2EB9               	goto	u3313
  4665  0EB8  07B7               	addwf	___flmul@prod+3,f
  4666  0EB9                     u3313:
  4667  0EB9  0822               	movf	___flmul@b+2,w
  4668  0EBA  00A8               	movwf	??___flmul
  4669  0EBB  0828               	movf	??___flmul,w
  4670  0EBC  00F0               	movwf	__Umul8_16@multiplicand
  4671  0EBD  0826               	movf	___flmul@a+2,w
  4672  0EBE  160A  118A  2420  120A  158A  	fcall	__Umul8_16
  4673  0EC3  0871               	movf	?__Umul8_16+1,w
  4674  0EC4  1283               	bcf	3,5	;RP0=0, select bank0
  4675  0EC5  1303               	bcf	3,6	;RP1=0, select bank0
  4676  0EC6  00B9               	movwf	___flmul@temp+1
  4677  0EC7  0870               	movf	?__Umul8_16,w
  4678  0EC8  00B8               	movwf	___flmul@temp
  4679  0EC9                     l3073:
  4680  0EC9  0838               	movf	___flmul@temp,w
  4681  0ECA  00A8               	movwf	??___flmul
  4682  0ECB  0839               	movf	___flmul@temp+1,w
  4683  0ECC  00A9               	movwf	??___flmul+1
  4684  0ECD  01AA               	clrf	??___flmul+2
  4685  0ECE  01AB               	clrf	??___flmul+3
  4686  0ECF  3008               	movlw	8
  4687  0ED0                     u3325:
  4688  0ED0  1003               	clrc
  4689  0ED1  0DA8               	rlf	??___flmul,f
  4690  0ED2  0DA9               	rlf	??___flmul+1,f
  4691  0ED3  0DAA               	rlf	??___flmul+2,f
  4692  0ED4  0DAB               	rlf	??___flmul+3,f
  4693  0ED5                     u3320:
  4694  0ED5  3EFF               	addlw	-1
  4695  0ED6  1D03               	skipz
  4696  0ED7  2ED0               	goto	u3325
  4697  0ED8  0828               	movf	??___flmul,w
  4698  0ED9  07B4               	addwf	___flmul@prod,f
  4699  0EDA  0829               	movf	??___flmul+1,w
  4700  0EDB  1103               	clrz
  4701  0EDC  1803               	skipnc
  4702  0EDD  3E01               	addlw	1
  4703  0EDE  1903               	skipnz
  4704  0EDF  2EE1               	goto	u3331
  4705  0EE0  07B5               	addwf	___flmul@prod+1,f
  4706  0EE1                     u3331:
  4707  0EE1  082A               	movf	??___flmul+2,w
  4708  0EE2  1103               	clrz
  4709  0EE3  1803               	skipnc
  4710  0EE4  3E01               	addlw	1
  4711  0EE5  1903               	skipnz
  4712  0EE6  2EE8               	goto	u3332
  4713  0EE7  07B6               	addwf	___flmul@prod+2,f
  4714  0EE8                     u3332:
  4715  0EE8  082B               	movf	??___flmul+3,w
  4716  0EE9  1103               	clrz
  4717  0EEA  1803               	skipnc
  4718  0EEB  3E01               	addlw	1
  4719  0EEC  1903               	skipnz
  4720  0EED  2EEF               	goto	u3333
  4721  0EEE  07B7               	addwf	___flmul@prod+3,f
  4722  0EEF                     u3333:
  4723  0EEF                     l3075:
  4724  0EEF  082E               	movf	___flmul@grs,w
  4725  0EF0  00A8               	movwf	??___flmul
  4726  0EF1  082F               	movf	___flmul@grs+1,w
  4727  0EF2  00A9               	movwf	??___flmul+1
  4728  0EF3  0830               	movf	___flmul@grs+2,w
  4729  0EF4  00AA               	movwf	??___flmul+2
  4730  0EF5  0831               	movf	___flmul@grs+3,w
  4731  0EF6  00AB               	movwf	??___flmul+3
  4732  0EF7  3018               	movlw	24
  4733  0EF8                     u3345:
  4734  0EF8  1003               	clrc
  4735  0EF9  0CAB               	rrf	??___flmul+3,f
  4736  0EFA  0CAA               	rrf	??___flmul+2,f
  4737  0EFB  0CA9               	rrf	??___flmul+1,f
  4738  0EFC  0CA8               	rrf	??___flmul,f
  4739  0EFD                     u3340:
  4740  0EFD  3EFF               	addlw	-1
  4741  0EFE  1D03               	skipz
  4742  0EFF  2EF8               	goto	u3345
  4743  0F00  0828               	movf	??___flmul,w
  4744  0F01  07B4               	addwf	___flmul@prod,f
  4745  0F02  0829               	movf	??___flmul+1,w
  4746  0F03  1103               	clrz
  4747  0F04  1803               	skipnc
  4748  0F05  3E01               	addlw	1
  4749  0F06  1903               	skipnz
  4750  0F07  2F09               	goto	u3351
  4751  0F08  07B5               	addwf	___flmul@prod+1,f
  4752  0F09                     u3351:
  4753  0F09  082A               	movf	??___flmul+2,w
  4754  0F0A  1103               	clrz
  4755  0F0B  1803               	skipnc
  4756  0F0C  3E01               	addlw	1
  4757  0F0D  1903               	skipnz
  4758  0F0E  2F10               	goto	u3352
  4759  0F0F  07B6               	addwf	___flmul@prod+2,f
  4760  0F10                     u3352:
  4761  0F10  082B               	movf	??___flmul+3,w
  4762  0F11  1103               	clrz
  4763  0F12  1803               	skipnc
  4764  0F13  3E01               	addlw	1
  4765  0F14  1903               	skipnz
  4766  0F15  2F17               	goto	u3353
  4767  0F16  07B7               	addwf	___flmul@prod+3,f
  4768  0F17                     u3353:
  4769  0F17                     l3077:
  4770  0F17  3008               	movlw	8
  4771  0F18  00A8               	movwf	??___flmul
  4772  0F19                     u3365:
  4773  0F19  1003               	clrc
  4774  0F1A  0DAE               	rlf	___flmul@grs,f
  4775  0F1B  0DAF               	rlf	___flmul@grs+1,f
  4776  0F1C  0DB0               	rlf	___flmul@grs+2,f
  4777  0F1D  0DB1               	rlf	___flmul@grs+3,f
  4778  0F1E  0BA8               	decfsz	??___flmul,f
  4779  0F1F  2F19               	goto	u3365
  4780  0F20                     l3079:
  4781  0F20  0833               	movf	___flmul@bexp,w
  4782  0F21  0732               	addwf	___flmul@aexp,w
  4783  0F22  00A8               	movwf	??___flmul
  4784  0F23  01A9               	clrf	??___flmul+1
  4785  0F24  0DA9               	rlf	??___flmul+1,f
  4786  0F25  0828               	movf	??___flmul,w
  4787  0F26  3E82               	addlw	130
  4788  0F27  00B8               	movwf	___flmul@temp
  4789  0F28  0829               	movf	??___flmul+1,w
  4790  0F29  1803               	skipnc
  4791  0F2A  3E01               	addlw	1
  4792  0F2B  3EFF               	addlw	255
  4793  0F2C  00B9               	movwf	___flmul@temp+1
  4794  0F2D  2F4B               	goto	l3091
  4795  0F2E                     l3081:
  4796  0F2E  3001               	movlw	1
  4797  0F2F  00A8               	movwf	??___flmul
  4798  0F30                     u3375:
  4799  0F30  1003               	clrc
  4800  0F31  0DB4               	rlf	___flmul@prod,f
  4801  0F32  0DB5               	rlf	___flmul@prod+1,f
  4802  0F33  0DB6               	rlf	___flmul@prod+2,f
  4803  0F34  0DB7               	rlf	___flmul@prod+3,f
  4804  0F35  0BA8               	decfsz	??___flmul,f
  4805  0F36  2F30               	goto	u3375
  4806  0F37                     l3083:
  4807  0F37  1FB1               	btfss	___flmul@grs+3,7
  4808  0F38  2F3A               	goto	u3381
  4809  0F39  2F3B               	goto	u3380
  4810  0F3A                     u3381:
  4811  0F3A  2F3C               	goto	l3087
  4812  0F3B                     u3380:
  4813  0F3B                     l3085:
  4814  0F3B  1434               	bsf	___flmul@prod,0
  4815  0F3C                     l3087:
  4816  0F3C  3001               	movlw	1
  4817  0F3D  00A8               	movwf	??___flmul
  4818  0F3E                     u3395:
  4819  0F3E  1003               	clrc
  4820  0F3F  0DAE               	rlf	___flmul@grs,f
  4821  0F40  0DAF               	rlf	___flmul@grs+1,f
  4822  0F41  0DB0               	rlf	___flmul@grs+2,f
  4823  0F42  0DB1               	rlf	___flmul@grs+3,f
  4824  0F43  0BA8               	decfsz	??___flmul,f
  4825  0F44  2F3E               	goto	u3395
  4826  0F45                     l3089:
  4827  0F45  30FF               	movlw	255
  4828  0F46  07B8               	addwf	___flmul@temp,f
  4829  0F47  1803               	skipnc
  4830  0F48  0AB9               	incf	___flmul@temp+1,f
  4831  0F49  30FF               	movlw	255
  4832  0F4A  07B9               	addwf	___flmul@temp+1,f
  4833  0F4B                     l3091:
  4834  0F4B  1FB6               	btfss	___flmul@prod+2,7
  4835  0F4C  2F4E               	goto	u3401
  4836  0F4D  2F4F               	goto	u3400
  4837  0F4E                     u3401:
  4838  0F4E  2F2E               	goto	l3081
  4839  0F4F                     u3400:
  4840  0F4F                     l3093:
  4841  0F4F  01B2               	clrf	___flmul@aexp
  4842  0F50                     l3095:
  4843  0F50  1FB1               	btfss	___flmul@grs+3,7
  4844  0F51  2F53               	goto	u3411
  4845  0F52  2F54               	goto	u3410
  4846  0F53                     u3411:
  4847  0F53  2F70               	goto	l3103
  4848  0F54                     u3410:
  4849  0F54                     l3097:
  4850  0F54  30FF               	movlw	255
  4851  0F55  052E               	andwf	___flmul@grs,w
  4852  0F56  00A8               	movwf	??___flmul
  4853  0F57  30FF               	movlw	255
  4854  0F58  052F               	andwf	___flmul@grs+1,w
  4855  0F59  00A9               	movwf	??___flmul+1
  4856  0F5A  30FF               	movlw	255
  4857  0F5B  0530               	andwf	___flmul@grs+2,w
  4858  0F5C  00AA               	movwf	??___flmul+2
  4859  0F5D  307F               	movlw	127
  4860  0F5E  0531               	andwf	___flmul@grs+3,w
  4861  0F5F  00AB               	movwf	??___flmul+3
  4862  0F60  082B               	movf	??___flmul+3,w
  4863  0F61  042A               	iorwf	??___flmul+2,w
  4864  0F62  0429               	iorwf	??___flmul+1,w
  4865  0F63  0428               	iorwf	??___flmul,w
  4866  0F64  1903               	skipnz
  4867  0F65  2F67               	goto	u3421
  4868  0F66  2F68               	goto	u3420
  4869  0F67                     u3421:
  4870  0F67  2F6B               	goto	l971
  4871  0F68                     u3420:
  4872  0F68                     l3099:
  4873  0F68  01B2               	clrf	___flmul@aexp
  4874  0F69  0AB2               	incf	___flmul@aexp,f
  4875  0F6A  2F70               	goto	l3103
  4876  0F6B                     l971:
  4877  0F6B  1C34               	btfss	___flmul@prod,0
  4878  0F6C  2F6E               	goto	u3431
  4879  0F6D  2F6F               	goto	u3430
  4880  0F6E                     u3431:
  4881  0F6E  2F70               	goto	l3103
  4882  0F6F                     u3430:
  4883  0F6F  2F68               	goto	l3099
  4884  0F70                     l3103:
  4885  0F70  0832               	movf	___flmul@aexp,w
  4886  0F71  1903               	btfsc	3,2
  4887  0F72  2F74               	goto	u3441
  4888  0F73  2F75               	goto	u3440
  4889  0F74                     u3441:
  4890  0F74  2FA6               	goto	l3113
  4891  0F75                     u3440:
  4892  0F75                     l3105:
  4893  0F75  3001               	movlw	1
  4894  0F76  07B4               	addwf	___flmul@prod,f
  4895  0F77  3000               	movlw	0
  4896  0F78  1803               	skipnc
  4897  0F79  3001               	movlw	1
  4898  0F7A  07B5               	addwf	___flmul@prod+1,f
  4899  0F7B  3000               	movlw	0
  4900  0F7C  1803               	skipnc
  4901  0F7D  3001               	movlw	1
  4902  0F7E  07B6               	addwf	___flmul@prod+2,f
  4903  0F7F  3000               	movlw	0
  4904  0F80  1803               	skipnc
  4905  0F81  3001               	movlw	1
  4906  0F82  07B7               	addwf	___flmul@prod+3,f
  4907  0F83                     l3107:
  4908  0F83  1C37               	btfss	___flmul@prod+3,0
  4909  0F84  2F86               	goto	u3451
  4910  0F85  2F87               	goto	u3450
  4911  0F86                     u3451:
  4912  0F86  2FA6               	goto	l3113
  4913  0F87                     u3450:
  4914  0F87                     l3109:
  4915  0F87  0834               	movf	___flmul@prod,w
  4916  0F88  00A8               	movwf	??___flmul
  4917  0F89  0835               	movf	___flmul@prod+1,w
  4918  0F8A  00A9               	movwf	??___flmul+1
  4919  0F8B  0836               	movf	___flmul@prod+2,w
  4920  0F8C  00AA               	movwf	??___flmul+2
  4921  0F8D  0837               	movf	___flmul@prod+3,w
  4922  0F8E  00AB               	movwf	??___flmul+3
  4923  0F8F  3001               	movlw	1
  4924  0F90  00AC               	movwf	??___flmul+4
  4925  0F91                     u3465:
  4926  0F91  0D2B               	rlf	??___flmul+3,w
  4927  0F92  0CAB               	rrf	??___flmul+3,f
  4928  0F93  0CAA               	rrf	??___flmul+2,f
  4929  0F94  0CA9               	rrf	??___flmul+1,f
  4930  0F95  0CA8               	rrf	??___flmul,f
  4931  0F96                     u3460:
  4932  0F96  0BAC               	decfsz	??___flmul+4,f
  4933  0F97  2F91               	goto	u3465
  4934  0F98  082B               	movf	??___flmul+3,w
  4935  0F99  00B7               	movwf	___flmul@prod+3
  4936  0F9A  082A               	movf	??___flmul+2,w
  4937  0F9B  00B6               	movwf	___flmul@prod+2
  4938  0F9C  0829               	movf	??___flmul+1,w
  4939  0F9D  00B5               	movwf	___flmul@prod+1
  4940  0F9E  0828               	movf	??___flmul,w
  4941  0F9F  00B4               	movwf	___flmul@prod
  4942  0FA0                     l3111:
  4943  0FA0  3001               	movlw	1
  4944  0FA1  07B8               	addwf	___flmul@temp,f
  4945  0FA2  1803               	skipnc
  4946  0FA3  0AB9               	incf	___flmul@temp+1,f
  4947  0FA4  3000               	movlw	0
  4948  0FA5  07B9               	addwf	___flmul@temp+1,f
  4949  0FA6                     l3113:
  4950  0FA6  0839               	movf	___flmul@temp+1,w
  4951  0FA7  3A80               	xorlw	128
  4952  0FA8  00FF               	movwf	btemp+1
  4953  0FA9  3080               	movlw	128
  4954  0FAA  027F               	subwf	btemp+1,w
  4955  0FAB  1D03               	skipz
  4956  0FAC  2FAF               	goto	u3475
  4957  0FAD  30FF               	movlw	255
  4958  0FAE  0238               	subwf	___flmul@temp,w
  4959  0FAF                     u3475:
  4960  0FAF  1C03               	skipc
  4961  0FB0  2FB2               	goto	u3471
  4962  0FB1  2FB3               	goto	u3470
  4963  0FB2                     u3471:
  4964  0FB2  2FBE               	goto	l3117
  4965  0FB3                     u3470:
  4966  0FB3                     l3115:
  4967  0FB3  307F               	movlw	127
  4968  0FB4  1283               	bcf	3,5	;RP0=0, select bank0
  4969  0FB5  1303               	bcf	3,6	;RP1=0, select bank0
  4970  0FB6  00B7               	movwf	___flmul@prod+3
  4971  0FB7  3080               	movlw	128
  4972  0FB8  00B6               	movwf	___flmul@prod+2
  4973  0FB9  3000               	movlw	0
  4974  0FBA  00B5               	movwf	___flmul@prod+1
  4975  0FBB  3000               	movlw	0
  4976  0FBC  00B4               	movwf	___flmul@prod
  4977  0FBD  2FF3               	goto	l977
  4978  0FBE                     l3117:
  4979  0FBE  1283               	bcf	3,5	;RP0=0, select bank0
  4980  0FBF  1303               	bcf	3,6	;RP1=0, select bank0
  4981  0FC0  0839               	movf	___flmul@temp+1,w
  4982  0FC1  3A80               	xorlw	128
  4983  0FC2  00FF               	movwf	btemp+1
  4984  0FC3  3080               	movlw	128
  4985  0FC4  027F               	subwf	btemp+1,w
  4986  0FC5  1D03               	skipz
  4987  0FC6  2FC9               	goto	u3485
  4988  0FC7  3001               	movlw	1
  4989  0FC8  0238               	subwf	___flmul@temp,w
  4990  0FC9                     u3485:
  4991  0FC9  1803               	skipnc
  4992  0FCA  2FCC               	goto	u3481
  4993  0FCB  2FCD               	goto	u3480
  4994  0FCC                     u3481:
  4995  0FCC  2FD9               	goto	l3123
  4996  0FCD                     u3480:
  4997  0FCD                     l3119:
  4998  0FCD  3000               	movlw	0
  4999  0FCE  1283               	bcf	3,5	;RP0=0, select bank0
  5000  0FCF  1303               	bcf	3,6	;RP1=0, select bank0
  5001  0FD0  00B7               	movwf	___flmul@prod+3
  5002  0FD1  3000               	movlw	0
  5003  0FD2  00B6               	movwf	___flmul@prod+2
  5004  0FD3  3000               	movlw	0
  5005  0FD4  00B5               	movwf	___flmul@prod+1
  5006  0FD5  3000               	movlw	0
  5007  0FD6  00B4               	movwf	___flmul@prod
  5008  0FD7                     l3121:
  5009  0FD7  01AD               	clrf	___flmul@sign
  5010  0FD8  2FF3               	goto	l977
  5011  0FD9                     l3123:
  5012  0FD9  1283               	bcf	3,5	;RP0=0, select bank0
  5013  0FDA  1303               	bcf	3,6	;RP1=0, select bank0
  5014  0FDB  0838               	movf	___flmul@temp,w
  5015  0FDC  00A8               	movwf	??___flmul
  5016  0FDD  0828               	movf	??___flmul,w
  5017  0FDE  00B3               	movwf	___flmul@bexp
  5018  0FDF  30FF               	movlw	255
  5019  0FE0  05B4               	andwf	___flmul@prod,f
  5020  0FE1  30FF               	movlw	255
  5021  0FE2  05B5               	andwf	___flmul@prod+1,f
  5022  0FE3  307F               	movlw	127
  5023  0FE4  05B6               	andwf	___flmul@prod+2,f
  5024  0FE5  3000               	movlw	0
  5025  0FE6  05B7               	andwf	___flmul@prod+3,f
  5026  0FE7                     l3125:
  5027  0FE7  1C33               	btfss	___flmul@bexp,0
  5028  0FE8  2FEA               	goto	u3491
  5029  0FE9  2FEB               	goto	u3490
  5030  0FEA                     u3491:
  5031  0FEA  2FEC               	goto	l3129
  5032  0FEB                     u3490:
  5033  0FEB                     l3127:
  5034  0FEB  17B6               	bsf	___flmul@prod+2,7
  5035  0FEC                     l3129:
  5036  0FEC  0833               	movf	___flmul@bexp,w
  5037  0FED  00A8               	movwf	??___flmul
  5038  0FEE  1003               	clrc
  5039  0FEF  0C28               	rrf	??___flmul,w
  5040  0FF0  00A9               	movwf	??___flmul+1
  5041  0FF1  0829               	movf	??___flmul+1,w
  5042  0FF2  00B7               	movwf	___flmul@prod+3
  5043  0FF3                     l977:
  5044  0FF3  082D               	movf	___flmul@sign,w
  5045  0FF4  00A8               	movwf	??___flmul
  5046  0FF5  0828               	movf	??___flmul,w
  5047  0FF6  04B7               	iorwf	___flmul@prod+3,f
  5048  0FF7                     l3131:
  5049  0FF7  0837               	movf	___flmul@prod+3,w
  5050  0FF8  00A3               	movwf	?___flmul+3
  5051  0FF9  0836               	movf	___flmul@prod+2,w
  5052  0FFA  00A2               	movwf	?___flmul+2
  5053  0FFB  0835               	movf	___flmul@prod+1,w
  5054  0FFC  00A1               	movwf	?___flmul+1
  5055  0FFD  0834               	movf	___flmul@prod,w
  5056  0FFE  00A0               	movwf	?___flmul
  5057  0FFF                     l965:
  5058  0FFF  0008               	return
  5059  1000                     __end_of___flmul:
  5060                           
  5061                           	psect	text7
  5062  1420                     __ptext7:	
  5063 ;; *************** function __Umul8_16 *****************
  5064 ;; Defined at:
  5065 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\Umul8_16.c"
  5066 ;; Parameters:    Size  Location     Type
  5067 ;;  multiplier      1    wreg     unsigned char 
  5068 ;;  multiplicand    1    0[COMMON] unsigned char 
  5069 ;; Auto vars:     Size  Location     Type
  5070 ;;  multiplier      1    8[COMMON] unsigned char 
  5071 ;;  word_mpld       2    6[COMMON] unsigned int 
  5072 ;;  product         2    4[COMMON] unsigned int 
  5073 ;; Return value:  Size  Location     Type
  5074 ;;                  2    0[COMMON] unsigned int 
  5075 ;; Registers used:
  5076 ;;		wreg, status,2, status,0
  5077 ;; Tracked objects:
  5078 ;;		On entry : 0/0
  5079 ;;		On exit  : 0/0
  5080 ;;		Unchanged: 0/0
  5081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5082 ;;      Params:         2       0       0       0       0
  5083 ;;      Locals:         5       0       0       0       0
  5084 ;;      Temps:          2       0       0       0       0
  5085 ;;      Totals:         9       0       0       0       0
  5086 ;;Total ram usage:        9 bytes
  5087 ;; Hardware stack levels used: 1
  5088 ;; This function calls:
  5089 ;;		Nothing
  5090 ;; This function is called by:
  5091 ;;		___flmul
  5092 ;; This function uses a non-reentrant model
  5093 ;;
  5094                           
  5095  1420                     __Umul8_16:	
  5096                           ;psect for function __Umul8_16
  5097                           
  5098                           
  5099                           ;incstack = 0
  5100                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5101                           ;__Umul8_16@multiplier stored from wreg
  5102  1420  00F8               	movwf	__Umul8_16@multiplier
  5103  1421                     l2537:
  5104  1421  01F4               	clrf	__Umul8_16@product
  5105  1422  01F5               	clrf	__Umul8_16@product+1
  5106  1423                     l2539:
  5107  1423  0870               	movf	__Umul8_16@multiplicand,w
  5108  1424  00F2               	movwf	??__Umul8_16
  5109  1425  01F3               	clrf	??__Umul8_16+1
  5110  1426  0872               	movf	??__Umul8_16,w
  5111  1427  00F6               	movwf	__Umul8_16@word_mpld
  5112  1428  0873               	movf	??__Umul8_16+1,w
  5113  1429  00F7               	movwf	__Umul8_16@word_mpld+1
  5114  142A                     l2541:
  5115  142A  1C78               	btfss	__Umul8_16@multiplier,0
  5116  142B  2C2D               	goto	u2251
  5117  142C  2C2E               	goto	u2250
  5118  142D                     u2251:
  5119  142D  2C34               	goto	l984
  5120  142E                     u2250:
  5121  142E                     l2543:
  5122  142E  0876               	movf	__Umul8_16@word_mpld,w
  5123  142F  07F4               	addwf	__Umul8_16@product,f
  5124  1430  1803               	skipnc
  5125  1431  0AF5               	incf	__Umul8_16@product+1,f
  5126  1432  0877               	movf	__Umul8_16@word_mpld+1,w
  5127  1433  07F5               	addwf	__Umul8_16@product+1,f
  5128  1434                     l984:
  5129  1434  3001               	movlw	1
  5130  1435                     u2265:
  5131  1435  1003               	clrc
  5132  1436  0DF6               	rlf	__Umul8_16@word_mpld,f
  5133  1437  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  5134  1438  3EFF               	addlw	-1
  5135  1439  1D03               	skipz
  5136  143A  2C35               	goto	u2265
  5137  143B  1003               	clrc
  5138  143C  0CF8               	rrf	__Umul8_16@multiplier,f
  5139  143D                     l2545:
  5140  143D  0878               	movf	__Umul8_16@multiplier,w
  5141  143E  1D03               	btfss	3,2
  5142  143F  2C41               	goto	u2271
  5143  1440  2C42               	goto	u2270
  5144  1441                     u2271:
  5145  1441  2C2A               	goto	l2541
  5146  1442                     u2270:
  5147  1442                     l2547:
  5148  1442  0875               	movf	__Umul8_16@product+1,w
  5149  1443  00F1               	movwf	?__Umul8_16+1
  5150  1444  0874               	movf	__Umul8_16@product,w
  5151  1445  00F0               	movwf	?__Umul8_16
  5152  1446                     l986:
  5153  1446  0008               	return
  5154  1447                     __end_of__Umul8_16:
  5155                           
  5156                           	psect	text8
  5157  0A17                     __ptext8:	
  5158 ;; *************** function ___fladd *****************
  5159 ;; Defined at:
  5160 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\sprcadd.c"
  5161 ;; Parameters:    Size  Location     Type
  5162 ;;  b               4   26[BANK0 ] unsigned int 
  5163 ;;  a               4   30[BANK0 ] unsigned int 
  5164 ;; Auto vars:     Size  Location     Type
  5165 ;;  grs             1   45[BANK0 ] unsigned char 
  5166 ;;  bexp            1   44[BANK0 ] unsigned char 
  5167 ;;  aexp            1   43[BANK0 ] unsigned char 
  5168 ;;  signs           1   42[BANK0 ] unsigned char 
  5169 ;; Return value:  Size  Location     Type
  5170 ;;                  4   26[BANK0 ] unsigned char 
  5171 ;; Registers used:
  5172 ;;		wreg, status,2, status,0, btemp+1
  5173 ;; Tracked objects:
  5174 ;;		On entry : 0/0
  5175 ;;		On exit  : 0/0
  5176 ;;		Unchanged: 0/0
  5177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5178 ;;      Params:         0       8       0       0       0
  5179 ;;      Locals:         0       4       0       0       0
  5180 ;;      Temps:          0       8       0       0       0
  5181 ;;      Totals:         0      20       0       0       0
  5182 ;;Total ram usage:       20 bytes
  5183 ;; Hardware stack levels used: 1
  5184 ;; This function calls:
  5185 ;;		Nothing
  5186 ;; This function is called by:
  5187 ;;		_Update_Farenheit
  5188 ;;		_Update_Celsius
  5189 ;; This function uses a non-reentrant model
  5190 ;;
  5191                           
  5192  0A17                     ___fladd:	
  5193                           ;psect for function ___fladd
  5194                           
  5195  0A17                     l2801:	
  5196                           ;incstack = 0
  5197                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  5198                           
  5199  0A17  1283               	bcf	3,5	;RP0=0, select bank0
  5200  0A18  1303               	bcf	3,6	;RP1=0, select bank0
  5201  0A19  083D               	movf	___fladd@b+3,w
  5202  0A1A  3980               	andlw	128
  5203  0A1B  00C2               	movwf	??___fladd
  5204  0A1C  0842               	movf	??___fladd,w
  5205  0A1D  00CA               	movwf	___fladd@signs
  5206  0A1E                     l2803:
  5207  0A1E  083D               	movf	___fladd@b+3,w
  5208  0A1F  00C2               	movwf	??___fladd
  5209  0A20  0742               	addwf	??___fladd,w
  5210  0A21  00C3               	movwf	??___fladd+1
  5211  0A22  0843               	movf	??___fladd+1,w
  5212  0A23  00CC               	movwf	___fladd@bexp
  5213  0A24                     l2805:
  5214  0A24  1FBC               	btfss	___fladd@b+2,7
  5215  0A25  2A27               	goto	u2671
  5216  0A26  2A28               	goto	u2670
  5217  0A27                     u2671:
  5218  0A27  2A29               	goto	l2809
  5219  0A28                     u2670:
  5220  0A28                     l2807:
  5221  0A28  144C               	bsf	___fladd@bexp,0
  5222  0A29                     l2809:
  5223  0A29  084C               	movf	___fladd@bexp,w
  5224  0A2A  1903               	btfsc	3,2
  5225  0A2B  2A2D               	goto	u2681
  5226  0A2C  2A2E               	goto	u2680
  5227  0A2D                     u2681:
  5228  0A2D  2A3E               	goto	l2819
  5229  0A2E                     u2680:
  5230  0A2E                     l2811:
  5231  0A2E  0A4C               	incf	___fladd@bexp,w
  5232  0A2F  1D03               	btfss	3,2
  5233  0A30  2A32               	goto	u2691
  5234  0A31  2A33               	goto	u2690
  5235  0A32                     u2691:
  5236  0A32  2A3B               	goto	l2815
  5237  0A33                     u2690:
  5238  0A33                     l2813:
  5239  0A33  3000               	movlw	0
  5240  0A34  00BD               	movwf	___fladd@b+3
  5241  0A35  3000               	movlw	0
  5242  0A36  00BC               	movwf	___fladd@b+2
  5243  0A37  3000               	movlw	0
  5244  0A38  00BB               	movwf	___fladd@b+1
  5245  0A39  3000               	movlw	0
  5246  0A3A  00BA               	movwf	___fladd@b
  5247  0A3B                     l2815:
  5248  0A3B  17BC               	bsf	___fladd@b+2,7
  5249  0A3C                     l2817:
  5250  0A3C  01BD               	clrf	___fladd@b+3
  5251  0A3D  2A46               	goto	l2821
  5252  0A3E                     l2819:
  5253  0A3E  3000               	movlw	0
  5254  0A3F  00BD               	movwf	___fladd@b+3
  5255  0A40  3000               	movlw	0
  5256  0A41  00BC               	movwf	___fladd@b+2
  5257  0A42  3000               	movlw	0
  5258  0A43  00BB               	movwf	___fladd@b+1
  5259  0A44  3000               	movlw	0
  5260  0A45  00BA               	movwf	___fladd@b
  5261  0A46                     l2821:
  5262  0A46  0841               	movf	___fladd@a+3,w
  5263  0A47  3980               	andlw	128
  5264  0A48  00C2               	movwf	??___fladd
  5265  0A49  0842               	movf	??___fladd,w
  5266  0A4A  00CB               	movwf	___fladd@aexp
  5267  0A4B                     l2823:
  5268  0A4B  084B               	movf	___fladd@aexp,w
  5269  0A4C  064A               	xorwf	___fladd@signs,w
  5270  0A4D  1903               	skipnz
  5271  0A4E  2A50               	goto	u2701
  5272  0A4F  2A51               	goto	u2700
  5273  0A50                     u2701:
  5274  0A50  2A52               	goto	l2827
  5275  0A51                     u2700:
  5276  0A51                     l2825:
  5277  0A51  174A               	bsf	___fladd@signs,6
  5278  0A52                     l2827:
  5279  0A52  0841               	movf	___fladd@a+3,w
  5280  0A53  00C2               	movwf	??___fladd
  5281  0A54  0742               	addwf	??___fladd,w
  5282  0A55  00C3               	movwf	??___fladd+1
  5283  0A56  0843               	movf	??___fladd+1,w
  5284  0A57  00CB               	movwf	___fladd@aexp
  5285  0A58                     l2829:
  5286  0A58  1FC0               	btfss	___fladd@a+2,7
  5287  0A59  2A5B               	goto	u2711
  5288  0A5A  2A5C               	goto	u2710
  5289  0A5B                     u2711:
  5290  0A5B  2A5D               	goto	l2833
  5291  0A5C                     u2710:
  5292  0A5C                     l2831:
  5293  0A5C  144B               	bsf	___fladd@aexp,0
  5294  0A5D                     l2833:
  5295  0A5D  084B               	movf	___fladd@aexp,w
  5296  0A5E  1903               	btfsc	3,2
  5297  0A5F  2A61               	goto	u2721
  5298  0A60  2A62               	goto	u2720
  5299  0A61                     u2721:
  5300  0A61  2A72               	goto	l2843
  5301  0A62                     u2720:
  5302  0A62                     l2835:
  5303  0A62  0A4B               	incf	___fladd@aexp,w
  5304  0A63  1D03               	btfss	3,2
  5305  0A64  2A66               	goto	u2731
  5306  0A65  2A67               	goto	u2730
  5307  0A66                     u2731:
  5308  0A66  2A6F               	goto	l2839
  5309  0A67                     u2730:
  5310  0A67                     l2837:
  5311  0A67  3000               	movlw	0
  5312  0A68  00C1               	movwf	___fladd@a+3
  5313  0A69  3000               	movlw	0
  5314  0A6A  00C0               	movwf	___fladd@a+2
  5315  0A6B  3000               	movlw	0
  5316  0A6C  00BF               	movwf	___fladd@a+1
  5317  0A6D  3000               	movlw	0
  5318  0A6E  00BE               	movwf	___fladd@a
  5319  0A6F                     l2839:
  5320  0A6F  17C0               	bsf	___fladd@a+2,7
  5321  0A70                     l2841:
  5322  0A70  01C1               	clrf	___fladd@a+3
  5323  0A71  2A7A               	goto	l869
  5324  0A72                     l2843:
  5325  0A72  3000               	movlw	0
  5326  0A73  00C1               	movwf	___fladd@a+3
  5327  0A74  3000               	movlw	0
  5328  0A75  00C0               	movwf	___fladd@a+2
  5329  0A76  3000               	movlw	0
  5330  0A77  00BF               	movwf	___fladd@a+1
  5331  0A78  3000               	movlw	0
  5332  0A79  00BE               	movwf	___fladd@a
  5333  0A7A                     l869:
  5334  0A7A  084C               	movf	___fladd@bexp,w
  5335  0A7B  024B               	subwf	___fladd@aexp,w
  5336  0A7C  1803               	skipnc
  5337  0A7D  2A7F               	goto	u2741
  5338  0A7E  2A80               	goto	u2740
  5339  0A7F                     u2741:
  5340  0A7F  2AC4               	goto	l2879
  5341  0A80                     u2740:
  5342  0A80                     l2845:
  5343  0A80  1F4A               	btfss	___fladd@signs,6
  5344  0A81  2A83               	goto	u2751
  5345  0A82  2A84               	goto	u2750
  5346  0A83                     u2751:
  5347  0A83  2A88               	goto	l2849
  5348  0A84                     u2750:
  5349  0A84                     l2847:
  5350  0A84  3080               	movlw	128
  5351  0A85  00C2               	movwf	??___fladd
  5352  0A86  0842               	movf	??___fladd,w
  5353  0A87  06CA               	xorwf	___fladd@signs,f
  5354  0A88                     l2849:
  5355  0A88  084C               	movf	___fladd@bexp,w
  5356  0A89  00C2               	movwf	??___fladd
  5357  0A8A  0842               	movf	??___fladd,w
  5358  0A8B  00CD               	movwf	___fladd@grs
  5359  0A8C                     l2851:
  5360  0A8C  084B               	movf	___fladd@aexp,w
  5361  0A8D  00C2               	movwf	??___fladd
  5362  0A8E  0842               	movf	??___fladd,w
  5363  0A8F  00CC               	movwf	___fladd@bexp
  5364  0A90                     l2853:
  5365  0A90  084D               	movf	___fladd@grs,w
  5366  0A91  00C2               	movwf	??___fladd
  5367  0A92  0842               	movf	??___fladd,w
  5368  0A93  00CB               	movwf	___fladd@aexp
  5369  0A94                     l2855:
  5370  0A94  083A               	movf	___fladd@b,w
  5371  0A95  00C2               	movwf	??___fladd
  5372  0A96  0842               	movf	??___fladd,w
  5373  0A97  00CD               	movwf	___fladd@grs
  5374  0A98                     l2857:
  5375  0A98  083E               	movf	___fladd@a,w
  5376  0A99  00C2               	movwf	??___fladd
  5377  0A9A  0842               	movf	??___fladd,w
  5378  0A9B  00BA               	movwf	___fladd@b
  5379  0A9C                     l2859:
  5380  0A9C  084D               	movf	___fladd@grs,w
  5381  0A9D  00C2               	movwf	??___fladd
  5382  0A9E  0842               	movf	??___fladd,w
  5383  0A9F  00BE               	movwf	___fladd@a
  5384  0AA0                     l2861:
  5385  0AA0  083B               	movf	___fladd@b+1,w
  5386  0AA1  00C2               	movwf	??___fladd
  5387  0AA2  0842               	movf	??___fladd,w
  5388  0AA3  00CD               	movwf	___fladd@grs
  5389  0AA4                     l2863:
  5390  0AA4  083F               	movf	___fladd@a+1,w
  5391  0AA5  00C2               	movwf	??___fladd
  5392  0AA6  0842               	movf	??___fladd,w
  5393  0AA7  00BB               	movwf	___fladd@b+1
  5394  0AA8                     l2865:
  5395  0AA8  084D               	movf	___fladd@grs,w
  5396  0AA9  00C2               	movwf	??___fladd
  5397  0AAA  0842               	movf	??___fladd,w
  5398  0AAB  00BF               	movwf	___fladd@a+1
  5399  0AAC                     l2867:
  5400  0AAC  083C               	movf	___fladd@b+2,w
  5401  0AAD  00C2               	movwf	??___fladd
  5402  0AAE  0842               	movf	??___fladd,w
  5403  0AAF  00CD               	movwf	___fladd@grs
  5404  0AB0                     l2869:
  5405  0AB0  0840               	movf	___fladd@a+2,w
  5406  0AB1  00C2               	movwf	??___fladd
  5407  0AB2  0842               	movf	??___fladd,w
  5408  0AB3  00BC               	movwf	___fladd@b+2
  5409  0AB4                     l2871:
  5410  0AB4  084D               	movf	___fladd@grs,w
  5411  0AB5  00C2               	movwf	??___fladd
  5412  0AB6  0842               	movf	??___fladd,w
  5413  0AB7  00C0               	movwf	___fladd@a+2
  5414  0AB8                     l2873:
  5415  0AB8  083D               	movf	___fladd@b+3,w
  5416  0AB9  00C2               	movwf	??___fladd
  5417  0ABA  0842               	movf	??___fladd,w
  5418  0ABB  00CD               	movwf	___fladd@grs
  5419  0ABC                     l2875:
  5420  0ABC  0841               	movf	___fladd@a+3,w
  5421  0ABD  00C2               	movwf	??___fladd
  5422  0ABE  0842               	movf	??___fladd,w
  5423  0ABF  00BD               	movwf	___fladd@b+3
  5424  0AC0                     l2877:
  5425  0AC0  084D               	movf	___fladd@grs,w
  5426  0AC1  00C2               	movwf	??___fladd
  5427  0AC2  0842               	movf	??___fladd,w
  5428  0AC3  00C1               	movwf	___fladd@a+3
  5429  0AC4                     l2879:
  5430  0AC4  01CD               	clrf	___fladd@grs
  5431  0AC5                     l2881:
  5432  0AC5  084B               	movf	___fladd@aexp,w
  5433  0AC6  00C2               	movwf	??___fladd
  5434  0AC7  01C3               	clrf	??___fladd+1
  5435  0AC8  0843               	movf	??___fladd+1,w
  5436  0AC9  00C5               	movwf	??___fladd+3
  5437  0ACA  084C               	movf	___fladd@bexp,w
  5438  0ACB  0242               	subwf	??___fladd,w
  5439  0ACC  00C4               	movwf	??___fladd+2
  5440  0ACD  1C03               	skipc
  5441  0ACE  03C5               	decf	??___fladd+3,f
  5442  0ACF  0845               	movf	??___fladd+3,w
  5443  0AD0  3A80               	xorlw	128
  5444  0AD1  00FF               	movwf	btemp+1
  5445  0AD2  3080               	movlw	128
  5446  0AD3  027F               	subwf	btemp+1,w
  5447  0AD4  1D03               	skipz
  5448  0AD5  2AD8               	goto	u2765
  5449  0AD6  301A               	movlw	26
  5450  0AD7  0244               	subwf	??___fladd+2,w
  5451  0AD8                     u2765:
  5452  0AD8  1C03               	skipc
  5453  0AD9  2ADB               	goto	u2761
  5454  0ADA  2ADC               	goto	u2760
  5455  0ADB                     u2761:
  5456  0ADB  2B19               	goto	l2897
  5457  0ADC                     u2760:
  5458  0ADC                     l2883:
  5459  0ADC  1283               	bcf	3,5	;RP0=0, select bank0
  5460  0ADD  1303               	bcf	3,6	;RP1=0, select bank0
  5461  0ADE  083D               	movf	___fladd@b+3,w
  5462  0ADF  043C               	iorwf	___fladd@b+2,w
  5463  0AE0  043B               	iorwf	___fladd@b+1,w
  5464  0AE1  043A               	iorwf	___fladd@b,w
  5465  0AE2  1D03               	skipz
  5466  0AE3  2AE5               	goto	u2771
  5467  0AE4  2AE7               	goto	u2770
  5468  0AE5                     u2771:
  5469  0AE5  3001               	movlw	1
  5470  0AE6  2AE8               	goto	u2780
  5471  0AE7                     u2770:
  5472  0AE7  3000               	movlw	0
  5473  0AE8                     u2780:
  5474  0AE8  00C2               	movwf	??___fladd
  5475  0AE9  0842               	movf	??___fladd,w
  5476  0AEA  00CD               	movwf	___fladd@grs
  5477  0AEB  3000               	movlw	0
  5478  0AEC  00BD               	movwf	___fladd@b+3
  5479  0AED  3000               	movlw	0
  5480  0AEE  00BC               	movwf	___fladd@b+2
  5481  0AEF  3000               	movlw	0
  5482  0AF0  00BB               	movwf	___fladd@b+1
  5483  0AF1  3000               	movlw	0
  5484  0AF2  00BA               	movwf	___fladd@b
  5485  0AF3  084B               	movf	___fladd@aexp,w
  5486  0AF4  00C2               	movwf	??___fladd
  5487  0AF5  0842               	movf	??___fladd,w
  5488  0AF6  00CC               	movwf	___fladd@bexp
  5489  0AF7  2B21               	goto	l873
  5490  0AF8                     l875:
  5491  0AF8  1C4D               	btfss	___fladd@grs,0
  5492  0AF9  2AFB               	goto	u2791
  5493  0AFA  2AFC               	goto	u2790
  5494  0AFB                     u2791:
  5495  0AFB  2B05               	goto	l2887
  5496  0AFC                     u2790:
  5497  0AFC                     l2885:
  5498  0AFC  084D               	movf	___fladd@grs,w
  5499  0AFD  00C2               	movwf	??___fladd
  5500  0AFE  1003               	clrc
  5501  0AFF  0C42               	rrf	??___fladd,w
  5502  0B00  3801               	iorlw	1
  5503  0B01  00C3               	movwf	??___fladd+1
  5504  0B02  0843               	movf	??___fladd+1,w
  5505  0B03  00CD               	movwf	___fladd@grs
  5506  0B04  2B07               	goto	l2889
  5507  0B05                     l2887:
  5508  0B05  1003               	clrc
  5509  0B06  0CCD               	rrf	___fladd@grs,f
  5510  0B07                     l2889:
  5511  0B07  1C3A               	btfss	___fladd@b,0
  5512  0B08  2B0A               	goto	u2801
  5513  0B09  2B0B               	goto	u2800
  5514  0B0A                     u2801:
  5515  0B0A  2B0C               	goto	l2893
  5516  0B0B                     u2800:
  5517  0B0B                     l2891:
  5518  0B0B  17CD               	bsf	___fladd@grs,7
  5519  0B0C                     l2893:
  5520  0B0C  3001               	movlw	1
  5521  0B0D  00C2               	movwf	??___fladd
  5522  0B0E                     u2815:
  5523  0B0E  0D3D               	rlf	___fladd@b+3,w
  5524  0B0F  0CBD               	rrf	___fladd@b+3,f
  5525  0B10  0CBC               	rrf	___fladd@b+2,f
  5526  0B11  0CBB               	rrf	___fladd@b+1,f
  5527  0B12  0CBA               	rrf	___fladd@b,f
  5528  0B13  0BC2               	decfsz	??___fladd& (0+127),f
  5529  0B14  2B0E               	goto	u2815
  5530  0B15                     l2895:
  5531  0B15  3001               	movlw	1
  5532  0B16  00C2               	movwf	??___fladd
  5533  0B17  0842               	movf	??___fladd,w
  5534  0B18  07CC               	addwf	___fladd@bexp,f
  5535  0B19                     l2897:
  5536  0B19  1283               	bcf	3,5	;RP0=0, select bank0
  5537  0B1A  1303               	bcf	3,6	;RP1=0, select bank0
  5538  0B1B  084B               	movf	___fladd@aexp,w
  5539  0B1C  024C               	subwf	___fladd@bexp,w
  5540  0B1D  1C03               	skipc
  5541  0B1E  2B20               	goto	u2821
  5542  0B1F  2B21               	goto	u2820
  5543  0B20                     u2821:
  5544  0B20  2AF8               	goto	l875
  5545  0B21                     u2820:
  5546  0B21                     l873:
  5547  0B21  1B4A               	btfsc	___fladd@signs,6
  5548  0B22  2B24               	goto	u2831
  5549  0B23  2B25               	goto	u2830
  5550  0B24                     u2831:
  5551  0B24  2B70               	goto	l2923
  5552  0B25                     u2830:
  5553  0B25                     l2899:
  5554  0B25  084C               	movf	___fladd@bexp,w
  5555  0B26  1D03               	btfss	3,2
  5556  0B27  2B29               	goto	u2841
  5557  0B28  2B2A               	goto	u2840
  5558  0B29                     u2841:
  5559  0B29  2B33               	goto	l2905
  5560  0B2A                     u2840:
  5561  0B2A                     l2901:
  5562  0B2A  3000               	movlw	0
  5563  0B2B  00BD               	movwf	?___fladd+3
  5564  0B2C  3000               	movlw	0
  5565  0B2D  00BC               	movwf	?___fladd+2
  5566  0B2E  3000               	movlw	0
  5567  0B2F  00BB               	movwf	?___fladd+1
  5568  0B30  3000               	movlw	0
  5569  0B31  00BA               	movwf	?___fladd
  5570  0B32  2C9E               	goto	l882
  5571  0B33                     l2905:
  5572  0B33  083E               	movf	___fladd@a,w
  5573  0B34  07BA               	addwf	___fladd@b,f
  5574  0B35  083F               	movf	___fladd@a+1,w
  5575  0B36  1103               	clrz
  5576  0B37  1803               	skipnc
  5577  0B38  3E01               	addlw	1
  5578  0B39  1903               	skipnz
  5579  0B3A  2B3C               	goto	u2851
  5580  0B3B  07BB               	addwf	___fladd@b+1,f
  5581  0B3C                     u2851:
  5582  0B3C  0840               	movf	___fladd@a+2,w
  5583  0B3D  1103               	clrz
  5584  0B3E  1803               	skipnc
  5585  0B3F  3E01               	addlw	1
  5586  0B40  1903               	skipnz
  5587  0B41  2B43               	goto	u2852
  5588  0B42  07BC               	addwf	___fladd@b+2,f
  5589  0B43                     u2852:
  5590  0B43  0841               	movf	___fladd@a+3,w
  5591  0B44  1103               	clrz
  5592  0B45  1803               	skipnc
  5593  0B46  3E01               	addlw	1
  5594  0B47  1903               	skipnz
  5595  0B48  2B4A               	goto	u2853
  5596  0B49  07BD               	addwf	___fladd@b+3,f
  5597  0B4A                     u2853:
  5598  0B4A                     l2907:
  5599  0B4A  1C3D               	btfss	___fladd@b+3,0
  5600  0B4B  2B4D               	goto	u2861
  5601  0B4C  2B4E               	goto	u2860
  5602  0B4D                     u2861:
  5603  0B4D  2C24               	goto	l2957
  5604  0B4E                     u2860:
  5605  0B4E                     l2909:
  5606  0B4E  1C4D               	btfss	___fladd@grs,0
  5607  0B4F  2B51               	goto	u2871
  5608  0B50  2B52               	goto	u2870
  5609  0B51                     u2871:
  5610  0B51  2B5B               	goto	l2913
  5611  0B52                     u2870:
  5612  0B52                     l2911:
  5613  0B52  084D               	movf	___fladd@grs,w
  5614  0B53  00C2               	movwf	??___fladd
  5615  0B54  1003               	clrc
  5616  0B55  0C42               	rrf	??___fladd,w
  5617  0B56  3801               	iorlw	1
  5618  0B57  00C3               	movwf	??___fladd+1
  5619  0B58  0843               	movf	??___fladd+1,w
  5620  0B59  00CD               	movwf	___fladd@grs
  5621  0B5A  2B5D               	goto	l2915
  5622  0B5B                     l2913:
  5623  0B5B  1003               	clrc
  5624  0B5C  0CCD               	rrf	___fladd@grs,f
  5625  0B5D                     l2915:
  5626  0B5D  1C3A               	btfss	___fladd@b,0
  5627  0B5E  2B60               	goto	u2881
  5628  0B5F  2B61               	goto	u2880
  5629  0B60                     u2881:
  5630  0B60  2B62               	goto	l2919
  5631  0B61                     u2880:
  5632  0B61                     l2917:
  5633  0B61  17CD               	bsf	___fladd@grs,7
  5634  0B62                     l2919:
  5635  0B62  3001               	movlw	1
  5636  0B63  00C2               	movwf	??___fladd
  5637  0B64                     u2895:
  5638  0B64  0D3D               	rlf	___fladd@b+3,w
  5639  0B65  0CBD               	rrf	___fladd@b+3,f
  5640  0B66  0CBC               	rrf	___fladd@b+2,f
  5641  0B67  0CBB               	rrf	___fladd@b+1,f
  5642  0B68  0CBA               	rrf	___fladd@b,f
  5643  0B69  0BC2               	decfsz	??___fladd& (0+127),f
  5644  0B6A  2B64               	goto	u2895
  5645  0B6B                     l2921:
  5646  0B6B  3001               	movlw	1
  5647  0B6C  00C2               	movwf	??___fladd
  5648  0B6D  0842               	movf	??___fladd,w
  5649  0B6E  07CC               	addwf	___fladd@bexp,f
  5650  0B6F  2C24               	goto	l2957
  5651  0B70                     l2923:
  5652  0B70  083D               	movf	___fladd@b+3,w
  5653  0B71  3A80               	xorlw	128
  5654  0B72  00FF               	movwf	btemp+1
  5655  0B73  0841               	movf	___fladd@a+3,w
  5656  0B74  3A80               	xorlw	128
  5657  0B75  027F               	subwf	btemp+1,w
  5658  0B76  1D03               	skipz
  5659  0B77  2B82               	goto	u2903
  5660  0B78  0840               	movf	___fladd@a+2,w
  5661  0B79  023C               	subwf	___fladd@b+2,w
  5662  0B7A  1D03               	skipz
  5663  0B7B  2B82               	goto	u2903
  5664  0B7C  083F               	movf	___fladd@a+1,w
  5665  0B7D  023B               	subwf	___fladd@b+1,w
  5666  0B7E  1D03               	skipz
  5667  0B7F  2B82               	goto	u2903
  5668  0B80  083E               	movf	___fladd@a,w
  5669  0B81  023A               	subwf	___fladd@b,w
  5670  0B82                     u2903:
  5671  0B82  1803               	skipnc
  5672  0B83  2B85               	goto	u2901
  5673  0B84  2B86               	goto	u2900
  5674  0B85                     u2901:
  5675  0B85  2BDE               	goto	l2933
  5676  0B86                     u2900:
  5677  0B86                     l2925:
  5678  0B86  30FF               	movlw	255
  5679  0B87  00C2               	movwf	??___fladd
  5680  0B88  30FF               	movlw	255
  5681  0B89  00C3               	movwf	??___fladd+1
  5682  0B8A  30FF               	movlw	255
  5683  0B8B  00C4               	movwf	??___fladd+2
  5684  0B8C  30FF               	movlw	255
  5685  0B8D  00C5               	movwf	??___fladd+3
  5686  0B8E  083E               	movf	___fladd@a,w
  5687  0B8F  00C6               	movwf	??___fladd+4
  5688  0B90  083F               	movf	___fladd@a+1,w
  5689  0B91  00C7               	movwf	??___fladd+5
  5690  0B92  0840               	movf	___fladd@a+2,w
  5691  0B93  00C8               	movwf	??___fladd+6
  5692  0B94  0841               	movf	___fladd@a+3,w
  5693  0B95  00C9               	movwf	??___fladd+7
  5694  0B96  083A               	movf	___fladd@b,w
  5695  0B97  02C6               	subwf	??___fladd+4,f
  5696  0B98  083B               	movf	___fladd@b+1,w
  5697  0B99  1C03               	skipc
  5698  0B9A  0F3B               	incfsz	___fladd@b+1,w
  5699  0B9B  2B9D               	goto	u2911
  5700  0B9C  2B9E               	goto	u2912
  5701  0B9D                     u2911:
  5702  0B9D  02C7               	subwf	??___fladd+5,f
  5703  0B9E                     u2912:
  5704  0B9E  083C               	movf	___fladd@b+2,w
  5705  0B9F  1C03               	skipc
  5706  0BA0  0F3C               	incfsz	___fladd@b+2,w
  5707  0BA1  2BA3               	goto	u2913
  5708  0BA2  2BA4               	goto	u2914
  5709  0BA3                     u2913:
  5710  0BA3  02C8               	subwf	??___fladd+6,f
  5711  0BA4                     u2914:
  5712  0BA4  083D               	movf	___fladd@b+3,w
  5713  0BA5  1C03               	skipc
  5714  0BA6  0F3D               	incfsz	___fladd@b+3,w
  5715  0BA7  2BA9               	goto	u2915
  5716  0BA8  2BAA               	goto	u2916
  5717  0BA9                     u2915:
  5718  0BA9  02C9               	subwf	??___fladd+7,f
  5719  0BAA                     u2916:
  5720  0BAA  0846               	movf	??___fladd+4,w
  5721  0BAB  07C2               	addwf	??___fladd,f
  5722  0BAC  0847               	movf	??___fladd+5,w
  5723  0BAD  1803               	skipnc
  5724  0BAE  0F47               	incfsz	??___fladd+5,w
  5725  0BAF  2BB1               	goto	u2920
  5726  0BB0  2BB2               	goto	u2921
  5727  0BB1                     u2920:
  5728  0BB1  07C3               	addwf	??___fladd+1,f
  5729  0BB2                     u2921:
  5730  0BB2  0848               	movf	??___fladd+6,w
  5731  0BB3  1803               	skipnc
  5732  0BB4  0F48               	incfsz	??___fladd+6,w
  5733  0BB5  2BB7               	goto	u2922
  5734  0BB6  2BB8               	goto	u2923
  5735  0BB7                     u2922:
  5736  0BB7  07C4               	addwf	??___fladd+2,f
  5737  0BB8                     u2923:
  5738  0BB8  0849               	movf	??___fladd+7,w
  5739  0BB9  1803               	skipnc
  5740  0BBA  0A49               	incf	??___fladd+7,w
  5741  0BBB  07C5               	addwf	??___fladd+3,f
  5742  0BBC  0845               	movf	??___fladd+3,w
  5743  0BBD  00BD               	movwf	___fladd@b+3
  5744  0BBE  0844               	movf	??___fladd+2,w
  5745  0BBF  00BC               	movwf	___fladd@b+2
  5746  0BC0  0843               	movf	??___fladd+1,w
  5747  0BC1  00BB               	movwf	___fladd@b+1
  5748  0BC2  0842               	movf	??___fladd,w
  5749  0BC3  00BA               	movwf	___fladd@b
  5750  0BC4                     l2927:
  5751  0BC4  3080               	movlw	128
  5752  0BC5  00C2               	movwf	??___fladd
  5753  0BC6  0842               	movf	??___fladd,w
  5754  0BC7  06CA               	xorwf	___fladd@signs,f
  5755  0BC8  09CD               	comf	___fladd@grs,f
  5756  0BC9  0ACD               	incf	___fladd@grs,f
  5757  0BCA                     l2929:
  5758  0BCA  084D               	movf	___fladd@grs,w
  5759  0BCB  1D03               	btfss	3,2
  5760  0BCC  2BCE               	goto	u2931
  5761  0BCD  2BCF               	goto	u2930
  5762  0BCE                     u2931:
  5763  0BCE  2BEC               	goto	l890
  5764  0BCF                     u2930:
  5765  0BCF                     l2931:
  5766  0BCF  3001               	movlw	1
  5767  0BD0  07BA               	addwf	___fladd@b,f
  5768  0BD1  3000               	movlw	0
  5769  0BD2  1803               	skipnc
  5770  0BD3  3001               	movlw	1
  5771  0BD4  07BB               	addwf	___fladd@b+1,f
  5772  0BD5  3000               	movlw	0
  5773  0BD6  1803               	skipnc
  5774  0BD7  3001               	movlw	1
  5775  0BD8  07BC               	addwf	___fladd@b+2,f
  5776  0BD9  3000               	movlw	0
  5777  0BDA  1803               	skipnc
  5778  0BDB  3001               	movlw	1
  5779  0BDC  07BD               	addwf	___fladd@b+3,f
  5780  0BDD  2BEC               	goto	l890
  5781  0BDE                     l2933:
  5782  0BDE  083E               	movf	___fladd@a,w
  5783  0BDF  02BA               	subwf	___fladd@b,f
  5784  0BE0  083F               	movf	___fladd@a+1,w
  5785  0BE1  1C03               	skipc
  5786  0BE2  0F3F               	incfsz	___fladd@a+1,w
  5787  0BE3  02BB               	subwf	___fladd@b+1,f
  5788  0BE4  0840               	movf	___fladd@a+2,w
  5789  0BE5  1C03               	skipc
  5790  0BE6  0F40               	incfsz	___fladd@a+2,w
  5791  0BE7  02BC               	subwf	___fladd@b+2,f
  5792  0BE8  0841               	movf	___fladd@a+3,w
  5793  0BE9  1C03               	skipc
  5794  0BEA  0F41               	incfsz	___fladd@a+3,w
  5795  0BEB  02BD               	subwf	___fladd@b+3,f
  5796  0BEC                     l890:
  5797  0BEC  083D               	movf	___fladd@b+3,w
  5798  0BED  043C               	iorwf	___fladd@b+2,w
  5799  0BEE  043B               	iorwf	___fladd@b+1,w
  5800  0BEF  043A               	iorwf	___fladd@b,w
  5801  0BF0  1D03               	skipz
  5802  0BF1  2BF3               	goto	u2941
  5803  0BF2  2BF4               	goto	u2940
  5804  0BF3                     u2941:
  5805  0BF3  2C20               	goto	l2955
  5806  0BF4                     u2940:
  5807  0BF4                     l2935:
  5808  0BF4  084D               	movf	___fladd@grs,w
  5809  0BF5  1D03               	btfss	3,2
  5810  0BF6  2BF8               	goto	u2951
  5811  0BF7  2BF9               	goto	u2950
  5812  0BF8                     u2951:
  5813  0BF8  2C20               	goto	l2955
  5814  0BF9                     u2950:
  5815  0BF9                     l2937:
  5816  0BF9  3000               	movlw	0
  5817  0BFA  00BD               	movwf	?___fladd+3
  5818  0BFB  3000               	movlw	0
  5819  0BFC  00BC               	movwf	?___fladd+2
  5820  0BFD  3000               	movlw	0
  5821  0BFE  00BB               	movwf	?___fladd+1
  5822  0BFF  3000               	movlw	0
  5823  0C00  00BA               	movwf	?___fladd
  5824  0C01  2C9E               	goto	l882
  5825  0C02                     l2941:
  5826  0C02  3001               	movlw	1
  5827  0C03  00C2               	movwf	??___fladd
  5828  0C04                     u2965:
  5829  0C04  1003               	clrc
  5830  0C05  0DBA               	rlf	___fladd@b,f
  5831  0C06  0DBB               	rlf	___fladd@b+1,f
  5832  0C07  0DBC               	rlf	___fladd@b+2,f
  5833  0C08  0DBD               	rlf	___fladd@b+3,f
  5834  0C09  0BC2               	decfsz	??___fladd,f
  5835  0C0A  2C04               	goto	u2965
  5836  0C0B                     l2943:
  5837  0C0B  1FCD               	btfss	___fladd@grs,7
  5838  0C0C  2C0E               	goto	u2971
  5839  0C0D  2C0F               	goto	u2970
  5840  0C0E                     u2971:
  5841  0C0E  2C10               	goto	l894
  5842  0C0F                     u2970:
  5843  0C0F                     l2945:
  5844  0C0F  143A               	bsf	___fladd@b,0
  5845  0C10                     l894:
  5846  0C10  1C4D               	btfss	___fladd@grs,0
  5847  0C11  2C13               	goto	u2981
  5848  0C12  2C14               	goto	u2980
  5849  0C13                     u2981:
  5850  0C13  2C17               	goto	l2949
  5851  0C14                     u2980:
  5852  0C14                     l2947:
  5853  0C14  1403               	setc
  5854  0C15  0DCD               	rlf	___fladd@grs,f
  5855  0C16  2C19               	goto	l2951
  5856  0C17                     l2949:
  5857  0C17  1003               	clrc
  5858  0C18  0DCD               	rlf	___fladd@grs,f
  5859  0C19                     l2951:
  5860  0C19  084C               	movf	___fladd@bexp,w
  5861  0C1A  1903               	btfsc	3,2
  5862  0C1B  2C1D               	goto	u2991
  5863  0C1C  2C1E               	goto	u2990
  5864  0C1D                     u2991:
  5865  0C1D  2C20               	goto	l2955
  5866  0C1E                     u2990:
  5867  0C1E                     l2953:
  5868  0C1E  3001               	movlw	1
  5869  0C1F  02CC               	subwf	___fladd@bexp,f
  5870  0C20                     l2955:
  5871  0C20  1FBC               	btfss	___fladd@b+2,7
  5872  0C21  2C23               	goto	u3001
  5873  0C22  2C24               	goto	u3000
  5874  0C23                     u3001:
  5875  0C23  2C02               	goto	l2941
  5876  0C24                     u3000:
  5877  0C24                     l2957:
  5878  0C24  01CB               	clrf	___fladd@aexp
  5879  0C25                     l2959:
  5880  0C25  1FCD               	btfss	___fladd@grs,7
  5881  0C26  2C28               	goto	u3011
  5882  0C27  2C29               	goto	u3010
  5883  0C28                     u3011:
  5884  0C28  2C37               	goto	l2967
  5885  0C29                     u3010:
  5886  0C29                     l2961:
  5887  0C29  084D               	movf	___fladd@grs,w
  5888  0C2A  397F               	andlw	127
  5889  0C2B  1903               	btfsc	3,2
  5890  0C2C  2C2E               	goto	u3021
  5891  0C2D  2C2F               	goto	u3020
  5892  0C2E                     u3021:
  5893  0C2E  2C32               	goto	l900
  5894  0C2F                     u3020:
  5895  0C2F                     l2963:
  5896  0C2F  01CB               	clrf	___fladd@aexp
  5897  0C30  0ACB               	incf	___fladd@aexp,f
  5898  0C31  2C37               	goto	l2967
  5899  0C32                     l900:
  5900  0C32  1C3A               	btfss	___fladd@b,0
  5901  0C33  2C35               	goto	u3031
  5902  0C34  2C36               	goto	u3030
  5903  0C35                     u3031:
  5904  0C35  2C37               	goto	l2967
  5905  0C36                     u3030:
  5906  0C36  2C2F               	goto	l2963
  5907  0C37                     l2967:
  5908  0C37  084B               	movf	___fladd@aexp,w
  5909  0C38  1903               	btfsc	3,2
  5910  0C39  2C3B               	goto	u3041
  5911  0C3A  2C3C               	goto	u3040
  5912  0C3B                     u3041:
  5913  0C3B  2C70               	goto	l903
  5914  0C3C                     u3040:
  5915  0C3C                     l2969:
  5916  0C3C  3001               	movlw	1
  5917  0C3D  07BA               	addwf	___fladd@b,f
  5918  0C3E  3000               	movlw	0
  5919  0C3F  1803               	skipnc
  5920  0C40  3001               	movlw	1
  5921  0C41  07BB               	addwf	___fladd@b+1,f
  5922  0C42  3000               	movlw	0
  5923  0C43  1803               	skipnc
  5924  0C44  3001               	movlw	1
  5925  0C45  07BC               	addwf	___fladd@b+2,f
  5926  0C46  3000               	movlw	0
  5927  0C47  1803               	skipnc
  5928  0C48  3001               	movlw	1
  5929  0C49  07BD               	addwf	___fladd@b+3,f
  5930  0C4A                     l2971:
  5931  0C4A  1C3D               	btfss	___fladd@b+3,0
  5932  0C4B  2C4D               	goto	u3051
  5933  0C4C  2C4E               	goto	u3050
  5934  0C4D                     u3051:
  5935  0C4D  2C70               	goto	l903
  5936  0C4E                     u3050:
  5937  0C4E                     l2973:
  5938  0C4E  083A               	movf	___fladd@b,w
  5939  0C4F  00C2               	movwf	??___fladd
  5940  0C50  083B               	movf	___fladd@b+1,w
  5941  0C51  00C3               	movwf	??___fladd+1
  5942  0C52  083C               	movf	___fladd@b+2,w
  5943  0C53  00C4               	movwf	??___fladd+2
  5944  0C54  083D               	movf	___fladd@b+3,w
  5945  0C55  00C5               	movwf	??___fladd+3
  5946  0C56  3001               	movlw	1
  5947  0C57  00C6               	movwf	??___fladd+4
  5948  0C58                     u3065:
  5949  0C58  0D45               	rlf	??___fladd+3,w
  5950  0C59  0CC5               	rrf	??___fladd+3,f
  5951  0C5A  0CC4               	rrf	??___fladd+2,f
  5952  0C5B  0CC3               	rrf	??___fladd+1,f
  5953  0C5C  0CC2               	rrf	??___fladd,f
  5954  0C5D                     u3060:
  5955  0C5D  0BC6               	decfsz	??___fladd+4,f
  5956  0C5E  2C58               	goto	u3065
  5957  0C5F  0845               	movf	??___fladd+3,w
  5958  0C60  00BD               	movwf	___fladd@b+3
  5959  0C61  0844               	movf	??___fladd+2,w
  5960  0C62  00BC               	movwf	___fladd@b+2
  5961  0C63  0843               	movf	??___fladd+1,w
  5962  0C64  00BB               	movwf	___fladd@b+1
  5963  0C65  0842               	movf	??___fladd,w
  5964  0C66  00BA               	movwf	___fladd@b
  5965  0C67  0A4C               	incf	___fladd@bexp,w
  5966  0C68  1903               	btfsc	3,2
  5967  0C69  2C6B               	goto	u3071
  5968  0C6A  2C6C               	goto	u3070
  5969  0C6B                     u3071:
  5970  0C6B  2C70               	goto	l903
  5971  0C6C                     u3070:
  5972  0C6C                     l2975:
  5973  0C6C  3001               	movlw	1
  5974  0C6D  00C2               	movwf	??___fladd
  5975  0C6E  0842               	movf	??___fladd,w
  5976  0C6F  07CC               	addwf	___fladd@bexp,f
  5977  0C70                     l903:
  5978  0C70  0A4C               	incf	___fladd@bexp,w
  5979  0C71  1903               	btfsc	3,2
  5980  0C72  2C74               	goto	u3081
  5981  0C73  2C75               	goto	u3080
  5982  0C74                     u3081:
  5983  0C74  2C7A               	goto	l2979
  5984  0C75                     u3080:
  5985  0C75                     l2977:
  5986  0C75  084C               	movf	___fladd@bexp,w
  5987  0C76  1D03               	btfss	3,2
  5988  0C77  2C79               	goto	u3091
  5989  0C78  2C7A               	goto	u3090
  5990  0C79                     u3091:
  5991  0C79  2C88               	goto	l2985
  5992  0C7A                     u3090:
  5993  0C7A                     l2979:
  5994  0C7A  3000               	movlw	0
  5995  0C7B  00BD               	movwf	___fladd@b+3
  5996  0C7C  3000               	movlw	0
  5997  0C7D  00BC               	movwf	___fladd@b+2
  5998  0C7E  3000               	movlw	0
  5999  0C7F  00BB               	movwf	___fladd@b+1
  6000  0C80  3000               	movlw	0
  6001  0C81  00BA               	movwf	___fladd@b
  6002  0C82                     l2981:
  6003  0C82  084C               	movf	___fladd@bexp,w
  6004  0C83  1D03               	btfss	3,2
  6005  0C84  2C86               	goto	u3101
  6006  0C85  2C87               	goto	u3100
  6007  0C86                     u3101:
  6008  0C86  2C88               	goto	l2985
  6009  0C87                     u3100:
  6010  0C87                     l2983:
  6011  0C87  01CA               	clrf	___fladd@signs
  6012  0C88                     l2985:
  6013  0C88  1C4C               	btfss	___fladd@bexp,0
  6014  0C89  2C8B               	goto	u3111
  6015  0C8A  2C8C               	goto	u3110
  6016  0C8B                     u3111:
  6017  0C8B  2C8E               	goto	l2989
  6018  0C8C                     u3110:
  6019  0C8C                     l2987:
  6020  0C8C  17BC               	bsf	___fladd@b+2,7
  6021  0C8D  2C92               	goto	l911
  6022  0C8E                     l2989:
  6023  0C8E  307F               	movlw	127
  6024  0C8F  00C2               	movwf	??___fladd
  6025  0C90  0842               	movf	??___fladd,w
  6026  0C91  05BC               	andwf	___fladd@b+2,f
  6027  0C92                     l911:
  6028  0C92  084C               	movf	___fladd@bexp,w
  6029  0C93  00C2               	movwf	??___fladd
  6030  0C94  1003               	clrc
  6031  0C95  0C42               	rrf	??___fladd,w
  6032  0C96  00C3               	movwf	??___fladd+1
  6033  0C97  0843               	movf	??___fladd+1,w
  6034  0C98  00BD               	movwf	___fladd@b+3
  6035  0C99                     l2991:
  6036  0C99  1FCA               	btfss	___fladd@signs,7
  6037  0C9A  2C9C               	goto	u3121
  6038  0C9B  2C9D               	goto	u3120
  6039  0C9C                     u3121:
  6040  0C9C  2C9E               	goto	l912
  6041  0C9D                     u3120:
  6042  0C9D                     l2993:
  6043  0C9D  17BD               	bsf	___fladd@b+3,7
  6044  0C9E                     l912:
  6045  0C9E                     l882:
  6046  0C9E  0008               	return
  6047  0C9F                     __end_of___fladd:
  6048                           
  6049                           	psect	text9
  6050  153A                     __ptext9:	
  6051 ;; *************** function _RTC_Read_Clock *****************
  6052 ;; Defined at:
  6053 ;;		line 16 in file "RTC.c"
  6054 ;; Parameters:    Size  Location     Type
  6055 ;;  read_clock_a    1    wreg     unsigned char 
  6056 ;; Auto vars:     Size  Location     Type
  6057 ;;  read_clock_a    1    5[COMMON] unsigned char 
  6058 ;; Return value:  Size  Location     Type
  6059 ;;                  1    wreg      void 
  6060 ;; Registers used:
  6061 ;;		wreg, status,2, status,0, pclath, cstack
  6062 ;; Tracked objects:
  6063 ;;		On entry : 0/0
  6064 ;;		On exit  : 0/0
  6065 ;;		Unchanged: 0/0
  6066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6067 ;;      Params:         0       0       0       0       0
  6068 ;;      Locals:         1       0       0       0       0
  6069 ;;      Temps:          2       0       0       0       0
  6070 ;;      Totals:         3       0       0       0       0
  6071 ;;Total ram usage:        3 bytes
  6072 ;; Hardware stack levels used: 1
  6073 ;; Hardware stack levels required when called: 3
  6074 ;; This function calls:
  6075 ;;		_I2C_Read
  6076 ;;		_I2C_Repeated_Start
  6077 ;;		_I2C_Start
  6078 ;;		_I2C_Write
  6079 ;; This function is called by:
  6080 ;;		_main
  6081 ;; This function uses a non-reentrant model
  6082 ;;
  6083                           
  6084  153A                     _RTC_Read_Clock:	
  6085                           ;psect for function _RTC_Read_Clock
  6086                           
  6087                           
  6088                           ;incstack = 0
  6089                           ; Regs used in _RTC_Read_Clock: [wreg+status,2+status,0+pclath+cstack]
  6090                           ;RTC_Read_Clock@read_clock_address stored from wreg
  6091  153A  00F5               	movwf	RTC_Read_Clock@read_clock_address
  6092  153B                     l3299:
  6093                           
  6094                           ;RTC.c: 16: void RTC_Read_Clock(char read_clock_address);RTC.c: 17: {;RTC.c: 18:     I2C
      +                          _Start(0xD0);
  6095  153B  30D0               	movlw	208
  6096  153C  160A  118A  2351  160A  118A  	fcall	_I2C_Start
  6097                           
  6098                           ;RTC.c: 19:     I2C_Write(read_clock_address);
  6099  1541  0875               	movf	RTC_Read_Clock@read_clock_address,w
  6100  1542  160A  118A  2313  160A  118A  	fcall	_I2C_Write
  6101                           
  6102                           ;RTC.c: 20:     I2C_Repeated_Start(0xD1);
  6103  1547  30D1               	movlw	209
  6104  1548  160A  118A  236A  160A  118A  	fcall	_I2C_Repeated_Start
  6105                           
  6106                           ;RTC.c: 21:     sec = I2C_Read(0);
  6107  154D  3000               	movlw	0
  6108  154E  160A  118A  23FB  160A  118A  	fcall	_I2C_Read
  6109  1553  00F3               	movwf	??_RTC_Read_Clock
  6110  1554  01F4               	clrf	??_RTC_Read_Clock+1
  6111  1555  0873               	movf	??_RTC_Read_Clock,w
  6112  1556  1683               	bsf	3,5	;RP0=1, select bank1
  6113  1557  1303               	bcf	3,6	;RP1=0, select bank1
  6114  1558  00EA               	movwf	_sec^(0+128)
  6115  1559  0874               	movf	??_RTC_Read_Clock+1,w
  6116  155A  00EB               	movwf	(_sec+1)^(0+128)
  6117                           
  6118                           ;RTC.c: 22:     min = I2C_Read(0);
  6119  155B  3000               	movlw	0
  6120  155C  160A  118A  23FB  160A  118A  	fcall	_I2C_Read
  6121  1561  00F3               	movwf	??_RTC_Read_Clock
  6122  1562  01F4               	clrf	??_RTC_Read_Clock+1
  6123  1563  0873               	movf	??_RTC_Read_Clock,w
  6124  1564  1683               	bsf	3,5	;RP0=1, select bank1
  6125  1565  1303               	bcf	3,6	;RP1=0, select bank1
  6126  1566  00E8               	movwf	_min^(0+128)
  6127  1567  0874               	movf	??_RTC_Read_Clock+1,w
  6128  1568  00E9               	movwf	(_min+1)^(0+128)
  6129                           
  6130                           ;RTC.c: 23:     hour= I2C_Read(1);
  6131  1569  3001               	movlw	1
  6132  156A  160A  118A  23FB  160A  118A  	fcall	_I2C_Read
  6133  156F  00F3               	movwf	??_RTC_Read_Clock
  6134  1570  01F4               	clrf	??_RTC_Read_Clock+1
  6135  1571  0873               	movf	??_RTC_Read_Clock,w
  6136  1572  1683               	bsf	3,5	;RP0=1, select bank1
  6137  1573  1303               	bcf	3,6	;RP1=0, select bank1
  6138  1574  00E6               	movwf	_hour^(0+128)
  6139  1575  0874               	movf	??_RTC_Read_Clock+1,w
  6140  1576  00E7               	movwf	(_hour+1)^(0+128)
  6141  1577                     l413:
  6142  1577  0008               	return
  6143  1578                     __end_of_RTC_Read_Clock:
  6144                           
  6145                           	psect	text10
  6146  15BA                     __ptext10:	
  6147 ;; *************** function _RTC_Read_Calendar *****************
  6148 ;; Defined at:
  6149 ;;		line 27 in file "RTC.c"
  6150 ;; Parameters:    Size  Location     Type
  6151 ;;  read_calenda    1    wreg     unsigned char 
  6152 ;; Auto vars:     Size  Location     Type
  6153 ;;  read_calenda    1    5[COMMON] unsigned char 
  6154 ;; Return value:  Size  Location     Type
  6155 ;;                  1    wreg      void 
  6156 ;; Registers used:
  6157 ;;		wreg, status,2, status,0, pclath, cstack
  6158 ;; Tracked objects:
  6159 ;;		On entry : 0/0
  6160 ;;		On exit  : 0/0
  6161 ;;		Unchanged: 0/0
  6162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6163 ;;      Params:         0       0       0       0       0
  6164 ;;      Locals:         1       0       0       0       0
  6165 ;;      Temps:          2       0       0       0       0
  6166 ;;      Totals:         3       0       0       0       0
  6167 ;;Total ram usage:        3 bytes
  6168 ;; Hardware stack levels used: 1
  6169 ;; Hardware stack levels required when called: 3
  6170 ;; This function calls:
  6171 ;;		_I2C_Read
  6172 ;;		_I2C_Repeated_Start
  6173 ;;		_I2C_Start
  6174 ;;		_I2C_Stop
  6175 ;;		_I2C_Write
  6176 ;; This function is called by:
  6177 ;;		_main
  6178 ;; This function uses a non-reentrant model
  6179 ;;
  6180                           
  6181  15BA                     _RTC_Read_Calendar:	
  6182                           ;psect for function _RTC_Read_Calendar
  6183                           
  6184                           
  6185                           ;incstack = 0
  6186                           ; Regs used in _RTC_Read_Calendar: [wreg+status,2+status,0+pclath+cstack]
  6187                           ;RTC_Read_Calendar@read_calendar_address stored from wreg
  6188  15BA  00F5               	movwf	RTC_Read_Calendar@read_calendar_address
  6189  15BB                     l3301:
  6190                           
  6191                           ;RTC.c: 27: void RTC_Read_Calendar(char read_calendar_address);RTC.c: 28: {;RTC.c: 29:  
      +                             I2C_Start(0xD0);
  6192  15BB  30D0               	movlw	208
  6193  15BC  160A  118A  2351  160A  118A  	fcall	_I2C_Start
  6194                           
  6195                           ;RTC.c: 30:     I2C_Write(read_calendar_address);
  6196  15C1  0875               	movf	RTC_Read_Calendar@read_calendar_address,w
  6197  15C2  160A  118A  2313  160A  118A  	fcall	_I2C_Write
  6198                           
  6199                           ;RTC.c: 31:     I2C_Repeated_Start(0xD1);
  6200  15C7  30D1               	movlw	209
  6201  15C8  160A  118A  236A  160A  118A  	fcall	_I2C_Repeated_Start
  6202                           
  6203                           ;RTC.c: 32:     Day = I2C_Read(0);
  6204  15CD  3000               	movlw	0
  6205  15CE  160A  118A  23FB  160A  118A  	fcall	_I2C_Read
  6206  15D3  00F3               	movwf	??_RTC_Read_Calendar
  6207  15D4  01F4               	clrf	??_RTC_Read_Calendar+1
  6208  15D5  0873               	movf	??_RTC_Read_Calendar,w
  6209  15D6  1283               	bcf	3,5	;RP0=0, select bank0
  6210  15D7  1303               	bcf	3,6	;RP1=0, select bank0
  6211  15D8  00E4               	movwf	_Day
  6212  15D9  0874               	movf	??_RTC_Read_Calendar+1,w
  6213  15DA  00E5               	movwf	_Day+1
  6214                           
  6215                           ;RTC.c: 33:     Date = I2C_Read(0);
  6216  15DB  3000               	movlw	0
  6217  15DC  160A  118A  23FB  160A  118A  	fcall	_I2C_Read
  6218  15E1  00F3               	movwf	??_RTC_Read_Calendar
  6219  15E2  01F4               	clrf	??_RTC_Read_Calendar+1
  6220  15E3  0873               	movf	??_RTC_Read_Calendar,w
  6221  15E4  1283               	bcf	3,5	;RP0=0, select bank0
  6222  15E5  1303               	bcf	3,6	;RP1=0, select bank0
  6223  15E6  00E2               	movwf	_Date
  6224  15E7  0874               	movf	??_RTC_Read_Calendar+1,w
  6225  15E8  00E3               	movwf	_Date+1
  6226                           
  6227                           ;RTC.c: 34:     Month = I2C_Read(0);
  6228  15E9  3000               	movlw	0
  6229  15EA  160A  118A  23FB  160A  118A  	fcall	_I2C_Read
  6230  15EF  00F3               	movwf	??_RTC_Read_Calendar
  6231  15F0  01F4               	clrf	??_RTC_Read_Calendar+1
  6232  15F1  0873               	movf	??_RTC_Read_Calendar,w
  6233  15F2  1683               	bsf	3,5	;RP0=1, select bank3
  6234  15F3  1703               	bsf	3,6	;RP1=1, select bank3
  6235  15F4  0092               	movwf	_Month^(0+384)
  6236  15F5  0874               	movf	??_RTC_Read_Calendar+1,w
  6237  15F6  0093               	movwf	(_Month+1)^(0+384)
  6238                           
  6239                           ;RTC.c: 35:     Year = I2C_Read(1);
  6240  15F7  3001               	movlw	1
  6241  15F8  160A  118A  23FB  160A  118A  	fcall	_I2C_Read
  6242  15FD  00F3               	movwf	??_RTC_Read_Calendar
  6243  15FE  01F4               	clrf	??_RTC_Read_Calendar+1
  6244  15FF  0873               	movf	??_RTC_Read_Calendar,w
  6245  1600  1683               	bsf	3,5	;RP0=1, select bank3
  6246  1601  1703               	bsf	3,6	;RP1=1, select bank3
  6247  1602  0090               	movwf	_Year^(0+384)
  6248  1603  0874               	movf	??_RTC_Read_Calendar+1,w
  6249  1604  0091               	movwf	(_Year+1)^(0+384)
  6250                           
  6251                           ;RTC.c: 36:     I2C_Stop();
  6252  1605  160A  118A  22BF  160A  118A  	fcall	_I2C_Stop
  6253  160A                     l416:
  6254  160A  0008               	return
  6255  160B                     __end_of_RTC_Read_Calendar:
  6256                           
  6257                           	psect	text11
  6258  136A                     __ptext11:	
  6259 ;; *************** function _I2C_Repeated_Start *****************
  6260 ;; Defined at:
  6261 ;;		line 77 in file "I2C_Master.c"
  6262 ;; Parameters:    Size  Location     Type
  6263 ;;  slave_read_a    1    wreg     unsigned char 
  6264 ;; Auto vars:     Size  Location     Type
  6265 ;;  slave_read_a    1    1[COMMON] unsigned char 
  6266 ;; Return value:  Size  Location     Type
  6267 ;;                  1    wreg      unsigned char 
  6268 ;; Registers used:
  6269 ;;		wreg, status,2, status,0, pclath, cstack
  6270 ;; Tracked objects:
  6271 ;;		On entry : 0/0
  6272 ;;		On exit  : 0/0
  6273 ;;		Unchanged: 0/0
  6274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6275 ;;      Params:         0       0       0       0       0
  6276 ;;      Locals:         1       0       0       0       0
  6277 ;;      Temps:          0       0       0       0       0
  6278 ;;      Totals:         1       0       0       0       0
  6279 ;;Total ram usage:        1 bytes
  6280 ;; Hardware stack levels used: 1
  6281 ;; Hardware stack levels required when called: 2
  6282 ;; This function calls:
  6283 ;;		_I2C_Write
  6284 ;; This function is called by:
  6285 ;;		_RTC_Read_Clock
  6286 ;;		_RTC_Read_Calendar
  6287 ;; This function uses a non-reentrant model
  6288 ;;
  6289                           
  6290  136A                     _I2C_Repeated_Start:	
  6291                           ;psect for function _I2C_Repeated_Start
  6292                           
  6293                           
  6294                           ;incstack = 0
  6295                           ; Regs used in _I2C_Repeated_Start: [wreg+status,2+status,0+pclath+cstack]
  6296                           ;I2C_Repeated_Start@slave_read_address stored from wreg
  6297  136A  00F1               	movwf	I2C_Repeated_Start@slave_read_address
  6298  136B                     l2565:
  6299                           
  6300                           ;I2C_Master.c: 77: char I2C_Repeated_Start(char slave_read_address);I2C_Master.c: 78: {;
      +                          I2C_Master.c: 79:     RSEN = 1;
  6301  136B  1683               	bsf	3,5	;RP0=1, select bank1
  6302  136C  1303               	bcf	3,6	;RP1=0, select bank1
  6303  136D  1491               	bsf	17,1	;volatile
  6304  136E                     l80:	
  6305                           ;I2C_Master.c: 80:     while(RSEN);
  6306                           
  6307  136E  1891               	btfsc	17,1	;volatile
  6308  136F  2B71               	goto	u2301
  6309  1370  2B72               	goto	u2300
  6310  1371                     u2301:
  6311  1371  2B6E               	goto	l80
  6312  1372                     u2300:
  6313  1372                     l82:
  6314                           
  6315                           ;I2C_Master.c: 81:     SSPIF = 0;
  6316  1372  1283               	bcf	3,5	;RP0=0, select bank0
  6317  1373  1303               	bcf	3,6	;RP1=0, select bank0
  6318  1374  118C               	bcf	12,3	;volatile
  6319                           
  6320                           ;I2C_Master.c: 82:  if(!SSPSTATbits.S)
  6321  1375  1683               	bsf	3,5	;RP0=1, select bank1
  6322  1376  1303               	bcf	3,6	;RP1=0, select bank1
  6323  1377  1994               	btfsc	20,3	;volatile
  6324  1378  2B7A               	goto	u2311
  6325  1379  2B7B               	goto	u2310
  6326  137A                     u2311:
  6327  137A  2B7C               	goto	l2569
  6328  137B                     u2310:
  6329  137B  2B82               	goto	l84
  6330  137C                     l2569:
  6331                           
  6332                           ;I2C_Master.c: 84:     I2C_Write(slave_read_address);
  6333  137C  0871               	movf	I2C_Repeated_Start@slave_read_address,w
  6334  137D  160A  118A  2313  160A  118A  	fcall	_I2C_Write
  6335  1382                     l2571:
  6336  1382                     l84:	
  6337                           ;I2C_Master.c: 85:     if (ACKSTAT)
  6338                           
  6339  1382  0008               	return
  6340  1383                     __end_of_I2C_Repeated_Start:
  6341                           
  6342                           	psect	text12
  6343  13FB                     __ptext12:	
  6344 ;; *************** function _I2C_Read *****************
  6345 ;; Defined at:
  6346 ;;		line 10 in file "I2C_Master.c"
  6347 ;; Parameters:    Size  Location     Type
  6348 ;;  flag            1    wreg     unsigned char 
  6349 ;; Auto vars:     Size  Location     Type
  6350 ;;  flag            1    1[COMMON] unsigned char 
  6351 ;;  buffer          1    2[COMMON] unsigned char 
  6352 ;; Return value:  Size  Location     Type
  6353 ;;                  1    wreg      unsigned char 
  6354 ;; Registers used:
  6355 ;;		wreg, status,2, status,0, pclath, cstack
  6356 ;; Tracked objects:
  6357 ;;		On entry : 0/0
  6358 ;;		On exit  : 0/0
  6359 ;;		Unchanged: 0/0
  6360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6361 ;;      Params:         0       0       0       0       0
  6362 ;;      Locals:         2       0       0       0       0
  6363 ;;      Temps:          1       0       0       0       0
  6364 ;;      Totals:         3       0       0       0       0
  6365 ;;Total ram usage:        3 bytes
  6366 ;; Hardware stack levels used: 1
  6367 ;; Hardware stack levels required when called: 1
  6368 ;; This function calls:
  6369 ;;		_I2C_Ack
  6370 ;;		_I2C_Nack
  6371 ;;		_I2C_Ready
  6372 ;; This function is called by:
  6373 ;;		_RTC_Read_Clock
  6374 ;;		_RTC_Read_Calendar
  6375 ;; This function uses a non-reentrant model
  6376 ;;
  6377                           
  6378  13FB                     _I2C_Read:	
  6379                           ;psect for function _I2C_Read
  6380                           
  6381                           
  6382                           ;incstack = 0
  6383                           ; Regs used in _I2C_Read: [wreg+status,2+status,0+pclath+cstack]
  6384                           ;I2C_Read@flag stored from wreg
  6385  13FB  00F1               	movwf	I2C_Read@flag
  6386  13FC                     l2551:
  6387                           
  6388                           ;I2C_Master.c: 10: char I2C_Read(char flag);I2C_Master.c: 12: {;I2C_Master.c: 13:       
      +                            char buffer;;I2C_Master.c: 14:         RCEN = 1;
  6389  13FC  1683               	bsf	3,5	;RP0=1, select bank1
  6390  13FD  1303               	bcf	3,6	;RP1=0, select bank1
  6391  13FE  1591               	bsf	17,3	;volatile
  6392  13FF                     l45:	
  6393                           ;I2C_Master.c: 15:         while(!SSPSTATbits.BF);
  6394                           
  6395  13FF  1C14               	btfss	20,0	;volatile
  6396  1400  2C02               	goto	u2281
  6397  1401  2C03               	goto	u2280
  6398  1402                     u2281:
  6399  1402  2BFF               	goto	l45
  6400  1403                     u2280:
  6401  1403                     l2553:
  6402                           
  6403                           ;I2C_Master.c: 17:         buffer = SSPBUF;
  6404  1403  1283               	bcf	3,5	;RP0=0, select bank0
  6405  1404  1303               	bcf	3,6	;RP1=0, select bank0
  6406  1405  0813               	movf	19,w	;volatile
  6407  1406  00F0               	movwf	??_I2C_Read
  6408  1407  0870               	movf	??_I2C_Read,w
  6409  1408  00F2               	movwf	I2C_Read@buffer
  6410  1409                     l2555:
  6411                           
  6412                           ;I2C_Master.c: 19:         if(flag==0)
  6413  1409  0871               	movf	I2C_Read@flag,w
  6414  140A  1D03               	btfss	3,2
  6415  140B  2C0D               	goto	u2291
  6416  140C  2C0E               	goto	u2290
  6417  140D                     u2291:
  6418  140D  2C14               	goto	l2559
  6419  140E                     u2290:
  6420  140E                     l2557:
  6421                           
  6422                           ;I2C_Master.c: 20:             I2C_Ack();
  6423  140E  160A  118A  22C8  160A  118A  	fcall	_I2C_Ack
  6424  1413  2C19               	goto	l49
  6425  1414                     l2559:
  6426                           
  6427                           ;I2C_Master.c: 22:             I2C_Nack();
  6428  1414  120A  118A  2005  160A  118A  	fcall	_I2C_Nack
  6429  1419                     l49:
  6430                           
  6431                           ;I2C_Master.c: 23:         I2C_Ready();
  6432  1419  160A  118A  22AF  160A  118A  	fcall	_I2C_Ready
  6433  141E                     l2561:
  6434                           
  6435                           ;I2C_Master.c: 24:         return(buffer);
  6436  141E  0872               	movf	I2C_Read@buffer,w
  6437  141F                     l50:
  6438  141F  0008               	return
  6439  1420                     __end_of_I2C_Read:
  6440                           
  6441                           	psect	text13
  6442  0005                     __ptext13:	
  6443 ;; *************** function _I2C_Nack *****************
  6444 ;; Defined at:
  6445 ;;		line 117 in file "I2C_Master.c"
  6446 ;; Parameters:    Size  Location     Type
  6447 ;;		None
  6448 ;; Auto vars:     Size  Location     Type
  6449 ;;		None
  6450 ;; Return value:  Size  Location     Type
  6451 ;;                  1    wreg      void 
  6452 ;; Registers used:
  6453 ;;		None
  6454 ;; Tracked objects:
  6455 ;;		On entry : 0/0
  6456 ;;		On exit  : 0/0
  6457 ;;		Unchanged: 0/0
  6458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6459 ;;      Params:         0       0       0       0       0
  6460 ;;      Locals:         0       0       0       0       0
  6461 ;;      Temps:          0       0       0       0       0
  6462 ;;      Totals:         0       0       0       0       0
  6463 ;;Total ram usage:        0 bytes
  6464 ;; Hardware stack levels used: 1
  6465 ;; This function calls:
  6466 ;;		Nothing
  6467 ;; This function is called by:
  6468 ;;		_I2C_Read
  6469 ;; This function uses a non-reentrant model
  6470 ;;
  6471                           
  6472  0005                     _I2C_Nack:	
  6473                           ;psect for function _I2C_Nack
  6474                           
  6475  0005                     l2451:	
  6476                           ;incstack = 0
  6477                           ; Regs used in _I2C_Nack: []
  6478                           
  6479                           
  6480                           ;I2C_Master.c: 119:     ACKDT=1;
  6481  0005  1683               	bsf	3,5	;RP0=1, select bank1
  6482  0006  1303               	bcf	3,6	;RP1=0, select bank1
  6483  0007  1691               	bsf	17,5	;volatile
  6484                           
  6485                           ;I2C_Master.c: 120:  ACKEN=1;
  6486  0008  1611               	bsf	17,4	;volatile
  6487  0009                     l107:	
  6488                           ;I2C_Master.c: 121:     while(ACKEN);
  6489                           
  6490  0009  1A11               	btfsc	17,4	;volatile
  6491  000A  280C               	goto	u2031
  6492  000B  280D               	goto	u2030
  6493  000C                     u2031:
  6494  000C  2809               	goto	l107
  6495  000D                     u2030:
  6496  000D                     l110:
  6497  000D  0008               	return
  6498  000E                     __end_of_I2C_Nack:
  6499                           
  6500                           	psect	text14
  6501  12C8                     __ptext14:	
  6502 ;; *************** function _I2C_Ack *****************
  6503 ;; Defined at:
  6504 ;;		line 110 in file "I2C_Master.c"
  6505 ;; Parameters:    Size  Location     Type
  6506 ;;		None
  6507 ;; Auto vars:     Size  Location     Type
  6508 ;;		None
  6509 ;; Return value:  Size  Location     Type
  6510 ;;                  1    wreg      void 
  6511 ;; Registers used:
  6512 ;;		None
  6513 ;; Tracked objects:
  6514 ;;		On entry : 0/0
  6515 ;;		On exit  : 0/0
  6516 ;;		Unchanged: 0/0
  6517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6518 ;;      Params:         0       0       0       0       0
  6519 ;;      Locals:         0       0       0       0       0
  6520 ;;      Temps:          0       0       0       0       0
  6521 ;;      Totals:         0       0       0       0       0
  6522 ;;Total ram usage:        0 bytes
  6523 ;; Hardware stack levels used: 1
  6524 ;; This function calls:
  6525 ;;		Nothing
  6526 ;; This function is called by:
  6527 ;;		_I2C_Read
  6528 ;; This function uses a non-reentrant model
  6529 ;;
  6530                           
  6531  12C8                     _I2C_Ack:	
  6532                           ;psect for function _I2C_Ack
  6533                           
  6534  12C8                     l2449:	
  6535                           ;incstack = 0
  6536                           ; Regs used in _I2C_Ack: []
  6537                           
  6538                           
  6539                           ;I2C_Master.c: 112:     ACKDT=0;
  6540  12C8  1683               	bsf	3,5	;RP0=1, select bank1
  6541  12C9  1303               	bcf	3,6	;RP1=0, select bank1
  6542  12CA  1291               	bcf	17,5	;volatile
  6543                           
  6544                           ;I2C_Master.c: 113:  ACKEN=1;
  6545  12CB  1611               	bsf	17,4	;volatile
  6546  12CC                     l101:	
  6547                           ;I2C_Master.c: 114:     while(ACKEN);
  6548                           
  6549  12CC  1A11               	btfsc	17,4	;volatile
  6550  12CD  2ACF               	goto	u2021
  6551  12CE  2AD0               	goto	u2020
  6552  12CF                     u2021:
  6553  12CF  2ACC               	goto	l101
  6554  12D0                     u2020:
  6555  12D0                     l104:
  6556  12D0  0008               	return
  6557  12D1                     __end_of_I2C_Ack:
  6558                           
  6559                           	psect	text15
  6560  1447                     __ptext15:	
  6561 ;; *************** function _RTC_Clock_Write *****************
  6562 ;; Defined at:
  6563 ;;		line 39 in file "RTC.c"
  6564 ;; Parameters:    Size  Location     Type
  6565 ;;  sec             1    wreg     unsigned char 
  6566 ;;  min             1    2[COMMON] unsigned char 
  6567 ;;  hour            1    3[COMMON] unsigned char 
  6568 ;;  AM_PM           1    4[COMMON] unsigned char 
  6569 ;; Auto vars:     Size  Location     Type
  6570 ;;  sec             1    6[COMMON] unsigned char 
  6571 ;; Return value:  Size  Location     Type
  6572 ;;                  1    wreg      void 
  6573 ;; Registers used:
  6574 ;;		wreg, status,2, status,0, pclath, cstack
  6575 ;; Tracked objects:
  6576 ;;		On entry : 0/0
  6577 ;;		On exit  : 0/0
  6578 ;;		Unchanged: 0/0
  6579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6580 ;;      Params:         3       0       0       0       0
  6581 ;;      Locals:         1       0       0       0       0
  6582 ;;      Temps:          1       0       0       0       0
  6583 ;;      Totals:         5       0       0       0       0
  6584 ;;Total ram usage:        5 bytes
  6585 ;; Hardware stack levels used: 1
  6586 ;; Hardware stack levels required when called: 3
  6587 ;; This function calls:
  6588 ;;		_I2C_Start
  6589 ;;		_I2C_Stop
  6590 ;;		_I2C_Write
  6591 ;; This function is called by:
  6592 ;;		_main
  6593 ;; This function uses a non-reentrant model
  6594 ;;
  6595                           
  6596  1447                     _RTC_Clock_Write:	
  6597                           ;psect for function _RTC_Clock_Write
  6598                           
  6599                           
  6600                           ;incstack = 0
  6601                           ; Regs used in _RTC_Clock_Write: [wreg+status,2+status,0+pclath+cstack]
  6602                           ;RTC_Clock_Write@sec stored from wreg
  6603  1447  00F6               	movwf	RTC_Clock_Write@sec
  6604  1448                     l3283:
  6605                           
  6606                           ;RTC.c: 39: void RTC_Clock_Write(char sec, char min, char hour, char AM_PM);RTC.c: 40: {
      +                          ;RTC.c: 41:     hour = (hour | AM_PM);
  6607  1448  0873               	movf	RTC_Clock_Write@hour,w
  6608  1449  0474               	iorwf	RTC_Clock_Write@AM_PM,w
  6609  144A  00F5               	movwf	??_RTC_Clock_Write
  6610  144B  0875               	movf	??_RTC_Clock_Write,w
  6611  144C  00F3               	movwf	RTC_Clock_Write@hour
  6612  144D                     l3285:
  6613                           
  6614                           ;RTC.c: 42:  I2C_Start(0xD0);
  6615  144D  30D0               	movlw	208
  6616  144E  160A  118A  2351  160A  118A  	fcall	_I2C_Start
  6617  1453                     l3287:
  6618                           
  6619                           ;RTC.c: 43:  I2C_Write(0);
  6620  1453  3000               	movlw	0
  6621  1454  160A  118A  2313  160A  118A  	fcall	_I2C_Write
  6622  1459                     l3289:
  6623                           
  6624                           ;RTC.c: 44:  I2C_Write(sec);
  6625  1459  0876               	movf	RTC_Clock_Write@sec,w
  6626  145A  160A  118A  2313  160A  118A  	fcall	_I2C_Write
  6627  145F                     l3291:
  6628                           
  6629                           ;RTC.c: 45:  I2C_Write(min);
  6630  145F  0872               	movf	RTC_Clock_Write@min,w
  6631  1460  160A  118A  2313  160A  118A  	fcall	_I2C_Write
  6632  1465                     l3293:
  6633                           
  6634                           ;RTC.c: 46:  I2C_Write(hour);
  6635  1465  0873               	movf	RTC_Clock_Write@hour,w
  6636  1466  160A  118A  2313  160A  118A  	fcall	_I2C_Write
  6637  146B                     l3295:
  6638                           
  6639                           ;RTC.c: 47:  I2C_Stop();
  6640  146B  160A  118A  22BF  160A  118A  	fcall	_I2C_Stop
  6641  1470                     l419:
  6642  1470  0008               	return
  6643  1471                     __end_of_RTC_Clock_Write:
  6644                           
  6645                           	psect	text16
  6646  1471                     __ptext16:	
  6647 ;; *************** function _RTC_Calendar_Write *****************
  6648 ;; Defined at:
  6649 ;;		line 50 in file "RTC.c"
  6650 ;; Parameters:    Size  Location     Type
  6651 ;;  day             1    wreg     unsigned char 
  6652 ;;  date            1    2[COMMON] unsigned char 
  6653 ;;  month           1    3[COMMON] unsigned char 
  6654 ;;  year            1    4[COMMON] unsigned char 
  6655 ;; Auto vars:     Size  Location     Type
  6656 ;;  day             1    5[COMMON] unsigned char 
  6657 ;; Return value:  Size  Location     Type
  6658 ;;                  1    wreg      void 
  6659 ;; Registers used:
  6660 ;;		wreg, status,2, status,0, pclath, cstack
  6661 ;; Tracked objects:
  6662 ;;		On entry : 0/0
  6663 ;;		On exit  : 0/0
  6664 ;;		Unchanged: 0/0
  6665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6666 ;;      Params:         3       0       0       0       0
  6667 ;;      Locals:         1       0       0       0       0
  6668 ;;      Temps:          0       0       0       0       0
  6669 ;;      Totals:         4       0       0       0       0
  6670 ;;Total ram usage:        4 bytes
  6671 ;; Hardware stack levels used: 1
  6672 ;; Hardware stack levels required when called: 3
  6673 ;; This function calls:
  6674 ;;		_I2C_Start
  6675 ;;		_I2C_Stop
  6676 ;;		_I2C_Write
  6677 ;; This function is called by:
  6678 ;;		_main
  6679 ;; This function uses a non-reentrant model
  6680 ;;
  6681                           
  6682  1471                     _RTC_Calendar_Write:	
  6683                           ;psect for function _RTC_Calendar_Write
  6684                           
  6685                           
  6686                           ;incstack = 0
  6687                           ; Regs used in _RTC_Calendar_Write: [wreg+status,2+status,0+pclath+cstack]
  6688                           ;RTC_Calendar_Write@day stored from wreg
  6689  1471  00F5               	movwf	RTC_Calendar_Write@day
  6690  1472                     l3297:
  6691                           
  6692                           ;RTC.c: 50: void RTC_Calendar_Write(char day, char date, char month, char year);RTC.c: 5
      +                          1: {;RTC.c: 52:  I2C_Start(0xD0);
  6693  1472  30D0               	movlw	208
  6694  1473  160A  118A  2351  160A  118A  	fcall	_I2C_Start
  6695                           
  6696                           ;RTC.c: 53:  I2C_Write(3);
  6697  1478  3003               	movlw	3
  6698  1479  160A  118A  2313  160A  118A  	fcall	_I2C_Write
  6699                           
  6700                           ;RTC.c: 54:  I2C_Write(day);
  6701  147E  0875               	movf	RTC_Calendar_Write@day,w
  6702  147F  160A  118A  2313  160A  118A  	fcall	_I2C_Write
  6703                           
  6704                           ;RTC.c: 55:  I2C_Write(date);
  6705  1484  0872               	movf	RTC_Calendar_Write@date,w
  6706  1485  160A  118A  2313  160A  118A  	fcall	_I2C_Write
  6707                           
  6708                           ;RTC.c: 56:  I2C_Write(month);
  6709  148A  0873               	movf	RTC_Calendar_Write@month,w
  6710  148B  160A  118A  2313  160A  118A  	fcall	_I2C_Write
  6711                           
  6712                           ;RTC.c: 57:  I2C_Write(year);
  6713  1490  0874               	movf	RTC_Calendar_Write@year,w
  6714  1491  160A  118A  2313  160A  118A  	fcall	_I2C_Write
  6715                           
  6716                           ;RTC.c: 58:  I2C_Stop();
  6717  1496  160A  118A  22BF  160A  118A  	fcall	_I2C_Stop
  6718  149B                     l422:
  6719  149B  0008               	return
  6720  149C                     __end_of_RTC_Calendar_Write:
  6721                           
  6722                           	psect	text17
  6723  149C                     __ptext17:	
  6724 ;; *************** function _LCD_String_xy *****************
  6725 ;; Defined at:
  6726 ;;		line 8 in file "LCD.c"
  6727 ;; Parameters:    Size  Location     Type
  6728 ;;  row             1    wreg     unsigned char 
  6729 ;;  pos             1    0[BANK0 ] unsigned char 
  6730 ;;  msg             2    1[BANK0 ] PTR const unsigned char 
  6731 ;;		 -> main@buffer3_748(16), main@buffer3_745(16), main@buffer3_742(16), date(10), 
  6732 ;;		 -> hours(10), STR_6(3), STR_5(3), main@buffer3(16), 
  6733 ;; Auto vars:     Size  Location     Type
  6734 ;;  row             1    4[BANK0 ] unsigned char 
  6735 ;;  location        1    5[BANK0 ] unsigned char 
  6736 ;; Return value:  Size  Location     Type
  6737 ;;                  1    wreg      void 
  6738 ;; Registers used:
  6739 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6740 ;; Tracked objects:
  6741 ;;		On entry : 0/0
  6742 ;;		On exit  : 0/0
  6743 ;;		Unchanged: 0/0
  6744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6745 ;;      Params:         0       3       0       0       0
  6746 ;;      Locals:         0       2       0       0       0
  6747 ;;      Temps:          0       1       0       0       0
  6748 ;;      Totals:         0       6       0       0       0
  6749 ;;Total ram usage:        6 bytes
  6750 ;; Hardware stack levels used: 1
  6751 ;; Hardware stack levels required when called: 7
  6752 ;; This function calls:
  6753 ;;		_LCD_CMD
  6754 ;;		_LCD_Write_String
  6755 ;; This function is called by:
  6756 ;;		_main
  6757 ;; This function uses a non-reentrant model
  6758 ;;
  6759                           
  6760  149C                     _LCD_String_xy:	
  6761                           ;psect for function _LCD_String_xy
  6762                           
  6763                           
  6764                           ;incstack = 0
  6765                           ; Regs used in _LCD_String_xy: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6766                           ;LCD_String_xy@row stored from wreg
  6767  149C  1283               	bcf	3,5	;RP0=0, select bank0
  6768  149D  1303               	bcf	3,6	;RP1=0, select bank0
  6769  149E  00A4               	movwf	LCD_String_xy@row
  6770  149F                     l3191:
  6771  149F                     l3193:
  6772                           
  6773                           ;LCD.c: 11:     if(row<=1)
  6774  149F  3002               	movlw	2
  6775  14A0  0224               	subwf	LCD_String_xy@row,w
  6776  14A1  1803               	skipnc
  6777  14A2  2CA4               	goto	u3641
  6778  14A3  2CA5               	goto	u3640
  6779  14A4                     u3641:
  6780  14A4  2CB2               	goto	l3199
  6781  14A5                     u3640:
  6782  14A5                     l3195:
  6783                           
  6784                           ;LCD.c: 12:     {;LCD.c: 13:         location = (0x80) | ((pos) & 0x0f);
  6785  14A5  0820               	movf	LCD_String_xy@pos,w
  6786  14A6  390F               	andlw	15
  6787  14A7  3880               	iorlw	128
  6788  14A8  00A3               	movwf	??_LCD_String_xy
  6789  14A9  0823               	movf	??_LCD_String_xy,w
  6790  14AA  00A5               	movwf	LCD_String_xy@location
  6791  14AB                     l3197:
  6792                           
  6793                           ;LCD.c: 14:         LCD_CMD(location);
  6794  14AB  0825               	movf	LCD_String_xy@location,w
  6795  14AC  160A  118A  239D  160A  118A  	fcall	_LCD_CMD
  6796                           
  6797                           ;LCD.c: 15:     }
  6798  14B1  2CBE               	goto	l3203
  6799  14B2                     l3199:
  6800                           
  6801                           ;LCD.c: 17:     {;LCD.c: 18:         location = (0xC0) | ((pos) & 0x0f);
  6802  14B2  0820               	movf	LCD_String_xy@pos,w
  6803  14B3  390F               	andlw	15
  6804  14B4  38C0               	iorlw	192
  6805  14B5  00A3               	movwf	??_LCD_String_xy
  6806  14B6  0823               	movf	??_LCD_String_xy,w
  6807  14B7  00A5               	movwf	LCD_String_xy@location
  6808  14B8                     l3201:
  6809                           
  6810                           ;LCD.c: 19:         LCD_CMD(location);
  6811  14B8  0825               	movf	LCD_String_xy@location,w
  6812  14B9  160A  118A  239D  160A  118A  	fcall	_LCD_CMD
  6813  14BE                     l3203:
  6814                           
  6815                           ;LCD.c: 23:     LCD_Write_String(msg);
  6816  14BE  1283               	bcf	3,5	;RP0=0, select bank0
  6817  14BF  1303               	bcf	3,6	;RP1=0, select bank0
  6818  14C0  0821               	movf	LCD_String_xy@msg,w
  6819  14C1  00F7               	movwf	LCD_Write_String@Str
  6820  14C2  0822               	movf	LCD_String_xy@msg+1,w
  6821  14C3  00F8               	movwf	LCD_Write_String@Str+1
  6822  14C4  160A  118A  2578  160A  118A  	fcall	_LCD_Write_String
  6823  14C9                     l133:
  6824  14C9  0008               	return
  6825  14CA                     __end_of_LCD_String_xy:
  6826                           
  6827                           	psect	text18
  6828  16E5                     __ptext18:	
  6829 ;; *************** function _LCD_Init *****************
  6830 ;; Defined at:
  6831 ;;		line 27 in file "LCD.c"
  6832 ;; Parameters:    Size  Location     Type
  6833 ;;		None
  6834 ;; Auto vars:     Size  Location     Type
  6835 ;;		None
  6836 ;; Return value:  Size  Location     Type
  6837 ;;                  1    wreg      void 
  6838 ;; Registers used:
  6839 ;;		wreg, status,2, status,0, pclath, cstack
  6840 ;; Tracked objects:
  6841 ;;		On entry : 0/0
  6842 ;;		On exit  : 0/0
  6843 ;;		Unchanged: 0/0
  6844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6845 ;;      Params:         0       0       0       0       0
  6846 ;;      Locals:         0       0       0       0       0
  6847 ;;      Temps:          2       0       0       0       0
  6848 ;;      Totals:         2       0       0       0       0
  6849 ;;Total ram usage:        2 bytes
  6850 ;; Hardware stack levels used: 1
  6851 ;; Hardware stack levels required when called: 6
  6852 ;; This function calls:
  6853 ;;		_IO_Expander_Write
  6854 ;;		_LCD_CMD
  6855 ;; This function is called by:
  6856 ;;		_main
  6857 ;; This function uses a non-reentrant model
  6858 ;;
  6859                           
  6860  16E5                     _LCD_Init:	
  6861                           ;psect for function _LCD_Init
  6862                           
  6863  16E5                     l3205:	
  6864                           ;incstack = 0
  6865                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  6866                           
  6867                           
  6868                           ;LCD.c: 29:   IO_Expander_Write(0x00);
  6869  16E5  3000               	movlw	0
  6870  16E6  160A  118A  233B  160A  118A  	fcall	_IO_Expander_Write
  6871  16EB                     l3207:
  6872                           
  6873                           ;LCD.c: 30:   _delay((unsigned long)((30)*(8000000/4000.0)));
  6874  16EB  304E               	movlw	78
  6875  16EC  00F8               	movwf	??_LCD_Init+1
  6876  16ED  30EB               	movlw	235
  6877  16EE  00F7               	movwf	??_LCD_Init
  6878  16EF                     u3997:
  6879  16EF  0BF7               	decfsz	??_LCD_Init,f
  6880  16F0  2EEF               	goto	u3997
  6881  16F1  0BF8               	decfsz	??_LCD_Init+1,f
  6882  16F2  2EEF               	goto	u3997
  6883  16F3                     l3209:
  6884                           
  6885                           ;LCD.c: 31:   LCD_CMD(0x03);
  6886  16F3  3003               	movlw	3
  6887  16F4  160A  118A  239D  160A  118A  	fcall	_LCD_CMD
  6888                           
  6889                           ;LCD.c: 32:   _delay((unsigned long)((5)*(8000000/4000.0)));
  6890  16F9  300D               	movlw	13
  6891  16FA  00F8               	movwf	??_LCD_Init+1
  6892  16FB  30FB               	movlw	251
  6893  16FC  00F7               	movwf	??_LCD_Init
  6894  16FD                     u4007:
  6895  16FD  0BF7               	decfsz	??_LCD_Init,f
  6896  16FE  2EFD               	goto	u4007
  6897  16FF  0BF8               	decfsz	??_LCD_Init+1,f
  6898  1700  2EFD               	goto	u4007
  6899  1701  2F02               	nop2
  6900  1702                     l3211:
  6901                           
  6902                           ;LCD.c: 33:   LCD_CMD(0x03);
  6903  1702  3003               	movlw	3
  6904  1703  160A  118A  239D  160A  118A  	fcall	_LCD_CMD
  6905  1708                     l3213:
  6906                           
  6907                           ;LCD.c: 34:   _delay((unsigned long)((5)*(8000000/4000.0)));
  6908  1708  300D               	movlw	13
  6909  1709  00F8               	movwf	??_LCD_Init+1
  6910  170A  30FB               	movlw	251
  6911  170B  00F7               	movwf	??_LCD_Init
  6912  170C                     u4017:
  6913  170C  0BF7               	decfsz	??_LCD_Init,f
  6914  170D  2F0C               	goto	u4017
  6915  170E  0BF8               	decfsz	??_LCD_Init+1,f
  6916  170F  2F0C               	goto	u4017
  6917  1710  2F11               	nop2
  6918                           
  6919                           ;LCD.c: 35:   LCD_CMD(0x03);
  6920  1711  3003               	movlw	3
  6921  1712  160A  118A  239D  160A  118A  	fcall	_LCD_CMD
  6922  1717                     l3215:
  6923                           
  6924                           ;LCD.c: 36:   _delay((unsigned long)((5)*(8000000/4000.0)));
  6925  1717  300D               	movlw	13
  6926  1718  00F8               	movwf	??_LCD_Init+1
  6927  1719  30FB               	movlw	251
  6928  171A  00F7               	movwf	??_LCD_Init
  6929  171B                     u4027:
  6930  171B  0BF7               	decfsz	??_LCD_Init,f
  6931  171C  2F1B               	goto	u4027
  6932  171D  0BF8               	decfsz	??_LCD_Init+1,f
  6933  171E  2F1B               	goto	u4027
  6934  171F  2F20               	nop2
  6935  1720                     l3217:
  6936                           
  6937                           ;LCD.c: 37:   LCD_CMD(0x02);
  6938  1720  3002               	movlw	2
  6939  1721  160A  118A  239D  160A  118A  	fcall	_LCD_CMD
  6940                           
  6941                           ;LCD.c: 38:   _delay((unsigned long)((5)*(8000000/4000.0)));
  6942  1726  300D               	movlw	13
  6943  1727  00F8               	movwf	??_LCD_Init+1
  6944  1728  30FB               	movlw	251
  6945  1729  00F7               	movwf	??_LCD_Init
  6946  172A                     u4037:
  6947  172A  0BF7               	decfsz	??_LCD_Init,f
  6948  172B  2F2A               	goto	u4037
  6949  172C  0BF8               	decfsz	??_LCD_Init+1,f
  6950  172D  2F2A               	goto	u4037
  6951  172E  2F2F               	nop2
  6952  172F                     l3219:
  6953                           
  6954                           ;LCD.c: 39:   LCD_CMD(0x20 | (2 << 2));
  6955  172F  3028               	movlw	40
  6956  1730  160A  118A  239D  160A  118A  	fcall	_LCD_CMD
  6957  1735                     l3221:
  6958                           
  6959                           ;LCD.c: 40:   _delay((unsigned long)((50)*(8000000/4000.0)));
  6960  1735  3082               	movlw	130
  6961  1736  00F8               	movwf	??_LCD_Init+1
  6962  1737  30DD               	movlw	221
  6963  1738  00F7               	movwf	??_LCD_Init
  6964  1739                     u4047:
  6965  1739  0BF7               	decfsz	??_LCD_Init,f
  6966  173A  2F39               	goto	u4047
  6967  173B  0BF8               	decfsz	??_LCD_Init+1,f
  6968  173C  2F39               	goto	u4047
  6969  173D  2F3E               	nop2
  6970                           
  6971                           ;LCD.c: 41:   LCD_CMD(0x0C);
  6972  173E  300C               	movlw	12
  6973  173F  160A  118A  239D  160A  118A  	fcall	_LCD_CMD
  6974  1744                     l3223:
  6975                           
  6976                           ;LCD.c: 42:   _delay((unsigned long)((50)*(8000000/4000.0)));
  6977  1744  3082               	movlw	130
  6978  1745  00F8               	movwf	??_LCD_Init+1
  6979  1746  30DD               	movlw	221
  6980  1747  00F7               	movwf	??_LCD_Init
  6981  1748                     u4057:
  6982  1748  0BF7               	decfsz	??_LCD_Init,f
  6983  1749  2F48               	goto	u4057
  6984  174A  0BF8               	decfsz	??_LCD_Init+1,f
  6985  174B  2F48               	goto	u4057
  6986  174C  2F4D               	nop2
  6987  174D                     l3225:
  6988                           
  6989                           ;LCD.c: 43:   LCD_CMD(0x01);
  6990  174D  3001               	movlw	1
  6991  174E  160A  118A  239D  160A  118A  	fcall	_LCD_CMD
  6992                           
  6993                           ;LCD.c: 44:   _delay((unsigned long)((50)*(8000000/4000.0)));
  6994  1753  3082               	movlw	130
  6995  1754  00F8               	movwf	??_LCD_Init+1
  6996  1755  30DD               	movlw	221
  6997  1756  00F7               	movwf	??_LCD_Init
  6998  1757                     u4067:
  6999  1757  0BF7               	decfsz	??_LCD_Init,f
  7000  1758  2F57               	goto	u4067
  7001  1759  0BF8               	decfsz	??_LCD_Init+1,f
  7002  175A  2F57               	goto	u4067
  7003  175B  2F5C               	nop2
  7004  175C                     l3227:
  7005                           
  7006                           ;LCD.c: 45:   LCD_CMD(0x04 | 0x02);
  7007  175C  3006               	movlw	6
  7008  175D  160A  118A  239D  160A  118A  	fcall	_LCD_CMD
  7009  1762                     l3229:
  7010                           
  7011                           ;LCD.c: 46:   _delay((unsigned long)((50)*(8000000/4000.0)));
  7012  1762  3082               	movlw	130
  7013  1763  00F8               	movwf	??_LCD_Init+1
  7014  1764  30DD               	movlw	221
  7015  1765  00F7               	movwf	??_LCD_Init
  7016  1766                     u4077:
  7017  1766  0BF7               	decfsz	??_LCD_Init,f
  7018  1767  2F66               	goto	u4077
  7019  1768  0BF8               	decfsz	??_LCD_Init+1,f
  7020  1769  2F66               	goto	u4077
  7021  176A  2F6B               	nop2
  7022  176B                     l136:
  7023  176B  0008               	return
  7024  176C                     __end_of_LCD_Init:
  7025                           
  7026                           	psect	text19
  7027  12D1                     __ptext19:	
  7028 ;; *************** function _LCD_Clear *****************
  7029 ;; Defined at:
  7030 ;;		line 128 in file "LCD.c"
  7031 ;; Parameters:    Size  Location     Type
  7032 ;;		None
  7033 ;; Auto vars:     Size  Location     Type
  7034 ;;		None
  7035 ;; Return value:  Size  Location     Type
  7036 ;;                  1    wreg      void 
  7037 ;; Registers used:
  7038 ;;		wreg, status,2, status,0, pclath, cstack
  7039 ;; Tracked objects:
  7040 ;;		On entry : 0/0
  7041 ;;		On exit  : 0/0
  7042 ;;		Unchanged: 0/0
  7043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7044 ;;      Params:         0       0       0       0       0
  7045 ;;      Locals:         0       0       0       0       0
  7046 ;;      Temps:          1       0       0       0       0
  7047 ;;      Totals:         1       0       0       0       0
  7048 ;;Total ram usage:        1 bytes
  7049 ;; Hardware stack levels used: 1
  7050 ;; Hardware stack levels required when called: 6
  7051 ;; This function calls:
  7052 ;;		_LCD_CMD
  7053 ;; This function is called by:
  7054 ;;		_main
  7055 ;; This function uses a non-reentrant model
  7056 ;;
  7057                           
  7058  12D1                     _LCD_Clear:	
  7059                           ;psect for function _LCD_Clear
  7060                           
  7061  12D1                     l3231:	
  7062                           ;incstack = 0
  7063                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  7064                           
  7065                           
  7066                           ;LCD.c: 130:   LCD_CMD(0x01);
  7067  12D1  3001               	movlw	1
  7068  12D2  160A  118A  239D  160A  118A  	fcall	_LCD_CMD
  7069  12D7                     l3233:
  7070                           
  7071                           ;LCD.c: 131:   _delay((unsigned long)((40)*(8000000/4000000.0)));
  7072  12D7  301A               	movlw	26
  7073  12D8  00F7               	movwf	??_LCD_Clear
  7074  12D9                     u4087:
  7075  12D9  0BF7               	decfsz	??_LCD_Clear,f
  7076  12DA  2AD9               	goto	u4087
  7077  12DB  0000               	nop
  7078  12DC                     l178:
  7079  12DC  0008               	return
  7080  12DD                     __end_of_LCD_Clear:
  7081                           
  7082                           	psect	text20
  7083  1327                     __ptext20:	
  7084 ;; *************** function _I2C_Init *****************
  7085 ;; Defined at:
  7086 ;;		line 27 in file "I2C_Master.c"
  7087 ;; Parameters:    Size  Location     Type
  7088 ;;		None
  7089 ;; Auto vars:     Size  Location     Type
  7090 ;;		None
  7091 ;; Return value:  Size  Location     Type
  7092 ;;                  1    wreg      void 
  7093 ;; Registers used:
  7094 ;;		wreg, status,2
  7095 ;; Tracked objects:
  7096 ;;		On entry : 0/0
  7097 ;;		On exit  : 0/0
  7098 ;;		Unchanged: 0/0
  7099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7100 ;;      Params:         0       0       0       0       0
  7101 ;;      Locals:         0       0       0       0       0
  7102 ;;      Temps:          0       0       0       0       0
  7103 ;;      Totals:         0       0       0       0       0
  7104 ;;Total ram usage:        0 bytes
  7105 ;; Hardware stack levels used: 1
  7106 ;; This function calls:
  7107 ;;		Nothing
  7108 ;; This function is called by:
  7109 ;;		_main
  7110 ;; This function uses a non-reentrant model
  7111 ;;
  7112                           
  7113  1327                     _I2C_Init:	
  7114                           ;psect for function _I2C_Init
  7115                           
  7116  1327                     l3179:	
  7117                           ;incstack = 0
  7118                           ; Regs used in _I2C_Init: [wreg+status,2]
  7119                           
  7120                           
  7121                           ;I2C_Master.c: 29:     TRISCbits.TRISC3 = 1;
  7122  1327  1683               	bsf	3,5	;RP0=1, select bank1
  7123  1328  1303               	bcf	3,6	;RP1=0, select bank1
  7124  1329  1587               	bsf	7,3	;volatile
  7125                           
  7126                           ;I2C_Master.c: 30:  TRISCbits.TRISC4 = 1;
  7127  132A  1607               	bsf	7,4	;volatile
  7128  132B                     l3181:
  7129                           
  7130                           ;I2C_Master.c: 31:  SSPSTAT=80;
  7131  132B  3050               	movlw	80
  7132  132C  0094               	movwf	20	;volatile
  7133                           
  7134                           ;I2C_Master.c: 32:     SSPCON=0x28;
  7135  132D  3028               	movlw	40
  7136  132E  1283               	bcf	3,5	;RP0=0, select bank0
  7137  132F  1303               	bcf	3,6	;RP1=0, select bank0
  7138  1330  0094               	movwf	20	;volatile
  7139  1331                     l3183:
  7140                           
  7141                           ;I2C_Master.c: 34:  SSPCON2=0;
  7142  1331  1683               	bsf	3,5	;RP0=1, select bank1
  7143  1332  1303               	bcf	3,6	;RP1=0, select bank1
  7144  1333  0191               	clrf	17	;volatile
  7145  1334                     l3185:
  7146                           
  7147                           ;I2C_Master.c: 35:     SSPADD=((8000000/(4*100000))-1);
  7148  1334  3013               	movlw	19
  7149  1335  0093               	movwf	19	;volatile
  7150  1336                     l3187:
  7151                           
  7152                           ;I2C_Master.c: 36:     SSPIE=1;
  7153  1336  158C               	bsf	12,3	;volatile
  7154  1337                     l3189:
  7155                           
  7156                           ;I2C_Master.c: 37:     SSPIF=0;
  7157  1337  1283               	bcf	3,5	;RP0=0, select bank0
  7158  1338  1303               	bcf	3,6	;RP1=0, select bank0
  7159  1339  118C               	bcf	12,3	;volatile
  7160  133A                     l53:
  7161  133A  0008               	return
  7162  133B                     __end_of_I2C_Init:
  7163                           
  7164                           	psect	text21
  7165  160B                     __ptext21:	
  7166 ;; *************** function _DisplayTemp *****************
  7167 ;; Defined at:
  7168 ;;		line 57 in file "Temp.c"
  7169 ;; Parameters:    Size  Location     Type
  7170 ;;		None
  7171 ;; Auto vars:     Size  Location     Type
  7172 ;;  buffer2        16   40[BANK0 ] unsigned char [16]
  7173 ;;  buffer1        16   24[BANK0 ] unsigned char [16]
  7174 ;; Return value:  Size  Location     Type
  7175 ;;                  1    wreg      void 
  7176 ;; Registers used:
  7177 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7178 ;; Tracked objects:
  7179 ;;		On entry : 0/0
  7180 ;;		On exit  : 0/0
  7181 ;;		Unchanged: 0/0
  7182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7183 ;;      Params:         0       0       0       0       0
  7184 ;;      Locals:         0      32       0       0       0
  7185 ;;      Temps:          0       3       0       0       0
  7186 ;;      Totals:         0      35       0       0       0
  7187 ;;Total ram usage:       35 bytes
  7188 ;; Hardware stack levels used: 1
  7189 ;; Hardware stack levels required when called: 7
  7190 ;; This function calls:
  7191 ;;		_LCD_Set_Cursor
  7192 ;;		_LCD_Write_String
  7193 ;;		_sprintf
  7194 ;; This function is called by:
  7195 ;;		_main
  7196 ;; This function uses a non-reentrant model
  7197 ;;
  7198                           
  7199  160B                     _DisplayTemp:	
  7200                           ;psect for function _DisplayTemp
  7201                           
  7202  160B                     l3269:	
  7203                           ;incstack = 0
  7204                           ; Regs used in _DisplayTemp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7205                           
  7206                           
  7207                           ;Temp.c: 59:     char buffer1[16], buffer2[16];;Temp.c: 60:     sprintf(buffer1, "Temp:%
      +                          3d*C", temperature_c);
  7208  160B  3038               	movlw	(low (DisplayTemp@buffer1| 0))& (0+255)
  7209  160C  1283               	bcf	3,5	;RP0=0, select bank0
  7210  160D  1303               	bcf	3,6	;RP1=0, select bank0
  7211  160E  00A0               	movwf	sprintf@sp
  7212  160F  3000               	movlw	0
  7213  1610  00A1               	movwf	sprintf@sp+1
  7214  1611  3040               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  7215  1612  00B5               	movwf	??_DisplayTemp
  7216  1613  0835               	movf	??_DisplayTemp,w
  7217  1614  00A2               	movwf	sprintf@f
  7218  1615  086B               	movf	_temperature_c+1,w
  7219  1616  00A4               	movwf	?_sprintf+4
  7220  1617  086A               	movf	_temperature_c,w
  7221  1618  00A3               	movwf	?_sprintf+3
  7222  1619  120A  118A  2052  160A  118A  	fcall	_sprintf
  7223  161E                     l3271:
  7224                           
  7225                           ;Temp.c: 61:     _delay((unsigned long)((1)*(8000000/4000.0)));
  7226  161E  3003               	movlw	3
  7227  161F  1283               	bcf	3,5	;RP0=0, select bank0
  7228  1620  1303               	bcf	3,6	;RP1=0, select bank0
  7229  1621  00B6               	movwf	??_DisplayTemp+1
  7230  1622  3097               	movlw	151
  7231  1623  00B5               	movwf	??_DisplayTemp
  7232  1624                     u4097:
  7233  1624  0BB5               	decfsz	??_DisplayTemp,f
  7234  1625  2E24               	goto	u4097
  7235  1626  0BB6               	decfsz	??_DisplayTemp+1,f
  7236  1627  2E24               	goto	u4097
  7237  1628                     l3273:
  7238                           
  7239                           ;Temp.c: 62:     LCD_Write_String(buffer1);
  7240  1628  3038               	movlw	(low (DisplayTemp@buffer1| 0))& (0+255)
  7241  1629  00F7               	movwf	LCD_Write_String@Str
  7242  162A  3000               	movlw	0
  7243  162B  00F8               	movwf	LCD_Write_String@Str+1
  7244  162C  160A  118A  2578  160A  118A  	fcall	_LCD_Write_String
  7245  1631                     l3275:
  7246                           
  7247                           ;Temp.c: 63:     LCD_Set_Cursor('2','0');
  7248  1631  3030               	movlw	48
  7249  1632  1283               	bcf	3,5	;RP0=0, select bank0
  7250  1633  1303               	bcf	3,6	;RP1=0, select bank0
  7251  1634  00B5               	movwf	??_DisplayTemp
  7252  1635  0835               	movf	??_DisplayTemp,w
  7253  1636  00F7               	movwf	LCD_Set_Cursor@COL
  7254  1637  3032               	movlw	50
  7255  1638  160A  118A  24CA  160A  118A  	fcall	_LCD_Set_Cursor
  7256  163D                     l3277:
  7257                           
  7258                           ;Temp.c: 64:     sprintf(buffer2, "Temp:%3d*F", temperature_f);
  7259  163D  3048               	movlw	(low (DisplayTemp@buffer2| 0))& (0+255)
  7260  163E  1283               	bcf	3,5	;RP0=0, select bank0
  7261  163F  1303               	bcf	3,6	;RP1=0, select bank0
  7262  1640  00A0               	movwf	sprintf@sp
  7263  1641  3000               	movlw	0
  7264  1642  00A1               	movwf	sprintf@sp+1
  7265  1643  304B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  7266  1644  00B5               	movwf	??_DisplayTemp
  7267  1645  0835               	movf	??_DisplayTemp,w
  7268  1646  00A2               	movwf	sprintf@f
  7269  1647  0869               	movf	_temperature_f+1,w
  7270  1648  00A4               	movwf	?_sprintf+4
  7271  1649  0868               	movf	_temperature_f,w
  7272  164A  00A3               	movwf	?_sprintf+3
  7273  164B  120A  118A  2052  160A  118A  	fcall	_sprintf
  7274  1650                     l3279:
  7275                           
  7276                           ;Temp.c: 65:     LCD_Write_String(buffer2);
  7277  1650  3048               	movlw	(low (DisplayTemp@buffer2| 0))& (0+255)
  7278  1651  00F7               	movwf	LCD_Write_String@Str
  7279  1652  3000               	movlw	0
  7280  1653  00F8               	movwf	LCD_Write_String@Str+1
  7281  1654  160A  118A  2578  160A  118A  	fcall	_LCD_Write_String
  7282  1659                     l3281:
  7283                           
  7284                           ;Temp.c: 66:     _delay((unsigned long)((200)*(8000000/4000.0)));
  7285  1659  3003               	movlw	3
  7286  165A  1283               	bcf	3,5	;RP0=0, select bank0
  7287  165B  1303               	bcf	3,6	;RP1=0, select bank0
  7288  165C  00B7               	movwf	??_DisplayTemp+2
  7289  165D  3008               	movlw	8
  7290  165E  00B6               	movwf	??_DisplayTemp+1
  7291  165F  3076               	movlw	118
  7292  1660  00B5               	movwf	??_DisplayTemp
  7293  1661                     u4107:
  7294  1661  0BB5               	decfsz	??_DisplayTemp,f
  7295  1662  2E61               	goto	u4107
  7296  1663  0BB6               	decfsz	??_DisplayTemp+1,f
  7297  1664  2E61               	goto	u4107
  7298  1665  0BB7               	decfsz	??_DisplayTemp+2,f
  7299  1666  2E61               	goto	u4107
  7300  1667  0000               	nop
  7301  1668                     l217:
  7302  1668  0008               	return
  7303  1669                     __end_of_DisplayTemp:
  7304                           
  7305                           	psect	text22
  7306  0052                     __ptext22:	
  7307 ;; *************** function _sprintf *****************
  7308 ;; Defined at:
  7309 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c"
  7310 ;; Parameters:    Size  Location     Type
  7311 ;;  sp              2    0[BANK0 ] PTR unsigned char 
  7312 ;;		 -> main@buffer3_748(16), main@buffer3_745(16), main@buffer3_742(16), year(10), 
  7313 ;;		 -> month(10), date(10), hours(10), mins(10), 
  7314 ;;		 -> secs(10), main@buffer3(16), DisplayTemp@buffer2(16), DisplayTemp@buffer1(16), 
  7315 ;;  f               1    2[BANK0 ] PTR const unsigned char 
  7316 ;;		 -> STR_27(9), STR_25(3), STR_24(11), STR_15(4), 
  7317 ;;		 -> STR_14(4), STR_13(8), STR_12(8), STR_11(4), 
  7318 ;;		 -> STR_10(4), STR_9(8), STR_8(4), STR_7(4), 
  7319 ;;		 -> STR_3(3), STR_2(11), STR_1(11), 
  7320 ;; Auto vars:     Size  Location     Type
  7321 ;;  idx             1    8[BANK0 ] unsigned char 
  7322 ;;  tmpval          4    0        struct .
  7323 ;;  width           2   18[BANK0 ] int 
  7324 ;;  val             2   16[BANK0 ] unsigned int 
  7325 ;;  len             2   13[BANK0 ] unsigned int 
  7326 ;;  cp              2   10[BANK0 ] PTR const unsigned char 
  7327 ;;		 -> STR_28(7), ?_sprintf(2), STR_26(10), STR_4(17), 
  7328 ;;		 -> result(2), 
  7329 ;;  c               1   20[BANK0 ] unsigned char 
  7330 ;;  flag            1   15[BANK0 ] unsigned char 
  7331 ;;  ap              1   12[BANK0 ] PTR void [1]
  7332 ;;		 -> ?_sprintf(2), 
  7333 ;;  prec            1    9[BANK0 ] char 
  7334 ;; Return value:  Size  Location     Type
  7335 ;;                  2    0[BANK0 ] int 
  7336 ;; Registers used:
  7337 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7338 ;; Tracked objects:
  7339 ;;		On entry : 0/0
  7340 ;;		On exit  : 0/0
  7341 ;;		Unchanged: 0/0
  7342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7343 ;;      Params:         0       5       0       0       0
  7344 ;;      Locals:         0      13       0       0       0
  7345 ;;      Temps:          0       3       0       0       0
  7346 ;;      Totals:         0      21       0       0       0
  7347 ;;Total ram usage:       21 bytes
  7348 ;; Hardware stack levels used: 1
  7349 ;; Hardware stack levels required when called: 1
  7350 ;; This function calls:
  7351 ;;		___lwdiv
  7352 ;;		___lwmod
  7353 ;;		___wmul
  7354 ;;		_isdigit
  7355 ;; This function is called by:
  7356 ;;		_DisplayTemp
  7357 ;;		_main
  7358 ;; This function uses a non-reentrant model
  7359 ;;
  7360                           
  7361  0052                     _sprintf:	
  7362                           ;psect for function _sprintf
  7363                           
  7364  0052                     l2601:	
  7365                           ;incstack = 0
  7366                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7367                           
  7368                           
  7369                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 521:  
      +                          signed char prec;
  7370  0052  3023               	movlw	(low ((?_sprintf| 0+3)))& (0+255)
  7371  0053  1283               	bcf	3,5	;RP0=0, select bank0
  7372  0054  1303               	bcf	3,6	;RP1=0, select bank0
  7373  0055  00A5               	movwf	??_sprintf
  7374  0056  0825               	movf	??_sprintf,w
  7375  0057  00AC               	movwf	sprintf@ap
  7376                           
  7377                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  7378  0058  2AF4               	goto	l2741
  7379  0059                     l2603:
  7380                           
  7381                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  7382  0059  3025               	movlw	37
  7383  005A  0634               	xorwf	sprintf@c,w
  7384  005B  1903               	btfsc	3,2
  7385  005C  285E               	goto	u2351
  7386  005D  285F               	goto	u2350
  7387  005E                     u2351:
  7388  005E  286F               	goto	l2609
  7389  005F                     u2350:
  7390  005F                     l2605:
  7391                           
  7392                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  7393  005F  0834               	movf	sprintf@c,w
  7394  0060  00A5               	movwf	??_sprintf
  7395  0061  0820               	movf	sprintf@sp,w
  7396  0062  0084               	movwf	4
  7397  0063  1783               	bsf	3,7
  7398  0064  1C21               	btfss	sprintf@sp+1,0
  7399  0065  1383               	bcf	3,7
  7400  0066  0825               	movf	??_sprintf,w
  7401  0067  0080               	movwf	0
  7402  0068                     l2607:
  7403  0068  3001               	movlw	1
  7404  0069  07A0               	addwf	sprintf@sp,f
  7405  006A  1803               	skipnc
  7406  006B  0AA1               	incf	sprintf@sp+1,f
  7407  006C  3000               	movlw	0
  7408  006D  07A1               	addwf	sprintf@sp+1,f
  7409                           
  7410                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 559:    continue;
  7411  006E  2AF4               	goto	l2741
  7412  006F                     l2609:
  7413                           
  7414                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  7415  006F  01B2               	clrf	sprintf@width
  7416  0070  01B3               	clrf	sprintf@width+1
  7417                           
  7418                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  7419  0071  01AF               	clrf	sprintf@flag
  7420  0072                     l2611:
  7421                           
  7422                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  7423  0072  0822               	movf	sprintf@f,w
  7424  0073  0084               	movwf	4
  7425  0074  120A  158A  200A  120A  118A  	fcall	stringdir
  7426  0079  160A  118A  22EE  120A  118A  	fcall	_isdigit
  7427  007E  1C03               	btfss	3,0
  7428  007F  2881               	goto	u2361
  7429  0080  2882               	goto	u2360
  7430  0081                     u2361:
  7431  0081  2954               	goto	l2659
  7432  0082                     u2360:
  7433  0082                     l2613:
  7434                           
  7435                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  7436  0082  1283               	bcf	3,5	;RP0=0, select bank0
  7437  0083  1303               	bcf	3,6	;RP1=0, select bank0
  7438  0084  01B2               	clrf	sprintf@width
  7439  0085  01B3               	clrf	sprintf@width+1
  7440  0086                     l2615:
  7441                           
  7442                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  7443  0086  300A               	movlw	10
  7444  0087  00F0               	movwf	___wmul@multiplier
  7445  0088  3000               	movlw	0
  7446  0089  00F1               	movwf	___wmul@multiplier+1
  7447  008A  1283               	bcf	3,5	;RP0=0, select bank0
  7448  008B  1303               	bcf	3,6	;RP1=0, select bank0
  7449  008C  0833               	movf	sprintf@width+1,w
  7450  008D  00F3               	movwf	___wmul@multiplicand+1
  7451  008E  0832               	movf	sprintf@width,w
  7452  008F  00F2               	movwf	___wmul@multiplicand
  7453  0090  160A  118A  23D6  120A  118A  	fcall	___wmul
  7454  0095  0871               	movf	?___wmul+1,w
  7455  0096  1283               	bcf	3,5	;RP0=0, select bank0
  7456  0097  1303               	bcf	3,6	;RP1=0, select bank0
  7457  0098  00B3               	movwf	sprintf@width+1
  7458  0099  0870               	movf	?___wmul,w
  7459  009A  00B2               	movwf	sprintf@width
  7460  009B                     l2617:
  7461                           
  7462                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  7463  009B  0822               	movf	sprintf@f,w
  7464  009C  0084               	movwf	4
  7465  009D  120A  158A  200A  120A  118A  	fcall	stringdir
  7466  00A2  3ED0               	addlw	208
  7467  00A3  00A5               	movwf	??_sprintf
  7468  00A4  30FF               	movlw	255
  7469  00A5  1803               	skipnc
  7470  00A6  3000               	movlw	0
  7471  00A7  00A6               	movwf	??_sprintf+1
  7472  00A8  0825               	movf	??_sprintf,w
  7473  00A9  07B2               	addwf	sprintf@width,f
  7474  00AA  1803               	skipnc
  7475  00AB  0AB3               	incf	sprintf@width+1,f
  7476  00AC  0826               	movf	??_sprintf+1,w
  7477  00AD  07B3               	addwf	sprintf@width+1,f
  7478  00AE                     l2619:
  7479  00AE  3001               	movlw	1
  7480  00AF  00A5               	movwf	??_sprintf
  7481  00B0  0825               	movf	??_sprintf,w
  7482  00B1  07A2               	addwf	sprintf@f,f
  7483  00B2                     l2621:
  7484                           
  7485                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  7486  00B2  0822               	movf	sprintf@f,w
  7487  00B3  0084               	movwf	4
  7488  00B4  120A  158A  200A  120A  118A  	fcall	stringdir
  7489  00B9  160A  118A  22EE  120A  118A  	fcall	_isdigit
  7490  00BE  1803               	btfsc	3,0
  7491  00BF  28C1               	goto	u2371
  7492  00C0  28C2               	goto	u2370
  7493  00C1                     u2371:
  7494  00C1  2886               	goto	l2615
  7495  00C2                     u2370:
  7496  00C2  2954               	goto	l2659
  7497  00C3                     l529:	
  7498                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 744:   case 'x':
  7499                           
  7500                           
  7501                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 747:    flag |= 0
      +                          x80;
  7502  00C3  17AF               	bsf	sprintf@flag,7
  7503                           
  7504                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 749:    break;
  7505  00C4  2979               	goto	l528
  7506  00C5                     l2623:
  7507                           
  7508                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 760:     cp = (*(
      +                          const char * *)__va_arg((*(const char * **)ap), (const char *)0));
  7509  00C5  082C               	movf	sprintf@ap,w
  7510  00C6  0084               	movwf	4
  7511  00C7  1383               	bcf	3,7	;select IRP bank0
  7512  00C8  0800               	movf	0,w
  7513  00C9  00AA               	movwf	sprintf@cp
  7514  00CA  0A84               	incf	4,f
  7515  00CB  0800               	movf	0,w
  7516  00CC  0384               	decf	4,f
  7517  00CD  00AB               	movwf	sprintf@cp+1
  7518  00CE                     l2625:
  7519  00CE  3002               	movlw	2
  7520  00CF  00A5               	movwf	??_sprintf
  7521  00D0  0825               	movf	??_sprintf,w
  7522  00D1  07AC               	addwf	sprintf@ap,f
  7523  00D2                     l2627:
  7524                           
  7525                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 766:    if(!cp)
  7526  00D2  082A               	movf	sprintf@cp,w
  7527  00D3  042B               	iorwf	sprintf@cp+1,w
  7528  00D4  1D03               	btfss	3,2
  7529  00D5  28D7               	goto	u2381
  7530  00D6  28D8               	goto	u2380
  7531  00D7                     u2381:
  7532  00D7  28DC               	goto	l2631
  7533  00D8                     u2380:
  7534  00D8                     l2629:
  7535                           
  7536                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 767:     cp = "(n
      +                          ull)";
  7537  00D8  3079               	movlw	(low ((STR_28-__stringbase)| (0+32768)))& (0+255)
  7538  00D9  00AA               	movwf	sprintf@cp
  7539  00DA  3080               	movlw	128
  7540  00DB  00AB               	movwf	sprintf@cp+1
  7541  00DC                     l2631:
  7542                           
  7543                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 771:    len = 0;
  7544  00DC  01AD               	clrf	sprintf@len
  7545  00DD  01AE               	clrf	sprintf@len+1
  7546                           
  7547                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 772:    while(cp[
      +                          len])
  7548  00DE  28E5               	goto	l2635
  7549  00DF                     l2633:
  7550                           
  7551                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 773:     len++;
  7552  00DF  3001               	movlw	1
  7553  00E0  07AD               	addwf	sprintf@len,f
  7554  00E1  1803               	skipnc
  7555  00E2  0AAE               	incf	sprintf@len+1,f
  7556  00E3  3000               	movlw	0
  7557  00E4  07AE               	addwf	sprintf@len+1,f
  7558  00E5                     l2635:
  7559                           
  7560                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 772:    while(cp[
      +                          len])
  7561  00E5  082D               	movf	sprintf@len,w
  7562  00E6  072A               	addwf	sprintf@cp,w
  7563  00E7  0084               	movwf	4
  7564  00E8  082B               	movf	sprintf@cp+1,w
  7565  00E9  1803               	skipnc
  7566  00EA  0A2B               	incf	sprintf@cp+1,w
  7567  00EB  00FF               	movwf	btemp+1
  7568  00EC  120A  158A  2000  120A  118A  	fcall	stringtab
  7569  00F1  3A00               	xorlw	0
  7570  00F2  1D03               	skipz
  7571  00F3  28F5               	goto	u2391
  7572  00F4  28F6               	goto	u2390
  7573  00F5                     u2391:
  7574  00F5  28DF               	goto	l2633
  7575  00F6                     u2390:
  7576  00F6                     l2637:
  7577                           
  7578                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 783:    if(((unsi
      +                          gned)width) > len)
  7579  00F6  0833               	movf	sprintf@width+1,w
  7580  00F7  022E               	subwf	sprintf@len+1,w
  7581  00F8  1D03               	skipz
  7582  00F9  28FC               	goto	u2405
  7583  00FA  0832               	movf	sprintf@width,w
  7584  00FB  022D               	subwf	sprintf@len,w
  7585  00FC                     u2405:
  7586  00FC  1803               	skipnc
  7587  00FD  28FF               	goto	u2401
  7588  00FE  2900               	goto	u2400
  7589  00FF                     u2401:
  7590  00FF  2907               	goto	l2641
  7591  0100                     u2400:
  7592  0100                     l2639:
  7593                           
  7594                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 784:     width -=
      +                           len;
  7595  0100  082D               	movf	sprintf@len,w
  7596  0101  02B2               	subwf	sprintf@width,f
  7597  0102  082E               	movf	sprintf@len+1,w
  7598  0103  1C03               	skipc
  7599  0104  03B3               	decf	sprintf@width+1,f
  7600  0105  02B3               	subwf	sprintf@width+1,f
  7601  0106  2919               	goto	l2647
  7602  0107                     l2641:
  7603                           
  7604                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 786:     width = 
      +                          0;
  7605  0107  01B2               	clrf	sprintf@width
  7606  0108  01B3               	clrf	sprintf@width+1
  7607  0109  2919               	goto	l2647
  7608  010A                     l2643:
  7609                           
  7610                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 791:      ((*sp++
      +                           = (' ')));
  7611  010A  3020               	movlw	32
  7612  010B  00A5               	movwf	??_sprintf
  7613  010C  0820               	movf	sprintf@sp,w
  7614  010D  0084               	movwf	4
  7615  010E  1783               	bsf	3,7
  7616  010F  1C21               	btfss	sprintf@sp+1,0
  7617  0110  1383               	bcf	3,7
  7618  0111  0825               	movf	??_sprintf,w
  7619  0112  0080               	movwf	0
  7620  0113                     l2645:
  7621  0113  3001               	movlw	1
  7622  0114  07A0               	addwf	sprintf@sp,f
  7623  0115  1803               	skipnc
  7624  0116  0AA1               	incf	sprintf@sp+1,f
  7625  0117  3000               	movlw	0
  7626  0118  07A1               	addwf	sprintf@sp+1,f
  7627  0119                     l2647:
  7628                           
  7629                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 790:     while(wi
      +                          dth--)
  7630  0119  30FF               	movlw	255
  7631  011A  07B2               	addwf	sprintf@width,f
  7632  011B  1803               	skipnc
  7633  011C  0AB3               	incf	sprintf@width+1,f
  7634  011D  30FF               	movlw	255
  7635  011E  07B3               	addwf	sprintf@width+1,f
  7636  011F  0A32               	incf	sprintf@width,w
  7637  0120  1D03               	skipz
  7638  0121  2926               	goto	u2411
  7639  0122  0A33               	incf	sprintf@width+1,w
  7640  0123  1D03               	btfss	3,2
  7641  0124  2926               	goto	u2411
  7642  0125  2927               	goto	u2410
  7643  0126                     u2411:
  7644  0126  290A               	goto	l2643
  7645  0127                     u2410:
  7646  0127  2945               	goto	l2655
  7647  0128                     l2649:
  7648                           
  7649                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 794:     ((*sp++ 
      +                          = (*cp++)));
  7650  0128  082B               	movf	sprintf@cp+1,w
  7651  0129  00FF               	movwf	btemp+1
  7652  012A  082A               	movf	sprintf@cp,w
  7653  012B  0084               	movwf	4
  7654  012C  120A  158A  2000  120A  118A  	fcall	stringtab
  7655  0131  00A5               	movwf	??_sprintf
  7656  0132  0820               	movf	sprintf@sp,w
  7657  0133  0084               	movwf	4
  7658  0134  1783               	bsf	3,7
  7659  0135  1C21               	btfss	sprintf@sp+1,0
  7660  0136  1383               	bcf	3,7
  7661  0137  0825               	movf	??_sprintf,w
  7662  0138  0080               	movwf	0
  7663  0139                     l2651:
  7664  0139  3001               	movlw	1
  7665  013A  07AA               	addwf	sprintf@cp,f
  7666  013B  1803               	skipnc
  7667  013C  0AAB               	incf	sprintf@cp+1,f
  7668  013D  3000               	movlw	0
  7669  013E  07AB               	addwf	sprintf@cp+1,f
  7670  013F                     l2653:
  7671  013F  3001               	movlw	1
  7672  0140  07A0               	addwf	sprintf@sp,f
  7673  0141  1803               	skipnc
  7674  0142  0AA1               	incf	sprintf@sp+1,f
  7675  0143  3000               	movlw	0
  7676  0144  07A1               	addwf	sprintf@sp+1,f
  7677  0145                     l2655:
  7678                           
  7679                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 793:    while(len
      +                          --)
  7680  0145  3001               	movlw	1
  7681  0146  02AD               	subwf	sprintf@len,f
  7682  0147  3000               	movlw	0
  7683  0148  1C03               	skipc
  7684  0149  03AE               	decf	sprintf@len+1,f
  7685  014A  02AE               	subwf	sprintf@len+1,f
  7686  014B  0A2D               	incf	sprintf@len,w
  7687  014C  1D03               	skipz
  7688  014D  2952               	goto	u2421
  7689  014E  0A2E               	incf	sprintf@len+1,w
  7690  014F  1D03               	btfss	3,2
  7691  0150  2952               	goto	u2421
  7692  0151  2953               	goto	u2420
  7693  0152                     u2421:
  7694  0152  2928               	goto	l2649
  7695  0153                     u2420:
  7696  0153  2AF4               	goto	l2741
  7697  0154                     l2659:
  7698  0154  3001               	movlw	1
  7699  0155  1283               	bcf	3,5	;RP0=0, select bank0
  7700  0156  1303               	bcf	3,6	;RP1=0, select bank0
  7701  0157  07A2               	addwf	sprintf@f,f
  7702  0158  30FF               	movlw	-1
  7703  0159  0722               	addwf	sprintf@f,w
  7704  015A  0084               	movwf	4
  7705  015B  120A  158A  200A  120A  118A  	fcall	stringdir
  7706  0160  00B4               	movwf	sprintf@c
  7707  0161  00A5               	movwf	??_sprintf
  7708  0162  01A6               	clrf	??_sprintf+1
  7709                           
  7710                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7711                           ; Switch size 1, requested type "simple"
  7712                           ; Number of cases is 1, Range of values is 0 to 0
  7713                           ; switch strategies available:
  7714                           ; Name         Instructions Cycles
  7715                           ; simple_byte            4     3 (average)
  7716                           ; direct_byte           11     8 (fixed)
  7717                           ; jumptable            260     6 (fixed)
  7718                           ;	Chosen strategy is simple_byte
  7719  0163  0826               	movf	??_sprintf+1,w
  7720  0164  3A00               	xorlw	0	; case 0
  7721  0165  1903               	skipnz
  7722  0166  2968               	goto	l3737
  7723  0167  2AF4               	goto	l2741
  7724  0168                     l3737:
  7725                           
  7726                           ; Switch size 1, requested type "simple"
  7727                           ; Number of cases is 5, Range of values is 0 to 120
  7728                           ; switch strategies available:
  7729                           ; Name         Instructions Cycles
  7730                           ; simple_byte           16     9 (average)
  7731                           ; jumptable            260     6 (fixed)
  7732                           ;	Chosen strategy is simple_byte
  7733  0168  0825               	movf	??_sprintf,w
  7734  0169  3A00               	xorlw	0	; case 0
  7735  016A  1903               	skipnz
  7736  016B  2B06               	goto	l2743
  7737  016C  3A64               	xorlw	100	; case 100
  7738  016D  1903               	skipnz
  7739  016E  2979               	goto	l528
  7740  016F  3A0D               	xorlw	13	; case 105
  7741  0170  1903               	skipnz
  7742  0171  2979               	goto	l528
  7743  0172  3A1A               	xorlw	26	; case 115
  7744  0173  1903               	skipnz
  7745  0174  28C5               	goto	l2623
  7746  0175  3A0B               	xorlw	11	; case 120
  7747  0176  1903               	skipnz
  7748  0177  28C3               	goto	l529
  7749  0178  2AF4               	goto	l2741
  7750  0179                     l528:
  7751                           
  7752                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1277:   if((flag 
      +                          & 0x80) == 0x00)
  7753  0179  1BAF               	btfsc	sprintf@flag,7
  7754  017A  297C               	goto	u2431
  7755  017B  297D               	goto	u2430
  7756  017C                     u2431:
  7757  017C  2997               	goto	l2671
  7758  017D                     u2430:
  7759  017D                     l2661:
  7760                           
  7761                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  7762  017D  082C               	movf	sprintf@ap,w
  7763  017E  0084               	movwf	4
  7764  017F  1383               	bcf	3,7	;select IRP bank0
  7765  0180  0800               	movf	0,w
  7766  0181  00B0               	movwf	sprintf@val
  7767  0182  0A84               	incf	4,f
  7768  0183  0800               	movf	0,w
  7769  0184  00B1               	movwf	sprintf@val+1
  7770  0185                     l2663:
  7771  0185  3002               	movlw	2
  7772  0186  00A5               	movwf	??_sprintf
  7773  0187  0825               	movf	??_sprintf,w
  7774  0188  07AC               	addwf	sprintf@ap,f
  7775  0189                     l2665:
  7776                           
  7777                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  7778  0189  1FB1               	btfss	sprintf@val+1,7
  7779  018A  298C               	goto	u2441
  7780  018B  298D               	goto	u2440
  7781  018C                     u2441:
  7782  018C  29F6               	goto	l2697
  7783  018D                     u2440:
  7784  018D                     l2667:
  7785                           
  7786                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  7787  018D  3003               	movlw	3
  7788  018E  00A5               	movwf	??_sprintf
  7789  018F  0825               	movf	??_sprintf,w
  7790  0190  04AF               	iorwf	sprintf@flag,f
  7791  0191                     l2669:
  7792                           
  7793                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  7794  0191  09B0               	comf	sprintf@val,f
  7795  0192  09B1               	comf	sprintf@val+1,f
  7796  0193  0AB0               	incf	sprintf@val,f
  7797  0194  1903               	skipnz
  7798  0195  0AB1               	incf	sprintf@val+1,f
  7799  0196  29F6               	goto	l2697
  7800  0197                     l2671:
  7801                           
  7802                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  7803  0197  082C               	movf	sprintf@ap,w
  7804  0198  0084               	movwf	4
  7805  0199  1383               	bcf	3,7	;select IRP bank0
  7806  019A  0800               	movf	0,w
  7807  019B  00B0               	movwf	sprintf@val
  7808  019C  0A84               	incf	4,f
  7809  019D  0800               	movf	0,w
  7810  019E  00B1               	movwf	sprintf@val+1
  7811  019F                     l2673:
  7812  019F  3002               	movlw	2
  7813  01A0  00A5               	movwf	??_sprintf
  7814  01A1  0825               	movf	??_sprintf,w
  7815  01A2  07AC               	addwf	sprintf@ap,f
  7816  01A3  29F6               	goto	l2697
  7817  01A4                     l548:	
  7818                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1325:   case 0x00
      +                          :
  7819                           
  7820                           
  7821                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  7822  01A4  01B4               	clrf	sprintf@c
  7823  01A5  0AB4               	incf	sprintf@c,f
  7824  01A6                     l2679:
  7825                           
  7826                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  7827  01A6  0834               	movf	sprintf@c,w
  7828  01A7  00A5               	movwf	??_sprintf
  7829  01A8  0725               	addwf	??_sprintf,w
  7830  01A9  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  7831  01AA  0084               	movwf	4
  7832  01AB  120A  158A  200A  120A  118A  	fcall	stringdir
  7833  01B0  00A6               	movwf	??_sprintf+1
  7834  01B1  120A  158A  200A  120A  118A  	fcall	stringdir
  7835  01B6  00A7               	movwf	??_sprintf+2
  7836  01B7  0827               	movf	??_sprintf+2,w
  7837  01B8  0231               	subwf	sprintf@val+1,w
  7838  01B9  1D03               	skipz
  7839  01BA  29BD               	goto	u2455
  7840  01BB  0826               	movf	??_sprintf+1,w
  7841  01BC  0230               	subwf	sprintf@val,w
  7842  01BD                     u2455:
  7843  01BD  1803               	skipnc
  7844  01BE  29C0               	goto	u2451
  7845  01BF  29C1               	goto	u2450
  7846  01C0                     u2451:
  7847  01C0  29C2               	goto	l2683
  7848  01C1                     u2450:
  7849  01C1  2A07               	goto	l2699
  7850  01C2                     l2683:
  7851  01C2  3001               	movlw	1
  7852  01C3  00A5               	movwf	??_sprintf
  7853  01C4  0825               	movf	??_sprintf,w
  7854  01C5  07B4               	addwf	sprintf@c,f
  7855  01C6  3005               	movlw	5
  7856  01C7  0634               	xorwf	sprintf@c,w
  7857  01C8  1D03               	btfss	3,2
  7858  01C9  29CB               	goto	u2461
  7859  01CA  29CC               	goto	u2460
  7860  01CB                     u2461:
  7861  01CB  29A6               	goto	l2679
  7862  01CC                     u2460:
  7863  01CC  2A07               	goto	l2699
  7864  01CD                     l553:	
  7865                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1340:   case 0x80
      +                          :
  7866                           
  7867                           
  7868                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1342:    for(c = 
      +                          1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  7869  01CD  01B4               	clrf	sprintf@c
  7870  01CE  0AB4               	incf	sprintf@c,f
  7871  01CF                     l2689:
  7872                           
  7873                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1343:     if(val 
      +                          < hexpowers[c])
  7874  01CF  0834               	movf	sprintf@c,w
  7875  01D0  00A5               	movwf	??_sprintf
  7876  01D1  0725               	addwf	??_sprintf,w
  7877  01D2  3E0B               	addlw	low ((_hexpowers-__stringbase)| (0+32768))
  7878  01D3  0084               	movwf	4
  7879  01D4  120A  158A  200A  120A  118A  	fcall	stringdir
  7880  01D9  00A6               	movwf	??_sprintf+1
  7881  01DA  120A  158A  200A  120A  118A  	fcall	stringdir
  7882  01DF  00A7               	movwf	??_sprintf+2
  7883  01E0  0827               	movf	??_sprintf+2,w
  7884  01E1  0231               	subwf	sprintf@val+1,w
  7885  01E2  1D03               	skipz
  7886  01E3  29E6               	goto	u2475
  7887  01E4  0826               	movf	??_sprintf+1,w
  7888  01E5  0230               	subwf	sprintf@val,w
  7889  01E6                     u2475:
  7890  01E6  1803               	skipnc
  7891  01E7  29E9               	goto	u2471
  7892  01E8  29EA               	goto	u2470
  7893  01E9                     u2471:
  7894  01E9  29EB               	goto	l2693
  7895  01EA                     u2470:
  7896  01EA  2A07               	goto	l2699
  7897  01EB                     l2693:
  7898  01EB  3001               	movlw	1
  7899  01EC  00A5               	movwf	??_sprintf
  7900  01ED  0825               	movf	??_sprintf,w
  7901  01EE  07B4               	addwf	sprintf@c,f
  7902  01EF  3004               	movlw	4
  7903  01F0  0634               	xorwf	sprintf@c,w
  7904  01F1  1D03               	btfss	3,2
  7905  01F2  29F4               	goto	u2481
  7906  01F3  29F5               	goto	u2480
  7907  01F4                     u2481:
  7908  01F4  29CF               	goto	l2689
  7909  01F5                     u2480:
  7910  01F5  2A07               	goto	l2699
  7911  01F6                     l2697:
  7912  01F6  082F               	movf	sprintf@flag,w
  7913  01F7  3980               	andlw	128
  7914  01F8  00A5               	movwf	??_sprintf
  7915  01F9  01A6               	clrf	??_sprintf+1
  7916                           
  7917                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7918                           ; Switch size 1, requested type "simple"
  7919                           ; Number of cases is 1, Range of values is 0 to 0
  7920                           ; switch strategies available:
  7921                           ; Name         Instructions Cycles
  7922                           ; simple_byte            4     3 (average)
  7923                           ; direct_byte           11     8 (fixed)
  7924                           ; jumptable            260     6 (fixed)
  7925                           ;	Chosen strategy is simple_byte
  7926  01FA  0826               	movf	??_sprintf+1,w
  7927  01FB  3A00               	xorlw	0	; case 0
  7928  01FC  1903               	skipnz
  7929  01FD  29FF               	goto	l3739
  7930  01FE  2A07               	goto	l2699
  7931  01FF                     l3739:
  7932                           
  7933                           ; Switch size 1, requested type "simple"
  7934                           ; Number of cases is 2, Range of values is 0 to 128
  7935                           ; switch strategies available:
  7936                           ; Name         Instructions Cycles
  7937                           ; simple_byte            7     4 (average)
  7938                           ; jumptable            260     6 (fixed)
  7939                           ;	Chosen strategy is simple_byte
  7940  01FF  0825               	movf	??_sprintf,w
  7941  0200  3A00               	xorlw	0	; case 0
  7942  0201  1903               	skipnz
  7943  0202  29A4               	goto	l548
  7944  0203  3A80               	xorlw	128	; case 128
  7945  0204  1903               	skipnz
  7946  0205  29CD               	goto	l553
  7947  0206  2A07               	goto	l2699
  7948  0207                     l2699:
  7949                           
  7950                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
  7951  0207  0832               	movf	sprintf@width,w
  7952  0208  0433               	iorwf	sprintf@width+1,w
  7953  0209  1903               	btfsc	3,2
  7954  020A  2A0C               	goto	u2491
  7955  020B  2A0D               	goto	u2490
  7956  020C                     u2491:
  7957  020C  2A19               	goto	l557
  7958  020D                     u2490:
  7959  020D                     l2701:
  7960  020D  082F               	movf	sprintf@flag,w
  7961  020E  3903               	andlw	3
  7962  020F  1903               	btfsc	3,2
  7963  0210  2A12               	goto	u2501
  7964  0211  2A13               	goto	u2500
  7965  0212                     u2501:
  7966  0212  2A19               	goto	l557
  7967  0213                     u2500:
  7968  0213                     l2703:
  7969                           
  7970                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1372:    width--;
  7971  0213  30FF               	movlw	255
  7972  0214  07B2               	addwf	sprintf@width,f
  7973  0215  1803               	skipnc
  7974  0216  0AB3               	incf	sprintf@width+1,f
  7975  0217  30FF               	movlw	255
  7976  0218  07B3               	addwf	sprintf@width+1,f
  7977  0219                     l557:
  7978                           
  7979                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  7980  0219  0833               	movf	sprintf@width+1,w
  7981  021A  3A80               	xorlw	128
  7982  021B  3C80               	sublw	128
  7983  021C  1D03               	skipz
  7984  021D  2A20               	goto	u2515
  7985  021E  0832               	movf	sprintf@width,w
  7986  021F  0234               	subwf	sprintf@c,w
  7987  0220                     u2515:
  7988  0220  1803               	skipnc
  7989  0221  2A23               	goto	u2511
  7990  0222  2A24               	goto	u2510
  7991  0223                     u2511:
  7992  0223  2A30               	goto	l2707
  7993  0224                     u2510:
  7994  0224                     l2705:
  7995                           
  7996                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  7997  0224  1283               	bcf	3,5	;RP0=0, select bank0
  7998  0225  1303               	bcf	3,6	;RP1=0, select bank0
  7999  0226  0834               	movf	sprintf@c,w
  8000  0227  00A5               	movwf	??_sprintf
  8001  0228  01A6               	clrf	??_sprintf+1
  8002  0229  0825               	movf	??_sprintf,w
  8003  022A  02B2               	subwf	sprintf@width,f
  8004  022B  0826               	movf	??_sprintf+1,w
  8005  022C  1C03               	skipc
  8006  022D  03B3               	decf	sprintf@width+1,f
  8007  022E  02B3               	subwf	sprintf@width+1,f
  8008  022F  2A34               	goto	l2709
  8009  0230                     l2707:
  8010                           
  8011                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  8012  0230  1283               	bcf	3,5	;RP0=0, select bank0
  8013  0231  1303               	bcf	3,6	;RP1=0, select bank0
  8014  0232  01B2               	clrf	sprintf@width
  8015  0233  01B3               	clrf	sprintf@width+1
  8016  0234                     l2709:
  8017                           
  8018                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1450:    if(width
  8019  0234  0832               	movf	sprintf@width,w
  8020  0235  0433               	iorwf	sprintf@width+1,w
  8021  0236  1903               	btfsc	3,2
  8022  0237  2A39               	goto	u2521
  8023  0238  2A3A               	goto	u2520
  8024  0239                     u2521:
  8025  0239  2A55               	goto	l2717
  8026  023A                     u2520:
  8027  023A                     l2711:
  8028                           
  8029                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  8030  023A  3020               	movlw	32
  8031  023B  00A5               	movwf	??_sprintf
  8032  023C  0820               	movf	sprintf@sp,w
  8033  023D  0084               	movwf	4
  8034  023E  1783               	bsf	3,7
  8035  023F  1C21               	btfss	sprintf@sp+1,0
  8036  0240  1383               	bcf	3,7
  8037  0241  0825               	movf	??_sprintf,w
  8038  0242  0080               	movwf	0
  8039  0243                     l2713:
  8040  0243  3001               	movlw	1
  8041  0244  07A0               	addwf	sprintf@sp,f
  8042  0245  1803               	skipnc
  8043  0246  0AA1               	incf	sprintf@sp+1,f
  8044  0247  3000               	movlw	0
  8045  0248  07A1               	addwf	sprintf@sp+1,f
  8046  0249                     l2715:
  8047  0249  30FF               	movlw	255
  8048  024A  07B2               	addwf	sprintf@width,f
  8049  024B  1803               	skipnc
  8050  024C  0AB3               	incf	sprintf@width+1,f
  8051  024D  30FF               	movlw	255
  8052  024E  07B3               	addwf	sprintf@width+1,f
  8053  024F  0832               	movf	sprintf@width,w
  8054  0250  0433               	iorwf	sprintf@width+1,w
  8055  0251  1D03               	btfss	3,2
  8056  0252  2A54               	goto	u2531
  8057  0253  2A55               	goto	u2530
  8058  0254                     u2531:
  8059  0254  2A3A               	goto	l2711
  8060  0255                     u2530:
  8061  0255                     l2717:
  8062                           
  8063                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
  8064  0255  082F               	movf	sprintf@flag,w
  8065  0256  3903               	andlw	3
  8066  0257  1903               	btfsc	3,2
  8067  0258  2A5A               	goto	u2541
  8068  0259  2A5B               	goto	u2540
  8069  025A                     u2541:
  8070  025A  2A6A               	goto	l2723
  8071  025B                     u2540:
  8072  025B                     l2719:
  8073                           
  8074                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  8075  025B  302D               	movlw	45
  8076  025C  00A5               	movwf	??_sprintf
  8077  025D  0820               	movf	sprintf@sp,w
  8078  025E  0084               	movwf	4
  8079  025F  1783               	bsf	3,7
  8080  0260  1C21               	btfss	sprintf@sp+1,0
  8081  0261  1383               	bcf	3,7
  8082  0262  0825               	movf	??_sprintf,w
  8083  0263  0080               	movwf	0
  8084  0264                     l2721:
  8085  0264  3001               	movlw	1
  8086  0265  07A0               	addwf	sprintf@sp,f
  8087  0266  1803               	skipnc
  8088  0267  0AA1               	incf	sprintf@sp+1,f
  8089  0268  3000               	movlw	0
  8090  0269  07A1               	addwf	sprintf@sp+1,f
  8091  026A                     l2723:
  8092                           
  8093                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  8094  026A  0834               	movf	sprintf@c,w
  8095  026B  00A5               	movwf	??_sprintf
  8096  026C  0825               	movf	??_sprintf,w
  8097  026D  00A9               	movwf	sprintf@prec
  8098                           
  8099                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  8100  026E  2AEB               	goto	l2739
  8101  026F                     l2725:
  8102                           
  8103                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1515:     c = (va
      +                          l / dpowers[(unsigned char)prec]) % 10 + '0';
  8104  026F  300A               	movlw	10
  8105  0270  00F8               	movwf	___lwmod@divisor
  8106  0271  3000               	movlw	0
  8107  0272  00F9               	movwf	___lwmod@divisor+1
  8108  0273  0829               	movf	sprintf@prec,w
  8109  0274  00A5               	movwf	??_sprintf
  8110  0275  0725               	addwf	??_sprintf,w
  8111  0276  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  8112  0277  0084               	movwf	4
  8113  0278  120A  158A  200A  120A  118A  	fcall	stringdir
  8114  027D  00F0               	movwf	___lwdiv@divisor
  8115  027E  120A  158A  200A  120A  118A  	fcall	stringdir
  8116  0283  00F1               	movwf	___lwdiv@divisor+1
  8117  0284  0831               	movf	sprintf@val+1,w
  8118  0285  00F3               	movwf	___lwdiv@dividend+1
  8119  0286  0830               	movf	sprintf@val,w
  8120  0287  00F2               	movwf	___lwdiv@dividend
  8121  0288  120A  118A  200E  120A  118A  	fcall	___lwdiv
  8122  028D  0871               	movf	?___lwdiv+1,w
  8123  028E  00FB               	movwf	___lwmod@dividend+1
  8124  028F  0870               	movf	?___lwdiv,w
  8125  0290  00FA               	movwf	___lwmod@dividend
  8126  0291  160A  118A  2500  120A  118A  	fcall	___lwmod
  8127  0296  0878               	movf	?___lwmod,w
  8128  0297  3E30               	addlw	48
  8129  0298  1283               	bcf	3,5	;RP0=0, select bank0
  8130  0299  1303               	bcf	3,6	;RP1=0, select bank0
  8131  029A  00A6               	movwf	??_sprintf+1
  8132  029B  0826               	movf	??_sprintf+1,w
  8133  029C  00B4               	movwf	sprintf@c
  8134                           
  8135                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1517:     break;
  8136  029D  2ADC               	goto	l2735
  8137  029E                     l2727:
  8138                           
  8139                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1525:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1526:     unsigned char 
      +                          idx = (val / hexpowers[(unsigned char)prec]) & 0xF;
  8140  029E  0829               	movf	sprintf@prec,w
  8141  029F  00A5               	movwf	??_sprintf
  8142  02A0  0725               	addwf	??_sprintf,w
  8143  02A1  3E0B               	addlw	low ((_hexpowers-__stringbase)| (0+32768))
  8144  02A2  0084               	movwf	4
  8145  02A3  120A  158A  200A  120A  118A  	fcall	stringdir
  8146  02A8  00F0               	movwf	___lwdiv@divisor
  8147  02A9  120A  158A  200A  120A  118A  	fcall	stringdir
  8148  02AE  00F1               	movwf	___lwdiv@divisor+1
  8149  02AF  0831               	movf	sprintf@val+1,w
  8150  02B0  00F3               	movwf	___lwdiv@dividend+1
  8151  02B1  0830               	movf	sprintf@val,w
  8152  02B2  00F2               	movwf	___lwdiv@dividend
  8153  02B3  120A  118A  200E  120A  118A  	fcall	___lwdiv
  8154  02B8  0870               	movf	?___lwdiv,w
  8155  02B9  390F               	andlw	15
  8156  02BA  1283               	bcf	3,5	;RP0=0, select bank0
  8157  02BB  1303               	bcf	3,6	;RP1=0, select bank0
  8158  02BC  00A6               	movwf	??_sprintf+1
  8159  02BD  0826               	movf	??_sprintf+1,w
  8160  02BE  00A8               	movwf	sprintf@idx
  8161  02BF                     l2729:
  8162                           
  8163                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1532:     c = "01
      +                          23456789abcdef"[idx];
  8164  02BF  0828               	movf	sprintf@idx,w
  8165  02C0  3E13               	addlw	low ((STR_29-__stringbase)| (0+32768))
  8166  02C1  0084               	movwf	4
  8167  02C2  120A  158A  200A  120A  118A  	fcall	stringdir
  8168  02C7  00A5               	movwf	??_sprintf
  8169  02C8  0825               	movf	??_sprintf,w
  8170  02C9  00B4               	movwf	sprintf@c
  8171                           
  8172                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1534:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1536:     break;
  8173  02CA  2ADC               	goto	l2735
  8174  02CB                     l2733:
  8175  02CB  082F               	movf	sprintf@flag,w
  8176  02CC  3980               	andlw	128
  8177  02CD  00A5               	movwf	??_sprintf
  8178  02CE  01A6               	clrf	??_sprintf+1
  8179                           
  8180                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8181                           ; Switch size 1, requested type "simple"
  8182                           ; Number of cases is 1, Range of values is 0 to 0
  8183                           ; switch strategies available:
  8184                           ; Name         Instructions Cycles
  8185                           ; simple_byte            4     3 (average)
  8186                           ; direct_byte           11     8 (fixed)
  8187                           ; jumptable            260     6 (fixed)
  8188                           ;	Chosen strategy is simple_byte
  8189  02CF  0826               	movf	??_sprintf+1,w
  8190  02D0  3A00               	xorlw	0	; case 0
  8191  02D1  1903               	skipnz
  8192  02D2  2AD4               	goto	l3741
  8193  02D3  2ADC               	goto	l2735
  8194  02D4                     l3741:
  8195                           
  8196                           ; Switch size 1, requested type "simple"
  8197                           ; Number of cases is 2, Range of values is 0 to 128
  8198                           ; switch strategies available:
  8199                           ; Name         Instructions Cycles
  8200                           ; simple_byte            7     4 (average)
  8201                           ; jumptable            260     6 (fixed)
  8202                           ;	Chosen strategy is simple_byte
  8203  02D4  0825               	movf	??_sprintf,w
  8204  02D5  3A00               	xorlw	0	; case 0
  8205  02D6  1903               	skipnz
  8206  02D7  2A6F               	goto	l2725
  8207  02D8  3A80               	xorlw	128	; case 128
  8208  02D9  1903               	skipnz
  8209  02DA  2A9E               	goto	l2727
  8210  02DB  2ADC               	goto	l2735
  8211  02DC                     l2735:
  8212                           
  8213                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ 
      +                          = (c)));
  8214  02DC  0834               	movf	sprintf@c,w
  8215  02DD  00A5               	movwf	??_sprintf
  8216  02DE  0820               	movf	sprintf@sp,w
  8217  02DF  0084               	movwf	4
  8218  02E0  1783               	bsf	3,7
  8219  02E1  1C21               	btfss	sprintf@sp+1,0
  8220  02E2  1383               	bcf	3,7
  8221  02E3  0825               	movf	??_sprintf,w
  8222  02E4  0080               	movwf	0
  8223  02E5                     l2737:
  8224  02E5  3001               	movlw	1
  8225  02E6  07A0               	addwf	sprintf@sp,f
  8226  02E7  1803               	skipnc
  8227  02E8  0AA1               	incf	sprintf@sp+1,f
  8228  02E9  3000               	movlw	0
  8229  02EA  07A1               	addwf	sprintf@sp+1,f
  8230  02EB                     l2739:
  8231                           
  8232                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  8233  02EB  30FF               	movlw	255
  8234  02EC  00A5               	movwf	??_sprintf
  8235  02ED  0825               	movf	??_sprintf,w
  8236  02EE  07A9               	addwf	sprintf@prec,f
  8237  02EF  0A29               	incf	sprintf@prec,w
  8238  02F0  1D03               	btfss	3,2
  8239  02F1  2AF3               	goto	u2551
  8240  02F2  2AF4               	goto	u2550
  8241  02F3                     u2551:
  8242  02F3  2ACB               	goto	l2733
  8243  02F4                     u2550:
  8244  02F4                     l2741:
  8245                           
  8246                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  8247  02F4  3001               	movlw	1
  8248  02F5  07A2               	addwf	sprintf@f,f
  8249  02F6  30FF               	movlw	-1
  8250  02F7  0722               	addwf	sprintf@f,w
  8251  02F8  0084               	movwf	4
  8252  02F9  120A  158A  200A  120A  118A  	fcall	stringdir
  8253  02FE  00A5               	movwf	??_sprintf
  8254  02FF  0825               	movf	??_sprintf,w
  8255  0300  00B4               	movwf	sprintf@c
  8256  0301  0834               	movf	sprintf@c,w
  8257  0302  1D03               	btfss	3,2
  8258  0303  2B05               	goto	u2561
  8259  0304  2B06               	goto	u2560
  8260  0305                     u2561:
  8261  0305  2859               	goto	l2603
  8262  0306                     u2560:
  8263  0306                     l2743:
  8264                           
  8265                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  8266  0306  0820               	movf	sprintf@sp,w
  8267  0307  0084               	movwf	4
  8268  0308  1783               	bsf	3,7
  8269  0309  1C21               	btfss	sprintf@sp+1,0
  8270  030A  1383               	bcf	3,7
  8271  030B  0180               	clrf	0
  8272  030C                     l572:
  8273  030C  0008               	return
  8274  030D                     __end_of_sprintf:
  8275                           
  8276                           	psect	text23
  8277  12EE                     __ptext23:	
  8278 ;; *************** function _isdigit *****************
  8279 ;; Defined at:
  8280 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\isdigit.c"
  8281 ;; Parameters:    Size  Location     Type
  8282 ;;  c               1    wreg     unsigned char 
  8283 ;; Auto vars:     Size  Location     Type
  8284 ;;  c               1    1[COMMON] unsigned char 
  8285 ;; Return value:  Size  Location     Type
  8286 ;;		None               void
  8287 ;; Registers used:
  8288 ;;		wreg, status,2, status,0
  8289 ;; Tracked objects:
  8290 ;;		On entry : 0/0
  8291 ;;		On exit  : 0/0
  8292 ;;		Unchanged: 0/0
  8293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8294 ;;      Params:         0       0       0       0       0
  8295 ;;      Locals:         2       0       0       0       0
  8296 ;;      Temps:          0       0       0       0       0
  8297 ;;      Totals:         2       0       0       0       0
  8298 ;;Total ram usage:        2 bytes
  8299 ;; Hardware stack levels used: 1
  8300 ;; This function calls:
  8301 ;;		Nothing
  8302 ;; This function is called by:
  8303 ;;		_sprintf
  8304 ;; This function uses a non-reentrant model
  8305 ;;
  8306                           
  8307  12EE                     _isdigit:	
  8308                           ;psect for function _isdigit
  8309                           
  8310                           
  8311                           ;incstack = 0
  8312                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  8313                           ;isdigit@c stored from wreg
  8314  12EE  00F1               	movwf	isdigit@c
  8315  12EF                     l2463:
  8316  12EF  01F0               	clrf	_isdigit$1238
  8317  12F0                     l2465:
  8318  12F0  303A               	movlw	58
  8319  12F1  0271               	subwf	isdigit@c,w
  8320  12F2  1803               	skipnc
  8321  12F3  2AF5               	goto	u2061
  8322  12F4  2AF6               	goto	u2060
  8323  12F5                     u2061:
  8324  12F5  2AFE               	goto	l2471
  8325  12F6                     u2060:
  8326  12F6                     l2467:
  8327  12F6  3030               	movlw	48
  8328  12F7  0271               	subwf	isdigit@c,w
  8329  12F8  1C03               	skipc
  8330  12F9  2AFB               	goto	u2071
  8331  12FA  2AFC               	goto	u2070
  8332  12FB                     u2071:
  8333  12FB  2AFE               	goto	l2471
  8334  12FC                     u2070:
  8335  12FC                     l2469:
  8336  12FC  01F0               	clrf	_isdigit$1238
  8337  12FD  0AF0               	incf	_isdigit$1238,f
  8338  12FE                     l2471:
  8339  12FE  0C70               	rrf	_isdigit$1238,w
  8340  12FF                     l1033:
  8341  12FF  0008               	return
  8342  1300                     __end_of_isdigit:
  8343                           
  8344                           	psect	text24
  8345  13D6                     __ptext24:	
  8346 ;; *************** function ___wmul *****************
  8347 ;; Defined at:
  8348 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\Umul16.c"
  8349 ;; Parameters:    Size  Location     Type
  8350 ;;  multiplier      2    0[COMMON] unsigned int 
  8351 ;;  multiplicand    2    2[COMMON] unsigned int 
  8352 ;; Auto vars:     Size  Location     Type
  8353 ;;  product         2    4[COMMON] unsigned int 
  8354 ;; Return value:  Size  Location     Type
  8355 ;;                  2    0[COMMON] unsigned int 
  8356 ;; Registers used:
  8357 ;;		wreg, status,2, status,0
  8358 ;; Tracked objects:
  8359 ;;		On entry : 0/0
  8360 ;;		On exit  : 0/0
  8361 ;;		Unchanged: 0/0
  8362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8363 ;;      Params:         4       0       0       0       0
  8364 ;;      Locals:         2       0       0       0       0
  8365 ;;      Temps:          0       0       0       0       0
  8366 ;;      Totals:         6       0       0       0       0
  8367 ;;Total ram usage:        6 bytes
  8368 ;; Hardware stack levels used: 1
  8369 ;; This function calls:
  8370 ;;		Nothing
  8371 ;; This function is called by:
  8372 ;;		_sprintf
  8373 ;; This function uses a non-reentrant model
  8374 ;;
  8375                           
  8376  13D6                     ___wmul:	
  8377                           ;psect for function ___wmul
  8378                           
  8379  13D6                     l2475:	
  8380                           ;incstack = 0
  8381                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  8382                           
  8383  13D6  01F4               	clrf	___wmul@product
  8384  13D7  01F5               	clrf	___wmul@product+1
  8385  13D8                     l2477:
  8386  13D8  1C70               	btfss	___wmul@multiplier,0
  8387  13D9  2BDB               	goto	u2081
  8388  13DA  2BDC               	goto	u2080
  8389  13DB                     u2081:
  8390  13DB  2BE2               	goto	l576
  8391  13DC                     u2080:
  8392  13DC                     l2479:
  8393  13DC  0872               	movf	___wmul@multiplicand,w
  8394  13DD  07F4               	addwf	___wmul@product,f
  8395  13DE  1803               	skipnc
  8396  13DF  0AF5               	incf	___wmul@product+1,f
  8397  13E0  0873               	movf	___wmul@multiplicand+1,w
  8398  13E1  07F5               	addwf	___wmul@product+1,f
  8399  13E2                     l576:
  8400  13E2  3001               	movlw	1
  8401  13E3                     u2095:
  8402  13E3  1003               	clrc
  8403  13E4  0DF2               	rlf	___wmul@multiplicand,f
  8404  13E5  0DF3               	rlf	___wmul@multiplicand+1,f
  8405  13E6  3EFF               	addlw	-1
  8406  13E7  1D03               	skipz
  8407  13E8  2BE3               	goto	u2095
  8408  13E9                     l2481:
  8409  13E9  3001               	movlw	1
  8410  13EA                     u2105:
  8411  13EA  1003               	clrc
  8412  13EB  0CF1               	rrf	___wmul@multiplier+1,f
  8413  13EC  0CF0               	rrf	___wmul@multiplier,f
  8414  13ED  3EFF               	addlw	-1
  8415  13EE  1D03               	skipz
  8416  13EF  2BEA               	goto	u2105
  8417  13F0                     l2483:
  8418  13F0  0870               	movf	___wmul@multiplier,w
  8419  13F1  0471               	iorwf	___wmul@multiplier+1,w
  8420  13F2  1D03               	btfss	3,2
  8421  13F3  2BF5               	goto	u2111
  8422  13F4  2BF6               	goto	u2110
  8423  13F5                     u2111:
  8424  13F5  2BD8               	goto	l2477
  8425  13F6                     u2110:
  8426  13F6                     l2485:
  8427  13F6  0875               	movf	___wmul@product+1,w
  8428  13F7  00F1               	movwf	?___wmul+1
  8429  13F8  0874               	movf	___wmul@product,w
  8430  13F9  00F0               	movwf	?___wmul
  8431  13FA                     l578:
  8432  13FA  0008               	return
  8433  13FB                     __end_of___wmul:
  8434                           
  8435                           	psect	text25
  8436  1500                     __ptext25:	
  8437 ;; *************** function ___lwmod *****************
  8438 ;; Defined at:
  8439 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\lwmod.c"
  8440 ;; Parameters:    Size  Location     Type
  8441 ;;  divisor         2    8[COMMON] unsigned int 
  8442 ;;  dividend        2   10[COMMON] unsigned int 
  8443 ;; Auto vars:     Size  Location     Type
  8444 ;;  counter         1   13[COMMON] unsigned char 
  8445 ;; Return value:  Size  Location     Type
  8446 ;;                  2    8[COMMON] unsigned int 
  8447 ;; Registers used:
  8448 ;;		wreg, status,2, status,0
  8449 ;; Tracked objects:
  8450 ;;		On entry : 0/0
  8451 ;;		On exit  : 0/0
  8452 ;;		Unchanged: 0/0
  8453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8454 ;;      Params:         4       0       0       0       0
  8455 ;;      Locals:         1       0       0       0       0
  8456 ;;      Temps:          1       0       0       0       0
  8457 ;;      Totals:         6       0       0       0       0
  8458 ;;Total ram usage:        6 bytes
  8459 ;; Hardware stack levels used: 1
  8460 ;; This function calls:
  8461 ;;		Nothing
  8462 ;; This function is called by:
  8463 ;;		_sprintf
  8464 ;; This function uses a non-reentrant model
  8465 ;;
  8466                           
  8467  1500                     ___lwmod:	
  8468                           ;psect for function ___lwmod
  8469                           
  8470  1500                     l2515:	
  8471                           ;incstack = 0
  8472                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  8473                           
  8474  1500  0878               	movf	___lwmod@divisor,w
  8475  1501  0479               	iorwf	___lwmod@divisor+1,w
  8476  1502  1903               	btfsc	3,2
  8477  1503  2D05               	goto	u2191
  8478  1504  2D06               	goto	u2190
  8479  1505                     u2191:
  8480  1505  2D35               	goto	l2533
  8481  1506                     u2190:
  8482  1506                     l2517:
  8483  1506  01FD               	clrf	___lwmod@counter
  8484  1507  0AFD               	incf	___lwmod@counter,f
  8485  1508  2D14               	goto	l2523
  8486  1509                     l2519:
  8487  1509  3001               	movlw	1
  8488  150A                     u2205:
  8489  150A  1003               	clrc
  8490  150B  0DF8               	rlf	___lwmod@divisor,f
  8491  150C  0DF9               	rlf	___lwmod@divisor+1,f
  8492  150D  3EFF               	addlw	-1
  8493  150E  1D03               	skipz
  8494  150F  2D0A               	goto	u2205
  8495  1510                     l2521:
  8496  1510  3001               	movlw	1
  8497  1511  00FC               	movwf	??___lwmod
  8498  1512  087C               	movf	??___lwmod,w
  8499  1513  07FD               	addwf	___lwmod@counter,f
  8500  1514                     l2523:
  8501  1514  1FF9               	btfss	___lwmod@divisor+1,7
  8502  1515  2D17               	goto	u2211
  8503  1516  2D18               	goto	u2210
  8504  1517                     u2211:
  8505  1517  2D09               	goto	l2519
  8506  1518                     u2210:
  8507  1518                     l2525:
  8508  1518  0879               	movf	___lwmod@divisor+1,w
  8509  1519  027B               	subwf	___lwmod@dividend+1,w
  8510  151A  1D03               	skipz
  8511  151B  2D1E               	goto	u2225
  8512  151C  0878               	movf	___lwmod@divisor,w
  8513  151D  027A               	subwf	___lwmod@dividend,w
  8514  151E                     u2225:
  8515  151E  1C03               	skipc
  8516  151F  2D21               	goto	u2221
  8517  1520  2D22               	goto	u2220
  8518  1521                     u2221:
  8519  1521  2D28               	goto	l2529
  8520  1522                     u2220:
  8521  1522                     l2527:
  8522  1522  0878               	movf	___lwmod@divisor,w
  8523  1523  02FA               	subwf	___lwmod@dividend,f
  8524  1524  0879               	movf	___lwmod@divisor+1,w
  8525  1525  1C03               	skipc
  8526  1526  03FB               	decf	___lwmod@dividend+1,f
  8527  1527  02FB               	subwf	___lwmod@dividend+1,f
  8528  1528                     l2529:
  8529  1528  3001               	movlw	1
  8530  1529                     u2235:
  8531  1529  1003               	clrc
  8532  152A  0CF9               	rrf	___lwmod@divisor+1,f
  8533  152B  0CF8               	rrf	___lwmod@divisor,f
  8534  152C  3EFF               	addlw	-1
  8535  152D  1D03               	skipz
  8536  152E  2D29               	goto	u2235
  8537  152F                     l2531:
  8538  152F  3001               	movlw	1
  8539  1530  02FD               	subwf	___lwmod@counter,f
  8540  1531  1D03               	btfss	3,2
  8541  1532  2D34               	goto	u2241
  8542  1533  2D35               	goto	u2240
  8543  1534                     u2241:
  8544  1534  2D18               	goto	l2525
  8545  1535                     u2240:
  8546  1535                     l2533:
  8547  1535  087B               	movf	___lwmod@dividend+1,w
  8548  1536  00F9               	movwf	?___lwmod+1
  8549  1537  087A               	movf	___lwmod@dividend,w
  8550  1538  00F8               	movwf	?___lwmod
  8551  1539                     l858:
  8552  1539  0008               	return
  8553  153A                     __end_of___lwmod:
  8554                           
  8555                           	psect	text26
  8556  000E                     __ptext26:	
  8557 ;; *************** function ___lwdiv *****************
  8558 ;; Defined at:
  8559 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\lwdiv.c"
  8560 ;; Parameters:    Size  Location     Type
  8561 ;;  divisor         2    0[COMMON] unsigned int 
  8562 ;;  dividend        2    2[COMMON] unsigned int 
  8563 ;; Auto vars:     Size  Location     Type
  8564 ;;  quotient        2    5[COMMON] unsigned int 
  8565 ;;  counter         1    7[COMMON] unsigned char 
  8566 ;; Return value:  Size  Location     Type
  8567 ;;                  2    0[COMMON] unsigned int 
  8568 ;; Registers used:
  8569 ;;		wreg, status,2, status,0
  8570 ;; Tracked objects:
  8571 ;;		On entry : 0/0
  8572 ;;		On exit  : 0/0
  8573 ;;		Unchanged: 0/0
  8574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8575 ;;      Params:         4       0       0       0       0
  8576 ;;      Locals:         3       0       0       0       0
  8577 ;;      Temps:          1       0       0       0       0
  8578 ;;      Totals:         8       0       0       0       0
  8579 ;;Total ram usage:        8 bytes
  8580 ;; Hardware stack levels used: 1
  8581 ;; This function calls:
  8582 ;;		Nothing
  8583 ;; This function is called by:
  8584 ;;		_main
  8585 ;;		_sprintf
  8586 ;; This function uses a non-reentrant model
  8587 ;;
  8588                           
  8589  000E                     ___lwdiv:	
  8590                           ;psect for function ___lwdiv
  8591                           
  8592  000E                     l2489:	
  8593                           ;incstack = 0
  8594                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  8595                           
  8596  000E  01F5               	clrf	___lwdiv@quotient
  8597  000F  01F6               	clrf	___lwdiv@quotient+1
  8598  0010                     l2491:
  8599  0010  0870               	movf	___lwdiv@divisor,w
  8600  0011  0471               	iorwf	___lwdiv@divisor+1,w
  8601  0012  1903               	btfsc	3,2
  8602  0013  2815               	goto	u2121
  8603  0014  2816               	goto	u2120
  8604  0015                     u2121:
  8605  0015  284D               	goto	l2511
  8606  0016                     u2120:
  8607  0016                     l2493:
  8608  0016  01F7               	clrf	___lwdiv@counter
  8609  0017  0AF7               	incf	___lwdiv@counter,f
  8610  0018  2824               	goto	l2499
  8611  0019                     l2495:
  8612  0019  3001               	movlw	1
  8613  001A                     u2135:
  8614  001A  1003               	clrc
  8615  001B  0DF0               	rlf	___lwdiv@divisor,f
  8616  001C  0DF1               	rlf	___lwdiv@divisor+1,f
  8617  001D  3EFF               	addlw	-1
  8618  001E  1D03               	skipz
  8619  001F  281A               	goto	u2135
  8620  0020                     l2497:
  8621  0020  3001               	movlw	1
  8622  0021  00F4               	movwf	??___lwdiv
  8623  0022  0874               	movf	??___lwdiv,w
  8624  0023  07F7               	addwf	___lwdiv@counter,f
  8625  0024                     l2499:
  8626  0024  1FF1               	btfss	___lwdiv@divisor+1,7
  8627  0025  2827               	goto	u2141
  8628  0026  2828               	goto	u2140
  8629  0027                     u2141:
  8630  0027  2819               	goto	l2495
  8631  0028                     u2140:
  8632  0028                     l2501:
  8633  0028  3001               	movlw	1
  8634  0029                     u2155:
  8635  0029  1003               	clrc
  8636  002A  0DF5               	rlf	___lwdiv@quotient,f
  8637  002B  0DF6               	rlf	___lwdiv@quotient+1,f
  8638  002C  3EFF               	addlw	-1
  8639  002D  1D03               	skipz
  8640  002E  2829               	goto	u2155
  8641  002F  0871               	movf	___lwdiv@divisor+1,w
  8642  0030  0273               	subwf	___lwdiv@dividend+1,w
  8643  0031  1D03               	skipz
  8644  0032  2835               	goto	u2165
  8645  0033  0870               	movf	___lwdiv@divisor,w
  8646  0034  0272               	subwf	___lwdiv@dividend,w
  8647  0035                     u2165:
  8648  0035  1C03               	skipc
  8649  0036  2838               	goto	u2161
  8650  0037  2839               	goto	u2160
  8651  0038                     u2161:
  8652  0038  2840               	goto	l2507
  8653  0039                     u2160:
  8654  0039                     l2503:
  8655  0039  0870               	movf	___lwdiv@divisor,w
  8656  003A  02F2               	subwf	___lwdiv@dividend,f
  8657  003B  0871               	movf	___lwdiv@divisor+1,w
  8658  003C  1C03               	skipc
  8659  003D  03F3               	decf	___lwdiv@dividend+1,f
  8660  003E  02F3               	subwf	___lwdiv@dividend+1,f
  8661  003F                     l2505:
  8662  003F  1475               	bsf	___lwdiv@quotient,0
  8663  0040                     l2507:
  8664  0040  3001               	movlw	1
  8665  0041                     u2175:
  8666  0041  1003               	clrc
  8667  0042  0CF1               	rrf	___lwdiv@divisor+1,f
  8668  0043  0CF0               	rrf	___lwdiv@divisor,f
  8669  0044  3EFF               	addlw	-1
  8670  0045  1D03               	skipz
  8671  0046  2841               	goto	u2175
  8672  0047                     l2509:
  8673  0047  3001               	movlw	1
  8674  0048  02F7               	subwf	___lwdiv@counter,f
  8675  0049  1D03               	btfss	3,2
  8676  004A  284C               	goto	u2181
  8677  004B  284D               	goto	u2180
  8678  004C                     u2181:
  8679  004C  2828               	goto	l2501
  8680  004D                     u2180:
  8681  004D                     l2511:
  8682  004D  0876               	movf	___lwdiv@quotient+1,w
  8683  004E  00F1               	movwf	?___lwdiv+1
  8684  004F  0875               	movf	___lwdiv@quotient,w
  8685  0050  00F0               	movwf	?___lwdiv
  8686  0051                     l848:
  8687  0051  0008               	return
  8688  0052                     __end_of___lwdiv:
  8689                           
  8690                           	psect	text27
  8691  1578                     __ptext27:	
  8692 ;; *************** function _LCD_Write_String *****************
  8693 ;; Defined at:
  8694 ;;		line 79 in file "LCD.c"
  8695 ;; Parameters:    Size  Location     Type
  8696 ;;  Str             2    7[COMMON] PTR const unsigned char 
  8697 ;;		 -> main@buffer3_748(16), main@buffer3_745(16), main@buffer3_742(16), STR_23(4), 
  8698 ;;		 -> STR_22(4), STR_21(4), STR_20(4), STR_19(4), 
  8699 ;;		 -> STR_18(4), STR_17(4), STR_16(4), year(10), 
  8700 ;;		 -> month(10), date(10), hours(10), mins(10), 
  8701 ;;		 -> secs(10), STR_6(3), STR_5(3), main@buffer3(16), 
  8702 ;;		 -> DisplayTemp@buffer2(16), DisplayTemp@buffer1(16), 
  8703 ;; Auto vars:     Size  Location     Type
  8704 ;;  i               2   12[COMMON] int 
  8705 ;; Return value:  Size  Location     Type
  8706 ;;                  1    wreg      void 
  8707 ;; Registers used:
  8708 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8709 ;; Tracked objects:
  8710 ;;		On entry : 0/0
  8711 ;;		On exit  : 0/0
  8712 ;;		Unchanged: 0/0
  8713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8714 ;;      Params:         2       0       0       0       0
  8715 ;;      Locals:         2       0       0       0       0
  8716 ;;      Temps:          3       0       0       0       0
  8717 ;;      Totals:         7       0       0       0       0
  8718 ;;Total ram usage:        7 bytes
  8719 ;; Hardware stack levels used: 1
  8720 ;; Hardware stack levels required when called: 6
  8721 ;; This function calls:
  8722 ;;		_LCD_Write_Char
  8723 ;; This function is called by:
  8724 ;;		_LCD_String_xy
  8725 ;;		_DisplayTemp
  8726 ;;		_main
  8727 ;; This function uses a non-reentrant model
  8728 ;;
  8729                           
  8730  1578                     _LCD_Write_String:	
  8731                           ;psect for function _LCD_Write_String
  8732                           
  8733  1578                     l2577:	
  8734                           ;incstack = 0
  8735                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8736                           
  8737                           
  8738                           ;LCD.c: 79: void LCD_Write_String(const char* Str);LCD.c: 80: {;LCD.c: 81:   for(int i=0
      +                          ; Str[i]!='\0'; i++)
  8739  1578  01FC               	clrf	LCD_Write_String@i
  8740  1579  01FD               	clrf	LCD_Write_String@i+1
  8741  157A  2D9D               	goto	l2583
  8742  157B                     l2579:
  8743                           
  8744                           ;LCD.c: 82:     LCD_Write_Char(Str[i]);
  8745  157B  087C               	movf	LCD_Write_String@i,w
  8746  157C  0777               	addwf	LCD_Write_String@Str,w
  8747  157D  00FA               	movwf	??_LCD_Write_String+1
  8748  157E  0878               	movf	LCD_Write_String@Str+1,w
  8749  157F  00F9               	movwf	??_LCD_Write_String
  8750  1580  1803               	skipnc
  8751  1581  0AF9               	incf	??_LCD_Write_String,f
  8752  1582  1FFC               	btfss	LCD_Write_String@i,7
  8753  1583  2D85               	goto	u2320
  8754  1584  03F9               	decf	??_LCD_Write_String,f
  8755  1585                     u2320:
  8756  1585  0879               	movf	??_LCD_Write_String,w
  8757  1586  00FB               	movwf	??_LCD_Write_String+2
  8758  1587  087B               	movf	??_LCD_Write_String+2,w
  8759  1588  1283               	bcf	3,5	;RP0=0, select bank0
  8760  1589  1303               	bcf	3,6	;RP1=0, select bank0
  8761  158A  00FF               	movwf	btemp+1
  8762  158B  087A               	movf	??_LCD_Write_String+1,w
  8763  158C  0084               	movwf	4
  8764  158D  120A  158A  2000  160A  118A  	fcall	stringtab
  8765  1592  160A  118A  23B9  160A  118A  	fcall	_LCD_Write_Char
  8766  1597                     l2581:
  8767  1597  3001               	movlw	1
  8768  1598  07FC               	addwf	LCD_Write_String@i,f
  8769  1599  1803               	skipnc
  8770  159A  0AFD               	incf	LCD_Write_String@i+1,f
  8771  159B  3000               	movlw	0
  8772  159C  07FD               	addwf	LCD_Write_String@i+1,f
  8773  159D                     l2583:
  8774  159D  087C               	movf	LCD_Write_String@i,w
  8775  159E  0777               	addwf	LCD_Write_String@Str,w
  8776  159F  00FA               	movwf	??_LCD_Write_String+1
  8777  15A0  0878               	movf	LCD_Write_String@Str+1,w
  8778  15A1  00F9               	movwf	??_LCD_Write_String
  8779  15A2  1803               	skipnc
  8780  15A3  0AF9               	incf	??_LCD_Write_String,f
  8781  15A4  1FFC               	btfss	LCD_Write_String@i,7
  8782  15A5  2DA7               	goto	u2330
  8783  15A6  03F9               	decf	??_LCD_Write_String,f
  8784  15A7                     u2330:
  8785  15A7  0879               	movf	??_LCD_Write_String,w
  8786  15A8  00FB               	movwf	??_LCD_Write_String+2
  8787  15A9  087B               	movf	??_LCD_Write_String+2,w
  8788  15AA  1283               	bcf	3,5	;RP0=0, select bank0
  8789  15AB  1303               	bcf	3,6	;RP1=0, select bank0
  8790  15AC  00FF               	movwf	btemp+1
  8791  15AD  087A               	movf	??_LCD_Write_String+1,w
  8792  15AE  0084               	movwf	4
  8793  15AF  120A  158A  2000  160A  118A  	fcall	stringtab
  8794  15B4  3A00               	xorlw	0
  8795  15B5  1D03               	skipz
  8796  15B6  2DB8               	goto	u2341
  8797  15B7  2DB9               	goto	u2340
  8798  15B8                     u2341:
  8799  15B8  2D7B               	goto	l2579
  8800  15B9                     u2340:
  8801  15B9                     l154:
  8802  15B9  0008               	return
  8803  15BA                     __end_of_LCD_Write_String:
  8804                           
  8805                           	psect	text28
  8806  13B9                     __ptext28:	
  8807 ;; *************** function _LCD_Write_Char *****************
  8808 ;; Defined at:
  8809 ;;		line 72 in file "LCD.c"
  8810 ;; Parameters:    Size  Location     Type
  8811 ;;  Data            1    wreg     const unsigned char 
  8812 ;; Auto vars:     Size  Location     Type
  8813 ;;  Data            1    6[COMMON] const unsigned char 
  8814 ;; Return value:  Size  Location     Type
  8815 ;;                  1    wreg      void 
  8816 ;; Registers used:
  8817 ;;		wreg, status,2, status,0, pclath, cstack
  8818 ;; Tracked objects:
  8819 ;;		On entry : 0/0
  8820 ;;		On exit  : 0/0
  8821 ;;		Unchanged: 0/0
  8822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8823 ;;      Params:         0       0       0       0       0
  8824 ;;      Locals:         1       0       0       0       0
  8825 ;;      Temps:          1       0       0       0       0
  8826 ;;      Totals:         2       0       0       0       0
  8827 ;;Total ram usage:        2 bytes
  8828 ;; Hardware stack levels used: 1
  8829 ;; Hardware stack levels required when called: 5
  8830 ;; This function calls:
  8831 ;;		_LCD_Write_4Bit
  8832 ;; This function is called by:
  8833 ;;		_LCD_Write_String
  8834 ;; This function uses a non-reentrant model
  8835 ;;
  8836                           
  8837  13B9                     _LCD_Write_Char:	
  8838                           ;psect for function _LCD_Write_Char
  8839                           
  8840                           
  8841                           ;incstack = 0
  8842                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  8843                           ;LCD_Write_Char@Data stored from wreg
  8844  13B9  00F6               	movwf	LCD_Write_Char@Data
  8845  13BA                     l2459:
  8846                           
  8847                           ;LCD.c: 72: void LCD_Write_Char(const char Data);LCD.c: 73: {;LCD.c: 74:   RS = 1;
  8848  13BA  1283               	bcf	3,5	;RP0=0, select bank0
  8849  13BB  1303               	bcf	3,6	;RP1=0, select bank0
  8850  13BC  01EC               	clrf	_RS
  8851  13BD  0AEC               	incf	_RS,f
  8852  13BE                     l2461:
  8853                           
  8854                           ;LCD.c: 75:   LCD_Write_4Bit(Data & 0xF0);
  8855  13BE  0876               	movf	LCD_Write_Char@Data,w
  8856  13BF  39F0               	andlw	240
  8857  13C0  160A  118A  2383  160A  118A  	fcall	_LCD_Write_4Bit
  8858                           
  8859                           ;LCD.c: 76:   LCD_Write_4Bit((Data << 4) & 0xF0);
  8860  13C5  0876               	movf	LCD_Write_Char@Data,w
  8861  13C6  00F5               	movwf	??_LCD_Write_Char
  8862  13C7  3003               	movlw	3
  8863  13C8                     u2055:
  8864  13C8  1003               	clrc
  8865  13C9  0DF5               	rlf	??_LCD_Write_Char,f
  8866  13CA  3EFF               	addlw	-1
  8867  13CB  1D03               	skipz
  8868  13CC  2BC8               	goto	u2055
  8869  13CD  1003               	clrc
  8870  13CE  0D75               	rlf	??_LCD_Write_Char,w
  8871  13CF  39F0               	andlw	240
  8872  13D0  160A  118A  2383  160A  118A  	fcall	_LCD_Write_4Bit
  8873  13D5                     l148:
  8874  13D5  0008               	return
  8875  13D6                     __end_of_LCD_Write_Char:
  8876                           
  8877                           	psect	text29
  8878  14CA                     __ptext29:	
  8879 ;; *************** function _LCD_Set_Cursor *****************
  8880 ;; Defined at:
  8881 ;;		line 85 in file "LCD.c"
  8882 ;; Parameters:    Size  Location     Type
  8883 ;;  ROW             1    wreg     unsigned char 
  8884 ;;  COL             1    7[COMMON] unsigned char 
  8885 ;; Auto vars:     Size  Location     Type
  8886 ;;  ROW             1   10[COMMON] unsigned char 
  8887 ;; Return value:  Size  Location     Type
  8888 ;;                  1    wreg      void 
  8889 ;; Registers used:
  8890 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8891 ;; Tracked objects:
  8892 ;;		On entry : 0/0
  8893 ;;		On exit  : 0/0
  8894 ;;		Unchanged: 0/0
  8895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8896 ;;      Params:         1       0       0       0       0
  8897 ;;      Locals:         1       0       0       0       0
  8898 ;;      Temps:          2       0       0       0       0
  8899 ;;      Totals:         4       0       0       0       0
  8900 ;;Total ram usage:        4 bytes
  8901 ;; Hardware stack levels used: 1
  8902 ;; Hardware stack levels required when called: 6
  8903 ;; This function calls:
  8904 ;;		_LCD_CMD
  8905 ;; This function is called by:
  8906 ;;		_DisplayTemp
  8907 ;; This function uses a non-reentrant model
  8908 ;;
  8909                           
  8910  14CA                     _LCD_Set_Cursor:	
  8911                           ;psect for function _LCD_Set_Cursor
  8912                           
  8913                           
  8914                           ;incstack = 0
  8915                           ; Regs used in _LCD_Set_Cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8916                           ;LCD_Set_Cursor@ROW stored from wreg
  8917  14CA  00FA               	movwf	LCD_Set_Cursor@ROW
  8918  14CB                     l2585:
  8919                           
  8920                           ;LCD.c: 85: void LCD_Set_Cursor(unsigned char ROW, unsigned char COL);LCD.c: 86: {;LCD.c
      +                          : 87:   switch(ROW)
  8921  14CB  2CEC               	goto	l2595
  8922  14CC                     l2587:
  8923                           
  8924                           ;LCD.c: 90:       LCD_CMD(0xC0 + COL-1);
  8925  14CC  0877               	movf	LCD_Set_Cursor@COL,w
  8926  14CD  3EBF               	addlw	191
  8927  14CE  160A  118A  239D  160A  118A  	fcall	_LCD_CMD
  8928                           
  8929                           ;LCD.c: 91:       break;
  8930  14D3  2CFF               	goto	l163
  8931  14D4                     l2589:
  8932                           
  8933                           ;LCD.c: 93:       LCD_CMD(0x94 + COL-1);
  8934  14D4  0877               	movf	LCD_Set_Cursor@COL,w
  8935  14D5  3E93               	addlw	147
  8936  14D6  160A  118A  239D  160A  118A  	fcall	_LCD_CMD
  8937                           
  8938                           ;LCD.c: 94:       break;
  8939  14DB  2CFF               	goto	l163
  8940  14DC                     l2591:
  8941                           
  8942                           ;LCD.c: 96:       LCD_CMD(0xD4 + COL-1);
  8943  14DC  0877               	movf	LCD_Set_Cursor@COL,w
  8944  14DD  3ED3               	addlw	211
  8945  14DE  160A  118A  239D  160A  118A  	fcall	_LCD_CMD
  8946                           
  8947                           ;LCD.c: 97:       break;
  8948  14E3  2CFF               	goto	l163
  8949  14E4                     l2593:
  8950                           
  8951                           ;LCD.c: 100:       LCD_CMD(0x80 + COL-1);
  8952  14E4  0877               	movf	LCD_Set_Cursor@COL,w
  8953  14E5  3E7F               	addlw	127
  8954  14E6  160A  118A  239D  160A  118A  	fcall	_LCD_CMD
  8955                           
  8956                           ;LCD.c: 101:   }
  8957  14EB  2CFF               	goto	l163
  8958  14EC                     l2595:
  8959  14EC  087A               	movf	LCD_Set_Cursor@ROW,w
  8960  14ED  00F8               	movwf	??_LCD_Set_Cursor
  8961  14EE  01F9               	clrf	??_LCD_Set_Cursor+1
  8962                           
  8963                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8964                           ; Switch size 1, requested type "simple"
  8965                           ; Number of cases is 1, Range of values is 0 to 0
  8966                           ; switch strategies available:
  8967                           ; Name         Instructions Cycles
  8968                           ; simple_byte            4     3 (average)
  8969                           ; direct_byte           11     8 (fixed)
  8970                           ; jumptable            260     6 (fixed)
  8971                           ;	Chosen strategy is simple_byte
  8972  14EF  0879               	movf	??_LCD_Set_Cursor+1,w
  8973  14F0  3A00               	xorlw	0	; case 0
  8974  14F1  1903               	skipnz
  8975  14F2  2CF4               	goto	l3743
  8976  14F3  2CE4               	goto	l2593
  8977  14F4                     l3743:
  8978                           
  8979                           ; Switch size 1, requested type "simple"
  8980                           ; Number of cases is 3, Range of values is 2 to 4
  8981                           ; switch strategies available:
  8982                           ; Name         Instructions Cycles
  8983                           ; simple_byte           10     6 (average)
  8984                           ; direct_byte           20    11 (fixed)
  8985                           ; jumptable            263     9 (fixed)
  8986                           ;	Chosen strategy is simple_byte
  8987  14F4  0878               	movf	??_LCD_Set_Cursor,w
  8988  14F5  3A02               	xorlw	2	; case 2
  8989  14F6  1903               	skipnz
  8990  14F7  2CCC               	goto	l2587
  8991  14F8  3A01               	xorlw	1	; case 3
  8992  14F9  1903               	skipnz
  8993  14FA  2CD4               	goto	l2589
  8994  14FB  3A07               	xorlw	7	; case 4
  8995  14FC  1903               	skipnz
  8996  14FD  2CDC               	goto	l2591
  8997  14FE  2CE4               	goto	l2593
  8998  14FF                     l163:
  8999  14FF  0008               	return
  9000  1500                     __end_of_LCD_Set_Cursor:
  9001                           
  9002                           	psect	text30
  9003  139D                     __ptext30:	
  9004 ;; *************** function _LCD_CMD *****************
  9005 ;; Defined at:
  9006 ;;		line 65 in file "LCD.c"
  9007 ;; Parameters:    Size  Location     Type
  9008 ;;  CMD             1    wreg     unsigned char 
  9009 ;; Auto vars:     Size  Location     Type
  9010 ;;  CMD             1    6[COMMON] unsigned char 
  9011 ;; Return value:  Size  Location     Type
  9012 ;;                  1    wreg      void 
  9013 ;; Registers used:
  9014 ;;		wreg, status,2, status,0, pclath, cstack
  9015 ;; Tracked objects:
  9016 ;;		On entry : 0/0
  9017 ;;		On exit  : 0/0
  9018 ;;		Unchanged: 0/0
  9019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9020 ;;      Params:         0       0       0       0       0
  9021 ;;      Locals:         1       0       0       0       0
  9022 ;;      Temps:          1       0       0       0       0
  9023 ;;      Totals:         2       0       0       0       0
  9024 ;;Total ram usage:        2 bytes
  9025 ;; Hardware stack levels used: 1
  9026 ;; Hardware stack levels required when called: 5
  9027 ;; This function calls:
  9028 ;;		_LCD_Write_4Bit
  9029 ;; This function is called by:
  9030 ;;		_LCD_String_xy
  9031 ;;		_LCD_Init
  9032 ;;		_LCD_Set_Cursor
  9033 ;;		_LCD_Clear
  9034 ;;		_LCD_SL
  9035 ;;		_LCD_SR
  9036 ;; This function uses a non-reentrant model
  9037 ;;
  9038                           
  9039  139D                     _LCD_CMD:	
  9040                           ;psect for function _LCD_CMD
  9041                           
  9042                           
  9043                           ;incstack = 0
  9044                           ; Regs used in _LCD_CMD: [wreg+status,2+status,0+pclath+cstack]
  9045                           ;LCD_CMD@CMD stored from wreg
  9046  139D  00F6               	movwf	LCD_CMD@CMD
  9047  139E                     l2453:
  9048                           
  9049                           ;LCD.c: 65: void LCD_CMD(unsigned char CMD);LCD.c: 66: {;LCD.c: 67:   RS = 0;
  9050  139E  1283               	bcf	3,5	;RP0=0, select bank0
  9051  139F  1303               	bcf	3,6	;RP1=0, select bank0
  9052  13A0  01EC               	clrf	_RS
  9053  13A1                     l2455:
  9054                           
  9055                           ;LCD.c: 68:   LCD_Write_4Bit(CMD & 0xF0);
  9056  13A1  0876               	movf	LCD_CMD@CMD,w
  9057  13A2  39F0               	andlw	240
  9058  13A3  160A  118A  2383  160A  118A  	fcall	_LCD_Write_4Bit
  9059  13A8                     l2457:
  9060                           
  9061                           ;LCD.c: 69:   LCD_Write_4Bit((CMD << 4) & 0xF0);
  9062  13A8  0876               	movf	LCD_CMD@CMD,w
  9063  13A9  00F5               	movwf	??_LCD_CMD
  9064  13AA  3003               	movlw	3
  9065  13AB                     u2045:
  9066  13AB  1003               	clrc
  9067  13AC  0DF5               	rlf	??_LCD_CMD,f
  9068  13AD  3EFF               	addlw	-1
  9069  13AE  1D03               	skipz
  9070  13AF  2BAB               	goto	u2045
  9071  13B0  1003               	clrc
  9072  13B1  0D75               	rlf	??_LCD_CMD,w
  9073  13B2  39F0               	andlw	240
  9074  13B3  160A  118A  2383  160A  118A  	fcall	_LCD_Write_4Bit
  9075  13B8                     l145:
  9076  13B8  0008               	return
  9077  13B9                     __end_of_LCD_CMD:
  9078                           
  9079                           	psect	text31
  9080  1383                     __ptext31:	
  9081 ;; *************** function _LCD_Write_4Bit *****************
  9082 ;; Defined at:
  9083 ;;		line 56 in file "LCD.c"
  9084 ;; Parameters:    Size  Location     Type
  9085 ;;  Nibble          1    wreg     unsigned char 
  9086 ;; Auto vars:     Size  Location     Type
  9087 ;;  Nibble          1    4[COMMON] unsigned char 
  9088 ;; Return value:  Size  Location     Type
  9089 ;;                  1    wreg      void 
  9090 ;; Registers used:
  9091 ;;		wreg, status,2, status,0, pclath, cstack
  9092 ;; Tracked objects:
  9093 ;;		On entry : 0/0
  9094 ;;		On exit  : 0/0
  9095 ;;		Unchanged: 0/0
  9096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9097 ;;      Params:         0       0       0       0       0
  9098 ;;      Locals:         1       0       0       0       0
  9099 ;;      Temps:          1       0       0       0       0
  9100 ;;      Totals:         2       0       0       0       0
  9101 ;;Total ram usage:        2 bytes
  9102 ;; Hardware stack levels used: 1
  9103 ;; Hardware stack levels required when called: 4
  9104 ;; This function calls:
  9105 ;;		_IO_Expander_Write
  9106 ;; This function is called by:
  9107 ;;		_LCD_CMD
  9108 ;;		_LCD_Write_Char
  9109 ;; This function uses a non-reentrant model
  9110 ;;
  9111                           
  9112  1383                     _LCD_Write_4Bit:	
  9113                           ;psect for function _LCD_Write_4Bit
  9114                           
  9115                           
  9116                           ;incstack = 0
  9117                           ; Regs used in _LCD_Write_4Bit: [wreg+status,2+status,0+pclath+cstack]
  9118                           ;LCD_Write_4Bit@Nibble stored from wreg
  9119  1383  00F4               	movwf	LCD_Write_4Bit@Nibble
  9120  1384                     l2443:
  9121                           
  9122                           ;LCD.c: 56: void LCD_Write_4Bit(unsigned char Nibble);LCD.c: 57: {;LCD.c: 59:   Nibble |
      +                          = RS;
  9123  1384  1283               	bcf	3,5	;RP0=0, select bank0
  9124  1385  1303               	bcf	3,6	;RP1=0, select bank0
  9125  1386  086C               	movf	_RS,w
  9126  1387  00F3               	movwf	??_LCD_Write_4Bit
  9127  1388  0873               	movf	??_LCD_Write_4Bit,w
  9128  1389  04F4               	iorwf	LCD_Write_4Bit@Nibble,f
  9129  138A                     l2445:
  9130                           
  9131                           ;LCD.c: 60:   IO_Expander_Write(Nibble | 0x04);
  9132  138A  0874               	movf	LCD_Write_4Bit@Nibble,w
  9133  138B  3804               	iorlw	4
  9134  138C  160A  118A  233B  160A  118A  	fcall	_IO_Expander_Write
  9135  1391                     l2447:
  9136                           
  9137                           ;LCD.c: 61:   IO_Expander_Write(Nibble & 0xFB);
  9138  1391  0874               	movf	LCD_Write_4Bit@Nibble,w
  9139  1392  39FB               	andlw	251
  9140  1393  160A  118A  233B  160A  118A  	fcall	_IO_Expander_Write
  9141                           
  9142                           ;LCD.c: 62:   _delay((unsigned long)((50)*(8000000/4000000.0)));
  9143  1398  3021               	movlw	33
  9144  1399  00F3               	movwf	??_LCD_Write_4Bit
  9145  139A                     u4117:
  9146  139A  0BF3               	decfsz	??_LCD_Write_4Bit,f
  9147  139B  2B9A               	goto	u4117
  9148  139C                     l142:
  9149  139C  0008               	return
  9150  139D                     __end_of_LCD_Write_4Bit:
  9151                           
  9152                           	psect	text32
  9153  133B                     __ptext32:	
  9154 ;; *************** function _IO_Expander_Write *****************
  9155 ;; Defined at:
  9156 ;;		line 49 in file "LCD.c"
  9157 ;; Parameters:    Size  Location     Type
  9158 ;;  Data            1    wreg     unsigned char 
  9159 ;; Auto vars:     Size  Location     Type
  9160 ;;  Data            1    2[COMMON] unsigned char 
  9161 ;; Return value:  Size  Location     Type
  9162 ;;                  1    wreg      void 
  9163 ;; Registers used:
  9164 ;;		wreg, status,2, status,0, pclath, cstack
  9165 ;; Tracked objects:
  9166 ;;		On entry : 0/0
  9167 ;;		On exit  : 0/0
  9168 ;;		Unchanged: 0/0
  9169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9170 ;;      Params:         0       0       0       0       0
  9171 ;;      Locals:         1       0       0       0       0
  9172 ;;      Temps:          0       0       0       0       0
  9173 ;;      Totals:         1       0       0       0       0
  9174 ;;Total ram usage:        1 bytes
  9175 ;; Hardware stack levels used: 1
  9176 ;; Hardware stack levels required when called: 3
  9177 ;; This function calls:
  9178 ;;		_I2C_Start
  9179 ;;		_I2C_Stop
  9180 ;;		_I2C_Write
  9181 ;; This function is called by:
  9182 ;;		_LCD_Init
  9183 ;;		_LCD_Write_4Bit
  9184 ;;		_Backlight
  9185 ;;		_noBacklight
  9186 ;; This function uses a non-reentrant model
  9187 ;;
  9188                           
  9189  133B                     _IO_Expander_Write:	
  9190                           ;psect for function _IO_Expander_Write
  9191                           
  9192                           
  9193                           ;incstack = 0
  9194                           ; Regs used in _IO_Expander_Write: [wreg+status,2+status,0+pclath+cstack]
  9195                           ;IO_Expander_Write@Data stored from wreg
  9196  133B  00F2               	movwf	IO_Expander_Write@Data
  9197  133C                     l2441:
  9198                           
  9199                           ;LCD.c: 49: void IO_Expander_Write(unsigned char Data);LCD.c: 50: {;LCD.c: 51:   I2C_Sta
      +                          rt(0x4E);
  9200  133C  304E               	movlw	78
  9201  133D  160A  118A  2351  160A  118A  	fcall	_I2C_Start
  9202                           
  9203                           ;LCD.c: 52:   I2C_Write(Data | BackLight_State);
  9204  1342  0872               	movf	IO_Expander_Write@Data,w
  9205  1343  1283               	bcf	3,5	;RP0=0, select bank0
  9206  1344  1303               	bcf	3,6	;RP1=0, select bank0
  9207  1345  046F               	iorwf	_BackLight_State,w
  9208  1346  160A  118A  2313  160A  118A  	fcall	_I2C_Write
  9209                           
  9210                           ;LCD.c: 53:   I2C_Stop();
  9211  134B  160A  118A  22BF  160A  118A  	fcall	_I2C_Stop
  9212  1350                     l139:
  9213  1350  0008               	return
  9214  1351                     __end_of_IO_Expander_Write:
  9215                           
  9216                           	psect	text33
  9217  12BF                     __ptext33:	
  9218 ;; *************** function _I2C_Stop *****************
  9219 ;; Defined at:
  9220 ;;		line 91 in file "I2C_Master.c"
  9221 ;; Parameters:    Size  Location     Type
  9222 ;;		None
  9223 ;; Auto vars:     Size  Location     Type
  9224 ;;		None
  9225 ;; Return value:  Size  Location     Type
  9226 ;;                  1    wreg      unsigned char 
  9227 ;; Registers used:
  9228 ;;		wreg
  9229 ;; Tracked objects:
  9230 ;;		On entry : 0/0
  9231 ;;		On exit  : 0/0
  9232 ;;		Unchanged: 0/0
  9233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9234 ;;      Params:         0       0       0       0       0
  9235 ;;      Locals:         0       0       0       0       0
  9236 ;;      Temps:          0       0       0       0       0
  9237 ;;      Totals:         0       0       0       0       0
  9238 ;;Total ram usage:        0 bytes
  9239 ;; Hardware stack levels used: 1
  9240 ;; This function calls:
  9241 ;;		Nothing
  9242 ;; This function is called by:
  9243 ;;		_IO_Expander_Write
  9244 ;;		_main
  9245 ;;		_RTC_Read_Calendar
  9246 ;;		_RTC_Clock_Write
  9247 ;;		_RTC_Calendar_Write
  9248 ;;		_I2C_Start_Wait
  9249 ;; This function uses a non-reentrant model
  9250 ;;
  9251                           
  9252  12BF                     _I2C_Stop:	
  9253                           ;psect for function _I2C_Stop
  9254                           
  9255  12BF                     l2431:	
  9256                           ;incstack = 0
  9257                           ; Regs used in _I2C_Stop: [wreg]
  9258                           
  9259                           
  9260                           ;I2C_Master.c: 93:     PEN = 1;
  9261  12BF  1683               	bsf	3,5	;RP0=1, select bank1
  9262  12C0  1303               	bcf	3,6	;RP1=0, select bank1
  9263  12C1  1511               	bsf	17,2	;volatile
  9264  12C2                     l89:	
  9265                           ;I2C_Master.c: 94:     while(PEN);
  9266                           
  9267  12C2  1911               	btfsc	17,2	;volatile
  9268  12C3  2AC5               	goto	u1991
  9269  12C4  2AC6               	goto	u1990
  9270  12C5                     u1991:
  9271  12C5  2AC2               	goto	l89
  9272  12C6                     u1990:
  9273  12C6                     l91:
  9274                           
  9275                           ;I2C_Master.c: 95:     if(!SSPSTATbits.P)
  9276  12C6  0814               	movf	20,w	;volatile
  9277  12C7                     l93:
  9278  12C7  0008               	return
  9279  12C8                     __end_of_I2C_Stop:
  9280                           
  9281                           	psect	text34
  9282  1351                     __ptext34:	
  9283 ;; *************** function _I2C_Start *****************
  9284 ;; Defined at:
  9285 ;;		line 66 in file "I2C_Master.c"
  9286 ;; Parameters:    Size  Location     Type
  9287 ;;  slave_write_    1    wreg     unsigned char 
  9288 ;; Auto vars:     Size  Location     Type
  9289 ;;  slave_write_    1    1[COMMON] unsigned char 
  9290 ;; Return value:  Size  Location     Type
  9291 ;;                  1    wreg      unsigned char 
  9292 ;; Registers used:
  9293 ;;		wreg, status,2, status,0, pclath, cstack
  9294 ;; Tracked objects:
  9295 ;;		On entry : 0/0
  9296 ;;		On exit  : 0/0
  9297 ;;		Unchanged: 0/0
  9298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9299 ;;      Params:         0       0       0       0       0
  9300 ;;      Locals:         1       0       0       0       0
  9301 ;;      Temps:          0       0       0       0       0
  9302 ;;      Totals:         1       0       0       0       0
  9303 ;;Total ram usage:        1 bytes
  9304 ;; Hardware stack levels used: 1
  9305 ;; Hardware stack levels required when called: 2
  9306 ;; This function calls:
  9307 ;;		_I2C_Write
  9308 ;; This function is called by:
  9309 ;;		_IO_Expander_Write
  9310 ;;		_RTC_Read_Clock
  9311 ;;		_RTC_Read_Calendar
  9312 ;;		_RTC_Clock_Write
  9313 ;;		_RTC_Calendar_Write
  9314 ;; This function uses a non-reentrant model
  9315 ;;
  9316                           
  9317  1351                     _I2C_Start:	
  9318                           ;psect for function _I2C_Start
  9319                           
  9320                           
  9321                           ;incstack = 0
  9322                           ; Regs used in _I2C_Start: [wreg+status,2+status,0+pclath+cstack]
  9323                           ;I2C_Start@slave_write_address stored from wreg
  9324  1351  00F1               	movwf	I2C_Start@slave_write_address
  9325  1352                     l2433:
  9326                           
  9327                           ;I2C_Master.c: 66: char I2C_Start(char slave_write_address);I2C_Master.c: 67: {;I2C_Mast
      +                          er.c: 68:     SSPCON2bits.SEN=1;
  9328  1352  1683               	bsf	3,5	;RP0=1, select bank1
  9329  1353  1303               	bcf	3,6	;RP1=0, select bank1
  9330  1354  1411               	bsf	17,0	;volatile
  9331  1355                     l73:	
  9332                           ;I2C_Master.c: 69:     while(SSPCON2bits.SEN);
  9333                           
  9334  1355  1811               	btfsc	17,0	;volatile
  9335  1356  2B58               	goto	u2001
  9336  1357  2B59               	goto	u2000
  9337  1358                     u2001:
  9338  1358  2B55               	goto	l73
  9339  1359                     u2000:
  9340  1359                     l75:
  9341                           
  9342                           ;I2C_Master.c: 70:  SSPIF=0;
  9343  1359  1283               	bcf	3,5	;RP0=0, select bank0
  9344  135A  1303               	bcf	3,6	;RP1=0, select bank0
  9345  135B  118C               	bcf	12,3	;volatile
  9346                           
  9347                           ;I2C_Master.c: 71:     if(!SSPSTATbits.S)
  9348  135C  1683               	bsf	3,5	;RP0=1, select bank1
  9349  135D  1303               	bcf	3,6	;RP1=0, select bank1
  9350  135E  1994               	btfsc	20,3	;volatile
  9351  135F  2B61               	goto	u2011
  9352  1360  2B62               	goto	u2010
  9353  1361                     u2011:
  9354  1361  2B63               	goto	l2437
  9355  1362                     u2010:
  9356  1362  2B69               	goto	l77
  9357  1363                     l2437:
  9358                           
  9359                           ;I2C_Master.c: 73:     return (I2C_Write(slave_write_address));;	Return value of _I2C_St
      +                          art is never used
  9360  1363  0871               	movf	I2C_Start@slave_write_address,w
  9361  1364  160A  118A  2313  160A  118A  	fcall	_I2C_Write
  9362  1369                     l77:
  9363  1369  0008               	return
  9364  136A                     __end_of_I2C_Start:
  9365                           
  9366                           	psect	text35
  9367  1313                     __ptext35:	
  9368 ;; *************** function _I2C_Write *****************
  9369 ;; Defined at:
  9370 ;;		line 100 in file "I2C_Master.c"
  9371 ;; Parameters:    Size  Location     Type
  9372 ;;  data            1    wreg     unsigned char 
  9373 ;; Auto vars:     Size  Location     Type
  9374 ;;  data            1    0[COMMON] unsigned char 
  9375 ;; Return value:  Size  Location     Type
  9376 ;;                  1    wreg      unsigned char 
  9377 ;; Registers used:
  9378 ;;		wreg, status,2, status,0, pclath, cstack
  9379 ;; Tracked objects:
  9380 ;;		On entry : 0/0
  9381 ;;		On exit  : 0/0
  9382 ;;		Unchanged: 0/0
  9383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9384 ;;      Params:         0       0       0       0       0
  9385 ;;      Locals:         1       0       0       0       0
  9386 ;;      Temps:          0       0       0       0       0
  9387 ;;      Totals:         1       0       0       0       0
  9388 ;;Total ram usage:        1 bytes
  9389 ;; Hardware stack levels used: 1
  9390 ;; Hardware stack levels required when called: 1
  9391 ;; This function calls:
  9392 ;;		_I2C_Ready
  9393 ;; This function is called by:
  9394 ;;		_I2C_Start
  9395 ;;		_I2C_Repeated_Start
  9396 ;;		_IO_Expander_Write
  9397 ;;		_RTC_Read_Clock
  9398 ;;		_RTC_Read_Calendar
  9399 ;;		_RTC_Clock_Write
  9400 ;;		_RTC_Calendar_Write
  9401 ;;		_I2C_Start_Wait
  9402 ;; This function uses a non-reentrant model
  9403 ;;
  9404                           
  9405  1313                     _I2C_Write:	
  9406                           ;psect for function _I2C_Write
  9407                           
  9408                           
  9409                           ;incstack = 0
  9410                           ; Regs used in _I2C_Write: [wreg+status,2+status,0+pclath+cstack]
  9411                           ;I2C_Write@data stored from wreg
  9412  1313  00F0               	movwf	I2C_Write@data
  9413  1314                     l2415:
  9414                           
  9415                           ;I2C_Master.c: 100: char I2C_Write(unsigned char data);I2C_Master.c: 101: {;I2C_Master.c
      +                          : 102:       SSPBUF = data;
  9416  1314  0870               	movf	I2C_Write@data,w
  9417  1315  1283               	bcf	3,5	;RP0=0, select bank0
  9418  1316  1303               	bcf	3,6	;RP1=0, select bank0
  9419  1317  0093               	movwf	19	;volatile
  9420  1318                     l2417:
  9421                           
  9422                           ;I2C_Master.c: 103:       I2C_Ready();
  9423  1318  160A  118A  22AF  160A  118A  	fcall	_I2C_Ready
  9424  131D                     l2419:
  9425                           
  9426                           ;I2C_Master.c: 104:       if (ACKSTAT)
  9427  131D  1683               	bsf	3,5	;RP0=1, select bank1
  9428  131E  1303               	bcf	3,6	;RP1=0, select bank1
  9429  131F  1F11               	btfss	17,6	;volatile
  9430  1320  2B22               	goto	u1981
  9431  1321  2B23               	goto	u1980
  9432  1322                     u1981:
  9433  1322  2B25               	goto	l2427
  9434  1323                     u1980:
  9435  1323                     l2421:
  9436                           
  9437                           ;I2C_Master.c: 105:         return 1;
  9438  1323  3001               	movlw	1
  9439  1324  2B26               	goto	l97
  9440  1325                     l2427:
  9441                           
  9442                           ;I2C_Master.c: 107:         return 2;
  9443  1325  3002               	movlw	2
  9444  1326                     l97:
  9445  1326  0008               	return
  9446  1327                     __end_of_I2C_Write:
  9447                           
  9448                           	psect	text36
  9449  12AF                     __ptext36:	
  9450 ;; *************** function _I2C_Ready *****************
  9451 ;; Defined at:
  9452 ;;		line 41 in file "I2C_Master.c"
  9453 ;; Parameters:    Size  Location     Type
  9454 ;;		None
  9455 ;; Auto vars:     Size  Location     Type
  9456 ;;		None
  9457 ;; Return value:  Size  Location     Type
  9458 ;;                  1    wreg      void 
  9459 ;; Registers used:
  9460 ;;		None
  9461 ;; Tracked objects:
  9462 ;;		On entry : 0/0
  9463 ;;		On exit  : 0/0
  9464 ;;		Unchanged: 0/0
  9465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9466 ;;      Params:         0       0       0       0       0
  9467 ;;      Locals:         0       0       0       0       0
  9468 ;;      Temps:          0       0       0       0       0
  9469 ;;      Totals:         0       0       0       0       0
  9470 ;;Total ram usage:        0 bytes
  9471 ;; Hardware stack levels used: 1
  9472 ;; This function calls:
  9473 ;;		Nothing
  9474 ;; This function is called by:
  9475 ;;		_I2C_Read
  9476 ;;		_I2C_Write
  9477 ;; This function uses a non-reentrant model
  9478 ;;
  9479                           
  9480  12AF                     _I2C_Ready:	
  9481                           ;psect for function _I2C_Ready
  9482                           
  9483  12AF                     l2413:	
  9484                           ;incstack = 0
  9485                           ; Regs used in _I2C_Ready: []
  9486                           
  9487  12AF                     l56:	
  9488                           ;I2C_Master.c: 43:     while(!SSPIF);
  9489                           
  9490  12AF  1283               	bcf	3,5	;RP0=0, select bank0
  9491  12B0  1303               	bcf	3,6	;RP1=0, select bank0
  9492  12B1  1D8C               	btfss	12,3	;volatile
  9493  12B2  2AB4               	goto	u1971
  9494  12B3  2AB5               	goto	u1970
  9495  12B4                     u1971:
  9496  12B4  2AAF               	goto	l56
  9497  12B5                     u1970:
  9498  12B5                     l58:
  9499                           
  9500                           ;I2C_Master.c: 44:     SSPIF=0;
  9501  12B5  118C               	bcf	12,3	;volatile
  9502  12B6                     l59:
  9503  12B6  0008               	return
  9504  12B7                     __end_of_I2C_Ready:
  9505  007E                     btemp	set	126	;btemp
  9506  007E                     wtemp0	set	126
  9507                           
  9508                           	psect	idloc
  9509                           
  9510                           ;Config register IDLOC0 @ 0x2000
  9511                           ;	unspecified, using default values
  9512  2000                     	org	8192
  9513  2000  3FFF               	dw	16383
  9514                           
  9515                           ;Config register IDLOC1 @ 0x2001
  9516                           ;	unspecified, using default values
  9517  2001                     	org	8193
  9518  2001  3FFF               	dw	16383
  9519                           
  9520                           ;Config register IDLOC2 @ 0x2002
  9521                           ;	unspecified, using default values
  9522  2002                     	org	8194
  9523  2002  3FFF               	dw	16383
  9524                           
  9525                           ;Config register IDLOC3 @ 0x2003
  9526                           ;	unspecified, using default values
  9527  2003                     	org	8195
  9528  2003  3FFF               	dw	16383
  9529                           
  9530                           	psect	config
  9531                           
  9532                           ;Config register CONFIG1 @ 0x2007
  9533                           ;	Oscillator Selection bits
  9534                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  9535                           ;	Watchdog Timer Enable bit
  9536                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  9537                           ;	Power-up Timer Enable bit
  9538                           ;	PWRTE = OFF, PWRT disabled
  9539                           ;	RE3/MCLR pin function select bit
  9540                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  9541                           ;	Code Protection bit
  9542                           ;	CP = OFF, Program memory code protection is disabled
  9543                           ;	Data Code Protection bit
  9544                           ;	CPD = OFF, Data memory code protection is disabled
  9545                           ;	Brown Out Reset Selection bits
  9546                           ;	BOREN = ON, BOR enabled
  9547                           ;	Internal External Switchover bit
  9548                           ;	IESO = ON, Internal/External Switchover mode is enabled
  9549                           ;	Fail-Safe Clock Monitor Enabled bit
  9550                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  9551                           ;	Low Voltage Programming Enable bit
  9552                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  9553                           ;	In-Circuit Debugger Mode bit
  9554                           ;	DEBUG = 0x1, unprogrammed default
  9555  2007                     	org	8199
  9556  2007  2FD2               	dw	12242
  9557                           
  9558                           ;Config register CONFIG2 @ 0x2008
  9559                           ;	Brown-out Reset Selection bit
  9560                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  9561                           ;	Flash Program Memory Self Write Enable bits
  9562                           ;	WRT = OFF, Write protection off
  9563  2008                     	org	8200
  9564  2008  3FFF               	dw	16383

Data Sizes:
    Strings     154
    Constant    18
    Data        10
    BSS         87
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     66      80
    BANK1            80     70      80
    BANK3            96      0      73
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_28(CODE[7]), ?_sprintf(BANK0[2]), STR_26(CODE[10]), STR_4(CODE[17]), 
		 -> result(BANK0[2]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 11
		 -> STR_27(CODE[9]), STR_25(CODE[3]), STR_24(CODE[11]), STR_15(CODE[4]), 
		 -> STR_14(CODE[4]), STR_13(CODE[8]), STR_12(CODE[8]), STR_11(CODE[4]), 
		 -> STR_10(CODE[4]), STR_9(CODE[8]), STR_8(CODE[4]), STR_7(CODE[4]), 
		 -> STR_3(CODE[3]), STR_2(CODE[11]), STR_1(CODE[11]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 16
		 -> main@buffer3_748(BANK1[16]), main@buffer3_745(BANK1[16]), main@buffer3_742(BANK1[16]), year(BANK3[10]), 
		 -> month(BANK3[10]), date(BANK3[10]), hours(BANK3[10]), mins(BANK3[10]), 
		 -> secs(BANK3[10]), main@buffer3(BANK1[16]), DisplayTemp@buffer2(BANK0[16]), DisplayTemp@buffer1(BANK0[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    LCD_Write_String@Str	PTR const unsigned char  size(2) Largest target is 16
		 -> main@buffer3_748(BANK1[16]), main@buffer3_745(BANK1[16]), main@buffer3_742(BANK1[16]), STR_23(CODE[4]), 
		 -> STR_22(CODE[4]), STR_21(CODE[4]), STR_20(CODE[4]), STR_19(CODE[4]), 
		 -> STR_18(CODE[4]), STR_17(CODE[4]), STR_16(CODE[4]), year(BANK3[10]), 
		 -> month(BANK3[10]), date(BANK3[10]), hours(BANK3[10]), mins(BANK3[10]), 
		 -> secs(BANK3[10]), STR_6(CODE[3]), STR_5(CODE[3]), main@buffer3(BANK1[16]), 
		 -> DisplayTemp@buffer2(BANK0[16]), DisplayTemp@buffer1(BANK0[16]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 16
		 -> main@buffer3_748(BANK1[16]), main@buffer3_745(BANK1[16]), main@buffer3_742(BANK1[16]), date(BANK3[10]), 
		 -> hours(BANK3[10]), STR_6(CODE[3]), STR_5(CODE[3]), main@buffer3(BANK1[16]), 


Critical Paths under _main in COMMON

    _main->_LCD_Write_String
    _Update_Farenheit->___xxtofl
    _Update_Celsius->___xxtofl
    ___fltol->___xxtofl
    ___flmul->___xxtofl
    ___fladd->___xxtofl
    _RTC_Read_Clock->_I2C_Read
    _RTC_Read_Calendar->_I2C_Read
    _I2C_Repeated_Start->_I2C_Write
    _RTC_Clock_Write->_I2C_Start
    _RTC_Calendar_Write->_I2C_Start
    _LCD_String_xy->_LCD_Write_String
    _LCD_Init->_LCD_CMD
    _LCD_Clear->_LCD_CMD
    _DisplayTemp->_LCD_Write_String
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Char->_LCD_Write_4Bit
    _LCD_Set_Cursor->_LCD_CMD
    _LCD_CMD->_LCD_Write_4Bit
    _LCD_Write_4Bit->_IO_Expander_Write
    _IO_Expander_Write->_I2C_Start
    _I2C_Start->_I2C_Write

Critical Paths under _main in BANK0

    _main->_Update_Celsius
    _main->_Update_Farenheit
    _Update_Farenheit->___fltol
    _Update_Celsius->___fltol
    ___fltol->___fladd
    ___fladd->___flmul
    _DisplayTemp->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                73    73      0   30491
                                             63 BANK0      3     3      0
                                              0 BANK1     70    70      0
                        _DisplayTemp
                           _I2C_Init
                           _I2C_Stop
                          _LCD_Clear
                           _LCD_Init
                      _LCD_String_xy
                   _LCD_Write_String
                 _RTC_Calendar_Write
                    _RTC_Clock_Write
                  _RTC_Read_Calendar
                     _RTC_Read_Clock
                     _Update_Celsius
                   _Update_Farenheit
                            ___lwdiv
                                _abs
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _abs                                                  4     2      2     142
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _Update_Farenheit                                     6     6      0    6165
                                             57 BANK0      6     6      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _Update_Celsius                                       6     6      0    6165
                                             57 BANK0      6     6      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     381
                                             46 BANK0     11     7      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    2569
                                              0 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             20    12      8    2718
                                             26 BANK0     20    12      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _RTC_Read_Clock                                       3     3      0     177
                                              3 COMMON     3     3      0
                           _I2C_Read
                 _I2C_Repeated_Start
                          _I2C_Start
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _RTC_Read_Calendar                                    3     3      0     177
                                              3 COMMON     3     3      0
                           _I2C_Read
                 _I2C_Repeated_Start
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Repeated_Start                                   1     1      0      44
                                              1 COMMON     1     1      0
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Read                                             3     3      0      45
                                              0 COMMON     3     3      0
                            _I2C_Ack
                           _I2C_Nack
                          _I2C_Ready
 ---------------------------------------------------------------------------------
 (3) _I2C_Nack                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Ack                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RTC_Clock_Write                                      5     2      3     405
                                              2 COMMON     5     2      3
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _RTC_Calendar_Write                                   4     1      3     382
                                              2 COMMON     4     1      3
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _LCD_String_xy                                        6     3      3    3239
                                              0 BANK0      6     3      3
                            _LCD_CMD
                   _LCD_Write_String
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     265
                                              7 COMMON     2     2      0
                  _IO_Expander_Write
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            1     1      0     177
                                              7 COMMON     1     1      0
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DisplayTemp                                         35    35      0    6206
                                             21 BANK0     35    35      0
                     _LCD_Set_Cursor
                   _LCD_Write_String
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             25    20      5    4164
                                              0 BANK0     21    16      5
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     618
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_String                                     7     5      2    1559
                                              7 COMMON     7     5      2
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Char                                       2     2      0     177
                                              5 COMMON     2     2      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (2) _LCD_Set_Cursor                                       4     3      1     363
                                              7 COMMON     4     3      1
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _LCD_CMD                                              2     2      0     177
                                              5 COMMON     2     2      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_4Bit                                       2     2      0     133
                                              3 COMMON     2     2      0
                  _IO_Expander_Write
 ---------------------------------------------------------------------------------
 (4) _IO_Expander_Write                                    1     1      0      88
                                              2 COMMON     1     1      0
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Start                                            1     1      0      44
                                              1 COMMON     1     1      0
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Write                                            1     1      0      22
                                              0 COMMON     1     1      0
                          _I2C_Ready
 ---------------------------------------------------------------------------------
 (3) _I2C_Ready                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DisplayTemp
     _LCD_Set_Cursor
       _LCD_CMD
         _LCD_Write_4Bit
           _IO_Expander_Write
             _I2C_Start
               _I2C_Write
                 _I2C_Ready
             _I2C_Stop
             _I2C_Write
     _LCD_Write_String
       _LCD_Write_Char
         _LCD_Write_4Bit
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _I2C_Init
   _I2C_Stop
   _LCD_Clear
     _LCD_CMD
   _LCD_Init
     _IO_Expander_Write
     _LCD_CMD
   _LCD_String_xy
     _LCD_CMD
     _LCD_Write_String
   _LCD_Write_String
   _RTC_Calendar_Write
     _I2C_Start
     _I2C_Stop
     _I2C_Write
   _RTC_Clock_Write
     _I2C_Start
     _I2C_Stop
     _I2C_Write
   _RTC_Read_Calendar
     _I2C_Read
       _I2C_Ack
       _I2C_Nack
       _I2C_Ready
     _I2C_Repeated_Start
       _I2C_Write
     _I2C_Start
     _I2C_Stop
     _I2C_Write
   _RTC_Read_Clock
     _I2C_Read
     _I2C_Repeated_Start
     _I2C_Start
     _I2C_Write
   _Update_Celsius
     ___fladd
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
     ___fltol
       ___fladd (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _Update_Farenheit
     ___fladd
     ___flmul
     ___fltol
     ___xxtofl
   ___lwdiv
   _abs
   _sprintf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      49       9       76.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     46      50       7      100.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     42      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      F7      12        0.0%
ABS                  0      0      F7       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Wed Apr 20 13:20:10 2022

                                     pc 0002                             _SSPSTATbits 0094  
                                    l50 141F                                      l53 133A  
                                    l45 13FF                                      l56 12AF  
                                    l80 136E                                      l73 1355  
                                    l49 1419                                      l58 12B5  
                                    l82 1372                                      l59 12B6  
                                    l75 1359                                      l91 12C6  
                                    l84 1382                                      l77 1369  
                                    l93 12C7                                      l97 1326  
                                    l89 12C2                                      _RS 006C  
                                    fsr 0004                     ___wmul@multiplicand 0072  
RTC_Read_Calendar@read_calendar_address 0075                     __Umul8_16@word_mpld 0076  
                                   l101 12CC                                     l110 000D  
                                   l104 12D0                                     l107 0009  
                                   l211 08C6                                     l133 14C9  
                                   l205 176F                                     l142 139C  
                                   l214 095C                                     l136 176B  
                                   l208 17FF                                     l145 13B8  
                                   l217 1668                                     l154 15B9  
                                   l139 1350                                     l163 14FF  
                                   l148 13D5                                     l413 1577  
                                   l422 149B                                     l335 03BD  
                                   l416 160A                                     l361 061A  
                                   l178 12DC                                     l370 06D1  
                                   l419 1470                                     l355 05E0  
                                   l380 079C                                     l366 0644  
                                   l528 0179                                     l376 072D  
                                   l553 01CD                                     l529 00C3  
                                   l572 030C                                     l548 01A4  
                                   l900 0C32                                     l557 0219  
                                   l911 0C92                                     l903 0C70  
                                   l576 13E2                                     l912 0C9E  
                                   l578 13FA                                     l762 16E4  
                                   l772 16E4                                     l848 0051  
                                   l873 0B21                                     l769 16CF  
                                   l858 1539                                     l890 0BEC  
                                   l882 0C9E                                     l875 0AF8  
                                   l971 0F6B                                     l869 0A7A  
                                   l965 0FFF                                     l894 0C10  
                      ??_Update_Celsius 0059                                     l984 1434  
                                   l977 0FF3                                     l986 1446  
                                   _RB5 0035                                     _PR2 0092  
                                   _PEN 048A                                     _Day 0064  
                                   _abs 12DD                         __end_of_I2C_Ack 12D1  
                                   _min 00E8                                     _sec 00EA  
                                   fsr0 0004                                     indf 0000  
                          ___flmul@aexp 0032                            ___flmul@bexp 0033  
                          ___flmul@sign 002D                            ___flmul@temp 0038  
                          ___flmul@prod 0034                         __end_of_LCD_CMD 13B9  
                           main@buffer3 00A0                     LCD_Write_String@Str 0077  
                        _LCD_Set_Cursor 14CA                            ___fltol@exp1 0058  
                                  l1011 0A16                                    l1022 09E0  
                                  l1023 09EC                                    l1015 09C4  
                                  l1033 12FF                                    l1009 097F  
                                  l1027 12ED                                    ?_abs 0070  
                                  l1028 12ED                                    l3001 0CB0  
                                  l3011 0CC5                                    l3003 0CB1  
                                  l3021 0CDD                                    l3013 0CCD  
                                  l3005 0CB6                                    l3111 0FA0  
                                  l3103 0F70                                    l3031 0CF9  
                                  l3023 0CE2                                    l3015 0CD2  
                                  l3007 0CBB                                    l3201 14B8  
                                  l3121 0FD7                                    l3105 0F75  
                                  l3113 0FA6                                    l3041 0D1C  
                                  l3033 0CFE                                    l3025 0CE7  
                                  l3017 0CD8                                    l3009 0CC3  
                                  l3211 1702                                    l3203 14BE  
                                  l3131 0FF7                                    l3123 0FD9  
                                  l3115 0FB3                                    l3107 0F83  
                                  l3051 0DAA                                    l3043 0D29  
                                  l3035 0D03                                    l3027 0CEF  
                                  l3019 0CDC                                    l2413 12AF  
                                  l2421 1323                                    l2501 0028  
                                  l3221 1735                                    l3213 1708  
                                  l3205 16E5                                    l3301 15BB  
                                  l3125 0FE7                                    l3117 0FBE  
                                  l3109 0F87                                    l3061 0E0C  
                                  l3053 0DC6                                    l3045 0D46  
                                  l3029 0CF1                                    l3141 0977  
                                  l2415 1314                                    l2431 12BF  
                                  l2503 0039                                    l2511 004D  
                                  l3231 12D1                                    l3223 1744  
                                  l3215 1717                                    l3207 16EB  
                                  l3127 0FEB                                    l3119 0FCD  
                                  l3071 0E9C                                    l3063 0E29  
                                  l3055 0DCF                                    l3047 0D62  
                                  l3039 0D0C                                    l3151 09A2  
                                  l3143 0987                                    l3135 095E  
                                  l3303 12DD                                    l2417 1318  
                                  l2433 1352                                    l2441 133C  
                                  l2505 003F                                    l2521 1510  
                                  l2601 0052                                    l3233 12D7  
                                  l3225 174D                                    l3217 1720  
                                  l3209 16F3                                    l3129 0FEC  
                                  l3081 0F2E                                    l3073 0EC9  
                                  l3065 0E42                                    l3057 0DDF  
                                  l3049 0D8E                                    l3161 09D6  
                                  l3153 09A9                                    l3137 0963  
                                  l3241 177C                                    l3305 12E1  
                                  l3401 0408                                    l2427 1325  
                                  l2419 131D                                    l2443 1384  
                                  l2507 0040                                    l2531 152F  
                                  l2523 1514                                    l2515 1500  
                                  l2611 0072                                    l2603 0059  
                                  l3227 175C                                    l3219 172F  
                                  l2451 0005                                    l3083 0F37  
                                  l3091 0F4B                                    l3075 0EEF  
                                  l3067 0E5F                                    l3059 0DFC  
                                  l3171 0A09                                    l3163 09DA  
                                  l3155 09AD                                    l3147 0990  
                                  l3139 0967                                    l3251 08C3  
                                  l3243 1783                                    l3235 176C  
                                  l3411 046E                                    l3403 0410  
                                  l2437 1363                                    l2445 138A  
                                  l2453 139E                                    l2461 13BE  
                                  l2509 0047                                    l2525 1518  
                                  l2517 1506                                    l2533 1535  
                                  l2701 020D                                    l2621 00B2  
                                  l2613 0082                                    l2605 005F  
                                  l3181 132B                                    l3229 1762  
                                  l2541 142A                                    l3093 0F4F  
                                  l3085 0F3B                                    l3077 0F17  
                                  l3069 0E8C                                    l3173 0A0D  
                                  l3165 09E4                                    l3157 09BB  
                                  l3149 0995                                    l3261 08E7  
                                  l3253 08CA                                    l3245 1790  
                                  l3237 1773                                    l3421 04BD  
                                  l3413 0477                                    l3405 042B  
                                  l3341 0323                                    l3333 030D  
                                  l2447 1391                                    l2455 13A1  
                                  l2527 1522                                    l2519 1509  
                                  l2471 12FE                                    l2463 12EF  
                                  l2711 023A                                    l2703 0213  
                                  l2631 00DC                                    l2623 00C5  
                                  l2615 0086                                    l2607 0068  
                                  l3271 161E                                    l3183 1331  
                                  l3191 149F                                    l2551 13FC  
                                  l2543 142E                                    l3095 0F50  
                                  l3087 0F3C                                    l3079 0F20  
                                  l3175 0A0E                                    l3167 09EE  
                                  l3159 09CB                                    l3263 08E8  
                                  l3255 08CC                                    l3247 17D4  
                                  l3239 1775                                    l3511 0634  
                                  l3503 061F                                    l3431 04EC  
                                  l3423 04D8                                    l3407 0446  
                                  l3415 0481                                    l3351 032F  
                                  l3343 0324                                    l3335 0315  
                                  l2457 13A8                                    l2529 1528  
                                  l2481 13E9                                    l2465 12F0  
                                  l2721 0264                                    l2713 0243  
                                  l2705 0224                                    l2641 0107  
                                  l2633 00DF                                    l2625 00CE  
                                  l2617 009B                                    l2609 006F  
                                  l3281 1659                                    l3273 1628  
                                  l3185 1334                                    l3193 149F  
                                  l2449 12C8                                    l2561 141E  
                                  l2553 1403                                    l2801 0A17  
                                  l2545 143D                                    l2537 1421  
                                  l3097 0F54                                    l3089 0F45  
                                  l3169 0A04                                    l3265 092C  
                                  l3257 08D3                                    l3249 17FE  
                                  l3521 063F                                    l3513 0635  
                                  l3505 0626                                    l3441 0547  
                                  l3433 04F1                                    l3417 0487  
                                  l3409 0461                                    l3361 0337  
                                  l3353 0330                                    l3345 0326  
                                  l3337 0319                                    l2459 13BA  
                                  l2491 0010                                    l2483 13F0  
                                  l2475 13D6                                    l2467 12F6  
                                  l2723 026A                                    l2715 0249  
                                  l2707 0230                                    l2651 0139  
                                  l2643 010A                                    l2635 00E5  
                                  l2627 00D2                                    l2619 00AE  
                                  l3275 1631                                    l3187 1336  
                                  l3179 1327                                    l3195 14A5  
                                  l3291 145F                                    l3283 1448  
                                  l2555 1409                                    l2571 1382  
                                  l2811 0A2E                                    l2803 0A1E  
                                  l2547 1442                                    l2539 1423  
                                  l3099 0F68                                    l3267 0956  
                                  l3259 08DA                                    l3531 066B  
                                  l3523 0640                                    l3515 0636  
                                  l3507 0629                                    l3451 0578  
                                  l3443 0550                                    l3435 0504  
                                  l3419 04A2                                    l3371 0363  
                                  l3363 033C                                    l3355 0332  
                                  l3347 0327                                    l3339 0320  
                                  l2581 1597                                    l2493 0016  
                                  l2485 13F6                                    l2477 13D8  
                                  l2469 12FC                                    l2733 02CB  
                                  l2725 026F                                    l2717 0255  
                                  l2709 0234                                    l2661 017D  
                                  l2653 013F                                    l2645 0113  
                                  l2637 00F6                                    l2629 00D8  
                                  l2741 02F4                                    l3277 163D  
                                  l3269 160B                                    l3189 1337  
                                  l3197 14AB                                    l3293 1465  
                                  l3285 144D                                    l2557 140E  
                                  l2565 136B                                    l2901 0B2A  
                                  l2821 0A46                                    l2813 0A33  
                                  l2805 0A24                                    l3541 06BC  
                                  l3533 0680                                    l3525 0649  
                                  l3517 0639                                    l3509 0631  
                                  l3453 0582                                    l3445 055A  
                                  l3437 051F                                    l3429 04E6  
                                  l3381 03A8                                    l3373 0377  
                                  l3365 0341                                    l3357 0333  
                                  l3349 032B                                    l2591 14DC  
                                  l2583 159D                                    l2495 0019  
                                  l2479 13DC                                    l2727 029E  
                                  l2735 02DC                                    l2719 025B  
                                  l2663 0185                                    l2671 0197  
                                  l2743 0306                                    l2655 0145  
                                  l2647 0119                                    l2639 0100  
                                  l3279 1650                                    l3199 14B2  
                                  l3295 146B                                    l3287 1453  
                                  l2559 1414                                    l2911 0B52  
                                  l2831 0A5C                                    l2823 0A4B  
                                  l2815 0A3B                                    l2807 0A28  
                                  l3543 06CB                                    l3535 0683  
                                  l3527 064D                                    l3519 063C  
                                  l3551 06E3                                    l3455 058C  
                                  l3447 0564                                    l3463 05AA  
                                  l3439 053A                                    l3391 03D2  
                                  l3383 03B7                                    l3375 037B  
                                  l3367 0346                                    l3359 0334  
                                  l2593 14E4                                    l2585 14CB  
                                  l2577 1578                                    l2497 0020  
                                  l2489 000E                                    l2737 02E5  
                                  l2729 02BF                                    l2673 019F  
                                  l2665 0189                                    l2649 0128  
                                  l3297 1472                                    l3289 1459  
                                  l2569 137C                                    l2921 0B6B  
                                  l2913 0B5B                                    l2905 0B33  
                                  l2841 0A70                                    l2833 0A5D  
                                  l2825 0A51                                    l2817 0A3C  
                                  l2809 0A29                                    l3561 071E  
                                  l3553 06EA                                    l3537 0696  
                                  l3529 065C                                    l3481 05FA  
                                  l3457 0596                                    l3449 056E  
                                  l3465 05CF                                    l3393 03DD  
                                  l3473 05E5                                    l3377 0380  
                                  l3369 0351                                    l2587 14CC  
                                  l2595 14EC                                    l2579 157B  
                                  l2499 0024                                    l2739 02EB  
                                  l2683 01C2                                    l2667 018D  
                                  l2659 0154                                    l3299 153B  
                                  l2931 0BCF                                    l2915 0B5D  
                                  l2907 0B4A                                    l2923 0B70  
                                  l2851 0A8C                                    l2835 0A62  
                                  l2843 0A72                                    l2827 0A52  
                                  l2819 0A3E                                    l2771 167F  
                                  l3571 0768                                    l3563 0727  
                                  l3555 06F5                                    l3547 06D5  
                                  l3539 06AF                                    l3491 0605  
                                  l3483 05FB                                    l3475 05EC  
                                  l3467 05DA                                    l3459 05A0  
                                  l3395 03E3                                    l3387 03C1  
                                  l3379 0388                                    l2589 14D4  
                                  l3741 02D4                                    l2693 01EB  
                                  l2669 0191                                    l2941 0C02  
                                  l2925 0B86                                    l2933 0BDE  
                                  l2917 0B61                                    l2909 0B4E  
                                  l2861 0AA0                                    l2853 0A90  
                                  l2845 0A80                                    l2837 0A67  
                                  l2829 0A58                                    l2781 16A3  
                                  l2773 1694                                    l2765 1669  
                                  l3573 076B                                    l3565 0736  
                                  l3557 06FD                                    l3549 06DF  
                                  l3493 060A                                    l3485 05FC  
                                  l3477 05EF                                    l3397 03E7  
                                  l3389 03CC                                    l3743 14F4  
                                  l2679 01A6                                    l2951 0C19  
                                  l2943 0C0B                                    l2935 0BF4  
                                  l2927 0BC4                                    l2919 0B62  
                                  l2871 0AB4                                    l2863 0AA4  
                                  l2855 0A94                                    l2847 0A84  
                                  l2839 0A6F                                    l2775 1695  
                                  l2767 1676                                    l3567 0756  
                                  l3575 076E                                    l3559 0709  
                                  l3495 060F                                    l3487 05FF  
                                  l3479 05F7                                    l3735 05B8  
                                  l3399 03F8                                    l3583 07A1  
                                  l2689 01CF                                    l2697 01F6  
                                  l3737 0168                                    l2961 0C29  
                                  l2953 0C1E                                    l2945 0C0F  
                                  l2937 0BF9                                    l2929 0BCA  
                                  l2881 0AC5                                    l2873 0AB8  
                                  l2865 0AA8                                    l2857 0A98  
                                  l2849 0A88                                    l2777 169D  
                                  l3585 07AC                                    l3577 0796  
                                  l3569 075A                                    l3497 0614  
                                  l3489 0602                                    l3739 01FF  
                                  l2699 0207                                    l2971 0C4A  
                                  l2963 0C2F                                    l2947 0C14  
                                  l2955 0C20                                    l2891 0B0B  
                                  l2883 0ADC                                    l2875 0ABC  
                                  l2867 0AAC                                    l2859 0A9C  
                                  l2795 16C4                                    l2787 16AB  
                                  l2779 169F                                    l2981 0C82  
                                  l2973 0C4E                                    l2949 0C17  
                                  l2957 0C24                                    l2893 0B0C  
                                  l2885 0AFC                                    l2877 0AC0  
                                  l2869 0AB0                                    l2797 16D4  
                                  l2789 16BD                                    l2991 0C99  
                                  l2983 0C87                                    l2975 0C6C  
                                  l2967 0C37                                    l2959 0C25  
                                  l2895 0B15                                    l2887 0B05  
                                  l2879 0AC4                                    l2799 16D9  
                                  l2993 0C9D                                    l2985 0C88  
                                  l2977 0C75                                    l2969 0C3C  
                                  l2889 0B07                                    l2897 0B19  
                                  l2987 0C8C                                    l2979 0C7A  
                                  l2899 0B25                                    l2995 0C9F  
                                  l2989 0C8E                                    l2997 0CA6  
                                  l2999 0CAC                                    STR_1 084F  
                                  STR_2 085A                                    STR_3 08B9  
                                  STR_4 0833                                    STR_5 08B6  
                                  STR_6 08B3                                    STR_7 088F  
                                  STR_8 0884                                    STR_9 0880  
                                  u2000 1359                                    u2001 1358  
                                  u2010 1362                                    u2011 1361  
                                  u2020 12D0                                    u2021 12CF  
                                  u2110 13F6                                    u2030 000D  
                                  u2111 13F5                                    u2031 000C  
                                  u2120 0016                                    u3000 0C24  
                                  u2121 0015                                    u2105 13EA  
                                  u3001 0C23                                    u2210 1518  
                                  u3010 0C29                                    u2211 1517  
                                  u3011 0C28                                    u2140 0028  
                                  u2220 1522                                    u2060 12F6  
                                  u2300 1372                                    u3100 0C87  
                                  u3020 0C2F                                    u2045 13AB  
                                  u2141 0027                                    u2221 1521  
                                  u2205 150A                                    u2061 12F5  
                                  u2301 1371                                    u3101 0C86  
                                  u3021 0C2E                                    u2070 12FC  
                                  u2310 137B                                    u3110 0C8C  
                                  u3030 0C36                                    u2055 13C8  
                                  u2135 001A                                    u2071 12FB  
                                  u2311 137A                                    u3111 0C8B  
                                  u3031 0C35                                    u2320 1585  
                                  u2160 0039                                    u2240 1535  
                                  u2080 13DC                                    u2400 0100  
                                  u3120 0C9D                                    u3040 0C3C  
                                  u3200 0D03                                    u2161 0038  
                                  u2241 1534                                    u2225 151E  
                                  u2081 13DB                                    u2401 00FF  
                                  u3121 0C9C                                    u3041 0C3B  
                                  u3201 0D02                                    u2330 15A7  
                                  u2410 0127                                    u3050 0C4E  
                                  u2250 142E                                    u3130 0CB0  
                                  u2155 0029                                    u2235 1529  
                                  u2411 0126                                    u3051 0C4D  
                                  u2251 142D                                    u3211 0D54  
                                  u3131 0CAF                                    u2340 15B9  
                                  u2180 004D                                    u2500 0213  
                                  u2420 0153                                    u3060 0C5D  
                                  u3212 0D5B                                    u3140 0CB6  
                                  u2341 15B8                                    u2181 004C  
                                  u2165 0035                                    u2501 0212  
                                  u2421 0152                                    u2405 00FC  
                                  u3301 0E7E                                    u3221 0D70  
                                  u3213 0D62                                    u3141 0CB5  
                                  u2190 1506                                    u2510 0224  
                                  u2430 017D                                    u2350 005F  
                                  u3070 0C6C                                    u2270 1442  
                                  u3302 0E85                                    u3222 0D77  
                                  u3150 0CBB                                    u2175 0041  
                                  u2191 1505                                    u2095 13E3  
                                  u2511 0223                                    u2431 017C  
                                  u2351 005E                                    u4007 16FD  
                                  u3071 0C6B                                    u2271 1441  
                                  u3311 0EAB                                    u3303 0E8C  
                                  u3231 0D9C                                    u3223 0D7E  
                                  u3151 0CBA                                    u2520 023A  
                                  u2440 018D                                    u2360 0082  
                                  u2280 1403                                    u3080 0C75  
                                  u3400 0F4F                                    u3320 0ED5  
                                  u3312 0EB2                                    u3232 0DA3  
                                  u3160 0CDC                                    u2600 16AA  
                                  u2521 0239                                    u2441 018C  
                                  u2361 0081                                    u4017 170C  
                                  u2281 1402                                    u3081 0C74  
                                  u3065 0C58                                    u2265 1435  
                                  u3401 0F4E                                    u3313 0EB9  
                                  u3241 0DB8                                    u3233 0DAA  
                                  u3161 0CDB                                    u2601 16A9  
                                  u2530 0255                                    u2450 01C1  
                                  u2370 00C2                                    u2290 140E  
                                  u3090 0C7A                                    u3410 0F54  
                                  u3242 0DBF                                    u3170 0CE2  
                                  u2531 0254                                    u2515 0220  
                                  u2451 01C0                                    u2371 00C1  
                                  u4107 1661                                    u4027 171B  
                                  u2291 140D                                    u3091 0C79  
                                  u3411 0F53                                    u3331 0EE1  
                                  u3243 0DC6                                    u3171 0CE1  
                                  u2540 025B                                    u2460 01CC  
                                  u2380 00D8                                    u2700 0A51  
                                  u3420 0F68                                    u3340 0EFD  
                                  u3332 0EE8                                    u3180 0CE7  
                                  u2620 16BC                                    u3500 0963  
                                  u4117 139A                                    u2541 025A  
                                  u2461 01CB                                    u2381 00D7  
                                  u4037 172A                                    u2701 0A50  
                                  u3421 0F67                                    u3333 0EEF  
                                  u3325 0ED0                                    u3261 0DEE  
                                  u3181 0CE6                                    u2621 16BB  
                                  u3501 0962                                    u2550 02F4  
                                  u2470 01EA                                    u2390 00F6  
                                  u2710 0A5C                                    u3430 0F6F  
                                  u3262 0DF5                                    u3190 0CFE  
                                  u2630 16C3                                    u3510 0967  
                                  u2551 02F3                                    u2471 01E9  
                                  u2455 01BD                                    u2391 00F5  
                                  u4047 1739                                    u2711 0A5B  
                                  u3431 0F6E                                    u3351 0F09  
                                  u3271 0E1B                                    u3263 0DFC  
                                  u3255 0DC8                                    u3191 0CFD  
                                  u2631 16C2                                    u2615 16AC  
                                  u3511 0966                                    u2560 0306  
                                  u2480 01F5                                    u2800 0B0B  
                                  u2720 0A62                                    u3440 0F75  
                                  u3352 0F10                                    u3272 0E22  
                                  u3600 09E4                                    u3520 0987  
                                  u2561 0305                                    u2481 01F4  
                                  u4057 1748                                    u2801 0B0A  
                                  u2721 0A61                                    u3441 0F74  
                                  u3353 0F17                                    u3345 0EF8  
                                  u3273 0E29                                    u3601 09E3  
                                  u3521 0986                                    u2490 020D  
                                  u2730 0A67                                    u3450 0F87  
                                  u2650 16D4                                    u2570 1676  
                                  u3610 09F9                                    u2491 020C  
                                  u2475 01E6                                    u4067 1757  
                                  u2731 0A66                                    u3451 0F86  
                                  u3291 0E51                                    u2651 16D3  
                                  u2571 1675                                    u2900 0B86  
                                  u2820 0B21                                    u2740 0A80  
                                  u3460 0F96                                    u3380 0F3B  
                                  u3292 0E58                                    u2660 16D9  
                                  u2580 168D                                    u3620 0A09  
                                  u3540 09A8                                    u4077 1766  
                                  u2901 0B85                                    u2821 0B20  
                                  u2741 0A7F                                    u3381 0F3A  
                                  u3365 0F19                                    u3293 0E5F  
                                  u3285 0E2B                                    u2661 16D8  
                                  u2645 16C6                                    u3621 0A08  
                                  u3541 09A7                                    u2830 0B25  
                                  u2750 0A84                                    u2670 0A28  
                                  u3470 0FB3                                    u2590 16A3  
                                  u3630 0A0D                                    u3710 0388  
                                  u4087 12D9                                    u2911 0B9D  
                                  u2903 0B82                                    u2831 0B24  
                                  u2815 0B0E                                    u2751 0A83  
                                  u2671 0A27                                    u3471 0FB2  
                                  u3375 0F30                                    u2591 16A2  
                                  u3631 0A0C                                    u3615 09F4  
                                  u3535 099A                                    u3711 0387  
                                  u3640 14A5                                    u2920 0BB1  
                                  u2912 0B9E                                    u2840 0B2A  
                                  u2760 0ADC                                    u2680 0A2E  
                                  u3480 0FCD                                    u3560 09CA  
                                  u3800 061A                                    u3720 03BD  
                                  u4097 1624                                    u3641 14A4  
                                  u2921 0BB2                                    u2913 0BA3  
                                  u2841 0B29                                    u2761 0ADB  
                                  u2681 0A2D                                    u3481 0FCC  
                                  u3465 0F91                                    u2585 1688  
                                  u3561 09C9                                    u3801 0619  
                                  u3721 03BC                                    u1970 12B5  
                                  u2930 0BCF                                    u2922 0BB7  
                                  u2914 0BA4                                    u2770 0AE7  
                                  u2690 0A33                                    u3490 0FEB  
                                  u3650 1773                                    u3810 061E  
                                  u3730 03C1                                    u1971 12B4  
                                  u2931 0BCE                                    u2923 0BB8  
                                  u2915 0BA9                                    u2851 0B3C  
                                  u2771 0AE5                                    u2691 0A32  
                                  u3491 0FEA                                    u3475 0FAF  
                                  u3395 0F3E                                    u3555 09BC  
                                  u3651 1772                                    u3811 061D  
                                  u3731 03C0                                    u1980 1323  
                                  u2940 0BF4                                    u2916 0BAA  
                                  u2860 0B4E                                    u2852 0B43  
                                  u2780 0AE8                                    u3580 09DA  
                                  u3660 08CA                                    u3900 079C  
                                  u3820 0626                                    u3740 03D2  
                                  u1981 1322                                    u2941 0BF3  
                                  u2861 0B4D                                    u2853 0B4A  
                                  u2765 0AD8                                    u3485 0FC9  
                                  u3581 09D9                                    u3661 08C9  
                                  u3901 079B                                    u3821 0625  
                                  u3741 03D1                                    u1990 12C6  
                                  u2950 0BF9                                    u2870 0B52  
                                  u2790 0AFC                                    u3590 09E0  
                                  u3670 12E1                                    u3910 07A0  
                                  u3830 0649                                    u3750 03E3  
                                  u1991 12C5                                    u2951 0BF8  
                                  u2871 0B51                                    u2791 0AFB  
                                  u3591 09DF                                    u3575 09CF  
                                  u3671 12E0                                    u3911 079F  
                                  u3831 0648                                    u3751 03E2  
                                  u2880 0B61                                    u3920 07BB  
                                  u3840 06D1                                    u3760 03E7  
                                  u2881 0B60                                    u3921 07BA  
                                  u3841 06D0                                    u3761 03E6  
                                  u2970 0C0F                                    u3850 06D5  
                                  u3770 05E0                                    u2971 0C0E  
                                  u3851 06D4                                    u3771 05DF  
                                  u2980 0C14                                    u3860 06EA  
                                  u3780 05E4                                    _RCEN 048B  
                                  u2981 0C13                                    u2965 0C04  
                                  u3925 07B7                                    u3861 06E9  
                                  u3781 05E3                                    u2990 0C1E  
                                  u3870 06FD                                    u3790 05EC  
                                  u2991 0C1D                                    u2895 0B64  
                                  u3871 06FC                                    u3791 05EB  
                                  u3880 0727                                    u3881 0726  
                                  u3937 034C                                    u3890 0736  
                                  u3891 0735                                    u3947 03B0  
                                  u3957 05D5                                    u3967 06C4  
                                  u3977 0762                                    u3987 07A7  
                                  u3997 16EF                                    _RSEN 0489  
                                  _Date 0062                                    _Year 0190  
                     ?_LCD_Write_String 0077                                    abs@a 0070  
                                  _date 01AA                             main@tmp_744 00E0  
                                  _days 01D2                                    _main 030D  
                       ?_RTC_Read_Clock 0070                                    _hour 00E6  
                      __end_of_I2C_Nack 000E                                    _mins 01BE  
                                  _secs 01C8                        __end_of_I2C_Init 133B  
                      __end_of_I2C_Read 1420                                    _year 0196  
                                  btemp 007E                        __end_of_I2C_Stop 12C8  
                                  start 0000                      ??_LCD_Write_String 0079  
                         _LCD_String_xy 149C                    LCD_Write_4Bit@Nibble 0074  
      RTC_Read_Clock@read_clock_address 0075                                   ??_abs 0072  
                      __end_of_LCD_Init 176C                       ?_Update_Farenheit 0070  
                            _Clock_type 00EF                     __end_of_DisplayTemp 1669  
                         ___fltol@sign1 0057                         __end_of___fladd 0C9F  
                                 ?_main 0070                                   _ACKEN 048C  
                                 _ACKDT 048D                                   STR_10 088F  
                                 STR_11 0884                                   STR_12 0880  
                                 STR_20 08AB                                   STR_21 089B  
                                 STR_13 0878                                   STR_14 087C  
                                 STR_22 08A7                                   STR_15 088F  
                                 STR_23 08AF                                   STR_16 08A3  
                                 STR_24 0844                                   STR_25 08B9  
                                 STR_17 089F                                   STR_18 0897  
                                 STR_26 0865                                   STR_19 0893  
                                 STR_27 086F                                   STR_28 0888  
                                 STR_29 0822                         __end_of___flmul 1000  
                       __end_of___fltol 16E5                                   _ANSEL 0188  
                                 _AM_PM 00EE                         __end_of___lwdiv 0052  
                       __end_of___lwmod 153A                      ??_Update_Farenheit 0059  
                                 _PORTB 0006                                   _TRISB 0086  
                                 _TRISC 0087                                   _SSPIE 0463  
                                 _TRISE 0089                                   _SSPIF 0063  
                __end_of_LCD_Set_Cursor 1500                                   _Month 0192  
                       __end_of_dpowers 081A                         __end_of_isdigit 1300  
                                 _hours 01B4                                   _month 01A0  
                     __end_of_I2C_Ready 12B7                       __end_of_I2C_Start 136A  
                     __end_of_I2C_Write 1327                                   pclath 000A  
                                 status 0003                                   wtemp0 007E  
                       __end_of_sprintf 030D                          ?_LCD_String_xy 0020  
                        _LCD_Write_4Bit 1383                          _LCD_Write_Char 13B9  
                       __initialization 07BF                            __end_of_main 07BF  
               RTC_Calendar_Write@month 0073                       _IO_Expander_Write 133B  
                             ??_I2C_Ack 0070                      ?_IO_Expander_Write 0070  
                                ??_main 005F                       __end_of_LCD_Clear 12DD  
                             ??_LCD_CMD 0075                      _RTC_Calendar_Write 1471  
                   ??_IO_Expander_Write 0072                         ?_LCD_Set_Cursor 0077  
                                _ADRESH 001E                                  _ADRESL 009E  
                                _CCPR1L 0015                                  _ANSELH 0189  
                      LCD_String_xy@msg 0021                        LCD_String_xy@pos 0020  
                      LCD_String_xy@row 0024                     ?_RTC_Calendar_Write 0072  
                                _SSPADD 0093                                  _SSPBUF 0013  
                                _SSPCON 0014                  __end_of_LCD_Write_4Bit 139D  
                      __end_of___xxtofl 0A17                  __end_of_LCD_Write_Char 13D6  
             __end_of_IO_Expander_Write 1351                             _DisplayTemp 160B  
                             ??___fladd 0042                                  ___wmul 13D6  
                             ??___flmul 0028                               ??___fltol 0052  
                             ??___lwdiv 0074                               ??___lwmod 007C  
                  ??_RTC_Calendar_Write 0075                                  _result 006D  
                    _I2C_Repeated_Start 136A                               ?_I2C_Nack 0070  
                             ??_isdigit 0070                               ?_I2C_Init 0070  
                             ?_I2C_Read 0070                               ?_I2C_Stop 0070  
                   ?_I2C_Repeated_Start 0070                               ??_sprintf 0025  
                          ___xxtofl@arg 007A                            ___xxtofl@exp 0079  
                          ___xxtofl@val 0070                 __end_of__initialization 07FC  
                             ?_LCD_Init 0070                         ??_LCD_String_xy 0023  
                       ?_LCD_Write_4Bit 0070                              ___fltol@f1 004E  
                       ?_LCD_Write_Char 0070                    ??_I2C_Repeated_Start 0071  
                        __pcstackCOMMON 0070                            __pidataBANK0 12AE  
                          __pidataBANK1 0003                            __pidataBANK3 08BC  
                            ??_I2C_Nack 0070                              ??_I2C_Init 0070  
                            ??_I2C_Read 0070                              ??_I2C_Stop 0070  
                      ??_RTC_Read_Clock 0073                            sprintf@width 0032  
                            __pbssBANK0 0062                              __pbssBANK1 00E6  
                            __pbssBANK3 0190                              ??_LCD_Init 0077  
                    DisplayTemp@buffer1 0038                      DisplayTemp@buffer2 0048  
                     __end_of__Umul8_16 1447                              __pmaintext 030D  
                          I2C_Read@flag 0071                          I2C_Read@buffer 0072  
                               ?___wmul 0070                                 _I2C_Ack 12C8  
                               _ACKSTAT 048E                                 _LCD_CMD 139D  
                             ?___xxtofl 0070                                 _SSPCON2 0091  
                               _SSPSTAT 0094                              __stringtab 0800  
                             _I2C_Ready 12AF                               _I2C_Start 1351  
                             _I2C_Write 1313                                 ___fladd 0A17  
                     _RTC_Read_Calendar 15BA                                 ___flmul 0C9F  
                               ___fltol 1669                                 ___lwdiv 000E  
                               ___lwmod 1500                      ?_RTC_Read_Calendar 0070  
                             _ANSELbits 0188                        ??_LCD_Set_Cursor 0078  
                               __ptext1 12DD                                 __ptext2 176C  
                               __ptext3 08C3                                 __ptext4 095D  
                               __ptext5 1669                                 __ptext6 0C9F  
                               __ptext7 1420                                 __ptext8 0A17  
                               __ptext9 153A                       __end_of_hexpowers 0822  
                               _dpowers 0810                               _T2CONbits 0012  
                               _isdigit 12EE                              ??___xxtofl 0074  
                   ??_RTC_Read_Calendar 0073                               _LCD_Clear 12D1  
                               _sprintf 0052                                 clrloop0 12B8  
                               main@tmp 00E2                    end_of_initialization 07FC  
                            ?_I2C_Ready 0070                              ?_I2C_Start 0070  
                            ?_I2C_Write 0070               __end_of_RTC_Read_Calendar 160B  
                          ?_DisplayTemp 0070                      RTC_Clock_Write@min 0072  
                    RTC_Clock_Write@sec 0076                              LCD_CMD@CMD 0076  
                           ___fladd@grs 004D                       ??_RTC_Clock_Write 0075  
                         ___xxtofl@sign 0078                               _TRISCbits 0087  
                            ?_LCD_Clear 0070                        ??_LCD_Write_4Bit 0073  
                     LCD_Write_String@i 007C                        ??_LCD_Write_Char 0075  
                           ___flmul@grs 002E                             _CCP1CONbits 0017  
                 _Update_Farenheit$1439 005B                          __end_of___wmul 13FB  
                      _LCD_Write_String 1578                     start_initialization 07BF  
                           __end_of_abs 12EE                  RTC_Calendar_Write@date 0072  
                RTC_Calendar_Write@year 0074    I2C_Repeated_Start@slave_read_address 0071  
                      _Update_Farenheit 176C                             ??_I2C_Ready 0070  
                           ??_I2C_Start 0071                             ??_I2C_Write 0070  
                   _Update_Celsius$1440 005B                   __end_of_LCD_String_xy 14CA  
                             _Temp_Mode 0194                                ??___wmul 0074  
                            init_fetch0 1300                               __Umul8_16 1420  
                           __pdataBANK0 006F                             __pdataBANK1 00EE  
                           __pdataBANK3 01D2                                ?_I2C_Ack 0070  
                             ___fladd@a 003E                               ___fladd@b 003A  
                              ?_LCD_CMD 0070                               ___flmul@a 0024  
                             ___flmul@b 0020                               ___latbits 0002  
                         __pcstackBANK0 0020                           __pcstackBANK1 00A0  
                           ??_LCD_Clear 0077                            _isdigit$1238 0070  
                        _Update_Celsius 08C3                         main@buffer3_742 00B0  
                       main@buffer3_745 00C0                         main@buffer3_748 00D0  
                           sprintf@flag 002F                             sprintf@prec 0029  
                             _alarmFlag 0066                               _alarmTime 00EC  
                      ___lwdiv@dividend 0072                   IO_Expander_Write@Data 0072  
                              ?___fladd 003A                                ?___flmul 0020  
                              ?___fltol 004E                         main@displayMode 00E4  
                            ?__Umul8_16 0070                                ?___lwdiv 0070  
                              ?___lwmod 0078                               __pstrings 0800  
                              _I2C_Nack 0005                                ?_isdigit 0070  
                              _I2C_Init 1327                                _I2C_Read 13FB  
                              _I2C_Stop 12BF                  __end_of_Update_Celsius 095D  
                             _hexpowers 081A                        ___lwdiv@quotient 0075  
                 LCD_String_xy@location 0025                                ?_sprintf 0020  
                              _LCD_Init 16E5                          ___wmul@product 0074  
                             clear_ram0 12B7                                _PIE1bits 008C  
                              _PIR1bits 000C                         _RTC_Clock_Write 1447  
                            _ADCON0bits 001F                             __stringbase 080F  
                            _ADCON1bits 009F                       ___wmul@multiplier 0070  
                       ?_Update_Celsius 0070            I2C_Start@slave_write_address 0071  
              __end_of_LCD_Write_String 15BA                   RTC_Calendar_Write@day 0075  
                         I2C_Write@data 0070                             ??__Umul8_16 0072  
              __end_of_Update_Farenheit 1800                      __end_of__stringtab 0810  
                         _temperature_c 006A                           _temperature_f 0068  
                            sprintf@idx 0028                              sprintf@len 002D  
                            sprintf@val 0030                                ___xxtofl 095D  
                       ___lwdiv@divisor 0070                         ___lwdiv@counter 0077  
                              __ptext10 15BA                                __ptext11 136A  
                              __ptext20 1327                                __ptext12 13FB  
                              __ptext21 160B                                __ptext13 0005  
                              __ptext30 139D                                __ptext22 0052  
                              __ptext14 12C8                                __ptext31 1383  
                              __ptext23 12EE                                __ptext15 1447  
                              __ptext32 133B                                __ptext24 13D6  
                              __ptext16 1471                                __ptext33 12BF  
                              __ptext25 1500                                __ptext17 149C  
                              __ptext34 1351                                __ptext26 000E  
                              __ptext18 16E5                                __ptext35 1313  
                              __ptext27 1578                                __ptext19 12D1  
                              __ptext36 12AF                                __ptext28 13B9  
                              __ptext29 14CA                         _BackLight_State 006F  
               __end_of_RTC_Clock_Write 1471              __end_of_RTC_Calendar_Write 149C  
                            _INTCONbits 000B                      LCD_Write_Char@Data 0076  
                              init_ram0 1304                    RTC_Clock_Write@AM_PM 0074  
                              isdigit@c 0071                               sprintf@ap 002C  
                             sprintf@cp 002A                               sprintf@sp 0020  
                      ___lwmod@dividend 007A              __end_of_I2C_Repeated_Start 1383  
                        _RTC_Read_Clock 153A                               stringcode 080A  
                __Umul8_16@multiplicand 0070                                sprintf@c 0034  
                              sprintf@f 0022                     RTC_Clock_Write@hour 0073  
                       ___lwmod@divisor 0078                             _PSTRCONbits 009D  
                       ___lwmod@counter 007D                                stringdir 080A  
                              stringtab 0800                       LCD_Set_Cursor@COL 0077  
                     LCD_Set_Cursor@ROW 007A                             _SSPCON2bits 0091  
                         ___fladd@signs 004A                            ___fladd@aexp 004B  
                          ___fladd@bexp 004C                  __end_of_RTC_Read_Clock 1578  
                  __Umul8_16@multiplier 0078                        ?_RTC_Clock_Write 0072  
                     __Umul8_16@product 0074                           ??_DisplayTemp 0035  
