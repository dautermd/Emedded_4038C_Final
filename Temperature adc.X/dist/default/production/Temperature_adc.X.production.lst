

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Mon Apr 18 18:15:31 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F886
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK3,global,class=CODE,delta=2,noexec
     7                           	psect	strings,global,class=STRING,delta=2,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    14                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    15                           	psect	inittext,global,class=CODE,delta=2
    16                           	psect	clrtext,global,class=CODE,delta=2
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	maintext,global,class=CODE,split=1,delta=2
    21                           	psect	text1,local,class=CODE,merge=1,delta=2
    22                           	psect	text2,local,class=CODE,merge=1,delta=2
    23                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text8,local,class=CODE,merge=1,delta=2
    29                           	psect	text9,local,class=CODE,merge=1,delta=2
    30                           	psect	text10,local,class=CODE,merge=1,delta=2
    31                           	psect	text11,local,class=CODE,merge=1,delta=2
    32                           	psect	text12,local,class=CODE,merge=1,delta=2
    33                           	psect	text13,local,class=CODE,merge=1,delta=2
    34                           	psect	text14,local,class=CODE,merge=1,delta=2
    35                           	psect	text15,local,class=CODE,merge=1,delta=2
    36                           	psect	text16,local,class=CODE,merge=1,delta=2
    37                           	psect	text17,local,class=CODE,merge=1,delta=2
    38                           	psect	text18,local,class=CODE,merge=1,delta=2
    39                           	psect	text19,local,class=CODE,merge=1,delta=2
    40                           	psect	text20,local,class=CODE,merge=1,delta=2
    41                           	psect	text21,local,class=CODE,merge=1,delta=2
    42                           	psect	text22,local,class=CODE,merge=1,delta=2
    43                           	psect	text23,local,class=CODE,merge=1,delta=2
    44                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text25,local,class=CODE,merge=1,delta=2,group=3
    46                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    47                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    48                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    49                           	psect	text29,local,class=CODE,merge=1,delta=2
    50                           	psect	text30,local,class=CODE,merge=1,delta=2
    51                           	psect	text31,local,class=CODE,merge=1,delta=2
    52                           	psect	text32,local,class=CODE,merge=1,delta=2
    53                           	psect	text33,local,class=CODE,merge=1,delta=2
    54                           	psect	text34,local,class=CODE,merge=1,delta=2
    55                           	psect	text35,local,class=CODE,merge=1,delta=2
    56                           	psect	text36,local,class=CODE,merge=1,delta=2
    57                           	psect	text37,local,class=CODE,merge=1,delta=2
    58                           	psect	text38,local,class=CODE,merge=1,delta=2
    59                           	psect	text39,local,class=CODE,merge=1,delta=2
    60                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    61                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    62                           	dabs	1,0x7E,2
    63  0000                     
    64                           ; Version 2.40
    65                           ; Generated 17/11/2021 GMT
    66                           ; 
    67                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    68                           ; All rights reserved.
    69                           ; 
    70                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    71                           ; 
    72                           ; Redistribution and use in source and binary forms, with or without modification, are
    73                           ; permitted provided that the following conditions are met:
    74                           ; 
    75                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    76                           ;        conditions and the following disclaimer.
    77                           ; 
    78                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    79                           ;        of conditions and the following disclaimer in the documentation and/or other
    80                           ;        materials provided with the distribution. Publication is not required when
    81                           ;        this file is used in an embedded application.
    82                           ; 
    83                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    84                           ;        software without specific prior written permission.
    85                           ; 
    86                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    87                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    88                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    89                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    90                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    91                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    92                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    93                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    94                           ; 
    95                           ; 
    96                           ; Code-generator required, PIC16F886 Definitions
    97                           ; 
    98                           ; SFR Addresses
    99  0000                     	;# 
   100  0001                     	;# 
   101  0002                     	;# 
   102  0003                     	;# 
   103  0004                     	;# 
   104  0005                     	;# 
   105  0006                     	;# 
   106  0007                     	;# 
   107  0009                     	;# 
   108  000A                     	;# 
   109  000B                     	;# 
   110  000C                     	;# 
   111  000D                     	;# 
   112  000E                     	;# 
   113  000E                     	;# 
   114  000F                     	;# 
   115  0010                     	;# 
   116  0011                     	;# 
   117  0012                     	;# 
   118  0013                     	;# 
   119  0014                     	;# 
   120  0015                     	;# 
   121  0015                     	;# 
   122  0016                     	;# 
   123  0017                     	;# 
   124  0018                     	;# 
   125  0019                     	;# 
   126  001A                     	;# 
   127  001B                     	;# 
   128  001B                     	;# 
   129  001C                     	;# 
   130  001D                     	;# 
   131  001E                     	;# 
   132  001F                     	;# 
   133  0081                     	;# 
   134  0085                     	;# 
   135  0086                     	;# 
   136  0087                     	;# 
   137  0089                     	;# 
   138  008C                     	;# 
   139  008D                     	;# 
   140  008E                     	;# 
   141  008F                     	;# 
   142  0090                     	;# 
   143  0091                     	;# 
   144  0092                     	;# 
   145  0093                     	;# 
   146  0093                     	;# 
   147  0093                     	;# 
   148  0094                     	;# 
   149  0095                     	;# 
   150  0096                     	;# 
   151  0097                     	;# 
   152  0098                     	;# 
   153  0099                     	;# 
   154  009A                     	;# 
   155  009B                     	;# 
   156  009C                     	;# 
   157  009D                     	;# 
   158  009E                     	;# 
   159  009F                     	;# 
   160  0105                     	;# 
   161  0107                     	;# 
   162  0108                     	;# 
   163  0109                     	;# 
   164  010C                     	;# 
   165  010C                     	;# 
   166  010D                     	;# 
   167  010E                     	;# 
   168  010F                     	;# 
   169  0185                     	;# 
   170  0187                     	;# 
   171  0188                     	;# 
   172  0189                     	;# 
   173  018C                     	;# 
   174  018D                     	;# 
   175  0000                     	;# 
   176  0001                     	;# 
   177  0002                     	;# 
   178  0003                     	;# 
   179  0004                     	;# 
   180  0005                     	;# 
   181  0006                     	;# 
   182  0007                     	;# 
   183  0009                     	;# 
   184  000A                     	;# 
   185  000B                     	;# 
   186  000C                     	;# 
   187  000D                     	;# 
   188  000E                     	;# 
   189  000E                     	;# 
   190  000F                     	;# 
   191  0010                     	;# 
   192  0011                     	;# 
   193  0012                     	;# 
   194  0013                     	;# 
   195  0014                     	;# 
   196  0015                     	;# 
   197  0015                     	;# 
   198  0016                     	;# 
   199  0017                     	;# 
   200  0018                     	;# 
   201  0019                     	;# 
   202  001A                     	;# 
   203  001B                     	;# 
   204  001B                     	;# 
   205  001C                     	;# 
   206  001D                     	;# 
   207  001E                     	;# 
   208  001F                     	;# 
   209  0081                     	;# 
   210  0085                     	;# 
   211  0086                     	;# 
   212  0087                     	;# 
   213  0089                     	;# 
   214  008C                     	;# 
   215  008D                     	;# 
   216  008E                     	;# 
   217  008F                     	;# 
   218  0090                     	;# 
   219  0091                     	;# 
   220  0092                     	;# 
   221  0093                     	;# 
   222  0093                     	;# 
   223  0093                     	;# 
   224  0094                     	;# 
   225  0095                     	;# 
   226  0096                     	;# 
   227  0097                     	;# 
   228  0098                     	;# 
   229  0099                     	;# 
   230  009A                     	;# 
   231  009B                     	;# 
   232  009C                     	;# 
   233  009D                     	;# 
   234  009E                     	;# 
   235  009F                     	;# 
   236  0105                     	;# 
   237  0107                     	;# 
   238  0108                     	;# 
   239  0109                     	;# 
   240  010C                     	;# 
   241  010C                     	;# 
   242  010D                     	;# 
   243  010E                     	;# 
   244  010F                     	;# 
   245  0185                     	;# 
   246  0187                     	;# 
   247  0188                     	;# 
   248  0189                     	;# 
   249  018C                     	;# 
   250  018D                     	;# 
   251  0000                     	;# 
   252  0001                     	;# 
   253  0002                     	;# 
   254  0003                     	;# 
   255  0004                     	;# 
   256  0005                     	;# 
   257  0006                     	;# 
   258  0007                     	;# 
   259  0009                     	;# 
   260  000A                     	;# 
   261  000B                     	;# 
   262  000C                     	;# 
   263  000D                     	;# 
   264  000E                     	;# 
   265  000E                     	;# 
   266  000F                     	;# 
   267  0010                     	;# 
   268  0011                     	;# 
   269  0012                     	;# 
   270  0013                     	;# 
   271  0014                     	;# 
   272  0015                     	;# 
   273  0015                     	;# 
   274  0016                     	;# 
   275  0017                     	;# 
   276  0018                     	;# 
   277  0019                     	;# 
   278  001A                     	;# 
   279  001B                     	;# 
   280  001B                     	;# 
   281  001C                     	;# 
   282  001D                     	;# 
   283  001E                     	;# 
   284  001F                     	;# 
   285  0081                     	;# 
   286  0085                     	;# 
   287  0086                     	;# 
   288  0087                     	;# 
   289  0089                     	;# 
   290  008C                     	;# 
   291  008D                     	;# 
   292  008E                     	;# 
   293  008F                     	;# 
   294  0090                     	;# 
   295  0091                     	;# 
   296  0092                     	;# 
   297  0093                     	;# 
   298  0093                     	;# 
   299  0093                     	;# 
   300  0094                     	;# 
   301  0095                     	;# 
   302  0096                     	;# 
   303  0097                     	;# 
   304  0098                     	;# 
   305  0099                     	;# 
   306  009A                     	;# 
   307  009B                     	;# 
   308  009C                     	;# 
   309  009D                     	;# 
   310  009E                     	;# 
   311  009F                     	;# 
   312  0105                     	;# 
   313  0107                     	;# 
   314  0108                     	;# 
   315  0109                     	;# 
   316  010C                     	;# 
   317  010C                     	;# 
   318  010D                     	;# 
   319  010E                     	;# 
   320  010F                     	;# 
   321  0185                     	;# 
   322  0187                     	;# 
   323  0188                     	;# 
   324  0189                     	;# 
   325  018C                     	;# 
   326  018D                     	;# 
   327  0000                     	;# 
   328  0001                     	;# 
   329  0002                     	;# 
   330  0003                     	;# 
   331  0004                     	;# 
   332  0005                     	;# 
   333  0006                     	;# 
   334  0007                     	;# 
   335  0009                     	;# 
   336  000A                     	;# 
   337  000B                     	;# 
   338  000C                     	;# 
   339  000D                     	;# 
   340  000E                     	;# 
   341  000E                     	;# 
   342  000F                     	;# 
   343  0010                     	;# 
   344  0011                     	;# 
   345  0012                     	;# 
   346  0013                     	;# 
   347  0014                     	;# 
   348  0015                     	;# 
   349  0015                     	;# 
   350  0016                     	;# 
   351  0017                     	;# 
   352  0018                     	;# 
   353  0019                     	;# 
   354  001A                     	;# 
   355  001B                     	;# 
   356  001B                     	;# 
   357  001C                     	;# 
   358  001D                     	;# 
   359  001E                     	;# 
   360  001F                     	;# 
   361  0081                     	;# 
   362  0085                     	;# 
   363  0086                     	;# 
   364  0087                     	;# 
   365  0089                     	;# 
   366  008C                     	;# 
   367  008D                     	;# 
   368  008E                     	;# 
   369  008F                     	;# 
   370  0090                     	;# 
   371  0091                     	;# 
   372  0092                     	;# 
   373  0093                     	;# 
   374  0093                     	;# 
   375  0093                     	;# 
   376  0094                     	;# 
   377  0095                     	;# 
   378  0096                     	;# 
   379  0097                     	;# 
   380  0098                     	;# 
   381  0099                     	;# 
   382  009A                     	;# 
   383  009B                     	;# 
   384  009C                     	;# 
   385  009D                     	;# 
   386  009E                     	;# 
   387  009F                     	;# 
   388  0105                     	;# 
   389  0107                     	;# 
   390  0108                     	;# 
   391  0109                     	;# 
   392  010C                     	;# 
   393  010C                     	;# 
   394  010D                     	;# 
   395  010E                     	;# 
   396  010F                     	;# 
   397  0185                     	;# 
   398  0187                     	;# 
   399  0188                     	;# 
   400  0189                     	;# 
   401  018C                     	;# 
   402  018D                     	;# 
   403  0000                     	;# 
   404  0001                     	;# 
   405  0002                     	;# 
   406  0003                     	;# 
   407  0004                     	;# 
   408  0005                     	;# 
   409  0006                     	;# 
   410  0007                     	;# 
   411  0009                     	;# 
   412  000A                     	;# 
   413  000B                     	;# 
   414  000C                     	;# 
   415  000D                     	;# 
   416  000E                     	;# 
   417  000E                     	;# 
   418  000F                     	;# 
   419  0010                     	;# 
   420  0011                     	;# 
   421  0012                     	;# 
   422  0013                     	;# 
   423  0014                     	;# 
   424  0015                     	;# 
   425  0015                     	;# 
   426  0016                     	;# 
   427  0017                     	;# 
   428  0018                     	;# 
   429  0019                     	;# 
   430  001A                     	;# 
   431  001B                     	;# 
   432  001B                     	;# 
   433  001C                     	;# 
   434  001D                     	;# 
   435  001E                     	;# 
   436  001F                     	;# 
   437  0081                     	;# 
   438  0085                     	;# 
   439  0086                     	;# 
   440  0087                     	;# 
   441  0089                     	;# 
   442  008C                     	;# 
   443  008D                     	;# 
   444  008E                     	;# 
   445  008F                     	;# 
   446  0090                     	;# 
   447  0091                     	;# 
   448  0092                     	;# 
   449  0093                     	;# 
   450  0093                     	;# 
   451  0093                     	;# 
   452  0094                     	;# 
   453  0095                     	;# 
   454  0096                     	;# 
   455  0097                     	;# 
   456  0098                     	;# 
   457  0099                     	;# 
   458  009A                     	;# 
   459  009B                     	;# 
   460  009C                     	;# 
   461  009D                     	;# 
   462  009E                     	;# 
   463  009F                     	;# 
   464  0105                     	;# 
   465  0107                     	;# 
   466  0108                     	;# 
   467  0109                     	;# 
   468  010C                     	;# 
   469  010C                     	;# 
   470  010D                     	;# 
   471  010E                     	;# 
   472  010F                     	;# 
   473  0185                     	;# 
   474  0187                     	;# 
   475  0188                     	;# 
   476  0189                     	;# 
   477  018C                     	;# 
   478  018D                     	;# 
   479  0000                     	;# 
   480  0001                     	;# 
   481  0002                     	;# 
   482  0003                     	;# 
   483  0004                     	;# 
   484  0005                     	;# 
   485  0006                     	;# 
   486  0007                     	;# 
   487  0009                     	;# 
   488  000A                     	;# 
   489  000B                     	;# 
   490  000C                     	;# 
   491  000D                     	;# 
   492  000E                     	;# 
   493  000E                     	;# 
   494  000F                     	;# 
   495  0010                     	;# 
   496  0011                     	;# 
   497  0012                     	;# 
   498  0013                     	;# 
   499  0014                     	;# 
   500  0015                     	;# 
   501  0015                     	;# 
   502  0016                     	;# 
   503  0017                     	;# 
   504  0018                     	;# 
   505  0019                     	;# 
   506  001A                     	;# 
   507  001B                     	;# 
   508  001B                     	;# 
   509  001C                     	;# 
   510  001D                     	;# 
   511  001E                     	;# 
   512  001F                     	;# 
   513  0081                     	;# 
   514  0085                     	;# 
   515  0086                     	;# 
   516  0087                     	;# 
   517  0089                     	;# 
   518  008C                     	;# 
   519  008D                     	;# 
   520  008E                     	;# 
   521  008F                     	;# 
   522  0090                     	;# 
   523  0091                     	;# 
   524  0092                     	;# 
   525  0093                     	;# 
   526  0093                     	;# 
   527  0093                     	;# 
   528  0094                     	;# 
   529  0095                     	;# 
   530  0096                     	;# 
   531  0097                     	;# 
   532  0098                     	;# 
   533  0099                     	;# 
   534  009A                     	;# 
   535  009B                     	;# 
   536  009C                     	;# 
   537  009D                     	;# 
   538  009E                     	;# 
   539  009F                     	;# 
   540  0105                     	;# 
   541  0107                     	;# 
   542  0108                     	;# 
   543  0109                     	;# 
   544  010C                     	;# 
   545  010C                     	;# 
   546  010D                     	;# 
   547  010E                     	;# 
   548  010F                     	;# 
   549  0185                     	;# 
   550  0187                     	;# 
   551  0188                     	;# 
   552  0189                     	;# 
   553  018C                     	;# 
   554  018D                     	;# 
   555  0000                     	;# 
   556  0001                     	;# 
   557  0002                     	;# 
   558  0003                     	;# 
   559  0004                     	;# 
   560  0005                     	;# 
   561  0006                     	;# 
   562  0007                     	;# 
   563  0009                     	;# 
   564  000A                     	;# 
   565  000B                     	;# 
   566  000C                     	;# 
   567  000D                     	;# 
   568  000E                     	;# 
   569  000E                     	;# 
   570  000F                     	;# 
   571  0010                     	;# 
   572  0011                     	;# 
   573  0012                     	;# 
   574  0013                     	;# 
   575  0014                     	;# 
   576  0015                     	;# 
   577  0015                     	;# 
   578  0016                     	;# 
   579  0017                     	;# 
   580  0018                     	;# 
   581  0019                     	;# 
   582  001A                     	;# 
   583  001B                     	;# 
   584  001B                     	;# 
   585  001C                     	;# 
   586  001D                     	;# 
   587  001E                     	;# 
   588  001F                     	;# 
   589  0081                     	;# 
   590  0085                     	;# 
   591  0086                     	;# 
   592  0087                     	;# 
   593  0089                     	;# 
   594  008C                     	;# 
   595  008D                     	;# 
   596  008E                     	;# 
   597  008F                     	;# 
   598  0090                     	;# 
   599  0091                     	;# 
   600  0092                     	;# 
   601  0093                     	;# 
   602  0093                     	;# 
   603  0093                     	;# 
   604  0094                     	;# 
   605  0095                     	;# 
   606  0096                     	;# 
   607  0097                     	;# 
   608  0098                     	;# 
   609  0099                     	;# 
   610  009A                     	;# 
   611  009B                     	;# 
   612  009C                     	;# 
   613  009D                     	;# 
   614  009E                     	;# 
   615  009F                     	;# 
   616  0105                     	;# 
   617  0107                     	;# 
   618  0108                     	;# 
   619  0109                     	;# 
   620  010C                     	;# 
   621  010C                     	;# 
   622  010D                     	;# 
   623  010E                     	;# 
   624  010F                     	;# 
   625  0185                     	;# 
   626  0187                     	;# 
   627  0188                     	;# 
   628  0189                     	;# 
   629  018C                     	;# 
   630  018D                     	;# 
   631  0000                     	;# 
   632  0001                     	;# 
   633  0002                     	;# 
   634  0003                     	;# 
   635  0004                     	;# 
   636  0005                     	;# 
   637  0006                     	;# 
   638  0007                     	;# 
   639  0009                     	;# 
   640  000A                     	;# 
   641  000B                     	;# 
   642  000C                     	;# 
   643  000D                     	;# 
   644  000E                     	;# 
   645  000E                     	;# 
   646  000F                     	;# 
   647  0010                     	;# 
   648  0011                     	;# 
   649  0012                     	;# 
   650  0013                     	;# 
   651  0014                     	;# 
   652  0015                     	;# 
   653  0015                     	;# 
   654  0016                     	;# 
   655  0017                     	;# 
   656  0018                     	;# 
   657  0019                     	;# 
   658  001A                     	;# 
   659  001B                     	;# 
   660  001B                     	;# 
   661  001C                     	;# 
   662  001D                     	;# 
   663  001E                     	;# 
   664  001F                     	;# 
   665  0081                     	;# 
   666  0085                     	;# 
   667  0086                     	;# 
   668  0087                     	;# 
   669  0089                     	;# 
   670  008C                     	;# 
   671  008D                     	;# 
   672  008E                     	;# 
   673  008F                     	;# 
   674  0090                     	;# 
   675  0091                     	;# 
   676  0092                     	;# 
   677  0093                     	;# 
   678  0093                     	;# 
   679  0093                     	;# 
   680  0094                     	;# 
   681  0095                     	;# 
   682  0096                     	;# 
   683  0097                     	;# 
   684  0098                     	;# 
   685  0099                     	;# 
   686  009A                     	;# 
   687  009B                     	;# 
   688  009C                     	;# 
   689  009D                     	;# 
   690  009E                     	;# 
   691  009F                     	;# 
   692  0105                     	;# 
   693  0107                     	;# 
   694  0108                     	;# 
   695  0109                     	;# 
   696  010C                     	;# 
   697  010C                     	;# 
   698  010D                     	;# 
   699  010E                     	;# 
   700  010F                     	;# 
   701  0185                     	;# 
   702  0187                     	;# 
   703  0188                     	;# 
   704  0189                     	;# 
   705  018C                     	;# 
   706  018D                     	;# 
   707  0000                     	;# 
   708  0001                     	;# 
   709  0002                     	;# 
   710  0003                     	;# 
   711  0004                     	;# 
   712  0005                     	;# 
   713  0006                     	;# 
   714  0007                     	;# 
   715  0009                     	;# 
   716  000A                     	;# 
   717  000B                     	;# 
   718  000C                     	;# 
   719  000D                     	;# 
   720  000E                     	;# 
   721  000E                     	;# 
   722  000F                     	;# 
   723  0010                     	;# 
   724  0011                     	;# 
   725  0012                     	;# 
   726  0013                     	;# 
   727  0014                     	;# 
   728  0015                     	;# 
   729  0015                     	;# 
   730  0016                     	;# 
   731  0017                     	;# 
   732  0018                     	;# 
   733  0019                     	;# 
   734  001A                     	;# 
   735  001B                     	;# 
   736  001B                     	;# 
   737  001C                     	;# 
   738  001D                     	;# 
   739  001E                     	;# 
   740  001F                     	;# 
   741  0081                     	;# 
   742  0085                     	;# 
   743  0086                     	;# 
   744  0087                     	;# 
   745  0089                     	;# 
   746  008C                     	;# 
   747  008D                     	;# 
   748  008E                     	;# 
   749  008F                     	;# 
   750  0090                     	;# 
   751  0091                     	;# 
   752  0092                     	;# 
   753  0093                     	;# 
   754  0093                     	;# 
   755  0093                     	;# 
   756  0094                     	;# 
   757  0095                     	;# 
   758  0096                     	;# 
   759  0097                     	;# 
   760  0098                     	;# 
   761  0099                     	;# 
   762  009A                     	;# 
   763  009B                     	;# 
   764  009C                     	;# 
   765  009D                     	;# 
   766  009E                     	;# 
   767  009F                     	;# 
   768  0105                     	;# 
   769  0107                     	;# 
   770  0108                     	;# 
   771  0109                     	;# 
   772  010C                     	;# 
   773  010C                     	;# 
   774  010D                     	;# 
   775  010E                     	;# 
   776  010F                     	;# 
   777  0185                     	;# 
   778  0187                     	;# 
   779  0188                     	;# 
   780  0189                     	;# 
   781  018C                     	;# 
   782  018D                     	;# 
   783                           
   784                           	psect	idataBANK0
   785  0003                     __pidataBANK0:
   786                           
   787                           ;initializer for _colorIncrement
   788  0003  3402               	retlw	2
   789  0004  3400               	retlw	0
   790                           
   791                           ;initializer for _BackLight_State
   792  0005  3408               	retlw	8
   793                           
   794                           	psect	idataBANK1
   795  1250                     __pidataBANK1:
   796                           
   797                           ;initializer for _AM_PM
   798  1250  3405               	retlw	5
   799                           
   800                           ;initializer for _Clock_type
   801  1251  3406               	retlw	6
   802                           
   803                           ;initializer for _brightness
   804  1252  3414               	retlw	20
   805                           
   806                           	psect	idataBANK3
   807  1257                     __pidataBANK3:
   808                           
   809                           ;initializer for _days
   810  1257  3453               	retlw	83
   811  1258  344D               	retlw	77
   812  1259  3454               	retlw	84
   813  125A  3457               	retlw	87
   814  125B  3474               	retlw	116
   815  125C  3446               	retlw	70
   816  125D  3473               	retlw	115
   817                           
   818                           	psect	strings
   819  0800                     __pstrings:
   820  0800                     stringtab:
   821  0800                     __stringtab:
   822                           
   823                           ;	String table - string pointers are 1 byte each
   824  0800  1BFF               	btfsc	btemp+1,7
   825  0801  280A               	ljmp	stringcode
   826  0802  1383               	bcf	3,7
   827  0803  187F               	btfsc	btemp+1,0
   828  0804  1783               	bsf	3,7
   829  0805  0800               	movf	0,w
   830  0806  0A84               	incf	4,f
   831  0807  1903               	skipnz
   832  0808  0AFF               	incf	btemp+1,f
   833  0809  0008               	return
   834  080A                     stringcode:
   835  080A                     stringdir:
   836  080A  3008               	movlw	high stringdir
   837  080B  008A               	movwf	10
   838  080C  0804               	movf	4,w
   839  080D  0A84               	incf	4,f
   840  080E  0782               	addwf	2,f
   841  080F                     __stringbase:
   842  080F  3400               	retlw	0
   843  0810                     __end_of__stringtab:
   844  0810                     _dpowers:
   845  0810  3401               	retlw	1
   846  0811  3400               	retlw	0
   847  0812  340A               	retlw	10
   848  0813  3400               	retlw	0
   849  0814  3464               	retlw	100
   850  0815  3400               	retlw	0
   851  0816  34E8               	retlw	232
   852  0817  3403               	retlw	3
   853  0818  3410               	retlw	16
   854  0819  3427               	retlw	39
   855  081A                     __end_of_dpowers:
   856  081A                     _hexpowers:
   857  081A  3401               	retlw	1
   858  081B  3400               	retlw	0
   859  081C  3410               	retlw	16
   860  081D  3400               	retlw	0
   861  081E  3400               	retlw	0
   862  081F  3401               	retlw	1
   863  0820  3400               	retlw	0
   864  0821  3410               	retlw	16
   865  0822                     __end_of_hexpowers:
   866  0006                     _PORTBbits	set	6
   867  0017                     _CCP1CONbits	set	23
   868  0012                     _T2CON	set	18
   869  0015                     _CCPR1L	set	21
   870  0006                     _PORTB	set	6
   871  000C                     _PIR1bits	set	12
   872  001E                     _ADRESH	set	30
   873  001F                     _ADCON0bits	set	31
   874  0014                     _SSPCON	set	20
   875  0013                     _SSPBUF	set	19
   876  003B                     _RC3	set	59
   877  0035                     _RB5	set	53
   878  004B                     _RE3	set	75
   879  0063                     _SSPIF	set	99
   880  009D                     _PSTRCONbits	set	157
   881  0086                     _TRISBbits	set	134
   882  0092                     _PR2	set	146
   883  008C                     _PIE1bits	set	140
   884  009F                     _ADCON1bits	set	159
   885  0089                     _TRISE	set	137
   886  0087                     _TRISC	set	135
   887  0086                     _TRISB	set	134
   888  009E                     _ADRESL	set	158
   889  0091                     _SSPCON2bits	set	145
   890  0093                     _SSPADD	set	147
   891  0091                     _SSPCON2	set	145
   892  0094                     _SSPSTAT	set	148
   893  0087                     _TRISCbits	set	135
   894  0094                     _SSPSTATbits	set	148
   895  048C                     _ACKEN	set	1164
   896  048D                     _ACKDT	set	1165
   897  048A                     _PEN	set	1162
   898  0489                     _RSEN	set	1161
   899  048E                     _ACKSTAT	set	1166
   900  0463                     _SSPIE	set	1123
   901  048B                     _RCEN	set	1163
   902  0189                     _ANSELHbits	set	393
   903  0188                     _ANSELbits	set	392
   904  0189                     _ANSELH	set	393
   905  0188                     _ANSEL	set	392
   906  0822                     STR_27:
   907  0822  3430               	retlw	48	;'0'
   908  0823  3431               	retlw	49	;'1'
   909  0824  3432               	retlw	50	;'2'
   910  0825  3433               	retlw	51	;'3'
   911  0826  3434               	retlw	52	;'4'
   912  0827  3435               	retlw	53	;'5'
   913  0828  3436               	retlw	54	;'6'
   914  0829  3437               	retlw	55	;'7'
   915  082A  3438               	retlw	56	;'8'
   916  082B  3439               	retlw	57	;'9'
   917  082C  3461               	retlw	97	;'a'
   918  082D  3462               	retlw	98	;'b'
   919  082E  3463               	retlw	99	;'c'
   920  082F  3464               	retlw	100	;'d'
   921  0830  3465               	retlw	101	;'e'
   922  0831  3466               	retlw	102	;'f'
   923  0832  3400               	retlw	0
   924  0833                     STR_4:
   925  0833  3448               	retlw	72	;'H'
   926  0834  3465               	retlw	101	;'e'
   927  0835  346C               	retlw	108	;'l'
   928  0836  346C               	retlw	108	;'l'
   929  0837  346F               	retlw	111	;'o'
   930  0838  3420               	retlw	32	;' '
   931  0839  3454               	retlw	84	;'T'
   932  083A  3468               	retlw	104	;'h'
   933  083B  3465               	retlw	101	;'e'
   934  083C  3472               	retlw	114	;'r'
   935  083D  3465               	retlw	101	;'e'
   936  083E  3400               	retlw	0
   937  083F                     STR_1:
   938  083F  3454               	retlw	84	;'T'
   939  0840  3465               	retlw	101	;'e'
   940  0841  346D               	retlw	109	;'m'
   941  0842  3470               	retlw	112	;'p'
   942  0843  343A               	retlw	58	;':'
   943  0844  3425               	retlw	37	;'%'
   944  0845  3433               	retlw	51	;'3'
   945  0846  3464               	retlw	100	;'d'
   946  0847  342A               	retlw	42	;'*'
   947  0848  3443               	retlw	67	;'C'
   948  0849  3400               	retlw	0
   949  084A                     STR_2:
   950  084A  3454               	retlw	84	;'T'
   951  084B  3465               	retlw	101	;'e'
   952  084C  346D               	retlw	109	;'m'
   953  084D  3470               	retlw	112	;'p'
   954  084E  343A               	retlw	58	;':'
   955  084F  3425               	retlw	37	;'%'
   956  0850  3433               	retlw	51	;'3'
   957  0851  3464               	retlw	100	;'d'
   958  0852  342A               	retlw	42	;'*'
   959  0853  3446               	retlw	70	;'F'
   960  0854  3400               	retlw	0
   961  0855                     STR_25:
   962  0855  3450               	retlw	80	;'P'
   963  0856  3468               	retlw	104	;'h'
   964  0857  346F               	retlw	111	;'o'
   965  0858  3474               	retlw	116	;'t'
   966  0859  346F               	retlw	111	;'o'
   967  085A  343A               	retlw	58	;':'
   968  085B  3425               	retlw	37	;'%'
   969  085C  3464               	retlw	100	;'d'
   970  085D  3400               	retlw	0
   971  085E                     STR_24:
   972  085E  344C               	retlw	76	;'L'
   973  085F  3469               	retlw	105	;'i'
   974  0860  3467               	retlw	103	;'g'
   975  0861  3468               	retlw	104	;'h'
   976  0862  3474               	retlw	116	;'t'
   977  0863  343A               	retlw	58	;':'
   978  0864  3425               	retlw	37	;'%'
   979  0865  3464               	retlw	100	;'d'
   980  0866  3400               	retlw	0
   981  0867                     STR_13:
   982  0867  3443               	retlw	67	;'C'
   983  0868  3461               	retlw	97	;'a'
   984  0869  346C               	retlw	108	;'l'
   985  086A  343A               	retlw	58	;':'
   986  086B  3425               	retlw	37	;'%'
   987  086C  3478               	retlw	120	;'x'
   988  086D  342D               	retlw	45	;'-'
   989  086E  3400               	retlw	0
   990  086F                     STR_9:
   991  086F  3454               	retlw	84	;'T'
   992  0870  3469               	retlw	105	;'i'
   993  0871  346D               	retlw	109	;'m'
   994  0872  343A               	retlw	58	;':'
   995  0873  3425               	retlw	37	;'%'
   996  0874  3478               	retlw	120	;'x'
   997  0875  343A               	retlw	58	;':'
   998  0876  3400               	retlw	0
   999  0877                     STR_26:
  1000  0877  3428               	retlw	40	;'('
  1001  0878  346E               	retlw	110	;'n'
  1002  0879  3475               	retlw	117	;'u'
  1003  087A  346C               	retlw	108	;'l'
  1004  087B  346C               	retlw	108	;'l'
  1005  087C  3429               	retlw	41	;')'
  1006  087D  3400               	retlw	0
  1007  087E                     STR_7:
  1008  087E  3425               	retlw	37	;'%'
  1009  087F  3478               	retlw	120	;'x'
  1010  0880  3420               	retlw	32	;' '
  1011  0881  3400               	retlw	0
  1012  0882                     STR_19:
  1013  0882  3457               	retlw	87	;'W'
  1014  0883  3465               	retlw	101	;'e'
  1015  0884  3464               	retlw	100	;'d'
  1016  0885  3400               	retlw	0
  1017  0886                     STR_18:
  1018  0886  3454               	retlw	84	;'T'
  1019  0887  3475               	retlw	117	;'u'
  1020  0888  3465               	retlw	101	;'e'
  1021  0889  3400               	retlw	0
  1022  088A                     STR_21:
  1023  088A  3446               	retlw	70	;'F'
  1024  088B  3472               	retlw	114	;'r'
  1025  088C  3469               	retlw	105	;'i'
  1026  088D  3400               	retlw	0
  1027  088E                     STR_17:
  1028  088E  344D               	retlw	77	;'M'
  1029  088F  346F               	retlw	111	;'o'
  1030  0890  346E               	retlw	110	;'n'
  1031  0891  3400               	retlw	0
  1032  0892                     STR_16:
  1033  0892  3453               	retlw	83	;'S'
  1034  0893  3475               	retlw	117	;'u'
  1035  0894  346E               	retlw	110	;'n'
  1036  0895  3400               	retlw	0
  1037  0896                     STR_22:
  1038  0896  3453               	retlw	83	;'S'
  1039  0897  3461               	retlw	97	;'a'
  1040  0898  3474               	retlw	116	;'t'
  1041  0899  3400               	retlw	0
  1042  089A                     STR_20:
  1043  089A  3454               	retlw	84	;'T'
  1044  089B  3468               	retlw	104	;'h'
  1045  089C  3475               	retlw	117	;'u'
  1046  089D  3400               	retlw	0
  1047  089E                     STR_23:
  1048  089E  3449               	retlw	73	;'I'
  1049  089F  346E               	retlw	110	;'n'
  1050  08A0  3476               	retlw	118	;'v'
  1051  08A1  3400               	retlw	0
  1052  08A2                     STR_6:
  1053  08A2  3441               	retlw	65	;'A'
  1054  08A3  344D               	retlw	77	;'M'
  1055  08A4  3400               	retlw	0
  1056  08A5                     STR_5:
  1057  08A5  3450               	retlw	80	;'P'
  1058  08A6  344D               	retlw	77	;'M'
  1059  08A7  3400               	retlw	0
  1060  08A8                     STR_3:
  1061  08A8  3425               	retlw	37	;'%'
  1062  08A9  3473               	retlw	115	;'s'
  1063  08AA  3400               	retlw	0
  1064  087E                     
  1065                           	psect	cinit
  1066  07B9                     start_initialization:	
  1067                           ; #config settings
  1068                           
  1069  07B9                     __initialization:
  1070                           
  1071                           ; Initialize objects allocated to BANK3
  1072  07B9  1783               	bsf	3,7	;select IRP bank2
  1073  07BA  30D3               	movlw	low (__pdataBANK3+7)
  1074  07BB  00FD               	movwf	btemp+-1
  1075  07BC  3012               	movlw	high __pidataBANK3
  1076  07BD  00FE               	movwf	btemp
  1077  07BE  3057               	movlw	low __pidataBANK3
  1078  07BF  00FF               	movwf	btemp+1
  1079  07C0  30CC               	movlw	low __pdataBANK3
  1080  07C1  0084               	movwf	4
  1081  07C2  160A  118A  22AB  120A  118A  	fcall	init_ram0
  1082                           
  1083                           ; Initialize objects allocated to BANK1
  1084  07C7  1383               	bcf	3,7	;select IRP bank0
  1085  07C8  30EB               	movlw	low (__pdataBANK1+3)
  1086  07C9  00FD               	movwf	btemp+-1
  1087  07CA  3012               	movlw	high __pidataBANK1
  1088  07CB  00FE               	movwf	btemp
  1089  07CC  3050               	movlw	low __pidataBANK1
  1090  07CD  00FF               	movwf	btemp+1
  1091  07CE  30E8               	movlw	low __pdataBANK1
  1092  07CF  0084               	movwf	4
  1093  07D0  160A  118A  22AB  120A  118A  	fcall	init_ram0
  1094                           
  1095                           ; Initialize objects allocated to BANK0
  1096  07D5  3070               	movlw	low (__pdataBANK0+3)
  1097  07D6  00FD               	movwf	btemp+-1
  1098  07D7  3000               	movlw	high __pidataBANK0
  1099  07D8  00FE               	movwf	btemp
  1100  07D9  3003               	movlw	low __pidataBANK0
  1101  07DA  00FF               	movwf	btemp+1
  1102  07DB  306D               	movlw	low __pdataBANK0
  1103  07DC  0084               	movwf	4
  1104  07DD  160A  118A  22AB  120A  118A  	fcall	init_ram0
  1105                           
  1106                           ; Clear objects allocated to BANK3
  1107  07E2  1783               	bsf	3,7	;select IRP bank2
  1108  07E3  3090               	movlw	low __pbssBANK3
  1109  07E4  0084               	movwf	4
  1110  07E5  30CC               	movlw	low (__pbssBANK3+60)
  1111  07E6  160A  118A  2266  120A  118A  	fcall	clear_ram0
  1112                           
  1113                           ; Clear objects allocated to BANK1
  1114  07EB  1383               	bcf	3,7	;select IRP bank0
  1115  07EC  30D4               	movlw	low __pbssBANK1
  1116  07ED  0084               	movwf	4
  1117  07EE  30E8               	movlw	low (__pbssBANK1+20)
  1118  07EF  160A  118A  2266  120A  118A  	fcall	clear_ram0
  1119                           
  1120                           ; Clear objects allocated to BANK0
  1121  07F4  3062               	movlw	low __pbssBANK0
  1122  07F5  0084               	movwf	4
  1123  07F6  306D               	movlw	low (__pbssBANK0+11)
  1124  07F7  160A  118A  2266  120A  118A  	fcall	clear_ram0
  1125  07FC                     end_of_initialization:	
  1126                           ;End of C runtime variable initialization code
  1127                           
  1128  07FC                     __end_of__initialization:
  1129  07FC  0183               	clrf	3
  1130  07FD  120A  118A  2BAB   	ljmp	_main	;jump to C main() function
  1131                           
  1132                           	psect	bssBANK0
  1133  0062                     __pbssBANK0:
  1134  0062                     _lastStateCLK:
  1135  0062                     	ds	2
  1136  0064                     _Temp_Mode:
  1137  0064                     	ds	2
  1138  0066                     _temperature_f:
  1139  0066                     	ds	2
  1140  0068                     _temperature_c:
  1141  0068                     	ds	2
  1142  006A                     _RS:
  1143  006A                     	ds	1
  1144  006B                     _result:
  1145  006B                     	ds	2
  1146                           
  1147                           	psect	dataBANK0
  1148  006D                     __pdataBANK0:
  1149  006D                     _colorIncrement:
  1150  006D                     	ds	2
  1151  006F                     _BackLight_State:
  1152  006F                     	ds	1
  1153                           
  1154                           	psect	bssBANK1
  1155  00D4                     __pbssBANK1:
  1156  00D4                     _btnState:
  1157  00D4                     	ds	2
  1158  00D6                     _Year:
  1159  00D6                     	ds	2
  1160  00D8                     _Month:
  1161  00D8                     	ds	2
  1162  00DA                     _Date:
  1163  00DA                     	ds	2
  1164  00DC                     _Day:
  1165  00DC                     	ds	2
  1166  00DE                     _hour:
  1167  00DE                     	ds	2
  1168  00E0                     _min:
  1169  00E0                     	ds	2
  1170  00E2                     _sec:
  1171  00E2                     	ds	2
  1172  00E4                     _alarmTime:
  1173  00E4                     	ds	2
  1174  00E6                     _photo_result:
  1175  00E6                     	ds	2
  1176                           
  1177                           	psect	dataBANK1
  1178  00E8                     __pdataBANK1:
  1179  00E8                     _AM_PM:
  1180  00E8                     	ds	1
  1181  00E9                     _Clock_type:
  1182  00E9                     	ds	1
  1183  00EA                     _brightness:
  1184  00EA                     	ds	1
  1185                           
  1186                           	psect	bssBANK3
  1187  0190                     __pbssBANK3:
  1188  0190                     _year:
  1189  0190                     	ds	10
  1190  019A                     _month:
  1191  019A                     	ds	10
  1192  01A4                     _date:
  1193  01A4                     	ds	10
  1194  01AE                     _hours:
  1195  01AE                     	ds	10
  1196  01B8                     _mins:
  1197  01B8                     	ds	10
  1198  01C2                     _secs:
  1199  01C2                     	ds	10
  1200                           
  1201                           	psect	dataBANK3
  1202  01CC                     __pdataBANK3:
  1203  01CC                     _days:
  1204  01CC                     	ds	7
  1205                           
  1206                           	psect	inittext
  1207  12A7                     init_fetch0:	
  1208                           ;	Called with low address in FSR and high address in W
  1209                           
  1210  12A7  087E               	movf	btemp,w
  1211  12A8  008A               	movwf	10
  1212  12A9  087F               	movf	btemp+1,w
  1213  12AA  0082               	movwf	2
  1214  12AB                     init_ram0:	
  1215                           ;Called with:
  1216                           ;	high address of idata address in btemp 
  1217                           ;	low address of idata address in btemp+1 
  1218                           ;	low address of data in FSR
  1219                           ;	high address + 1 of data in btemp-1
  1220                           
  1221  12AB  160A  118A  22A7  160A  118A  	fcall	init_fetch0
  1222  12B0  0080               	movwf	0
  1223  12B1  0A84               	incf	4,f
  1224  12B2  0804               	movf	4,w
  1225  12B3  067D               	xorwf	btemp+-1,w
  1226  12B4  1903               	btfsc	3,2
  1227  12B5  3400               	retlw	0
  1228  12B6  0AFF               	incf	btemp+1,f
  1229  12B7  1903               	btfsc	3,2
  1230  12B8  0AFE               	incf	btemp,f
  1231  12B9  2AAB               	goto	init_ram0
  1232                           
  1233                           	psect	clrtext
  1234  1266                     clear_ram0:	
  1235                           ;	Called with FSR containing the base address, and
  1236                           ;	W with the last address+1
  1237                           
  1238  1266  0064               	clrwdt	;clear the watchdog before getting into this loop
  1239  1267                     clrloop0:
  1240  1267  0180               	clrf	0	;clear RAM location pointed to by FSR
  1241  1268  0A84               	incf	4,f	;increment pointer
  1242  1269  0604               	xorwf	4,w	;XOR with final address
  1243  126A  1903               	btfsc	3,2	;have we reached the end yet?
  1244  126B  3400               	retlw	0	;all done for this memory range, return
  1245  126C  0604               	xorwf	4,w	;XOR again to restore value
  1246  126D  2A67               	goto	clrloop0	;do the next byte
  1247                           
  1248                           	psect	cstackBANK1
  1249  00A0                     __pcstackBANK1:
  1250  00A0                     main@buffer3:
  1251                           
  1252                           ; 16 bytes @ 0x0
  1253  00A0                     	ds	16
  1254  00B0                     main@buffer3_610:
  1255                           
  1256                           ; 16 bytes @ 0x10
  1257  00B0                     	ds	16
  1258  00C0                     main@buffer3_613:
  1259                           
  1260                           ; 16 bytes @ 0x20
  1261  00C0                     	ds	16
  1262  00D0                     main@tmp:
  1263                           
  1264                           ; 2 bytes @ 0x30
  1265  00D0                     	ds	2
  1266  00D2                     main@displayMode:
  1267                           
  1268                           ; 2 bytes @ 0x32
  1269  00D2                     	ds	2
  1270                           
  1271                           	psect	cstackCOMMON
  1272  0070                     __pcstackCOMMON:
  1273  0070                     ?_isdigit:
  1274  0070                     ?_I2C_Ack:	
  1275                           ; 1 bit 
  1276                           
  1277  0070                     ??_I2C_Ack:	
  1278                           ; 1 bytes @ 0x0
  1279                           
  1280  0070                     ?_I2C_Nack:	
  1281                           ; 1 bytes @ 0x0
  1282                           
  1283  0070                     ??_I2C_Nack:	
  1284                           ; 1 bytes @ 0x0
  1285                           
  1286  0070                     ?_I2C_Ready:	
  1287                           ; 1 bytes @ 0x0
  1288                           
  1289  0070                     ??_I2C_Ready:	
  1290                           ; 1 bytes @ 0x0
  1291                           
  1292  0070                     ?_I2C_Write:	
  1293                           ; 1 bytes @ 0x0
  1294                           
  1295  0070                     ??_I2C_Write:	
  1296                           ; 1 bytes @ 0x0
  1297                           
  1298  0070                     ?_I2C_Stop:	
  1299                           ; 1 bytes @ 0x0
  1300                           
  1301  0070                     ??_I2C_Stop:	
  1302                           ; 1 bytes @ 0x0
  1303                           
  1304  0070                     ?_LCD_CMD:	
  1305                           ; 1 bytes @ 0x0
  1306                           
  1307  0070                     ?_IO_Expander_Write:	
  1308                           ; 1 bytes @ 0x0
  1309                           
  1310  0070                     ?_LED_Init:	
  1311                           ; 1 bytes @ 0x0
  1312                           
  1313  0070                     ??_LED_Init:	
  1314                           ; 1 bytes @ 0x0
  1315                           
  1316  0070                     ?_RotaryEncoder_Init:	
  1317                           ; 1 bytes @ 0x0
  1318                           
  1319  0070                     ??_RotaryEncoder_Init:	
  1320                           ; 1 bytes @ 0x0
  1321                           
  1322  0070                     ?_RTC_Read_Clock:	
  1323                           ; 1 bytes @ 0x0
  1324                           
  1325  0070                     ?_RTC_Read_Calendar:	
  1326                           ; 1 bytes @ 0x0
  1327                           
  1328  0070                     ?_ChangeBrightness:	
  1329                           ; 1 bytes @ 0x0
  1330                           
  1331  0070                     ??_ChangeBrightness:	
  1332                           ; 1 bytes @ 0x0
  1333                           
  1334  0070                     ?_ReadPhoto:	
  1335                           ; 1 bytes @ 0x0
  1336                           
  1337  0070                     ??_ReadPhoto:	
  1338                           ; 1 bytes @ 0x0
  1339                           
  1340  0070                     ??_isdigit:	
  1341                           ; 1 bytes @ 0x0
  1342                           
  1343  0070                     ?_I2C_Read:	
  1344                           ; 1 bytes @ 0x0
  1345                           
  1346  0070                     ??_I2C_Read:	
  1347                           ; 1 bytes @ 0x0
  1348                           
  1349  0070                     ?_I2C_Init:	
  1350                           ; 1 bytes @ 0x0
  1351                           
  1352  0070                     ??_I2C_Init:	
  1353                           ; 1 bytes @ 0x0
  1354                           
  1355  0070                     ?_I2C_Start:	
  1356                           ; 1 bytes @ 0x0
  1357                           
  1358  0070                     ?_I2C_Repeated_Start:	
  1359                           ; 1 bytes @ 0x0
  1360                           
  1361  0070                     ?_LCD_Init:	
  1362                           ; 1 bytes @ 0x0
  1363                           
  1364  0070                     ?_LCD_Write_4Bit:	
  1365                           ; 1 bytes @ 0x0
  1366                           
  1367  0070                     ?_LCD_Write_Char:	
  1368                           ; 1 bytes @ 0x0
  1369                           
  1370  0070                     ?_LCD_Clear:	
  1371                           ; 1 bytes @ 0x0
  1372                           
  1373  0070                     ?_Update_Farenheit:	
  1374                           ; 1 bytes @ 0x0
  1375                           
  1376  0070                     ?_Update_Celsius:	
  1377                           ; 1 bytes @ 0x0
  1378                           
  1379  0070                     ?_DisplayTemp:	
  1380                           ; 1 bytes @ 0x0
  1381                           
  1382  0070                     ?_main:	
  1383                           ; 1 bytes @ 0x0
  1384                           
  1385  0070                     ?__Umul8_16:	
  1386                           ; 1 bytes @ 0x0
  1387                           
  1388  0070                     ?___wmul:	
  1389                           ; 2 bytes @ 0x0
  1390                           
  1391  0070                     ?___lwdiv:	
  1392                           ; 2 bytes @ 0x0
  1393                           
  1394  0070                     ?___xxtofl:	
  1395                           ; 2 bytes @ 0x0
  1396                           
  1397  0070                     I2C_Write@data:	
  1398                           ; 4 bytes @ 0x0
  1399                           
  1400  0070                     __Umul8_16@multiplicand:	
  1401                           ; 1 bytes @ 0x0
  1402                           
  1403  0070                     _isdigit$1375:	
  1404                           ; 1 bytes @ 0x0
  1405                           
  1406  0070                     ___wmul@multiplier:	
  1407                           ; 1 bytes @ 0x0
  1408                           
  1409  0070                     ___lwdiv@divisor:	
  1410                           ; 2 bytes @ 0x0
  1411                           
  1412  0070                     ___xxtofl@val:	
  1413                           ; 2 bytes @ 0x0
  1414                           
  1415                           
  1416                           ; 4 bytes @ 0x0
  1417  0070                     	ds	1
  1418  0071                     ??_I2C_Start:
  1419  0071                     ??_I2C_Repeated_Start:	
  1420                           ; 1 bytes @ 0x1
  1421                           
  1422  0071                     I2C_Read@flag:	
  1423                           ; 1 bytes @ 0x1
  1424                           
  1425  0071                     I2C_Start@slave_write_address:	
  1426                           ; 1 bytes @ 0x1
  1427                           
  1428  0071                     I2C_Repeated_Start@slave_read_address:	
  1429                           ; 1 bytes @ 0x1
  1430                           
  1431  0071                     isdigit@c:	
  1432                           ; 1 bytes @ 0x1
  1433                           
  1434                           
  1435                           ; 1 bytes @ 0x1
  1436  0071                     	ds	1
  1437  0072                     ??_IO_Expander_Write:
  1438  0072                     ?_RTC_Clock_Write:	
  1439                           ; 1 bytes @ 0x2
  1440                           
  1441  0072                     ?_RTC_Calendar_Write:	
  1442                           ; 1 bytes @ 0x2
  1443                           
  1444  0072                     ??__Umul8_16:	
  1445                           ; 1 bytes @ 0x2
  1446                           
  1447  0072                     I2C_Read@buffer:	
  1448                           ; 1 bytes @ 0x2
  1449                           
  1450  0072                     IO_Expander_Write@Data:	
  1451                           ; 1 bytes @ 0x2
  1452                           
  1453  0072                     RTC_Clock_Write@min:	
  1454                           ; 1 bytes @ 0x2
  1455                           
  1456  0072                     RTC_Calendar_Write@date:	
  1457                           ; 1 bytes @ 0x2
  1458                           
  1459  0072                     ___wmul@multiplicand:	
  1460                           ; 1 bytes @ 0x2
  1461                           
  1462  0072                     ___lwdiv@dividend:	
  1463                           ; 2 bytes @ 0x2
  1464                           
  1465                           
  1466                           ; 2 bytes @ 0x2
  1467  0072                     	ds	1
  1468  0073                     ??_RTC_Read_Clock:
  1469  0073                     ??_RTC_Read_Calendar:	
  1470                           ; 1 bytes @ 0x3
  1471                           
  1472  0073                     ??_LCD_Write_4Bit:	
  1473                           ; 1 bytes @ 0x3
  1474                           
  1475  0073                     RTC_Clock_Write@hour:	
  1476                           ; 1 bytes @ 0x3
  1477                           
  1478  0073                     RTC_Calendar_Write@month:	
  1479                           ; 1 bytes @ 0x3
  1480                           
  1481                           
  1482                           ; 1 bytes @ 0x3
  1483  0073                     	ds	1
  1484  0074                     ??___wmul:
  1485  0074                     ??___lwdiv:	
  1486                           ; 1 bytes @ 0x4
  1487                           
  1488  0074                     ??___xxtofl:	
  1489                           ; 1 bytes @ 0x4
  1490                           
  1491  0074                     LCD_Write_4Bit@Nibble:	
  1492                           ; 1 bytes @ 0x4
  1493                           
  1494  0074                     RTC_Clock_Write@AM_PM:	
  1495                           ; 1 bytes @ 0x4
  1496                           
  1497  0074                     RTC_Calendar_Write@year:	
  1498                           ; 1 bytes @ 0x4
  1499                           
  1500  0074                     ___wmul@product:	
  1501                           ; 1 bytes @ 0x4
  1502                           
  1503  0074                     __Umul8_16@product:	
  1504                           ; 2 bytes @ 0x4
  1505                           
  1506                           
  1507                           ; 2 bytes @ 0x4
  1508  0074                     	ds	1
  1509  0075                     ??_LCD_CMD:
  1510  0075                     ??_RTC_Clock_Write:	
  1511                           ; 1 bytes @ 0x5
  1512                           
  1513  0075                     ??_RTC_Calendar_Write:	
  1514                           ; 1 bytes @ 0x5
  1515                           
  1516  0075                     ??_LCD_Write_Char:	
  1517                           ; 1 bytes @ 0x5
  1518                           
  1519  0075                     RTC_Read_Clock@read_clock_address:	
  1520                           ; 1 bytes @ 0x5
  1521                           
  1522  0075                     RTC_Read_Calendar@read_calendar_address:	
  1523                           ; 1 bytes @ 0x5
  1524                           
  1525  0075                     RTC_Calendar_Write@day:	
  1526                           ; 1 bytes @ 0x5
  1527                           
  1528  0075                     ___lwdiv@quotient:	
  1529                           ; 1 bytes @ 0x5
  1530                           
  1531                           
  1532                           ; 2 bytes @ 0x5
  1533  0075                     	ds	1
  1534  0076                     LCD_CMD@CMD:
  1535  0076                     LCD_Write_Char@Data:	
  1536                           ; 1 bytes @ 0x6
  1537                           
  1538  0076                     RTC_Clock_Write@sec:	
  1539                           ; 1 bytes @ 0x6
  1540                           
  1541  0076                     __Umul8_16@word_mpld:	
  1542                           ; 1 bytes @ 0x6
  1543                           
  1544                           
  1545                           ; 2 bytes @ 0x6
  1546  0076                     	ds	1
  1547  0077                     ?_LCD_Write_String:
  1548  0077                     ??_LCD_Init:	
  1549                           ; 1 bytes @ 0x7
  1550                           
  1551  0077                     ?_LCD_Set_Cursor:	
  1552                           ; 1 bytes @ 0x7
  1553                           
  1554  0077                     ??_LCD_Clear:	
  1555                           ; 1 bytes @ 0x7
  1556                           
  1557  0077                     LCD_Set_Cursor@COL:	
  1558                           ; 1 bytes @ 0x7
  1559                           
  1560  0077                     ___lwdiv@counter:	
  1561                           ; 1 bytes @ 0x7
  1562                           
  1563  0077                     LCD_Write_String@Str:	
  1564                           ; 1 bytes @ 0x7
  1565                           
  1566                           
  1567                           ; 2 bytes @ 0x7
  1568  0077                     	ds	1
  1569  0078                     ??_LCD_Set_Cursor:
  1570  0078                     ?___lwmod:	
  1571                           ; 1 bytes @ 0x8
  1572                           
  1573  0078                     __Umul8_16@multiplier:	
  1574                           ; 2 bytes @ 0x8
  1575                           
  1576  0078                     ___xxtofl@sign:	
  1577                           ; 1 bytes @ 0x8
  1578                           
  1579  0078                     ___lwmod@divisor:	
  1580                           ; 1 bytes @ 0x8
  1581                           
  1582                           
  1583                           ; 2 bytes @ 0x8
  1584  0078                     	ds	1
  1585  0079                     ??_LCD_Write_String:
  1586  0079                     ___xxtofl@exp:	
  1587                           ; 1 bytes @ 0x9
  1588                           
  1589                           
  1590                           ; 1 bytes @ 0x9
  1591  0079                     	ds	1
  1592  007A                     LCD_Set_Cursor@ROW:
  1593  007A                     ___lwmod@dividend:	
  1594                           ; 1 bytes @ 0xA
  1595                           
  1596  007A                     ___xxtofl@arg:	
  1597                           ; 2 bytes @ 0xA
  1598                           
  1599                           
  1600                           ; 4 bytes @ 0xA
  1601  007A                     	ds	2
  1602  007C                     ??___lwmod:
  1603  007C                     LCD_Write_String@i:	
  1604                           ; 1 bytes @ 0xC
  1605                           
  1606                           
  1607                           ; 2 bytes @ 0xC
  1608  007C                     	ds	1
  1609  007D                     ___lwmod@counter:
  1610                           
  1611                           ; 1 bytes @ 0xD
  1612  007D                     	ds	1
  1613                           
  1614                           	psect	cstackBANK0
  1615  0020                     __pcstackBANK0:
  1616  0020                     ?_LCD_String_xy:
  1617  0020                     ?_sprintf:	
  1618                           ; 1 bytes @ 0x0
  1619                           
  1620  0020                     ?___flmul:	
  1621                           ; 2 bytes @ 0x0
  1622                           
  1623  0020                     LCD_String_xy@pos:	
  1624                           ; 4 bytes @ 0x0
  1625                           
  1626  0020                     sprintf@sp:	
  1627                           ; 1 bytes @ 0x0
  1628                           
  1629  0020                     ___flmul@b:	
  1630                           ; 2 bytes @ 0x0
  1631                           
  1632                           
  1633                           ; 4 bytes @ 0x0
  1634  0020                     	ds	1
  1635  0021                     LCD_String_xy@msg:
  1636                           
  1637                           ; 2 bytes @ 0x1
  1638  0021                     	ds	1
  1639  0022                     sprintf@f:
  1640                           
  1641                           ; 1 bytes @ 0x2
  1642  0022                     	ds	1
  1643  0023                     ??_LCD_String_xy:
  1644                           
  1645                           ; 1 bytes @ 0x3
  1646  0023                     	ds	1
  1647  0024                     LCD_String_xy@row:
  1648  0024                     ___flmul@a:	
  1649                           ; 1 bytes @ 0x4
  1650                           
  1651                           
  1652                           ; 4 bytes @ 0x4
  1653  0024                     	ds	1
  1654  0025                     ??_sprintf:
  1655  0025                     LCD_String_xy@location:	
  1656                           ; 1 bytes @ 0x5
  1657                           
  1658                           
  1659                           ; 1 bytes @ 0x5
  1660  0025                     	ds	3
  1661  0028                     ??___flmul:
  1662  0028                     sprintf@idx:	
  1663                           ; 1 bytes @ 0x8
  1664                           
  1665                           
  1666                           ; 1 bytes @ 0x8
  1667  0028                     	ds	1
  1668  0029                     sprintf@prec:
  1669                           
  1670                           ; 1 bytes @ 0x9
  1671  0029                     	ds	1
  1672  002A                     sprintf@cp:
  1673                           
  1674                           ; 2 bytes @ 0xA
  1675  002A                     	ds	2
  1676  002C                     sprintf@ap:
  1677                           
  1678                           ; 1 bytes @ 0xC
  1679  002C                     	ds	1
  1680  002D                     ___flmul@sign:
  1681  002D                     sprintf@len:	
  1682                           ; 1 bytes @ 0xD
  1683                           
  1684                           
  1685                           ; 2 bytes @ 0xD
  1686  002D                     	ds	1
  1687  002E                     ___flmul@grs:
  1688                           
  1689                           ; 4 bytes @ 0xE
  1690  002E                     	ds	1
  1691  002F                     sprintf@flag:
  1692                           
  1693                           ; 1 bytes @ 0xF
  1694  002F                     	ds	1
  1695  0030                     sprintf@val:
  1696                           
  1697                           ; 2 bytes @ 0x10
  1698  0030                     	ds	2
  1699  0032                     ___flmul@aexp:
  1700  0032                     sprintf@width:	
  1701                           ; 1 bytes @ 0x12
  1702                           
  1703                           
  1704                           ; 2 bytes @ 0x12
  1705  0032                     	ds	1
  1706  0033                     ___flmul@bexp:
  1707                           
  1708                           ; 1 bytes @ 0x13
  1709  0033                     	ds	1
  1710  0034                     sprintf@c:
  1711  0034                     ___flmul@prod:	
  1712                           ; 1 bytes @ 0x14
  1713                           
  1714                           
  1715                           ; 4 bytes @ 0x14
  1716  0034                     	ds	1
  1717  0035                     ??_DisplayTemp:
  1718                           
  1719                           ; 1 bytes @ 0x15
  1720  0035                     	ds	3
  1721  0038                     ___flmul@temp:
  1722  0038                     DisplayTemp@buffer1:	
  1723                           ; 2 bytes @ 0x18
  1724                           
  1725                           
  1726                           ; 16 bytes @ 0x18
  1727  0038                     	ds	2
  1728  003A                     ?___fladd:
  1729  003A                     ___fladd@b:	
  1730                           ; 4 bytes @ 0x1A
  1731                           
  1732                           
  1733                           ; 4 bytes @ 0x1A
  1734  003A                     	ds	4
  1735  003E                     ___fladd@a:
  1736                           
  1737                           ; 4 bytes @ 0x1E
  1738  003E                     	ds	4
  1739  0042                     ??___fladd:
  1740                           
  1741                           ; 1 bytes @ 0x22
  1742  0042                     	ds	6
  1743  0048                     DisplayTemp@buffer2:
  1744                           
  1745                           ; 16 bytes @ 0x28
  1746  0048                     	ds	2
  1747  004A                     ___fladd@signs:
  1748                           
  1749                           ; 1 bytes @ 0x2A
  1750  004A                     	ds	1
  1751  004B                     ___fladd@aexp:
  1752                           
  1753                           ; 1 bytes @ 0x2B
  1754  004B                     	ds	1
  1755  004C                     ___fladd@bexp:
  1756                           
  1757                           ; 1 bytes @ 0x2C
  1758  004C                     	ds	1
  1759  004D                     ___fladd@grs:
  1760                           
  1761                           ; 1 bytes @ 0x2D
  1762  004D                     	ds	1
  1763  004E                     ?___fltol:
  1764  004E                     ___fltol@f1:	
  1765                           ; 4 bytes @ 0x2E
  1766                           
  1767                           
  1768                           ; 4 bytes @ 0x2E
  1769  004E                     	ds	4
  1770  0052                     ??___fltol:
  1771                           
  1772                           ; 1 bytes @ 0x32
  1773  0052                     	ds	5
  1774  0057                     ___fltol@sign1:
  1775                           
  1776                           ; 1 bytes @ 0x37
  1777  0057                     	ds	1
  1778  0058                     ___fltol@exp1:
  1779                           
  1780                           ; 1 bytes @ 0x38
  1781  0058                     	ds	1
  1782  0059                     ??_Update_Farenheit:
  1783  0059                     ??_Update_Celsius:	
  1784                           ; 1 bytes @ 0x39
  1785                           
  1786                           
  1787                           ; 1 bytes @ 0x39
  1788  0059                     	ds	2
  1789  005B                     _Update_Farenheit$1586:
  1790  005B                     _Update_Celsius$1587:	
  1791                           ; 4 bytes @ 0x3B
  1792                           
  1793                           
  1794                           ; 4 bytes @ 0x3B
  1795  005B                     	ds	4
  1796  005F                     ??_main:
  1797                           
  1798                           ; 1 bytes @ 0x3F
  1799  005F                     	ds	3
  1800                           
  1801                           	psect	maintext
  1802  03AB                     __pmaintext:	
  1803 ;;
  1804 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1805 ;;
  1806 ;; *************** function _main *****************
  1807 ;; Defined at:
  1808 ;;		line 42 in file "interface_main.c"
  1809 ;; Parameters:    Size  Location     Type
  1810 ;;		None
  1811 ;; Auto vars:     Size  Location     Type
  1812 ;;  buffer3        16   32[BANK1 ] unsigned char [16]
  1813 ;;  tmp             2   48[BANK1 ] unsigned int 
  1814 ;;  buffer3        16   16[BANK1 ] unsigned char [16]
  1815 ;;  buffer3        16    0[BANK1 ] unsigned char [16]
  1816 ;;  displayMode     2   50[BANK1 ] short 
  1817 ;; Return value:  Size  Location     Type
  1818 ;;                  1    wreg      void 
  1819 ;; Registers used:
  1820 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1821 ;; Tracked objects:
  1822 ;;		On entry : B00/0
  1823 ;;		On exit  : 0/0
  1824 ;;		Unchanged: 0/0
  1825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1826 ;;      Params:         0       0       0       0       0
  1827 ;;      Locals:         0       0      52       0       0
  1828 ;;      Temps:          0       3       0       0       0
  1829 ;;      Totals:         0       3      52       0       0
  1830 ;;Total ram usage:       55 bytes
  1831 ;; Hardware stack levels required when called: 8
  1832 ;; This function calls:
  1833 ;;		_ChangeBrightness
  1834 ;;		_DisplayTemp
  1835 ;;		_I2C_Init
  1836 ;;		_I2C_Stop
  1837 ;;		_LCD_Clear
  1838 ;;		_LCD_Init
  1839 ;;		_LCD_String_xy
  1840 ;;		_LCD_Write_String
  1841 ;;		_LED_Init
  1842 ;;		_RTC_Calendar_Write
  1843 ;;		_RTC_Clock_Write
  1844 ;;		_RTC_Read_Calendar
  1845 ;;		_RTC_Read_Clock
  1846 ;;		_ReadPhoto
  1847 ;;		_RotaryEncoder_Init
  1848 ;;		_Update_Celsius
  1849 ;;		_Update_Farenheit
  1850 ;;		_sprintf
  1851 ;; This function is called by:
  1852 ;;		Startup code after reset
  1853 ;; This function uses a non-reentrant model
  1854 ;;
  1855                           
  1856  03AB                     _main:	
  1857                           ;psect for function _main
  1858                           
  1859  03AB                     l3592:	
  1860                           ;incstack = 0
  1861                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1862                           
  1863                           
  1864                           ;interface_main.c: 43:     TRISB = 0x0;
  1865  03AB  1683               	bsf	3,5	;RP0=1, select bank1
  1866  03AC  1303               	bcf	3,6	;RP1=0, select bank1
  1867  03AD  0186               	clrf	6	;volatile
  1868                           
  1869                           ;interface_main.c: 44:     TRISC = 0x0;
  1870  03AE  0187               	clrf	7	;volatile
  1871                           
  1872                           ;interface_main.c: 45:     ANSEL = 0x0;
  1873  03AF  1683               	bsf	3,5	;RP0=1, select bank3
  1874  03B0  1703               	bsf	3,6	;RP1=1, select bank3
  1875  03B1  0188               	clrf	8	;volatile
  1876                           
  1877                           ;interface_main.c: 46:     ANSELH = 0x00;
  1878  03B2  0189               	clrf	9	;volatile
  1879  03B3                     l3594:
  1880                           
  1881                           ;interface_main.c: 48:     TRISB = 0b00110000;
  1882  03B3  3030               	movlw	48
  1883  03B4  1683               	bsf	3,5	;RP0=1, select bank1
  1884  03B5  1303               	bcf	3,6	;RP1=0, select bank1
  1885  03B6  0086               	movwf	6	;volatile
  1886  03B7                     l3596:
  1887                           
  1888                           ;interface_main.c: 49:     PORTB = 0b00110000;
  1889  03B7  3030               	movlw	48
  1890  03B8  1283               	bcf	3,5	;RP0=0, select bank0
  1891  03B9  1303               	bcf	3,6	;RP1=0, select bank0
  1892  03BA  0086               	movwf	6	;volatile
  1893                           
  1894                           ;interface_main.c: 50:     TRISE = 0x0;
  1895  03BB  1683               	bsf	3,5	;RP0=1, select bank1
  1896  03BC  1303               	bcf	3,6	;RP1=0, select bank1
  1897  03BD  0189               	clrf	9	;volatile
  1898  03BE                     l3598:
  1899                           
  1900                           ;interface_main.c: 52:     I2C_Init();
  1901  03BE  160A  118A  22CE  120A  118A  	fcall	_I2C_Init
  1902  03C3                     l3600:
  1903                           
  1904                           ;interface_main.c: 53:     LCD_Init();
  1905  03C3  160A  118A  26E1  120A  118A  	fcall	_LCD_Init
  1906  03C8                     l3602:
  1907                           
  1908                           ;interface_main.c: 54:     LED_Init();
  1909  03C8  160A  118A  2253  120A  118A  	fcall	_LED_Init
  1910  03CD                     l3604:
  1911                           
  1912                           ;interface_main.c: 55:     RotaryEncoder_Init();
  1913  03CD  160A  118A  22F8  120A  118A  	fcall	_RotaryEncoder_Init
  1914  03D2                     l3606:
  1915                           
  1916                           ;interface_main.c: 56:     LCD_Clear();
  1917  03D2  160A  118A  2289  120A  118A  	fcall	_LCD_Clear
  1918  03D7                     l3608:
  1919                           
  1920                           ;interface_main.c: 57:     _delay((unsigned long)((10)*(8000000/4000.0)));
  1921  03D7  301A               	movlw	26
  1922  03D8  1283               	bcf	3,5	;RP0=0, select bank0
  1923  03D9  1303               	bcf	3,6	;RP1=0, select bank0
  1924  03DA  00E0               	movwf	??_main+1
  1925  03DB  30F7               	movlw	247
  1926  03DC  00DF               	movwf	??_main
  1927  03DD                     u4397:
  1928  03DD  0BDF               	decfsz	??_main,f
  1929  03DE  2BDD               	goto	u4397
  1930  03DF  0BE0               	decfsz	??_main+1,f
  1931  03E0  2BDD               	goto	u4397
  1932  03E1  2BE2               	nop2
  1933  03E2                     l3610:
  1934                           
  1935                           ;interface_main.c: 59:     RTC_Clock_Write(0x00, 0x14, 0x10, 0x40);
  1936  03E2  3014               	movlw	20
  1937  03E3  1283               	bcf	3,5	;RP0=0, select bank0
  1938  03E4  1303               	bcf	3,6	;RP1=0, select bank0
  1939  03E5  00DF               	movwf	??_main
  1940  03E6  085F               	movf	??_main,w
  1941  03E7  00F2               	movwf	RTC_Clock_Write@min
  1942  03E8  3010               	movlw	16
  1943  03E9  00E0               	movwf	??_main+1
  1944  03EA  0860               	movf	??_main+1,w
  1945  03EB  00F3               	movwf	RTC_Clock_Write@hour
  1946  03EC  3040               	movlw	64
  1947  03ED  00E1               	movwf	??_main+2
  1948  03EE  0861               	movf	??_main+2,w
  1949  03EF  00F4               	movwf	RTC_Clock_Write@AM_PM
  1950  03F0  3000               	movlw	0
  1951  03F1  160A  118A  2405  120A  118A  	fcall	_RTC_Clock_Write
  1952  03F6                     l3612:
  1953                           
  1954                           ;interface_main.c: 60:     RTC_Calendar_Write(0x1, 0x22, 0x04, 0x18);
  1955  03F6  3022               	movlw	34
  1956  03F7  1283               	bcf	3,5	;RP0=0, select bank0
  1957  03F8  1303               	bcf	3,6	;RP1=0, select bank0
  1958  03F9  00DF               	movwf	??_main
  1959  03FA  085F               	movf	??_main,w
  1960  03FB  00F2               	movwf	RTC_Calendar_Write@date
  1961  03FC  3004               	movlw	4
  1962  03FD  00E0               	movwf	??_main+1
  1963  03FE  0860               	movf	??_main+1,w
  1964  03FF  00F3               	movwf	RTC_Calendar_Write@month
  1965  0400  3018               	movlw	24
  1966  0401  00E1               	movwf	??_main+2
  1967  0402  0861               	movf	??_main+2,w
  1968  0403  00F4               	movwf	RTC_Calendar_Write@year
  1969  0404  3001               	movlw	1
  1970  0405  160A  118A  242F  120A  118A  	fcall	_RTC_Calendar_Write
  1971  040A                     l3614:
  1972                           
  1973                           ;interface_main.c: 62:     short int displayMode = 0;
  1974  040A  1683               	bsf	3,5	;RP0=1, select bank1
  1975  040B  1303               	bcf	3,6	;RP1=0, select bank1
  1976  040C  01D2               	clrf	main@displayMode^(0+128)
  1977  040D  01D3               	clrf	(main@displayMode+1)^(0+128)
  1978  040E                     l3616:
  1979                           
  1980                           ;interface_main.c: 66:         LCD_Clear();
  1981  040E  160A  118A  2289  120A  118A  	fcall	_LCD_Clear
  1982  0413                     l3618:
  1983                           
  1984                           ;interface_main.c: 71:         if (displayMode == 0)
  1985  0413  1683               	bsf	3,5	;RP0=1, select bank1
  1986  0414  1303               	bcf	3,6	;RP1=0, select bank1
  1987  0415  0852               	movf	main@displayMode^(0+128),w
  1988  0416  0453               	iorwf	(main@displayMode+1)^(0+128),w
  1989  0417  1D03               	btfss	3,2
  1990  0418  2C1A               	goto	u4111
  1991  0419  2C1B               	goto	u4110
  1992  041A                     u4111:
  1993  041A  2C67               	goto	l3634
  1994  041B                     u4110:
  1995  041B                     l3620:
  1996                           
  1997                           ;interface_main.c: 72:         {;interface_main.c: 73:             char buffer3[16];;int
      +                          erface_main.c: 74:             sprintf(buffer3, "%s", "Hello There");
  1998  041B  30A0               	movlw	(low (main@buffer3| 0))& (0+255)
  1999  041C  1283               	bcf	3,5	;RP0=0, select bank0
  2000  041D  1303               	bcf	3,6	;RP1=0, select bank0
  2001  041E  00A0               	movwf	sprintf@sp
  2002  041F  3000               	movlw	0
  2003  0420  00A1               	movwf	sprintf@sp+1
  2004  0421  3099               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2005  0422  00DF               	movwf	??_main
  2006  0423  085F               	movf	??_main,w
  2007  0424  00A2               	movwf	sprintf@f
  2008  0425  3024               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2009  0426  00A3               	movwf	low ((?_sprintf| 0+3))
  2010  0427  3080               	movlw	128
  2011  0428  00A4               	movwf	(low ((?_sprintf| 0+3))+1)
  2012  0429  120A  158A  2545  120A  118A  	fcall	_sprintf
  2013                           
  2014                           ;interface_main.c: 75:             LCD_String_xy(0,0,buffer3);
  2015  042E  1283               	bcf	3,5	;RP0=0, select bank0
  2016  042F  1303               	bcf	3,6	;RP1=0, select bank0
  2017  0430  01A0               	clrf	LCD_String_xy@pos
  2018  0431  30A0               	movlw	(low (main@buffer3| 0))& (0+255)
  2019  0432  00A1               	movwf	LCD_String_xy@msg
  2020  0433  3000               	movlw	0
  2021  0434  00A2               	movwf	LCD_String_xy@msg+1
  2022  0435  3000               	movlw	0
  2023  0436  160A  118A  245A  120A  118A  	fcall	_LCD_String_xy
  2024  043B                     l3622:
  2025                           
  2026                           ;interface_main.c: 76:             _delay((unsigned long)((100)*(8000000/4000.0)));
  2027  043B  3002               	movlw	2
  2028  043C  1283               	bcf	3,5	;RP0=0, select bank0
  2029  043D  1303               	bcf	3,6	;RP1=0, select bank0
  2030  043E  00E1               	movwf	??_main+2
  2031  043F  3004               	movlw	4
  2032  0440  00E0               	movwf	??_main+1
  2033  0441  30B9               	movlw	185
  2034  0442  00DF               	movwf	??_main
  2035  0443                     u4407:
  2036  0443  0BDF               	decfsz	??_main,f
  2037  0444  2C43               	goto	u4407
  2038  0445  0BE0               	decfsz	??_main+1,f
  2039  0446  2C43               	goto	u4407
  2040  0447  0BE1               	decfsz	??_main+2,f
  2041  0448  2C43               	goto	u4407
  2042  0449  2C4A               	nop2
  2043  044A                     l3624:
  2044                           
  2045                           ;interface_main.c: 78:             if(RE3 == 0 && RB5 == 0)
  2046  044A  1283               	bcf	3,5	;RP0=0, select bank0
  2047  044B  1303               	bcf	3,6	;RP1=0, select bank0
  2048  044C  1989               	btfsc	9,3	;volatile
  2049  044D  2C4F               	goto	u4121
  2050  044E  2C50               	goto	u4120
  2051  044F                     u4121:
  2052  044F  2F9B               	goto	l3800
  2053  0450                     u4120:
  2054  0450                     l3626:
  2055  0450  1A86               	btfsc	6,5	;volatile
  2056  0451  2C53               	goto	u4131
  2057  0452  2C54               	goto	u4130
  2058  0453                     u4131:
  2059  0453  2F9B               	goto	l3800
  2060  0454                     u4130:
  2061  0454                     l331:
  2062  0454  1989               	btfsc	9,3	;volatile
  2063  0455  2C57               	goto	u4141
  2064  0456  2C58               	goto	u4140
  2065  0457                     u4141:
  2066  0457  2C5C               	goto	l3632
  2067  0458                     u4140:
  2068  0458                     l3630:
  2069  0458  1E86               	btfss	6,5	;volatile
  2070  0459  2C5B               	goto	u4151
  2071  045A  2C5C               	goto	u4150
  2072  045B                     u4151:
  2073  045B  2C54               	goto	l331
  2074  045C                     u4150:
  2075  045C                     l3632:
  2076                           
  2077                           ;interface_main.c: 81:                 displayMode = displayMode+1;
  2078  045C  1683               	bsf	3,5	;RP0=1, select bank1
  2079  045D  1303               	bcf	3,6	;RP1=0, select bank1
  2080  045E  0852               	movf	main@displayMode^(0+128),w
  2081  045F  3E01               	addlw	1
  2082  0460  00D2               	movwf	main@displayMode^(0+128)
  2083  0461  0853               	movf	(main@displayMode+1)^(0+128),w
  2084  0462  1803               	skipnc
  2085  0463  3E01               	addlw	1
  2086  0464  3E00               	addlw	0
  2087  0465  00D3               	movwf	(main@displayMode+1)^(0+128)
  2088  0466  2F9B               	goto	l3800
  2089  0467                     l3634:
  2090  0467  0352               	decf	main@displayMode^(0+128),w
  2091  0468  0453               	iorwf	(main@displayMode+1)^(0+128),w
  2092  0469  1D03               	btfss	3,2
  2093  046A  2C6C               	goto	u4161
  2094  046B  2C6D               	goto	u4160
  2095  046C                     u4161:
  2096  046C  2E92               	goto	l3722
  2097  046D                     u4160:
  2098  046D                     l3636:
  2099                           
  2100                           ;interface_main.c: 86:         {;interface_main.c: 87:             RTC_Read_Clock(0);
  2101  046D  3000               	movlw	0
  2102  046E  160A  118A  24F8  120A  118A  	fcall	_RTC_Read_Clock
  2103                           
  2104                           ;interface_main.c: 88:             I2C_Stop();
  2105  0473  160A  118A  226E  120A  118A  	fcall	_I2C_Stop
  2106  0478                     l3638:
  2107                           
  2108                           ;interface_main.c: 89:             if(hour & (1<<Clock_type)){
  2109  0478  1683               	bsf	3,5	;RP0=1, select bank1
  2110  0479  1303               	bcf	3,6	;RP1=0, select bank1
  2111  047A  1F5E               	btfss	_hour^(0+128),6
  2112  047B  2C7D               	goto	u4171
  2113  047C  2C7E               	goto	u4170
  2114  047D                     u4171:
  2115  047D  2D1C               	goto	l3660
  2116  047E                     u4170:
  2117  047E                     l3640:
  2118                           
  2119                           ;interface_main.c: 91:                 if(hour & (1<<AM_PM)){
  2120  047E  1EDE               	btfss	_hour^(0+128),5
  2121  047F  2C81               	goto	u4181
  2122  0480  2C82               	goto	u4180
  2123  0481                     u4181:
  2124  0481  2C93               	goto	l3644
  2125  0482                     u4180:
  2126  0482                     l3642:
  2127                           
  2128                           ;interface_main.c: 92:                     LCD_String_xy(1,13,"PM");
  2129  0482  300D               	movlw	13
  2130  0483  1283               	bcf	3,5	;RP0=0, select bank0
  2131  0484  1303               	bcf	3,6	;RP1=0, select bank0
  2132  0485  00DF               	movwf	??_main
  2133  0486  085F               	movf	??_main,w
  2134  0487  00A0               	movwf	LCD_String_xy@pos
  2135  0488  3096               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2136  0489  00A1               	movwf	LCD_String_xy@msg
  2137  048A  3080               	movlw	128
  2138  048B  00A2               	movwf	LCD_String_xy@msg+1
  2139  048C  3001               	movlw	1
  2140  048D  160A  118A  245A  120A  118A  	fcall	_LCD_String_xy
  2141                           
  2142                           ;interface_main.c: 93:                 }
  2143  0492  2CA3               	goto	l3646
  2144  0493                     l3644:
  2145                           
  2146                           ;interface_main.c: 95:                     LCD_String_xy(1,13,"AM");
  2147  0493  300D               	movlw	13
  2148  0494  1283               	bcf	3,5	;RP0=0, select bank0
  2149  0495  1303               	bcf	3,6	;RP1=0, select bank0
  2150  0496  00DF               	movwf	??_main
  2151  0497  085F               	movf	??_main,w
  2152  0498  00A0               	movwf	LCD_String_xy@pos
  2153  0499  3093               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2154  049A  00A1               	movwf	LCD_String_xy@msg
  2155  049B  3080               	movlw	128
  2156  049C  00A2               	movwf	LCD_String_xy@msg+1
  2157  049D  3001               	movlw	1
  2158  049E  160A  118A  245A  120A  118A  	fcall	_LCD_String_xy
  2159  04A3                     l3646:
  2160                           
  2161                           ;interface_main.c: 98:                 hour = hour & (0x1f);
  2162  04A3  301F               	movlw	31
  2163  04A4  1683               	bsf	3,5	;RP0=1, select bank1
  2164  04A5  1303               	bcf	3,6	;RP1=0, select bank1
  2165  04A6  055E               	andwf	_hour^(0+128),w
  2166  04A7  00DE               	movwf	_hour^(0+128)
  2167  04A8  3000               	movlw	0
  2168  04A9  055F               	andwf	(_hour+1)^(0+128),w
  2169  04AA  00DF               	movwf	(_hour+1)^(0+128)
  2170  04AB                     l3648:
  2171                           
  2172                           ;interface_main.c: 99:                 sprintf(secs,"%x ",sec);
  2173  04AB  30C2               	movlw	(low (_secs| (0+256)))& (0+255)
  2174  04AC  1283               	bcf	3,5	;RP0=0, select bank0
  2175  04AD  1303               	bcf	3,6	;RP1=0, select bank0
  2176  04AE  00A0               	movwf	sprintf@sp
  2177  04AF  3001               	movlw	1
  2178  04B0  00A1               	movwf	sprintf@sp+1
  2179  04B1  306F               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2180  04B2  00DF               	movwf	??_main
  2181  04B3  085F               	movf	??_main,w
  2182  04B4  00A2               	movwf	sprintf@f
  2183  04B5  1683               	bsf	3,5	;RP0=1, select bank1
  2184  04B6  1303               	bcf	3,6	;RP1=0, select bank1
  2185  04B7  0863               	movf	(_sec+1)^(0+128),w
  2186  04B8  1283               	bcf	3,5	;RP0=0, select bank0
  2187  04B9  1303               	bcf	3,6	;RP1=0, select bank0
  2188  04BA  00A4               	movwf	?_sprintf+4
  2189  04BB  1683               	bsf	3,5	;RP0=1, select bank1
  2190  04BC  1303               	bcf	3,6	;RP1=0, select bank1
  2191  04BD  0862               	movf	_sec^(0+128),w
  2192  04BE  1283               	bcf	3,5	;RP0=0, select bank0
  2193  04BF  1303               	bcf	3,6	;RP1=0, select bank0
  2194  04C0  00A3               	movwf	?_sprintf+3
  2195  04C1  120A  158A  2545  120A  118A  	fcall	_sprintf
  2196  04C6                     l3650:
  2197                           
  2198                           ;interface_main.c: 100:                 sprintf(mins,"%x:",min);
  2199  04C6  30B8               	movlw	(low (_mins| (0+256)))& (0+255)
  2200  04C7  1283               	bcf	3,5	;RP0=0, select bank0
  2201  04C8  1303               	bcf	3,6	;RP1=0, select bank0
  2202  04C9  00A0               	movwf	sprintf@sp
  2203  04CA  3001               	movlw	1
  2204  04CB  00A1               	movwf	sprintf@sp+1
  2205  04CC  3064               	movlw	(low (((STR_9+4)-__stringbase)| (0+32768)))& (0+255)
  2206  04CD  00DF               	movwf	??_main
  2207  04CE  085F               	movf	??_main,w
  2208  04CF  00A2               	movwf	sprintf@f
  2209  04D0  1683               	bsf	3,5	;RP0=1, select bank1
  2210  04D1  1303               	bcf	3,6	;RP1=0, select bank1
  2211  04D2  0861               	movf	(_min+1)^(0+128),w
  2212  04D3  1283               	bcf	3,5	;RP0=0, select bank0
  2213  04D4  1303               	bcf	3,6	;RP1=0, select bank0
  2214  04D5  00A4               	movwf	?_sprintf+4
  2215  04D6  1683               	bsf	3,5	;RP0=1, select bank1
  2216  04D7  1303               	bcf	3,6	;RP1=0, select bank1
  2217  04D8  0860               	movf	_min^(0+128),w
  2218  04D9  1283               	bcf	3,5	;RP0=0, select bank0
  2219  04DA  1303               	bcf	3,6	;RP1=0, select bank0
  2220  04DB  00A3               	movwf	?_sprintf+3
  2221  04DC  120A  158A  2545  120A  118A  	fcall	_sprintf
  2222  04E1                     l3652:
  2223                           
  2224                           ;interface_main.c: 101:                 sprintf(hours,"Tim:%x:",hour);
  2225  04E1  30AE               	movlw	(low (_hours| (0+256)))& (0+255)
  2226  04E2  1283               	bcf	3,5	;RP0=0, select bank0
  2227  04E3  1303               	bcf	3,6	;RP1=0, select bank0
  2228  04E4  00A0               	movwf	sprintf@sp
  2229  04E5  3001               	movlw	1
  2230  04E6  00A1               	movwf	sprintf@sp+1
  2231  04E7  3060               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  2232  04E8  00DF               	movwf	??_main
  2233  04E9  085F               	movf	??_main,w
  2234  04EA  00A2               	movwf	sprintf@f
  2235  04EB  1683               	bsf	3,5	;RP0=1, select bank1
  2236  04EC  1303               	bcf	3,6	;RP1=0, select bank1
  2237  04ED  085F               	movf	(_hour+1)^(0+128),w
  2238  04EE  1283               	bcf	3,5	;RP0=0, select bank0
  2239  04EF  1303               	bcf	3,6	;RP1=0, select bank0
  2240  04F0  00A4               	movwf	?_sprintf+4
  2241  04F1  1683               	bsf	3,5	;RP0=1, select bank1
  2242  04F2  1303               	bcf	3,6	;RP1=0, select bank1
  2243  04F3  085E               	movf	_hour^(0+128),w
  2244  04F4  1283               	bcf	3,5	;RP0=0, select bank0
  2245  04F5  1303               	bcf	3,6	;RP1=0, select bank0
  2246  04F6  00A3               	movwf	?_sprintf+3
  2247  04F7  120A  158A  2545  120A  118A  	fcall	_sprintf
  2248  04FC                     l3654:
  2249                           
  2250                           ;interface_main.c: 102:                 LCD_String_xy(0,0,hours);
  2251  04FC  1283               	bcf	3,5	;RP0=0, select bank0
  2252  04FD  1303               	bcf	3,6	;RP1=0, select bank0
  2253  04FE  01A0               	clrf	LCD_String_xy@pos
  2254  04FF  30AE               	movlw	(low (_hours| (0+256)))& (0+255)
  2255  0500  00A1               	movwf	LCD_String_xy@msg
  2256  0501  3001               	movlw	1
  2257  0502  00A2               	movwf	LCD_String_xy@msg+1
  2258  0503  3000               	movlw	0
  2259  0504  160A  118A  245A  120A  118A  	fcall	_LCD_String_xy
  2260  0509                     l3656:
  2261                           
  2262                           ;interface_main.c: 103:                 LCD_Write_String(mins);
  2263  0509  30B8               	movlw	(low (_mins| (0+256)))& (0+255)
  2264  050A  00F7               	movwf	LCD_Write_String@Str
  2265  050B  3001               	movlw	1
  2266  050C  00F8               	movwf	LCD_Write_String@Str+1
  2267  050D  160A  118A  2574  120A  118A  	fcall	_LCD_Write_String
  2268  0512                     l3658:
  2269                           
  2270                           ;interface_main.c: 104:                 LCD_Write_String(secs);
  2271  0512  30C2               	movlw	(low (_secs| (0+256)))& (0+255)
  2272  0513  00F7               	movwf	LCD_Write_String@Str
  2273  0514  3001               	movlw	1
  2274  0515  00F8               	movwf	LCD_Write_String@Str+1
  2275  0516  160A  118A  2574  120A  118A  	fcall	_LCD_Write_String
  2276                           
  2277                           ;interface_main.c: 105:             }
  2278  051B  2D81               	goto	l3674
  2279  051C                     l3660:
  2280                           
  2281                           ;interface_main.c: 108:                 hour = hour & (0x3f);
  2282  051C  303F               	movlw	63
  2283  051D  055E               	andwf	_hour^(0+128),w
  2284  051E  00DE               	movwf	_hour^(0+128)
  2285  051F  3000               	movlw	0
  2286  0520  055F               	andwf	(_hour+1)^(0+128),w
  2287  0521  00DF               	movwf	(_hour+1)^(0+128)
  2288  0522                     l3662:
  2289                           
  2290                           ;interface_main.c: 109:                 sprintf(secs,"%x ",sec);
  2291  0522  30C2               	movlw	(low (_secs| (0+256)))& (0+255)
  2292  0523  1283               	bcf	3,5	;RP0=0, select bank0
  2293  0524  1303               	bcf	3,6	;RP1=0, select bank0
  2294  0525  00A0               	movwf	sprintf@sp
  2295  0526  3001               	movlw	1
  2296  0527  00A1               	movwf	sprintf@sp+1
  2297  0528  306F               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2298  0529  00DF               	movwf	??_main
  2299  052A  085F               	movf	??_main,w
  2300  052B  00A2               	movwf	sprintf@f
  2301  052C  1683               	bsf	3,5	;RP0=1, select bank1
  2302  052D  1303               	bcf	3,6	;RP1=0, select bank1
  2303  052E  0863               	movf	(_sec+1)^(0+128),w
  2304  052F  1283               	bcf	3,5	;RP0=0, select bank0
  2305  0530  1303               	bcf	3,6	;RP1=0, select bank0
  2306  0531  00A4               	movwf	?_sprintf+4
  2307  0532  1683               	bsf	3,5	;RP0=1, select bank1
  2308  0533  1303               	bcf	3,6	;RP1=0, select bank1
  2309  0534  0862               	movf	_sec^(0+128),w
  2310  0535  1283               	bcf	3,5	;RP0=0, select bank0
  2311  0536  1303               	bcf	3,6	;RP1=0, select bank0
  2312  0537  00A3               	movwf	?_sprintf+3
  2313  0538  120A  158A  2545  120A  118A  	fcall	_sprintf
  2314  053D                     l3664:
  2315                           
  2316                           ;interface_main.c: 110:                 sprintf(mins,"%x:",min);
  2317  053D  30B8               	movlw	(low (_mins| (0+256)))& (0+255)
  2318  053E  1283               	bcf	3,5	;RP0=0, select bank0
  2319  053F  1303               	bcf	3,6	;RP1=0, select bank0
  2320  0540  00A0               	movwf	sprintf@sp
  2321  0541  3001               	movlw	1
  2322  0542  00A1               	movwf	sprintf@sp+1
  2323  0543  3064               	movlw	(low (((STR_9+4)-__stringbase)| (0+32768)))& (0+255)
  2324  0544  00DF               	movwf	??_main
  2325  0545  085F               	movf	??_main,w
  2326  0546  00A2               	movwf	sprintf@f
  2327  0547  1683               	bsf	3,5	;RP0=1, select bank1
  2328  0548  1303               	bcf	3,6	;RP1=0, select bank1
  2329  0549  0861               	movf	(_min+1)^(0+128),w
  2330  054A  1283               	bcf	3,5	;RP0=0, select bank0
  2331  054B  1303               	bcf	3,6	;RP1=0, select bank0
  2332  054C  00A4               	movwf	?_sprintf+4
  2333  054D  1683               	bsf	3,5	;RP0=1, select bank1
  2334  054E  1303               	bcf	3,6	;RP1=0, select bank1
  2335  054F  0860               	movf	_min^(0+128),w
  2336  0550  1283               	bcf	3,5	;RP0=0, select bank0
  2337  0551  1303               	bcf	3,6	;RP1=0, select bank0
  2338  0552  00A3               	movwf	?_sprintf+3
  2339  0553  120A  158A  2545  120A  118A  	fcall	_sprintf
  2340  0558                     l3666:
  2341                           
  2342                           ;interface_main.c: 111:                 sprintf(hours,"Tim:%x:",hour);
  2343  0558  30AE               	movlw	(low (_hours| (0+256)))& (0+255)
  2344  0559  1283               	bcf	3,5	;RP0=0, select bank0
  2345  055A  1303               	bcf	3,6	;RP1=0, select bank0
  2346  055B  00A0               	movwf	sprintf@sp
  2347  055C  3001               	movlw	1
  2348  055D  00A1               	movwf	sprintf@sp+1
  2349  055E  3060               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  2350  055F  00DF               	movwf	??_main
  2351  0560  085F               	movf	??_main,w
  2352  0561  00A2               	movwf	sprintf@f
  2353  0562  1683               	bsf	3,5	;RP0=1, select bank1
  2354  0563  1303               	bcf	3,6	;RP1=0, select bank1
  2355  0564  085F               	movf	(_hour+1)^(0+128),w
  2356  0565  1283               	bcf	3,5	;RP0=0, select bank0
  2357  0566  1303               	bcf	3,6	;RP1=0, select bank0
  2358  0567  00A4               	movwf	?_sprintf+4
  2359  0568  1683               	bsf	3,5	;RP0=1, select bank1
  2360  0569  1303               	bcf	3,6	;RP1=0, select bank1
  2361  056A  085E               	movf	_hour^(0+128),w
  2362  056B  1283               	bcf	3,5	;RP0=0, select bank0
  2363  056C  1303               	bcf	3,6	;RP1=0, select bank0
  2364  056D  00A3               	movwf	?_sprintf+3
  2365  056E  120A  158A  2545  120A  118A  	fcall	_sprintf
  2366  0573                     l3668:
  2367                           
  2368                           ;interface_main.c: 112:                 LCD_String_xy(0,0,hours);
  2369  0573  1283               	bcf	3,5	;RP0=0, select bank0
  2370  0574  1303               	bcf	3,6	;RP1=0, select bank0
  2371  0575  01A0               	clrf	LCD_String_xy@pos
  2372  0576  30AE               	movlw	(low (_hours| (0+256)))& (0+255)
  2373  0577  00A1               	movwf	LCD_String_xy@msg
  2374  0578  3001               	movlw	1
  2375  0579  00A2               	movwf	LCD_String_xy@msg+1
  2376  057A  3000               	movlw	0
  2377  057B  160A  118A  245A  120A  118A  	fcall	_LCD_String_xy
  2378  0580  2D09               	goto	l3656
  2379  0581                     l3674:
  2380                           
  2381                           ;interface_main.c: 117:             RTC_Read_Calendar(3);
  2382  0581  3003               	movlw	3
  2383  0582  160A  118A  25B6  120A  118A  	fcall	_RTC_Read_Calendar
  2384  0587                     l3676:
  2385                           
  2386                           ;interface_main.c: 118:             I2C_Stop();
  2387  0587  160A  118A  226E  120A  118A  	fcall	_I2C_Stop
  2388  058C                     l3678:
  2389                           
  2390                           ;interface_main.c: 119:             sprintf(date,"Cal:%x-",Date);
  2391  058C  30A4               	movlw	(low (_date| (0+256)))& (0+255)
  2392  058D  1283               	bcf	3,5	;RP0=0, select bank0
  2393  058E  1303               	bcf	3,6	;RP1=0, select bank0
  2394  058F  00A0               	movwf	sprintf@sp
  2395  0590  3001               	movlw	1
  2396  0591  00A1               	movwf	sprintf@sp+1
  2397  0592  3058               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  2398  0593  00DF               	movwf	??_main
  2399  0594  085F               	movf	??_main,w
  2400  0595  00A2               	movwf	sprintf@f
  2401  0596  1683               	bsf	3,5	;RP0=1, select bank1
  2402  0597  1303               	bcf	3,6	;RP1=0, select bank1
  2403  0598  085B               	movf	(_Date+1)^(0+128),w
  2404  0599  1283               	bcf	3,5	;RP0=0, select bank0
  2405  059A  1303               	bcf	3,6	;RP1=0, select bank0
  2406  059B  00A4               	movwf	?_sprintf+4
  2407  059C  1683               	bsf	3,5	;RP0=1, select bank1
  2408  059D  1303               	bcf	3,6	;RP1=0, select bank1
  2409  059E  085A               	movf	_Date^(0+128),w
  2410  059F  1283               	bcf	3,5	;RP0=0, select bank0
  2411  05A0  1303               	bcf	3,6	;RP1=0, select bank0
  2412  05A1  00A3               	movwf	?_sprintf+3
  2413  05A2  120A  158A  2545  120A  118A  	fcall	_sprintf
  2414  05A7                     l3680:
  2415                           
  2416                           ;interface_main.c: 120:             sprintf(month,"%x-",Month);
  2417  05A7  309A               	movlw	(low (_month| (0+256)))& (0+255)
  2418  05A8  1283               	bcf	3,5	;RP0=0, select bank0
  2419  05A9  1303               	bcf	3,6	;RP1=0, select bank0
  2420  05AA  00A0               	movwf	sprintf@sp
  2421  05AB  3001               	movlw	1
  2422  05AC  00A1               	movwf	sprintf@sp+1
  2423  05AD  305C               	movlw	(low (((STR_13+4)-__stringbase)| (0+32768)))& (0+255)
  2424  05AE  00DF               	movwf	??_main
  2425  05AF  085F               	movf	??_main,w
  2426  05B0  00A2               	movwf	sprintf@f
  2427  05B1  1683               	bsf	3,5	;RP0=1, select bank1
  2428  05B2  1303               	bcf	3,6	;RP1=0, select bank1
  2429  05B3  0859               	movf	(_Month+1)^(0+128),w
  2430  05B4  1283               	bcf	3,5	;RP0=0, select bank0
  2431  05B5  1303               	bcf	3,6	;RP1=0, select bank0
  2432  05B6  00A4               	movwf	?_sprintf+4
  2433  05B7  1683               	bsf	3,5	;RP0=1, select bank1
  2434  05B8  1303               	bcf	3,6	;RP1=0, select bank1
  2435  05B9  0858               	movf	_Month^(0+128),w
  2436  05BA  1283               	bcf	3,5	;RP0=0, select bank0
  2437  05BB  1303               	bcf	3,6	;RP1=0, select bank0
  2438  05BC  00A3               	movwf	?_sprintf+3
  2439  05BD  120A  158A  2545  120A  118A  	fcall	_sprintf
  2440  05C2                     l3682:
  2441                           
  2442                           ;interface_main.c: 121:             sprintf(year,"%x ",Year);
  2443  05C2  3090               	movlw	(low (_year| (0+256)))& (0+255)
  2444  05C3  1283               	bcf	3,5	;RP0=0, select bank0
  2445  05C4  1303               	bcf	3,6	;RP1=0, select bank0
  2446  05C5  00A0               	movwf	sprintf@sp
  2447  05C6  3001               	movlw	1
  2448  05C7  00A1               	movwf	sprintf@sp+1
  2449  05C8  306F               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2450  05C9  00DF               	movwf	??_main
  2451  05CA  085F               	movf	??_main,w
  2452  05CB  00A2               	movwf	sprintf@f
  2453  05CC  1683               	bsf	3,5	;RP0=1, select bank1
  2454  05CD  1303               	bcf	3,6	;RP1=0, select bank1
  2455  05CE  0857               	movf	(_Year+1)^(0+128),w
  2456  05CF  1283               	bcf	3,5	;RP0=0, select bank0
  2457  05D0  1303               	bcf	3,6	;RP1=0, select bank0
  2458  05D1  00A4               	movwf	?_sprintf+4
  2459  05D2  1683               	bsf	3,5	;RP0=1, select bank1
  2460  05D3  1303               	bcf	3,6	;RP1=0, select bank1
  2461  05D4  0856               	movf	_Year^(0+128),w
  2462  05D5  1283               	bcf	3,5	;RP0=0, select bank0
  2463  05D6  1303               	bcf	3,6	;RP1=0, select bank0
  2464  05D7  00A3               	movwf	?_sprintf+3
  2465  05D8  120A  158A  2545  120A  118A  	fcall	_sprintf
  2466  05DD                     l3684:
  2467                           
  2468                           ;interface_main.c: 122:             LCD_String_xy(2,0,date);
  2469  05DD  1283               	bcf	3,5	;RP0=0, select bank0
  2470  05DE  1303               	bcf	3,6	;RP1=0, select bank0
  2471  05DF  01A0               	clrf	LCD_String_xy@pos
  2472  05E0  30A4               	movlw	(low (_date| (0+256)))& (0+255)
  2473  05E1  00A1               	movwf	LCD_String_xy@msg
  2474  05E2  3001               	movlw	1
  2475  05E3  00A2               	movwf	LCD_String_xy@msg+1
  2476  05E4  3002               	movlw	2
  2477  05E5  160A  118A  245A  120A  118A  	fcall	_LCD_String_xy
  2478  05EA                     l3686:
  2479                           
  2480                           ;interface_main.c: 123:             LCD_Write_String(month);
  2481  05EA  309A               	movlw	(low (_month| (0+256)))& (0+255)
  2482  05EB  00F7               	movwf	LCD_Write_String@Str
  2483  05EC  3001               	movlw	1
  2484  05ED  00F8               	movwf	LCD_Write_String@Str+1
  2485  05EE  160A  118A  2574  120A  118A  	fcall	_LCD_Write_String
  2486  05F3                     l3688:
  2487                           
  2488                           ;interface_main.c: 124:             LCD_Write_String(year);
  2489  05F3  3090               	movlw	(low (_year| (0+256)))& (0+255)
  2490  05F4  00F7               	movwf	LCD_Write_String@Str
  2491  05F5  3001               	movlw	1
  2492  05F6  00F8               	movwf	LCD_Write_String@Str+1
  2493  05F7  160A  118A  2574  120A  118A  	fcall	_LCD_Write_String
  2494                           
  2495                           ;interface_main.c: 127:             switch(days[Day])
  2496  05FC  2E4D               	goto	l3708
  2497  05FD                     l3690:
  2498                           
  2499                           ;interface_main.c: 130:                         LCD_Write_String("Sun");
  2500  05FD  3083               	movlw	(low ((STR_16-__stringbase)| (0+32768)))& (0+255)
  2501  05FE  00F7               	movwf	LCD_Write_String@Str
  2502  05FF  3080               	movlw	128
  2503  0600  00F8               	movwf	LCD_Write_String@Str+1
  2504  0601  160A  118A  2574  120A  118A  	fcall	_LCD_Write_String
  2505                           
  2506                           ;interface_main.c: 131:                         break;
  2507  0606  2E74               	goto	l3710
  2508  0607                     l3692:
  2509                           
  2510                           ;interface_main.c: 133:                         LCD_Write_String("Mon");
  2511  0607  307F               	movlw	(low ((STR_17-__stringbase)| (0+32768)))& (0+255)
  2512  0608  00F7               	movwf	LCD_Write_String@Str
  2513  0609  3080               	movlw	128
  2514  060A  00F8               	movwf	LCD_Write_String@Str+1
  2515  060B  160A  118A  2574  120A  118A  	fcall	_LCD_Write_String
  2516                           
  2517                           ;interface_main.c: 134:                         break;
  2518  0610  2E74               	goto	l3710
  2519  0611                     l3694:
  2520                           
  2521                           ;interface_main.c: 136:                         LCD_Write_String("Tue");
  2522  0611  3077               	movlw	(low ((STR_18-__stringbase)| (0+32768)))& (0+255)
  2523  0612  00F7               	movwf	LCD_Write_String@Str
  2524  0613  3080               	movlw	128
  2525  0614  00F8               	movwf	LCD_Write_String@Str+1
  2526  0615  160A  118A  2574  120A  118A  	fcall	_LCD_Write_String
  2527                           
  2528                           ;interface_main.c: 137:                         break;
  2529  061A  2E74               	goto	l3710
  2530  061B                     l3696:
  2531                           
  2532                           ;interface_main.c: 139:                         LCD_Write_String("Wed");
  2533  061B  3073               	movlw	(low ((STR_19-__stringbase)| (0+32768)))& (0+255)
  2534  061C  00F7               	movwf	LCD_Write_String@Str
  2535  061D  3080               	movlw	128
  2536  061E  00F8               	movwf	LCD_Write_String@Str+1
  2537  061F  160A  118A  2574  120A  118A  	fcall	_LCD_Write_String
  2538                           
  2539                           ;interface_main.c: 140:                         break;
  2540  0624  2E74               	goto	l3710
  2541  0625                     l3698:
  2542                           
  2543                           ;interface_main.c: 142:                         LCD_Write_String("Thu");
  2544  0625  308B               	movlw	(low ((STR_20-__stringbase)| (0+32768)))& (0+255)
  2545  0626  00F7               	movwf	LCD_Write_String@Str
  2546  0627  3080               	movlw	128
  2547  0628  00F8               	movwf	LCD_Write_String@Str+1
  2548  0629  160A  118A  2574  120A  118A  	fcall	_LCD_Write_String
  2549                           
  2550                           ;interface_main.c: 143:                         break;
  2551  062E  2E74               	goto	l3710
  2552  062F                     l3700:
  2553                           
  2554                           ;interface_main.c: 145:                         LCD_Write_String("Fri");
  2555  062F  307B               	movlw	(low ((STR_21-__stringbase)| (0+32768)))& (0+255)
  2556  0630  00F7               	movwf	LCD_Write_String@Str
  2557  0631  3080               	movlw	128
  2558  0632  00F8               	movwf	LCD_Write_String@Str+1
  2559  0633  160A  118A  2574  120A  118A  	fcall	_LCD_Write_String
  2560                           
  2561                           ;interface_main.c: 146:                         break;
  2562  0638  2E74               	goto	l3710
  2563  0639                     l3702:
  2564                           
  2565                           ;interface_main.c: 148:                         LCD_Write_String("Sat");
  2566  0639  3087               	movlw	(low ((STR_22-__stringbase)| (0+32768)))& (0+255)
  2567  063A  00F7               	movwf	LCD_Write_String@Str
  2568  063B  3080               	movlw	128
  2569  063C  00F8               	movwf	LCD_Write_String@Str+1
  2570  063D  160A  118A  2574  120A  118A  	fcall	_LCD_Write_String
  2571                           
  2572                           ;interface_main.c: 149:                         break;
  2573  0642  2E74               	goto	l3710
  2574  0643                     l3704:
  2575                           
  2576                           ;interface_main.c: 151:                         LCD_Write_String("Inv");
  2577  0643  308F               	movlw	(low ((STR_23-__stringbase)| (0+32768)))& (0+255)
  2578  0644  00F7               	movwf	LCD_Write_String@Str
  2579  0645  3080               	movlw	128
  2580  0646  00F8               	movwf	LCD_Write_String@Str+1
  2581  0647  160A  118A  2574  120A  118A  	fcall	_LCD_Write_String
  2582                           
  2583                           ;interface_main.c: 152:                         break;
  2584  064C  2E74               	goto	l3710
  2585  064D                     l3708:
  2586  064D  1683               	bsf	3,5	;RP0=1, select bank1
  2587  064E  1303               	bcf	3,6	;RP1=0, select bank1
  2588  064F  085C               	movf	_Day^(0+128),w
  2589  0650  3ECC               	addlw	(low (_days| (0+256)))& (0+255)
  2590  0651  0084               	movwf	4
  2591  0652  1783               	bsf	3,7	;select IRP bank3
  2592  0653  0800               	movf	0,w
  2593  0654  1283               	bcf	3,5	;RP0=0, select bank0
  2594  0655  1303               	bcf	3,6	;RP1=0, select bank0
  2595  0656  00DF               	movwf	??_main
  2596  0657  01E0               	clrf	??_main+1
  2597                           
  2598                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2599                           ; Switch size 1, requested type "simple"
  2600                           ; Number of cases is 1, Range of values is 0 to 0
  2601                           ; switch strategies available:
  2602                           ; Name         Instructions Cycles
  2603                           ; simple_byte            4     3 (average)
  2604                           ; direct_byte           11     8 (fixed)
  2605                           ; jumptable            260     6 (fixed)
  2606                           ;	Chosen strategy is simple_byte
  2607  0658  0860               	movf	??_main+1,w
  2608  0659  3A00               	xorlw	0	; case 0
  2609  065A  1903               	skipnz
  2610  065B  2E5D               	goto	l3980
  2611  065C  2E43               	goto	l3704
  2612  065D                     l3980:
  2613                           
  2614                           ; Switch size 1, requested type "simple"
  2615                           ; Number of cases is 7, Range of values is 70 to 116
  2616                           ; switch strategies available:
  2617                           ; Name         Instructions Cycles
  2618                           ; simple_byte           22    12 (average)
  2619                           ; direct_byte          152    11 (fixed)
  2620                           ; jumptable            263     9 (fixed)
  2621                           ;	Chosen strategy is simple_byte
  2622  065D  085F               	movf	??_main,w
  2623  065E  3A46               	xorlw	70	; case 70
  2624  065F  1903               	skipnz
  2625  0660  2E2F               	goto	l3700
  2626  0661  3A0B               	xorlw	11	; case 77
  2627  0662  1903               	skipnz
  2628  0663  2E07               	goto	l3692
  2629  0664  3A1E               	xorlw	30	; case 83
  2630  0665  1903               	skipnz
  2631  0666  2DFD               	goto	l3690
  2632  0667  3A07               	xorlw	7	; case 84
  2633  0668  1903               	skipnz
  2634  0669  2E11               	goto	l3694
  2635  066A  3A03               	xorlw	3	; case 87
  2636  066B  1903               	skipnz
  2637  066C  2E1B               	goto	l3696
  2638  066D  3A24               	xorlw	36	; case 115
  2639  066E  1903               	skipnz
  2640  066F  2E39               	goto	l3702
  2641  0670  3A07               	xorlw	7	; case 116
  2642  0671  1903               	skipnz
  2643  0672  2E25               	goto	l3698
  2644  0673  2E43               	goto	l3704
  2645  0674                     l3710:
  2646                           
  2647                           ;interface_main.c: 156:             _delay((unsigned long)((10)*(8000000/4000.0)));
  2648  0674  301A               	movlw	26
  2649  0675  1283               	bcf	3,5	;RP0=0, select bank0
  2650  0676  1303               	bcf	3,6	;RP1=0, select bank0
  2651  0677  00E0               	movwf	??_main+1
  2652  0678  30F7               	movlw	247
  2653  0679  00DF               	movwf	??_main
  2654  067A                     u4417:
  2655  067A  0BDF               	decfsz	??_main,f
  2656  067B  2E7A               	goto	u4417
  2657  067C  0BE0               	decfsz	??_main+1,f
  2658  067D  2E7A               	goto	u4417
  2659  067E  2E7F               	nop2
  2660  067F                     l3712:
  2661                           
  2662                           ;interface_main.c: 158:             if(RE3 == 0 && RB5 == 0)
  2663  067F  1283               	bcf	3,5	;RP0=0, select bank0
  2664  0680  1303               	bcf	3,6	;RP1=0, select bank0
  2665  0681  1989               	btfsc	9,3	;volatile
  2666  0682  2E84               	goto	u4191
  2667  0683  2E85               	goto	u4190
  2668  0684                     u4191:
  2669  0684  2F9B               	goto	l3800
  2670  0685                     u4190:
  2671  0685                     l3714:
  2672  0685  1A86               	btfsc	6,5	;volatile
  2673  0686  2E88               	goto	u4201
  2674  0687  2E89               	goto	u4200
  2675  0688                     u4201:
  2676  0688  2F9B               	goto	l3800
  2677  0689                     u4200:
  2678  0689                     l353:
  2679  0689  1989               	btfsc	9,3	;volatile
  2680  068A  2E8C               	goto	u4211
  2681  068B  2E8D               	goto	u4210
  2682  068C                     u4211:
  2683  068C  2C5C               	goto	l3632
  2684  068D                     u4210:
  2685  068D                     l3718:
  2686  068D  1E86               	btfss	6,5	;volatile
  2687  068E  2E90               	goto	u4221
  2688  068F  2E91               	goto	u4220
  2689  0690                     u4221:
  2690  0690  2E89               	goto	l353
  2691  0691                     u4220:
  2692  0691  2C5C               	goto	l3632
  2693  0692                     l3722:
  2694  0692  3002               	movlw	2
  2695  0693  0652               	xorwf	main@displayMode^(0+128),w
  2696  0694  0453               	iorwf	(main@displayMode+1)^(0+128),w
  2697  0695  1D03               	btfss	3,2
  2698  0696  2E98               	goto	u4231
  2699  0697  2E99               	goto	u4230
  2700  0698                     u4231:
  2701  0698  2ED4               	goto	l3756
  2702  0699                     u4230:
  2703  0699                     l3724:
  2704                           
  2705                           ;interface_main.c: 166:         {;interface_main.c: 168:             ANSELbits.ANS3 = 1;
  2706  0699  1683               	bsf	3,5	;RP0=1, select bank3
  2707  069A  1703               	bsf	3,6	;RP1=1, select bank3
  2708  069B  1588               	bsf	8,3	;volatile
  2709  069C                     l3726:
  2710                           
  2711                           ;interface_main.c: 171:             ADCON0bits.ADCS = 0b11;
  2712  069C  30C0               	movlw	192
  2713  069D  1283               	bcf	3,5	;RP0=0, select bank0
  2714  069E  1303               	bcf	3,6	;RP1=0, select bank0
  2715  069F  049F               	iorwf	31,f	;volatile
  2716                           
  2717                           ;interface_main.c: 172:             ADCON0bits.CHS = 0b0011;
  2718  06A0  081F               	movf	31,w	;volatile
  2719  06A1  39C3               	andlw	-61
  2720  06A2  380C               	iorlw	12
  2721  06A3  009F               	movwf	31	;volatile
  2722  06A4                     l3728:
  2723                           
  2724                           ;interface_main.c: 175:             ADCON1bits.VCFG1 = 0;
  2725  06A4  1683               	bsf	3,5	;RP0=1, select bank1
  2726  06A5  1303               	bcf	3,6	;RP1=0, select bank1
  2727  06A6  129F               	bcf	31,5	;volatile
  2728  06A7                     l3730:
  2729                           
  2730                           ;interface_main.c: 176:             ADCON1bits.VCFG0 = 0;
  2731  06A7  121F               	bcf	31,4	;volatile
  2732  06A8                     l3732:
  2733                           
  2734                           ;interface_main.c: 177:             ADCON1bits.ADFM = 1;
  2735  06A8  179F               	bsf	31,7	;volatile
  2736  06A9                     l3734:
  2737                           
  2738                           ;interface_main.c: 180:             PIR1bits.ADIF = 0;
  2739  06A9  1283               	bcf	3,5	;RP0=0, select bank0
  2740  06AA  1303               	bcf	3,6	;RP1=0, select bank0
  2741  06AB  130C               	bcf	12,6	;volatile
  2742  06AC                     l3736:
  2743                           
  2744                           ;interface_main.c: 183:             PIE1bits.ADIE = 1;
  2745  06AC  1683               	bsf	3,5	;RP0=1, select bank1
  2746  06AD  1303               	bcf	3,6	;RP1=0, select bank1
  2747  06AE  170C               	bsf	12,6	;volatile
  2748  06AF                     l3738:
  2749                           
  2750                           ;interface_main.c: 185:             ADCON0bits.ADON = 1;
  2751  06AF  1283               	bcf	3,5	;RP0=0, select bank0
  2752  06B0  1303               	bcf	3,6	;RP1=0, select bank0
  2753  06B1  141F               	bsf	31,0	;volatile
  2754  06B2                     l3740:
  2755                           
  2756                           ;interface_main.c: 188:             Update_Celsius();
  2757  06B2  160A  118A  2768  120A  118A  	fcall	_Update_Celsius
  2758  06B7                     l3742:
  2759                           
  2760                           ;interface_main.c: 189:             Update_Farenheit();
  2761  06B7  120A  158A  21DA  120A  118A  	fcall	_Update_Farenheit
  2762  06BC                     l3744:
  2763                           
  2764                           ;interface_main.c: 190:             DisplayTemp();
  2765  06BC  160A  118A  2607  120A  118A  	fcall	_DisplayTemp
  2766  06C1                     l3746:
  2767                           
  2768                           ;interface_main.c: 192:             if(RE3 == 0 && RB5 == 0)
  2769  06C1  1283               	bcf	3,5	;RP0=0, select bank0
  2770  06C2  1303               	bcf	3,6	;RP1=0, select bank0
  2771  06C3  1989               	btfsc	9,3	;volatile
  2772  06C4  2EC6               	goto	u4241
  2773  06C5  2EC7               	goto	u4240
  2774  06C6                     u4241:
  2775  06C6  2F9B               	goto	l3800
  2776  06C7                     u4240:
  2777  06C7                     l3748:
  2778  06C7  1A86               	btfsc	6,5	;volatile
  2779  06C8  2ECA               	goto	u4251
  2780  06C9  2ECB               	goto	u4250
  2781  06CA                     u4251:
  2782  06CA  2F9B               	goto	l3800
  2783  06CB                     u4250:
  2784  06CB                     l361:
  2785  06CB  1989               	btfsc	9,3	;volatile
  2786  06CC  2ECE               	goto	u4261
  2787  06CD  2ECF               	goto	u4260
  2788  06CE                     u4261:
  2789  06CE  2C5C               	goto	l3632
  2790  06CF                     u4260:
  2791  06CF                     l3752:
  2792  06CF  1E86               	btfss	6,5	;volatile
  2793  06D0  2ED2               	goto	u4271
  2794  06D1  2ED3               	goto	u4270
  2795  06D2                     u4271:
  2796  06D2  2ECB               	goto	l361
  2797  06D3                     u4270:
  2798  06D3  2C5C               	goto	l3632
  2799  06D4                     l3756:
  2800  06D4  3003               	movlw	3
  2801  06D5  0652               	xorwf	main@displayMode^(0+128),w
  2802  06D6  0453               	iorwf	(main@displayMode+1)^(0+128),w
  2803  06D7  1D03               	btfss	3,2
  2804  06D8  2EDA               	goto	u4281
  2805  06D9  2EDB               	goto	u4280
  2806  06DA                     u4281:
  2807  06DA  2F29               	goto	l3776
  2808  06DB                     u4280:
  2809  06DB                     l3758:
  2810                           
  2811                           ;interface_main.c: 200:             ChangeBrightness();
  2812  06DB  120A  158A  20AD  120A  118A  	fcall	_ChangeBrightness
  2813  06E0                     l3760:
  2814                           
  2815                           ;interface_main.c: 203:             char buffer3[16];;interface_main.c: 204:            
      +                           sprintf(buffer3, "Light:%d", brightness);
  2816  06E0  30B0               	movlw	(low (main@buffer3_610| 0))& (0+255)
  2817  06E1  1283               	bcf	3,5	;RP0=0, select bank0
  2818  06E2  1303               	bcf	3,6	;RP1=0, select bank0
  2819  06E3  00A0               	movwf	sprintf@sp
  2820  06E4  3000               	movlw	0
  2821  06E5  00A1               	movwf	sprintf@sp+1
  2822  06E6  304F               	movlw	(low ((STR_24-__stringbase)| (0+32768)))& (0+255)
  2823  06E7  00DF               	movwf	??_main
  2824  06E8  085F               	movf	??_main,w
  2825  06E9  00A2               	movwf	sprintf@f
  2826  06EA  1683               	bsf	3,5	;RP0=1, select bank1
  2827  06EB  1303               	bcf	3,6	;RP1=0, select bank1
  2828  06EC  086A               	movf	_brightness^(0+128),w
  2829  06ED  1283               	bcf	3,5	;RP0=0, select bank0
  2830  06EE  1303               	bcf	3,6	;RP1=0, select bank0
  2831  06EF  00E0               	movwf	??_main+1
  2832  06F0  01E1               	clrf	??_main+2
  2833  06F1  0860               	movf	??_main+1,w
  2834  06F2  00A3               	movwf	?_sprintf+3
  2835  06F3  0861               	movf	??_main+2,w
  2836  06F4  00A4               	movwf	?_sprintf+4
  2837  06F5  120A  158A  2545  120A  118A  	fcall	_sprintf
  2838  06FA                     l3762:
  2839                           
  2840                           ;interface_main.c: 205:             LCD_String_xy(0,0,buffer3);
  2841  06FA  1283               	bcf	3,5	;RP0=0, select bank0
  2842  06FB  1303               	bcf	3,6	;RP1=0, select bank0
  2843  06FC  01A0               	clrf	LCD_String_xy@pos
  2844  06FD  30B0               	movlw	(low (main@buffer3_610| 0))& (0+255)
  2845  06FE  00A1               	movwf	LCD_String_xy@msg
  2846  06FF  3000               	movlw	0
  2847  0700  00A2               	movwf	LCD_String_xy@msg+1
  2848  0701  3000               	movlw	0
  2849  0702  160A  118A  245A  120A  118A  	fcall	_LCD_String_xy
  2850  0707                     l3764:
  2851                           
  2852                           ;interface_main.c: 206:             _delay((unsigned long)((100)*(8000000/4000.0)));
  2853  0707  3002               	movlw	2
  2854  0708  1283               	bcf	3,5	;RP0=0, select bank0
  2855  0709  1303               	bcf	3,6	;RP1=0, select bank0
  2856  070A  00E1               	movwf	??_main+2
  2857  070B  3004               	movlw	4
  2858  070C  00E0               	movwf	??_main+1
  2859  070D  30B9               	movlw	185
  2860  070E  00DF               	movwf	??_main
  2861  070F                     u4427:
  2862  070F  0BDF               	decfsz	??_main,f
  2863  0710  2F0F               	goto	u4427
  2864  0711  0BE0               	decfsz	??_main+1,f
  2865  0712  2F0F               	goto	u4427
  2866  0713  0BE1               	decfsz	??_main+2,f
  2867  0714  2F0F               	goto	u4427
  2868  0715  2F16               	nop2
  2869  0716                     l3766:
  2870                           
  2871                           ;interface_main.c: 208:             if(RE3 == 0 && RB5 == 0)
  2872  0716  1283               	bcf	3,5	;RP0=0, select bank0
  2873  0717  1303               	bcf	3,6	;RP1=0, select bank0
  2874  0718  1989               	btfsc	9,3	;volatile
  2875  0719  2F1B               	goto	u4291
  2876  071A  2F1C               	goto	u4290
  2877  071B                     u4291:
  2878  071B  2F9B               	goto	l3800
  2879  071C                     u4290:
  2880  071C                     l3768:
  2881  071C  1A86               	btfsc	6,5	;volatile
  2882  071D  2F1F               	goto	u4301
  2883  071E  2F20               	goto	u4300
  2884  071F                     u4301:
  2885  071F  2F9B               	goto	l3800
  2886  0720                     u4300:
  2887  0720                     l369:
  2888  0720  1989               	btfsc	9,3	;volatile
  2889  0721  2F23               	goto	u4311
  2890  0722  2F24               	goto	u4310
  2891  0723                     u4311:
  2892  0723  2C5C               	goto	l3632
  2893  0724                     u4310:
  2894  0724                     l3772:
  2895  0724  1E86               	btfss	6,5	;volatile
  2896  0725  2F27               	goto	u4321
  2897  0726  2F28               	goto	u4320
  2898  0727                     u4321:
  2899  0727  2F20               	goto	l369
  2900  0728                     u4320:
  2901  0728  2C5C               	goto	l3632
  2902  0729                     l3776:
  2903  0729  3004               	movlw	4
  2904  072A  0652               	xorwf	main@displayMode^(0+128),w
  2905  072B  0453               	iorwf	(main@displayMode+1)^(0+128),w
  2906  072C  1D03               	btfss	3,2
  2907  072D  2F2F               	goto	u4331
  2908  072E  2F30               	goto	u4330
  2909  072F                     u4331:
  2910  072F  2F9B               	goto	l3800
  2911  0730                     u4330:
  2912  0730                     l3778:
  2913                           
  2914                           ;interface_main.c: 216:             ReadPhoto();
  2915  0730  160A  118A  2536  120A  118A  	fcall	_ReadPhoto
  2916  0735                     l3780:
  2917                           
  2918                           ;interface_main.c: 218:             unsigned tmp = 1024 - photo_result;
  2919  0735  3000               	movlw	0
  2920  0736  1283               	bcf	3,5	;RP0=0, select bank0
  2921  0737  1303               	bcf	3,6	;RP1=0, select bank0
  2922  0738  00DF               	movwf	??_main
  2923  0739  3004               	movlw	4
  2924  073A  00E0               	movwf	??_main+1
  2925  073B  1683               	bsf	3,5	;RP0=1, select bank1
  2926  073C  1303               	bcf	3,6	;RP1=0, select bank1
  2927  073D  0866               	movf	_photo_result^(0+128),w
  2928  073E  1283               	bcf	3,5	;RP0=0, select bank0
  2929  073F  1303               	bcf	3,6	;RP1=0, select bank0
  2930  0740  025F               	subwf	??_main,w
  2931  0741  1683               	bsf	3,5	;RP0=1, select bank1
  2932  0742  1303               	bcf	3,6	;RP1=0, select bank1
  2933  0743  00D0               	movwf	main@tmp^(0+128)
  2934  0744  0867               	movf	(_photo_result+1)^(0+128),w
  2935  0745  1C03               	skipc
  2936  0746  0A67               	incf	(_photo_result+1)^(0+128),w
  2937  0747  1283               	bcf	3,5	;RP0=0, select bank0
  2938  0748  1303               	bcf	3,6	;RP1=0, select bank0
  2939  0749  0260               	subwf	??_main+1,w
  2940  074A  1683               	bsf	3,5	;RP0=1, select bank1
  2941  074B  1303               	bcf	3,6	;RP1=0, select bank1
  2942  074C  00D1               	movwf	(main@tmp+1)^(0+128)
  2943  074D                     l3782:
  2944                           
  2945                           ;interface_main.c: 220:             char buffer3[16];;interface_main.c: 221:            
      +                           sprintf(buffer3, "Photo:%d", tmp);
  2946  074D  30C0               	movlw	(low (main@buffer3_613| 0))& (0+255)
  2947  074E  1283               	bcf	3,5	;RP0=0, select bank0
  2948  074F  1303               	bcf	3,6	;RP1=0, select bank0
  2949  0750  00A0               	movwf	sprintf@sp
  2950  0751  3000               	movlw	0
  2951  0752  00A1               	movwf	sprintf@sp+1
  2952  0753  3046               	movlw	(low ((STR_25-__stringbase)| (0+32768)))& (0+255)
  2953  0754  00DF               	movwf	??_main
  2954  0755  085F               	movf	??_main,w
  2955  0756  00A2               	movwf	sprintf@f
  2956  0757  1683               	bsf	3,5	;RP0=1, select bank1
  2957  0758  1303               	bcf	3,6	;RP1=0, select bank1
  2958  0759  0851               	movf	(main@tmp+1)^(0+128),w
  2959  075A  1283               	bcf	3,5	;RP0=0, select bank0
  2960  075B  1303               	bcf	3,6	;RP1=0, select bank0
  2961  075C  00A4               	movwf	?_sprintf+4
  2962  075D  1683               	bsf	3,5	;RP0=1, select bank1
  2963  075E  1303               	bcf	3,6	;RP1=0, select bank1
  2964  075F  0850               	movf	main@tmp^(0+128),w
  2965  0760  1283               	bcf	3,5	;RP0=0, select bank0
  2966  0761  1303               	bcf	3,6	;RP1=0, select bank0
  2967  0762  00A3               	movwf	?_sprintf+3
  2968  0763  120A  158A  2545  120A  118A  	fcall	_sprintf
  2969  0768                     l3784:
  2970                           
  2971                           ;interface_main.c: 222:             LCD_String_xy(0,0,buffer3);
  2972  0768  1283               	bcf	3,5	;RP0=0, select bank0
  2973  0769  1303               	bcf	3,6	;RP1=0, select bank0
  2974  076A  01A0               	clrf	LCD_String_xy@pos
  2975  076B  30C0               	movlw	(low (main@buffer3_613| 0))& (0+255)
  2976  076C  00A1               	movwf	LCD_String_xy@msg
  2977  076D  3000               	movlw	0
  2978  076E  00A2               	movwf	LCD_String_xy@msg+1
  2979  076F  3000               	movlw	0
  2980  0770  160A  118A  245A  120A  118A  	fcall	_LCD_String_xy
  2981  0775                     l3786:
  2982                           
  2983                           ;interface_main.c: 223:             _delay((unsigned long)((100)*(8000000/4000.0)));
  2984  0775  3002               	movlw	2
  2985  0776  1283               	bcf	3,5	;RP0=0, select bank0
  2986  0777  1303               	bcf	3,6	;RP1=0, select bank0
  2987  0778  00E1               	movwf	??_main+2
  2988  0779  3004               	movlw	4
  2989  077A  00E0               	movwf	??_main+1
  2990  077B  30B9               	movlw	185
  2991  077C  00DF               	movwf	??_main
  2992  077D                     u4437:
  2993  077D  0BDF               	decfsz	??_main,f
  2994  077E  2F7D               	goto	u4437
  2995  077F  0BE0               	decfsz	??_main+1,f
  2996  0780  2F7D               	goto	u4437
  2997  0781  0BE1               	decfsz	??_main+2,f
  2998  0782  2F7D               	goto	u4437
  2999  0783  2F84               	nop2
  3000  0784                     l3788:
  3001                           
  3002                           ;interface_main.c: 226:             CCPR1L = tmp;
  3003  0784  1683               	bsf	3,5	;RP0=1, select bank1
  3004  0785  1303               	bcf	3,6	;RP1=0, select bank1
  3005  0786  0850               	movf	main@tmp^(0+128),w
  3006  0787  1283               	bcf	3,5	;RP0=0, select bank0
  3007  0788  1303               	bcf	3,6	;RP1=0, select bank0
  3008  0789  0095               	movwf	21	;volatile
  3009  078A                     l3790:
  3010                           
  3011                           ;interface_main.c: 228:             if(RE3 == 0 && RB5 == 0)
  3012  078A  1989               	btfsc	9,3	;volatile
  3013  078B  2F8D               	goto	u4341
  3014  078C  2F8E               	goto	u4340
  3015  078D                     u4341:
  3016  078D  2F9B               	goto	l3800
  3017  078E                     u4340:
  3018  078E                     l3792:
  3019  078E  1A86               	btfsc	6,5	;volatile
  3020  078F  2F91               	goto	u4351
  3021  0790  2F92               	goto	u4350
  3022  0791                     u4351:
  3023  0791  2F9B               	goto	l3800
  3024  0792                     u4350:
  3025  0792                     l377:
  3026  0792  1989               	btfsc	9,3	;volatile
  3027  0793  2F95               	goto	u4361
  3028  0794  2F96               	goto	u4360
  3029  0795                     u4361:
  3030  0795  2C5C               	goto	l3632
  3031  0796                     u4360:
  3032  0796                     l3796:
  3033  0796  1E86               	btfss	6,5	;volatile
  3034  0797  2F99               	goto	u4371
  3035  0798  2F9A               	goto	u4370
  3036  0799                     u4371:
  3037  0799  2F92               	goto	l377
  3038  079A                     u4370:
  3039  079A  2C5C               	goto	l3632
  3040  079B                     l3800:
  3041                           
  3042                           ;interface_main.c: 236:        _delay((unsigned long)((10)*(8000000/4000.0)));
  3043  079B  301A               	movlw	26
  3044  079C  1283               	bcf	3,5	;RP0=0, select bank0
  3045  079D  1303               	bcf	3,6	;RP1=0, select bank0
  3046  079E  00E0               	movwf	??_main+1
  3047  079F  30F7               	movlw	247
  3048  07A0  00DF               	movwf	??_main
  3049  07A1                     u4447:
  3050  07A1  0BDF               	decfsz	??_main,f
  3051  07A2  2FA1               	goto	u4447
  3052  07A3  0BE0               	decfsz	??_main+1,f
  3053  07A4  2FA1               	goto	u4447
  3054  07A5  2FA6               	nop2
  3055  07A6                     l3802:
  3056                           
  3057                           ;interface_main.c: 237:        if(displayMode >= 5)
  3058  07A6  1683               	bsf	3,5	;RP0=1, select bank1
  3059  07A7  1303               	bcf	3,6	;RP1=0, select bank1
  3060  07A8  0853               	movf	(main@displayMode+1)^(0+128),w
  3061  07A9  3A80               	xorlw	128
  3062  07AA  00FF               	movwf	btemp+1
  3063  07AB  3080               	movlw	128
  3064  07AC  027F               	subwf	btemp+1,w
  3065  07AD  1D03               	skipz
  3066  07AE  2FB1               	goto	u4385
  3067  07AF  3005               	movlw	5
  3068  07B0  0252               	subwf	main@displayMode^(0+128),w
  3069  07B1                     u4385:
  3070  07B1  1C03               	skipc
  3071  07B2  2FB4               	goto	u4381
  3072  07B3  2FB5               	goto	u4380
  3073  07B4                     u4381:
  3074  07B4  2C0E               	goto	l3616
  3075  07B5                     u4380:
  3076  07B5  2C0A               	goto	l3614
  3077  07B6  120A  118A  2800   	ljmp	start
  3078  07B9                     __end_of_main:
  3079                           
  3080                           	psect	text1
  3081  09DA                     __ptext1:	
  3082 ;; *************** function _Update_Farenheit *****************
  3083 ;; Defined at:
  3084 ;;		line 8 in file "Temp.c"
  3085 ;; Parameters:    Size  Location     Type
  3086 ;;		None
  3087 ;; Auto vars:     Size  Location     Type
  3088 ;;		None
  3089 ;; Return value:  Size  Location     Type
  3090 ;;                  1    wreg      void 
  3091 ;; Registers used:
  3092 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3093 ;; Tracked objects:
  3094 ;;		On entry : 0/0
  3095 ;;		On exit  : 0/0
  3096 ;;		Unchanged: 0/0
  3097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3098 ;;      Params:         0       0       0       0       0
  3099 ;;      Locals:         0       4       0       0       0
  3100 ;;      Temps:          0       2       0       0       0
  3101 ;;      Totals:         0       6       0       0       0
  3102 ;;Total ram usage:        6 bytes
  3103 ;; Hardware stack levels used: 1
  3104 ;; Hardware stack levels required when called: 2
  3105 ;; This function calls:
  3106 ;;		___fladd
  3107 ;;		___flmul
  3108 ;;		___fltol
  3109 ;;		___xxtofl
  3110 ;; This function is called by:
  3111 ;;		_main
  3112 ;; This function uses a non-reentrant model
  3113 ;;
  3114                           
  3115  09DA                     _Update_Farenheit:	
  3116                           ;psect for function _Update_Farenheit
  3117                           
  3118  09DA                     l3424:	
  3119                           ;incstack = 0
  3120                           ; Regs used in _Update_Farenheit: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3121                           
  3122                           
  3123                           ;Temp.c: 20:     ADCON0bits.GO = 1;
  3124  09DA  1283               	bcf	3,5	;RP0=0, select bank0
  3125  09DB  1303               	bcf	3,6	;RP1=0, select bank0
  3126  09DC  149F               	bsf	31,1	;volatile
  3127  09DD                     l205:	
  3128                           ;Temp.c: 22:     while(ADCON0bits.GO == 1);
  3129                           
  3130  09DD  189F               	btfsc	31,1	;volatile
  3131  09DE  29E0               	goto	u3951
  3132  09DF  29E1               	goto	u3950
  3133  09E0                     u3951:
  3134  09E0  29DD               	goto	l205
  3135  09E1                     u3950:
  3136  09E1                     l3426:
  3137                           
  3138                           ;Temp.c: 25:     result = 0x0000;
  3139  09E1  01EB               	clrf	_result
  3140  09E2  01EC               	clrf	_result+1
  3141  09E3                     l3428:
  3142                           
  3143                           ;Temp.c: 26:     result = ADRESH;
  3144  09E3  081E               	movf	30,w	;volatile
  3145  09E4  00D9               	movwf	??_Update_Farenheit
  3146  09E5  01DA               	clrf	??_Update_Farenheit+1
  3147  09E6  0859               	movf	??_Update_Farenheit,w
  3148  09E7  00EB               	movwf	_result
  3149  09E8  085A               	movf	??_Update_Farenheit+1,w
  3150  09E9  00EC               	movwf	_result+1
  3151  09EA                     l3430:
  3152                           
  3153                           ;Temp.c: 27:     result = result << 8;
  3154  09EA  086B               	movf	_result,w
  3155  09EB  00DA               	movwf	??_Update_Farenheit+1
  3156  09EC  01D9               	clrf	??_Update_Farenheit
  3157  09ED  0859               	movf	??_Update_Farenheit,w
  3158  09EE  00EB               	movwf	_result
  3159  09EF  085A               	movf	??_Update_Farenheit+1,w
  3160  09F0  00EC               	movwf	_result+1
  3161  09F1                     l3432:
  3162                           
  3163                           ;Temp.c: 28:     result = result | ADRESL;
  3164  09F1  086B               	movf	_result,w
  3165  09F2  1683               	bsf	3,5	;RP0=1, select bank1
  3166  09F3  1303               	bcf	3,6	;RP1=0, select bank1
  3167  09F4  041E               	iorwf	30,w	;volatile
  3168  09F5  1283               	bcf	3,5	;RP0=0, select bank0
  3169  09F6  1303               	bcf	3,6	;RP1=0, select bank0
  3170  09F7  00D9               	movwf	??_Update_Farenheit
  3171  09F8  086C               	movf	_result+1,w
  3172  09F9  00DA               	movwf	??_Update_Farenheit+1
  3173  09FA  0859               	movf	??_Update_Farenheit,w
  3174  09FB  00EB               	movwf	_result
  3175  09FC  085A               	movf	??_Update_Farenheit+1,w
  3176  09FD  00EC               	movwf	_result+1
  3177  09FE                     l3434:
  3178                           
  3179                           ;Temp.c: 29:     temperature_f = .32640625*result -67;
  3180  09FE  086B               	movf	_result,w
  3181  09FF  00F0               	movwf	___xxtofl@val
  3182  0A00  086C               	movf	_result+1,w
  3183  0A01  00F1               	movwf	___xxtofl@val+1
  3184  0A02  01F2               	clrf	___xxtofl@val+2
  3185  0A03  01F3               	clrf	___xxtofl@val+3
  3186  0A04  3000               	movlw	0
  3187  0A05  120A  158A  2120  120A  158A  	fcall	___xxtofl
  3188  0A0A  0873               	movf	?___xxtofl+3,w
  3189  0A0B  1283               	bcf	3,5	;RP0=0, select bank0
  3190  0A0C  1303               	bcf	3,6	;RP1=0, select bank0
  3191  0A0D  00A7               	movwf	___flmul@a+3
  3192  0A0E  0872               	movf	?___xxtofl+2,w
  3193  0A0F  00A6               	movwf	___flmul@a+2
  3194  0A10  0871               	movf	?___xxtofl+1,w
  3195  0A11  00A5               	movwf	___flmul@a+1
  3196  0A12  0870               	movf	?___xxtofl,w
  3197  0A13  00A4               	movwf	___flmul@a
  3198  0A14  303E               	movlw	62
  3199  0A15  00A3               	movwf	___flmul@b+3
  3200  0A16  30A7               	movlw	167
  3201  0A17  00A2               	movwf	___flmul@b+2
  3202  0A18  301E               	movlw	30
  3203  0A19  00A1               	movwf	___flmul@b+1
  3204  0A1A  30B8               	movlw	184
  3205  0A1B  00A0               	movwf	___flmul@b
  3206  0A1C  120A  118A  204A  120A  158A  	fcall	___flmul
  3207  0A21  1283               	bcf	3,5	;RP0=0, select bank0
  3208  0A22  1303               	bcf	3,6	;RP1=0, select bank0
  3209  0A23  0823               	movf	?___flmul+3,w
  3210  0A24  00C1               	movwf	___fladd@a+3
  3211  0A25  0822               	movf	?___flmul+2,w
  3212  0A26  00C0               	movwf	___fladd@a+2
  3213  0A27  0821               	movf	?___flmul+1,w
  3214  0A28  00BF               	movwf	___fladd@a+1
  3215  0A29  0820               	movf	?___flmul,w
  3216  0A2A  00BE               	movwf	___fladd@a
  3217  0A2B  30C2               	movlw	194
  3218  0A2C  00BD               	movwf	___fladd@b+3
  3219  0A2D  3086               	movlw	134
  3220  0A2E  00BC               	movwf	___fladd@b+2
  3221  0A2F  3000               	movlw	0
  3222  0A30  00BB               	movwf	___fladd@b+1
  3223  0A31  3000               	movlw	0
  3224  0A32  00BA               	movwf	___fladd@b
  3225  0A33  120A  158A  22BD  120A  158A  	fcall	___fladd
  3226  0A38  1283               	bcf	3,5	;RP0=0, select bank0
  3227  0A39  1303               	bcf	3,6	;RP1=0, select bank0
  3228  0A3A  083D               	movf	?___fladd+3,w
  3229  0A3B  00D1               	movwf	___fltol@f1+3
  3230  0A3C  083C               	movf	?___fladd+2,w
  3231  0A3D  00D0               	movwf	___fltol@f1+2
  3232  0A3E  083B               	movf	?___fladd+1,w
  3233  0A3F  00CF               	movwf	___fltol@f1+1
  3234  0A40  083A               	movf	?___fladd,w
  3235  0A41  00CE               	movwf	___fltol@f1
  3236  0A42  160A  118A  2665  120A  158A  	fcall	___fltol
  3237  0A47  1283               	bcf	3,5	;RP0=0, select bank0
  3238  0A48  1303               	bcf	3,6	;RP1=0, select bank0
  3239  0A49  084F               	movf	?___fltol+1,w
  3240  0A4A  00E7               	movwf	_temperature_f+1
  3241  0A4B  084E               	movf	?___fltol,w
  3242  0A4C  00E6               	movwf	_temperature_f
  3243  0A4D                     l3436:
  3244                           
  3245                           ;Temp.c: 31:     PIR1bits.ADIF = 0;
  3246  0A4D  130C               	bcf	12,6	;volatile
  3247  0A4E                     l3438:
  3248                           
  3249                           ;Temp.c: 33:     temperature_f = .32640625*result - 67+64;
  3250  0A4E  086B               	movf	_result,w
  3251  0A4F  00F0               	movwf	___xxtofl@val
  3252  0A50  086C               	movf	_result+1,w
  3253  0A51  00F1               	movwf	___xxtofl@val+1
  3254  0A52  01F2               	clrf	___xxtofl@val+2
  3255  0A53  01F3               	clrf	___xxtofl@val+3
  3256  0A54  3000               	movlw	0
  3257  0A55  120A  158A  2120  120A  158A  	fcall	___xxtofl
  3258  0A5A  0873               	movf	?___xxtofl+3,w
  3259  0A5B  1283               	bcf	3,5	;RP0=0, select bank0
  3260  0A5C  1303               	bcf	3,6	;RP1=0, select bank0
  3261  0A5D  00A7               	movwf	___flmul@a+3
  3262  0A5E  0872               	movf	?___xxtofl+2,w
  3263  0A5F  00A6               	movwf	___flmul@a+2
  3264  0A60  0871               	movf	?___xxtofl+1,w
  3265  0A61  00A5               	movwf	___flmul@a+1
  3266  0A62  0870               	movf	?___xxtofl,w
  3267  0A63  00A4               	movwf	___flmul@a
  3268  0A64  303E               	movlw	62
  3269  0A65  00A3               	movwf	___flmul@b+3
  3270  0A66  30A7               	movlw	167
  3271  0A67  00A2               	movwf	___flmul@b+2
  3272  0A68  301E               	movlw	30
  3273  0A69  00A1               	movwf	___flmul@b+1
  3274  0A6A  30B8               	movlw	184
  3275  0A6B  00A0               	movwf	___flmul@b
  3276  0A6C  120A  118A  204A  120A  158A  	fcall	___flmul
  3277  0A71  1283               	bcf	3,5	;RP0=0, select bank0
  3278  0A72  1303               	bcf	3,6	;RP1=0, select bank0
  3279  0A73  0823               	movf	?___flmul+3,w
  3280  0A74  00C1               	movwf	___fladd@a+3
  3281  0A75  0822               	movf	?___flmul+2,w
  3282  0A76  00C0               	movwf	___fladd@a+2
  3283  0A77  0821               	movf	?___flmul+1,w
  3284  0A78  00BF               	movwf	___fladd@a+1
  3285  0A79  0820               	movf	?___flmul,w
  3286  0A7A  00BE               	movwf	___fladd@a
  3287  0A7B  30C2               	movlw	194
  3288  0A7C  00BD               	movwf	___fladd@b+3
  3289  0A7D  3086               	movlw	134
  3290  0A7E  00BC               	movwf	___fladd@b+2
  3291  0A7F  3000               	movlw	0
  3292  0A80  00BB               	movwf	___fladd@b+1
  3293  0A81  3000               	movlw	0
  3294  0A82  00BA               	movwf	___fladd@b
  3295  0A83  120A  158A  22BD  120A  158A  	fcall	___fladd
  3296  0A88  1283               	bcf	3,5	;RP0=0, select bank0
  3297  0A89  1303               	bcf	3,6	;RP1=0, select bank0
  3298  0A8A  083D               	movf	?___fladd+3,w
  3299  0A8B  00DE               	movwf	_Update_Farenheit$1586+3
  3300  0A8C  083C               	movf	?___fladd+2,w
  3301  0A8D  00DD               	movwf	_Update_Farenheit$1586+2
  3302  0A8E  083B               	movf	?___fladd+1,w
  3303  0A8F  00DC               	movwf	_Update_Farenheit$1586+1
  3304  0A90  083A               	movf	?___fladd,w
  3305  0A91  00DB               	movwf	_Update_Farenheit$1586
  3306  0A92                     l3440:
  3307                           
  3308                           ;Temp.c: 33:     temperature_f = .32640625*result - 67+64;
  3309  0A92  085E               	movf	_Update_Farenheit$1586+3,w
  3310  0A93  00C1               	movwf	___fladd@a+3
  3311  0A94  085D               	movf	_Update_Farenheit$1586+2,w
  3312  0A95  00C0               	movwf	___fladd@a+2
  3313  0A96  085C               	movf	_Update_Farenheit$1586+1,w
  3314  0A97  00BF               	movwf	___fladd@a+1
  3315  0A98  085B               	movf	_Update_Farenheit$1586,w
  3316  0A99  00BE               	movwf	___fladd@a
  3317  0A9A  3042               	movlw	66
  3318  0A9B  00BD               	movwf	___fladd@b+3
  3319  0A9C  3080               	movlw	128
  3320  0A9D  00BC               	movwf	___fladd@b+2
  3321  0A9E  3000               	movlw	0
  3322  0A9F  00BB               	movwf	___fladd@b+1
  3323  0AA0  3000               	movlw	0
  3324  0AA1  00BA               	movwf	___fladd@b
  3325  0AA2  120A  158A  22BD  120A  158A  	fcall	___fladd
  3326  0AA7  1283               	bcf	3,5	;RP0=0, select bank0
  3327  0AA8  1303               	bcf	3,6	;RP1=0, select bank0
  3328  0AA9  083D               	movf	?___fladd+3,w
  3329  0AAA  00D1               	movwf	___fltol@f1+3
  3330  0AAB  083C               	movf	?___fladd+2,w
  3331  0AAC  00D0               	movwf	___fltol@f1+2
  3332  0AAD  083B               	movf	?___fladd+1,w
  3333  0AAE  00CF               	movwf	___fltol@f1+1
  3334  0AAF  083A               	movf	?___fladd,w
  3335  0AB0  00CE               	movwf	___fltol@f1
  3336  0AB1  160A  118A  2665  120A  158A  	fcall	___fltol
  3337  0AB6  1283               	bcf	3,5	;RP0=0, select bank0
  3338  0AB7  1303               	bcf	3,6	;RP1=0, select bank0
  3339  0AB8  084F               	movf	?___fltol+1,w
  3340  0AB9  00E7               	movwf	_temperature_f+1
  3341  0ABA  084E               	movf	?___fltol,w
  3342  0ABB  00E6               	movwf	_temperature_f
  3343  0ABC                     l208:
  3344  0ABC  0008               	return
  3345  0ABD                     __end_of_Update_Farenheit:
  3346                           
  3347                           	psect	text2
  3348  1768                     __ptext2:	
  3349 ;; *************** function _Update_Celsius *****************
  3350 ;; Defined at:
  3351 ;;		line 39 in file "Temp.c"
  3352 ;; Parameters:    Size  Location     Type
  3353 ;;		None
  3354 ;; Auto vars:     Size  Location     Type
  3355 ;;		None
  3356 ;; Return value:  Size  Location     Type
  3357 ;;                  1    wreg      void 
  3358 ;; Registers used:
  3359 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3360 ;; Tracked objects:
  3361 ;;		On entry : 0/0
  3362 ;;		On exit  : 0/0
  3363 ;;		Unchanged: 0/0
  3364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3365 ;;      Params:         0       0       0       0       0
  3366 ;;      Locals:         0       4       0       0       0
  3367 ;;      Temps:          0       2       0       0       0
  3368 ;;      Totals:         0       6       0       0       0
  3369 ;;Total ram usage:        6 bytes
  3370 ;; Hardware stack levels used: 1
  3371 ;; Hardware stack levels required when called: 2
  3372 ;; This function calls:
  3373 ;;		___fladd
  3374 ;;		___flmul
  3375 ;;		___fltol
  3376 ;;		___xxtofl
  3377 ;; This function is called by:
  3378 ;;		_main
  3379 ;; This function uses a non-reentrant model
  3380 ;;
  3381                           
  3382  1768                     _Update_Celsius:	
  3383                           ;psect for function _Update_Celsius
  3384                           
  3385  1768                     l3442:	
  3386                           ;incstack = 0
  3387                           ; Regs used in _Update_Celsius: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3388                           
  3389                           
  3390                           ;Temp.c: 42:     ADCON0bits.GO = 1;
  3391  1768  1283               	bcf	3,5	;RP0=0, select bank0
  3392  1769  1303               	bcf	3,6	;RP1=0, select bank0
  3393  176A  149F               	bsf	31,1	;volatile
  3394  176B                     l211:	
  3395                           ;Temp.c: 44:     while(ADCON0bits.GO == 1);
  3396                           
  3397  176B  189F               	btfsc	31,1	;volatile
  3398  176C  2F6E               	goto	u3961
  3399  176D  2F6F               	goto	u3960
  3400  176E                     u3961:
  3401  176E  2F6B               	goto	l211
  3402  176F                     u3960:
  3403  176F                     l3444:
  3404                           
  3405                           ;Temp.c: 47:     result = 0x0000;
  3406  176F  01EB               	clrf	_result
  3407  1770  01EC               	clrf	_result+1
  3408  1771                     l3446:
  3409                           
  3410                           ;Temp.c: 48:     result = ADRESH;
  3411  1771  081E               	movf	30,w	;volatile
  3412  1772  00D9               	movwf	??_Update_Celsius
  3413  1773  01DA               	clrf	??_Update_Celsius+1
  3414  1774  0859               	movf	??_Update_Celsius,w
  3415  1775  00EB               	movwf	_result
  3416  1776  085A               	movf	??_Update_Celsius+1,w
  3417  1777  00EC               	movwf	_result+1
  3418  1778                     l3448:
  3419                           
  3420                           ;Temp.c: 49:     result = result << 8;
  3421  1778  086B               	movf	_result,w
  3422  1779  00DA               	movwf	??_Update_Celsius+1
  3423  177A  01D9               	clrf	??_Update_Celsius
  3424  177B  0859               	movf	??_Update_Celsius,w
  3425  177C  00EB               	movwf	_result
  3426  177D  085A               	movf	??_Update_Celsius+1,w
  3427  177E  00EC               	movwf	_result+1
  3428  177F                     l3450:
  3429                           
  3430                           ;Temp.c: 50:     result = result | ADRESL;
  3431  177F  086B               	movf	_result,w
  3432  1780  1683               	bsf	3,5	;RP0=1, select bank1
  3433  1781  1303               	bcf	3,6	;RP1=0, select bank1
  3434  1782  041E               	iorwf	30,w	;volatile
  3435  1783  1283               	bcf	3,5	;RP0=0, select bank0
  3436  1784  1303               	bcf	3,6	;RP1=0, select bank0
  3437  1785  00D9               	movwf	??_Update_Celsius
  3438  1786  086C               	movf	_result+1,w
  3439  1787  00DA               	movwf	??_Update_Celsius+1
  3440  1788  0859               	movf	??_Update_Celsius,w
  3441  1789  00EB               	movwf	_result
  3442  178A  085A               	movf	??_Update_Celsius+1,w
  3443  178B  00EC               	movwf	_result+1
  3444  178C                     l3452:
  3445                           
  3446                           ;Temp.c: 52:     PIR1bits.ADIF = 0;
  3447  178C  130C               	bcf	12,6	;volatile
  3448  178D                     l3454:
  3449                           
  3450                           ;Temp.c: 53:     temperature_c = .17578125*result - 55+35;
  3451  178D  086B               	movf	_result,w
  3452  178E  00F0               	movwf	___xxtofl@val
  3453  178F  086C               	movf	_result+1,w
  3454  1790  00F1               	movwf	___xxtofl@val+1
  3455  1791  01F2               	clrf	___xxtofl@val+2
  3456  1792  01F3               	clrf	___xxtofl@val+3
  3457  1793  3000               	movlw	0
  3458  1794  120A  158A  2120  160A  118A  	fcall	___xxtofl
  3459  1799  0873               	movf	?___xxtofl+3,w
  3460  179A  1283               	bcf	3,5	;RP0=0, select bank0
  3461  179B  1303               	bcf	3,6	;RP1=0, select bank0
  3462  179C  00A7               	movwf	___flmul@a+3
  3463  179D  0872               	movf	?___xxtofl+2,w
  3464  179E  00A6               	movwf	___flmul@a+2
  3465  179F  0871               	movf	?___xxtofl+1,w
  3466  17A0  00A5               	movwf	___flmul@a+1
  3467  17A1  0870               	movf	?___xxtofl,w
  3468  17A2  00A4               	movwf	___flmul@a
  3469  17A3  303E               	movlw	62
  3470  17A4  00A3               	movwf	___flmul@b+3
  3471  17A5  3034               	movlw	52
  3472  17A6  00A2               	movwf	___flmul@b+2
  3473  17A7  3000               	movlw	0
  3474  17A8  00A1               	movwf	___flmul@b+1
  3475  17A9  3000               	movlw	0
  3476  17AA  00A0               	movwf	___flmul@b
  3477  17AB  120A  118A  204A  160A  118A  	fcall	___flmul
  3478  17B0  1283               	bcf	3,5	;RP0=0, select bank0
  3479  17B1  1303               	bcf	3,6	;RP1=0, select bank0
  3480  17B2  0823               	movf	?___flmul+3,w
  3481  17B3  00C1               	movwf	___fladd@a+3
  3482  17B4  0822               	movf	?___flmul+2,w
  3483  17B5  00C0               	movwf	___fladd@a+2
  3484  17B6  0821               	movf	?___flmul+1,w
  3485  17B7  00BF               	movwf	___fladd@a+1
  3486  17B8  0820               	movf	?___flmul,w
  3487  17B9  00BE               	movwf	___fladd@a
  3488  17BA  30C2               	movlw	194
  3489  17BB  00BD               	movwf	___fladd@b+3
  3490  17BC  305C               	movlw	92
  3491  17BD  00BC               	movwf	___fladd@b+2
  3492  17BE  3000               	movlw	0
  3493  17BF  00BB               	movwf	___fladd@b+1
  3494  17C0  3000               	movlw	0
  3495  17C1  00BA               	movwf	___fladd@b
  3496  17C2  120A  158A  22BD  160A  118A  	fcall	___fladd
  3497  17C7  1283               	bcf	3,5	;RP0=0, select bank0
  3498  17C8  1303               	bcf	3,6	;RP1=0, select bank0
  3499  17C9  083D               	movf	?___fladd+3,w
  3500  17CA  00DE               	movwf	_Update_Celsius$1587+3
  3501  17CB  083C               	movf	?___fladd+2,w
  3502  17CC  00DD               	movwf	_Update_Celsius$1587+2
  3503  17CD  083B               	movf	?___fladd+1,w
  3504  17CE  00DC               	movwf	_Update_Celsius$1587+1
  3505  17CF  083A               	movf	?___fladd,w
  3506  17D0  00DB               	movwf	_Update_Celsius$1587
  3507  17D1                     l3456:
  3508                           
  3509                           ;Temp.c: 53:     temperature_c = .17578125*result - 55+35;
  3510  17D1  085E               	movf	_Update_Celsius$1587+3,w
  3511  17D2  00C1               	movwf	___fladd@a+3
  3512  17D3  085D               	movf	_Update_Celsius$1587+2,w
  3513  17D4  00C0               	movwf	___fladd@a+2
  3514  17D5  085C               	movf	_Update_Celsius$1587+1,w
  3515  17D6  00BF               	movwf	___fladd@a+1
  3516  17D7  085B               	movf	_Update_Celsius$1587,w
  3517  17D8  00BE               	movwf	___fladd@a
  3518  17D9  3042               	movlw	66
  3519  17DA  00BD               	movwf	___fladd@b+3
  3520  17DB  300C               	movlw	12
  3521  17DC  00BC               	movwf	___fladd@b+2
  3522  17DD  3000               	movlw	0
  3523  17DE  00BB               	movwf	___fladd@b+1
  3524  17DF  3000               	movlw	0
  3525  17E0  00BA               	movwf	___fladd@b
  3526  17E1  120A  158A  22BD  160A  118A  	fcall	___fladd
  3527  17E6  1283               	bcf	3,5	;RP0=0, select bank0
  3528  17E7  1303               	bcf	3,6	;RP1=0, select bank0
  3529  17E8  083D               	movf	?___fladd+3,w
  3530  17E9  00D1               	movwf	___fltol@f1+3
  3531  17EA  083C               	movf	?___fladd+2,w
  3532  17EB  00D0               	movwf	___fltol@f1+2
  3533  17EC  083B               	movf	?___fladd+1,w
  3534  17ED  00CF               	movwf	___fltol@f1+1
  3535  17EE  083A               	movf	?___fladd,w
  3536  17EF  00CE               	movwf	___fltol@f1
  3537  17F0  160A  118A  2665  160A  118A  	fcall	___fltol
  3538  17F5  1283               	bcf	3,5	;RP0=0, select bank0
  3539  17F6  1303               	bcf	3,6	;RP1=0, select bank0
  3540  17F7  084F               	movf	?___fltol+1,w
  3541  17F8  00E9               	movwf	_temperature_c+1
  3542  17F9  084E               	movf	?___fltol,w
  3543  17FA  00E8               	movwf	_temperature_c
  3544  17FB                     l3458:
  3545                           
  3546                           ;Temp.c: 55:     Temp_Mode = 1;
  3547  17FB  3001               	movlw	1
  3548  17FC  00E4               	movwf	_Temp_Mode
  3549  17FD  3000               	movlw	0
  3550  17FE  00E5               	movwf	_Temp_Mode+1
  3551  17FF                     l214:
  3552  17FF  0008               	return
  3553  1800                     __end_of_Update_Celsius:
  3554                           
  3555                           	psect	text3
  3556  0920                     __ptext3:	
  3557 ;; *************** function ___xxtofl *****************
  3558 ;; Defined at:
  3559 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\xxtofl.c"
  3560 ;; Parameters:    Size  Location     Type
  3561 ;;  sign            1    wreg     unsigned char 
  3562 ;;  val             4    0[COMMON] long 
  3563 ;; Auto vars:     Size  Location     Type
  3564 ;;  sign            1    8[COMMON] unsigned char 
  3565 ;;  arg             4   10[COMMON] unsigned long 
  3566 ;;  exp             1    9[COMMON] unsigned char 
  3567 ;; Return value:  Size  Location     Type
  3568 ;;                  4    0[COMMON] unsigned char 
  3569 ;; Registers used:
  3570 ;;		wreg, status,2, status,0
  3571 ;; Tracked objects:
  3572 ;;		On entry : 0/0
  3573 ;;		On exit  : 0/0
  3574 ;;		Unchanged: 0/0
  3575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3576 ;;      Params:         4       0       0       0       0
  3577 ;;      Locals:         6       0       0       0       0
  3578 ;;      Temps:          4       0       0       0       0
  3579 ;;      Totals:        14       0       0       0       0
  3580 ;;Total ram usage:       14 bytes
  3581 ;; Hardware stack levels used: 1
  3582 ;; This function calls:
  3583 ;;		Nothing
  3584 ;; This function is called by:
  3585 ;;		_Update_Farenheit
  3586 ;;		_Update_Celsius
  3587 ;; This function uses a non-reentrant model
  3588 ;;
  3589                           
  3590  0920                     ___xxtofl:	
  3591                           ;psect for function ___xxtofl
  3592                           
  3593                           
  3594                           ;incstack = 0
  3595                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  3596                           ;___xxtofl@sign stored from wreg
  3597  0920  00F8               	movwf	___xxtofl@sign
  3598  0921                     l3324:
  3599  0921  0878               	movf	___xxtofl@sign,w
  3600  0922  1903               	btfsc	3,2
  3601  0923  2925               	goto	u3801
  3602  0924  2926               	goto	u3800
  3603  0925                     u3801:
  3604  0925  293A               	goto	l3330
  3605  0926                     u3800:
  3606  0926                     l3326:
  3607  0926  1FF3               	btfss	___xxtofl@val+3,7
  3608  0927  2929               	goto	u3811
  3609  0928  292A               	goto	u3810
  3610  0929                     u3811:
  3611  0929  293A               	goto	l3330
  3612  092A                     u3810:
  3613  092A                     l3328:
  3614  092A  0970               	comf	___xxtofl@val,w
  3615  092B  00FA               	movwf	___xxtofl@arg
  3616  092C  0971               	comf	___xxtofl@val+1,w
  3617  092D  00FB               	movwf	___xxtofl@arg+1
  3618  092E  0972               	comf	___xxtofl@val+2,w
  3619  092F  00FC               	movwf	___xxtofl@arg+2
  3620  0930  0973               	comf	___xxtofl@val+3,w
  3621  0931  00FD               	movwf	___xxtofl@arg+3
  3622  0932  0AFA               	incf	___xxtofl@arg,f
  3623  0933  1903               	skipnz
  3624  0934  0AFB               	incf	___xxtofl@arg+1,f
  3625  0935  1903               	skipnz
  3626  0936  0AFC               	incf	___xxtofl@arg+2,f
  3627  0937  1903               	skipnz
  3628  0938  0AFD               	incf	___xxtofl@arg+3,f
  3629  0939  2942               	goto	l1120
  3630  093A                     l3330:
  3631  093A  0873               	movf	___xxtofl@val+3,w
  3632  093B  00FD               	movwf	___xxtofl@arg+3
  3633  093C  0872               	movf	___xxtofl@val+2,w
  3634  093D  00FC               	movwf	___xxtofl@arg+2
  3635  093E  0871               	movf	___xxtofl@val+1,w
  3636  093F  00FB               	movwf	___xxtofl@arg+1
  3637  0940  0870               	movf	___xxtofl@val,w
  3638  0941  00FA               	movwf	___xxtofl@arg
  3639  0942                     l1120:
  3640  0942  0873               	movf	___xxtofl@val+3,w
  3641  0943  0472               	iorwf	___xxtofl@val+2,w
  3642  0944  0471               	iorwf	___xxtofl@val+1,w
  3643  0945  0470               	iorwf	___xxtofl@val,w
  3644  0946  1D03               	skipz
  3645  0947  2949               	goto	u3821
  3646  0948  294A               	goto	u3820
  3647  0949                     u3821:
  3648  0949  2953               	goto	l3336
  3649  094A                     u3820:
  3650  094A                     l3332:
  3651  094A  3000               	movlw	0
  3652  094B  00F3               	movwf	?___xxtofl+3
  3653  094C  3000               	movlw	0
  3654  094D  00F2               	movwf	?___xxtofl+2
  3655  094E  3000               	movlw	0
  3656  094F  00F1               	movwf	?___xxtofl+1
  3657  0950  3000               	movlw	0
  3658  0951  00F0               	movwf	?___xxtofl
  3659  0952  29D9               	goto	l1122
  3660  0953                     l3336:
  3661  0953  3096               	movlw	150
  3662  0954  00F4               	movwf	??___xxtofl
  3663  0955  0874               	movf	??___xxtofl,w
  3664  0956  00F9               	movwf	___xxtofl@exp
  3665  0957  2965               	goto	l3340
  3666  0958                     l3338:
  3667  0958  3001               	movlw	1
  3668  0959  00F4               	movwf	??___xxtofl
  3669  095A  0874               	movf	??___xxtofl,w
  3670  095B  07F9               	addwf	___xxtofl@exp,f
  3671  095C  3001               	movlw	1
  3672  095D                     u3835:
  3673  095D  1003               	clrc
  3674  095E  0CFD               	rrf	___xxtofl@arg+3,f
  3675  095F  0CFC               	rrf	___xxtofl@arg+2,f
  3676  0960  0CFB               	rrf	___xxtofl@arg+1,f
  3677  0961  0CFA               	rrf	___xxtofl@arg,f
  3678  0962  3EFF               	addlw	-1
  3679  0963  1D03               	skipz
  3680  0964  295D               	goto	u3835
  3681  0965                     l3340:
  3682  0965  30FE               	movlw	254
  3683  0966  057D               	andwf	___xxtofl@arg+3,w
  3684  0967  1D03               	btfss	3,2
  3685  0968  296A               	goto	u3841
  3686  0969  296B               	goto	u3840
  3687  096A                     u3841:
  3688  096A  2958               	goto	l3338
  3689  096B                     u3840:
  3690  096B  2987               	goto	l1126
  3691  096C                     l3342:
  3692  096C  3001               	movlw	1
  3693  096D  00F4               	movwf	??___xxtofl
  3694  096E  0874               	movf	??___xxtofl,w
  3695  096F  07F9               	addwf	___xxtofl@exp,f
  3696  0970                     l3344:
  3697  0970  3001               	movlw	1
  3698  0971  07FA               	addwf	___xxtofl@arg,f
  3699  0972  3000               	movlw	0
  3700  0973  1803               	skipnc
  3701  0974  3001               	movlw	1
  3702  0975  07FB               	addwf	___xxtofl@arg+1,f
  3703  0976  3000               	movlw	0
  3704  0977  1803               	skipnc
  3705  0978  3001               	movlw	1
  3706  0979  07FC               	addwf	___xxtofl@arg+2,f
  3707  097A  3000               	movlw	0
  3708  097B  1803               	skipnc
  3709  097C  3001               	movlw	1
  3710  097D  07FD               	addwf	___xxtofl@arg+3,f
  3711  097E                     l3346:
  3712  097E  3001               	movlw	1
  3713  097F                     u3855:
  3714  097F  1003               	clrc
  3715  0980  0CFD               	rrf	___xxtofl@arg+3,f
  3716  0981  0CFC               	rrf	___xxtofl@arg+2,f
  3717  0982  0CFB               	rrf	___xxtofl@arg+1,f
  3718  0983  0CFA               	rrf	___xxtofl@arg,f
  3719  0984  3EFF               	addlw	-1
  3720  0985  1D03               	skipz
  3721  0986  297F               	goto	u3855
  3722  0987                     l1126:
  3723  0987  30FF               	movlw	255
  3724  0988  057D               	andwf	___xxtofl@arg+3,w
  3725  0989  1D03               	btfss	3,2
  3726  098A  298C               	goto	u3861
  3727  098B  298D               	goto	u3860
  3728  098C                     u3861:
  3729  098C  296C               	goto	l3342
  3730  098D                     u3860:
  3731  098D  2999               	goto	l3350
  3732  098E                     l3348:
  3733  098E  3001               	movlw	1
  3734  098F  02F9               	subwf	___xxtofl@exp,f
  3735  0990  3001               	movlw	1
  3736  0991  00F4               	movwf	??___xxtofl
  3737  0992                     u3875:
  3738  0992  1003               	clrc
  3739  0993  0DFA               	rlf	___xxtofl@arg,f
  3740  0994  0DFB               	rlf	___xxtofl@arg+1,f
  3741  0995  0DFC               	rlf	___xxtofl@arg+2,f
  3742  0996  0DFD               	rlf	___xxtofl@arg+3,f
  3743  0997  0BF4               	decfsz	??___xxtofl,f
  3744  0998  2992               	goto	u3875
  3745  0999                     l3350:
  3746  0999  1BFC               	btfsc	___xxtofl@arg+2,7
  3747  099A  299C               	goto	u3881
  3748  099B  299D               	goto	u3880
  3749  099C                     u3881:
  3750  099C  29A3               	goto	l1133
  3751  099D                     u3880:
  3752  099D                     l3352:
  3753  099D  3002               	movlw	2
  3754  099E  0279               	subwf	___xxtofl@exp,w
  3755  099F  1803               	skipnc
  3756  09A0  29A2               	goto	u3891
  3757  09A1  29A3               	goto	u3890
  3758  09A2                     u3891:
  3759  09A2  298E               	goto	l3348
  3760  09A3                     u3890:
  3761  09A3                     l1133:
  3762  09A3  1879               	btfsc	___xxtofl@exp,0
  3763  09A4  29A6               	goto	u3901
  3764  09A5  29A7               	goto	u3900
  3765  09A6                     u3901:
  3766  09A6  29AF               	goto	l1134
  3767  09A7                     u3900:
  3768  09A7                     l3354:
  3769  09A7  30FF               	movlw	255
  3770  09A8  05FA               	andwf	___xxtofl@arg,f
  3771  09A9  30FF               	movlw	255
  3772  09AA  05FB               	andwf	___xxtofl@arg+1,f
  3773  09AB  307F               	movlw	127
  3774  09AC  05FC               	andwf	___xxtofl@arg+2,f
  3775  09AD  30FF               	movlw	255
  3776  09AE  05FD               	andwf	___xxtofl@arg+3,f
  3777  09AF                     l1134:
  3778  09AF  1003               	clrc
  3779  09B0  0CF9               	rrf	___xxtofl@exp,f
  3780  09B1                     l3356:
  3781  09B1  0879               	movf	___xxtofl@exp,w
  3782  09B2  00F4               	movwf	??___xxtofl
  3783  09B3  01F5               	clrf	??___xxtofl+1
  3784  09B4  01F6               	clrf	??___xxtofl+2
  3785  09B5  01F7               	clrf	??___xxtofl+3
  3786  09B6  3018               	movlw	24
  3787  09B7                     u3915:
  3788  09B7  1003               	clrc
  3789  09B8  0DF4               	rlf	??___xxtofl,f
  3790  09B9  0DF5               	rlf	??___xxtofl+1,f
  3791  09BA  0DF6               	rlf	??___xxtofl+2,f
  3792  09BB  0DF7               	rlf	??___xxtofl+3,f
  3793  09BC                     u3910:
  3794  09BC  3EFF               	addlw	-1
  3795  09BD  1D03               	skipz
  3796  09BE  29B7               	goto	u3915
  3797  09BF  0874               	movf	??___xxtofl,w
  3798  09C0  04FA               	iorwf	___xxtofl@arg,f
  3799  09C1  0875               	movf	??___xxtofl+1,w
  3800  09C2  04FB               	iorwf	___xxtofl@arg+1,f
  3801  09C3  0876               	movf	??___xxtofl+2,w
  3802  09C4  04FC               	iorwf	___xxtofl@arg+2,f
  3803  09C5  0877               	movf	??___xxtofl+3,w
  3804  09C6  04FD               	iorwf	___xxtofl@arg+3,f
  3805  09C7                     l3358:
  3806  09C7  0878               	movf	___xxtofl@sign,w
  3807  09C8  1903               	btfsc	3,2
  3808  09C9  29CB               	goto	u3921
  3809  09CA  29CC               	goto	u3920
  3810  09CB                     u3921:
  3811  09CB  29D1               	goto	l3364
  3812  09CC                     u3920:
  3813  09CC                     l3360:
  3814  09CC  1FF3               	btfss	___xxtofl@val+3,7
  3815  09CD  29CF               	goto	u3931
  3816  09CE  29D0               	goto	u3930
  3817  09CF                     u3931:
  3818  09CF  29D1               	goto	l3364
  3819  09D0                     u3930:
  3820  09D0                     l3362:
  3821  09D0  17FD               	bsf	___xxtofl@arg+3,7
  3822  09D1                     l3364:
  3823  09D1  087D               	movf	___xxtofl@arg+3,w
  3824  09D2  00F3               	movwf	?___xxtofl+3
  3825  09D3  087C               	movf	___xxtofl@arg+2,w
  3826  09D4  00F2               	movwf	?___xxtofl+2
  3827  09D5  087B               	movf	___xxtofl@arg+1,w
  3828  09D6  00F1               	movwf	?___xxtofl+1
  3829  09D7  087A               	movf	___xxtofl@arg,w
  3830  09D8  00F0               	movwf	?___xxtofl
  3831  09D9                     l1122:
  3832  09D9  0008               	return
  3833  09DA                     __end_of___xxtofl:
  3834                           
  3835                           	psect	text4
  3836  1665                     __ptext4:	
  3837 ;; *************** function ___fltol *****************
  3838 ;; Defined at:
  3839 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\fltol.c"
  3840 ;; Parameters:    Size  Location     Type
  3841 ;;  f1              4   46[BANK0 ] unsigned char 
  3842 ;; Auto vars:     Size  Location     Type
  3843 ;;  exp1            1   56[BANK0 ] unsigned char 
  3844 ;;  sign1           1   55[BANK0 ] unsigned char 
  3845 ;; Return value:  Size  Location     Type
  3846 ;;                  4   46[BANK0 ] long 
  3847 ;; Registers used:
  3848 ;;		wreg, status,2, status,0
  3849 ;; Tracked objects:
  3850 ;;		On entry : 0/0
  3851 ;;		On exit  : 0/0
  3852 ;;		Unchanged: 0/0
  3853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3854 ;;      Params:         0       4       0       0       0
  3855 ;;      Locals:         0       2       0       0       0
  3856 ;;      Temps:          0       5       0       0       0
  3857 ;;      Totals:         0      11       0       0       0
  3858 ;;Total ram usage:       11 bytes
  3859 ;; Hardware stack levels used: 1
  3860 ;; This function calls:
  3861 ;;		Nothing
  3862 ;; This function is called by:
  3863 ;;		_Update_Farenheit
  3864 ;;		_Update_Celsius
  3865 ;; This function uses a non-reentrant model
  3866 ;;
  3867                           
  3868  1665                     ___fltol:	
  3869                           ;psect for function ___fltol
  3870                           
  3871  1665                     l2954:	
  3872                           ;incstack = 0
  3873                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  3874                           
  3875  1665  1003               	clrc
  3876  1666  1283               	bcf	3,5	;RP0=0, select bank0
  3877  1667  1303               	bcf	3,6	;RP1=0, select bank0
  3878  1668  0D50               	rlf	___fltol@f1+2,w
  3879  1669  0D51               	rlf	___fltol@f1+3,w
  3880  166A  00D2               	movwf	??___fltol
  3881  166B  0852               	movf	??___fltol,w
  3882  166C  00D8               	movwf	___fltol@exp1
  3883  166D  0858               	movf	___fltol@exp1,w
  3884  166E  1D03               	btfss	3,2
  3885  166F  2E71               	goto	u2871
  3886  1670  2E72               	goto	u2870
  3887  1671                     u2871:
  3888  1671  2E7B               	goto	l2960
  3889  1672                     u2870:
  3890  1672                     l2956:
  3891  1672  3000               	movlw	0
  3892  1673  00D1               	movwf	?___fltol+3
  3893  1674  3000               	movlw	0
  3894  1675  00D0               	movwf	?___fltol+2
  3895  1676  3000               	movlw	0
  3896  1677  00CF               	movwf	?___fltol+1
  3897  1678  3000               	movlw	0
  3898  1679  00CE               	movwf	?___fltol
  3899  167A  2EE0               	goto	l873
  3900  167B                     l2960:
  3901  167B  084E               	movf	___fltol@f1,w
  3902  167C  00D2               	movwf	??___fltol
  3903  167D  084F               	movf	___fltol@f1+1,w
  3904  167E  00D3               	movwf	??___fltol+1
  3905  167F  0850               	movf	___fltol@f1+2,w
  3906  1680  00D4               	movwf	??___fltol+2
  3907  1681  0851               	movf	___fltol@f1+3,w
  3908  1682  00D5               	movwf	??___fltol+3
  3909  1683  301F               	movlw	31
  3910  1684                     u2885:
  3911  1684  1003               	clrc
  3912  1685  0CD5               	rrf	??___fltol+3,f
  3913  1686  0CD4               	rrf	??___fltol+2,f
  3914  1687  0CD3               	rrf	??___fltol+1,f
  3915  1688  0CD2               	rrf	??___fltol,f
  3916  1689                     u2880:
  3917  1689  3EFF               	addlw	-1
  3918  168A  1D03               	skipz
  3919  168B  2E84               	goto	u2885
  3920  168C  0852               	movf	??___fltol,w
  3921  168D  00D6               	movwf	??___fltol+4
  3922  168E  0856               	movf	??___fltol+4,w
  3923  168F  00D7               	movwf	___fltol@sign1
  3924  1690                     l2962:
  3925  1690  17D0               	bsf	___fltol@f1+2,7
  3926  1691                     l2964:
  3927  1691  30FF               	movlw	255
  3928  1692  05CE               	andwf	___fltol@f1,f
  3929  1693  30FF               	movlw	255
  3930  1694  05CF               	andwf	___fltol@f1+1,f
  3931  1695  30FF               	movlw	255
  3932  1696  05D0               	andwf	___fltol@f1+2,f
  3933  1697  3000               	movlw	0
  3934  1698  05D1               	andwf	___fltol@f1+3,f
  3935  1699                     l2966:
  3936  1699  3096               	movlw	150
  3937  169A  02D8               	subwf	___fltol@exp1,f
  3938  169B                     l2968:
  3939  169B  1FD8               	btfss	___fltol@exp1,7
  3940  169C  2E9E               	goto	u2891
  3941  169D  2E9F               	goto	u2890
  3942  169E                     u2891:
  3943  169E  2EB9               	goto	l2978
  3944  169F                     u2890:
  3945  169F                     l2970:
  3946  169F  0858               	movf	___fltol@exp1,w
  3947  16A0  3A80               	xorlw	128
  3948  16A1  3E97               	addlw	151
  3949  16A2  1803               	skipnc
  3950  16A3  2EA5               	goto	u2901
  3951  16A4  2EA6               	goto	u2900
  3952  16A5                     u2901:
  3953  16A5  2EA7               	goto	l2976
  3954  16A6                     u2900:
  3955  16A6  2E72               	goto	l2956
  3956  16A7                     l2976:
  3957  16A7  3001               	movlw	1
  3958  16A8                     u2915:
  3959  16A8  1003               	clrc
  3960  16A9  0CD1               	rrf	___fltol@f1+3,f
  3961  16AA  0CD0               	rrf	___fltol@f1+2,f
  3962  16AB  0CCF               	rrf	___fltol@f1+1,f
  3963  16AC  0CCE               	rrf	___fltol@f1,f
  3964  16AD  3EFF               	addlw	-1
  3965  16AE  1D03               	skipz
  3966  16AF  2EA8               	goto	u2915
  3967  16B0  3001               	movlw	1
  3968  16B1  00D2               	movwf	??___fltol
  3969  16B2  0852               	movf	??___fltol,w
  3970  16B3  07D8               	addwf	___fltol@exp1,f
  3971  16B4  1D03               	btfss	3,2
  3972  16B5  2EB7               	goto	u2921
  3973  16B6  2EB8               	goto	u2920
  3974  16B7                     u2921:
  3975  16B7  2EA7               	goto	l2976
  3976  16B8                     u2920:
  3977  16B8  2ED0               	goto	l2986
  3978  16B9                     l2978:
  3979  16B9  3020               	movlw	32
  3980  16BA  0258               	subwf	___fltol@exp1,w
  3981  16BB  1C03               	skipc
  3982  16BC  2EBE               	goto	u2931
  3983  16BD  2EBF               	goto	u2930
  3984  16BE                     u2931:
  3985  16BE  2ECB               	goto	l880
  3986  16BF                     u2930:
  3987  16BF  2E72               	goto	l2956
  3988  16C0                     l2984:
  3989  16C0  3001               	movlw	1
  3990  16C1  00D2               	movwf	??___fltol
  3991  16C2                     u2945:
  3992  16C2  1003               	clrc
  3993  16C3  0DCE               	rlf	___fltol@f1,f
  3994  16C4  0DCF               	rlf	___fltol@f1+1,f
  3995  16C5  0DD0               	rlf	___fltol@f1+2,f
  3996  16C6  0DD1               	rlf	___fltol@f1+3,f
  3997  16C7  0BD2               	decfsz	??___fltol,f
  3998  16C8  2EC2               	goto	u2945
  3999  16C9  3001               	movlw	1
  4000  16CA  02D8               	subwf	___fltol@exp1,f
  4001  16CB                     l880:
  4002  16CB  0858               	movf	___fltol@exp1,w
  4003  16CC  1D03               	btfss	3,2
  4004  16CD  2ECF               	goto	u2951
  4005  16CE  2ED0               	goto	u2950
  4006  16CF                     u2951:
  4007  16CF  2EC0               	goto	l2984
  4008  16D0                     u2950:
  4009  16D0                     l2986:
  4010  16D0  0857               	movf	___fltol@sign1,w
  4011  16D1  1903               	btfsc	3,2
  4012  16D2  2ED4               	goto	u2961
  4013  16D3  2ED5               	goto	u2960
  4014  16D4                     u2961:
  4015  16D4  2EE0               	goto	l883
  4016  16D5                     u2960:
  4017  16D5                     l2988:
  4018  16D5  09CE               	comf	___fltol@f1,f
  4019  16D6  09CF               	comf	___fltol@f1+1,f
  4020  16D7  09D0               	comf	___fltol@f1+2,f
  4021  16D8  09D1               	comf	___fltol@f1+3,f
  4022  16D9  0ACE               	incf	___fltol@f1,f
  4023  16DA  1903               	skipnz
  4024  16DB  0ACF               	incf	___fltol@f1+1,f
  4025  16DC  1903               	skipnz
  4026  16DD  0AD0               	incf	___fltol@f1+2,f
  4027  16DE  1903               	skipnz
  4028  16DF  0AD1               	incf	___fltol@f1+3,f
  4029  16E0                     l883:
  4030  16E0                     l873:
  4031  16E0  0008               	return
  4032  16E1                     __end_of___fltol:
  4033                           
  4034                           	psect	text5
  4035  004A                     __ptext5:	
  4036 ;; *************** function ___flmul *****************
  4037 ;; Defined at:
  4038 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\sprcmul.c"
  4039 ;; Parameters:    Size  Location     Type
  4040 ;;  b               4    0[BANK0 ] long 
  4041 ;;  a               4    4[BANK0 ] long 
  4042 ;; Auto vars:     Size  Location     Type
  4043 ;;  prod            4   20[BANK0 ] struct .
  4044 ;;  grs             4   14[BANK0 ] unsigned long 
  4045 ;;  temp            2   24[BANK0 ] struct .
  4046 ;;  bexp            1   19[BANK0 ] unsigned char 
  4047 ;;  aexp            1   18[BANK0 ] unsigned char 
  4048 ;;  sign            1   13[BANK0 ] unsigned char 
  4049 ;; Return value:  Size  Location     Type
  4050 ;;                  4    0[BANK0 ] unsigned char 
  4051 ;; Registers used:
  4052 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4053 ;; Tracked objects:
  4054 ;;		On entry : 0/0
  4055 ;;		On exit  : 0/0
  4056 ;;		Unchanged: 0/0
  4057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4058 ;;      Params:         0       8       0       0       0
  4059 ;;      Locals:         0      13       0       0       0
  4060 ;;      Temps:          0       5       0       0       0
  4061 ;;      Totals:         0      26       0       0       0
  4062 ;;Total ram usage:       26 bytes
  4063 ;; Hardware stack levels used: 1
  4064 ;; Hardware stack levels required when called: 1
  4065 ;; This function calls:
  4066 ;;		__Umul8_16
  4067 ;; This function is called by:
  4068 ;;		_Update_Farenheit
  4069 ;;		_Update_Celsius
  4070 ;; This function uses a non-reentrant model
  4071 ;;
  4072                           
  4073  004A                     ___flmul:	
  4074                           ;psect for function ___flmul
  4075                           
  4076  004A                     l3184:	
  4077                           ;incstack = 0
  4078                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4079                           
  4080  004A  1283               	bcf	3,5	;RP0=0, select bank0
  4081  004B  1303               	bcf	3,6	;RP1=0, select bank0
  4082  004C  0823               	movf	___flmul@b+3,w
  4083  004D  3980               	andlw	128
  4084  004E  00A8               	movwf	??___flmul
  4085  004F  0828               	movf	??___flmul,w
  4086  0050  00AD               	movwf	___flmul@sign
  4087  0051                     l3186:
  4088  0051  0823               	movf	___flmul@b+3,w
  4089  0052  00A8               	movwf	??___flmul
  4090  0053  0728               	addwf	??___flmul,w
  4091  0054  00A9               	movwf	??___flmul+1
  4092  0055  0829               	movf	??___flmul+1,w
  4093  0056  00B3               	movwf	___flmul@bexp
  4094  0057                     l3188:
  4095  0057  1FA2               	btfss	___flmul@b+2,7
  4096  0058  285A               	goto	u3431
  4097  0059  285B               	goto	u3430
  4098  005A                     u3431:
  4099  005A  285C               	goto	l3192
  4100  005B                     u3430:
  4101  005B                     l3190:
  4102  005B  1433               	bsf	___flmul@bexp,0
  4103  005C                     l3192:
  4104  005C  0833               	movf	___flmul@bexp,w
  4105  005D  1903               	btfsc	3,2
  4106  005E  2860               	goto	u3441
  4107  005F  2861               	goto	u3440
  4108  0060                     u3441:
  4109  0060  2870               	goto	l3200
  4110  0061                     u3440:
  4111  0061                     l3194:
  4112  0061  0A33               	incf	___flmul@bexp,w
  4113  0062  1D03               	btfss	3,2
  4114  0063  2865               	goto	u3451
  4115  0064  2866               	goto	u3450
  4116  0065                     u3451:
  4117  0065  286E               	goto	l3198
  4118  0066                     u3450:
  4119  0066                     l3196:
  4120  0066  3000               	movlw	0
  4121  0067  00A3               	movwf	___flmul@b+3
  4122  0068  3000               	movlw	0
  4123  0069  00A2               	movwf	___flmul@b+2
  4124  006A  3000               	movlw	0
  4125  006B  00A1               	movwf	___flmul@b+1
  4126  006C  3000               	movlw	0
  4127  006D  00A0               	movwf	___flmul@b
  4128  006E                     l3198:
  4129  006E  17A2               	bsf	___flmul@b+2,7
  4130  006F  2878               	goto	l3202
  4131  0070                     l3200:
  4132  0070  3000               	movlw	0
  4133  0071  00A3               	movwf	___flmul@b+3
  4134  0072  3000               	movlw	0
  4135  0073  00A2               	movwf	___flmul@b+2
  4136  0074  3000               	movlw	0
  4137  0075  00A1               	movwf	___flmul@b+1
  4138  0076  3000               	movlw	0
  4139  0077  00A0               	movwf	___flmul@b
  4140  0078                     l3202:
  4141  0078  0827               	movf	___flmul@a+3,w
  4142  0079  3980               	andlw	128
  4143  007A  00A8               	movwf	??___flmul
  4144  007B  0828               	movf	??___flmul,w
  4145  007C  06AD               	xorwf	___flmul@sign,f
  4146  007D                     l3204:
  4147  007D  0827               	movf	___flmul@a+3,w
  4148  007E  00A8               	movwf	??___flmul
  4149  007F  0728               	addwf	??___flmul,w
  4150  0080  00A9               	movwf	??___flmul+1
  4151  0081  0829               	movf	??___flmul+1,w
  4152  0082  00B2               	movwf	___flmul@aexp
  4153  0083                     l3206:
  4154  0083  1FA6               	btfss	___flmul@a+2,7
  4155  0084  2886               	goto	u3461
  4156  0085  2887               	goto	u3460
  4157  0086                     u3461:
  4158  0086  2888               	goto	l3210
  4159  0087                     u3460:
  4160  0087                     l3208:
  4161  0087  1432               	bsf	___flmul@aexp,0
  4162  0088                     l3210:
  4163  0088  0832               	movf	___flmul@aexp,w
  4164  0089  1903               	btfsc	3,2
  4165  008A  288C               	goto	u3471
  4166  008B  288D               	goto	u3470
  4167  008C                     u3471:
  4168  008C  289C               	goto	l3218
  4169  008D                     u3470:
  4170  008D                     l3212:
  4171  008D  0A32               	incf	___flmul@aexp,w
  4172  008E  1D03               	btfss	3,2
  4173  008F  2891               	goto	u3481
  4174  0090  2892               	goto	u3480
  4175  0091                     u3481:
  4176  0091  289A               	goto	l3216
  4177  0092                     u3480:
  4178  0092                     l3214:
  4179  0092  3000               	movlw	0
  4180  0093  00A7               	movwf	___flmul@a+3
  4181  0094  3000               	movlw	0
  4182  0095  00A6               	movwf	___flmul@a+2
  4183  0096  3000               	movlw	0
  4184  0097  00A5               	movwf	___flmul@a+1
  4185  0098  3000               	movlw	0
  4186  0099  00A4               	movwf	___flmul@a
  4187  009A                     l3216:
  4188  009A  17A6               	bsf	___flmul@a+2,7
  4189  009B  28A4               	goto	l3220
  4190  009C                     l3218:
  4191  009C  3000               	movlw	0
  4192  009D  00A7               	movwf	___flmul@a+3
  4193  009E  3000               	movlw	0
  4194  009F  00A6               	movwf	___flmul@a+2
  4195  00A0  3000               	movlw	0
  4196  00A1  00A5               	movwf	___flmul@a+1
  4197  00A2  3000               	movlw	0
  4198  00A3  00A4               	movwf	___flmul@a
  4199  00A4                     l3220:
  4200  00A4  0832               	movf	___flmul@aexp,w
  4201  00A5  1903               	btfsc	3,2
  4202  00A6  28A8               	goto	u3491
  4203  00A7  28A9               	goto	u3490
  4204  00A8                     u3491:
  4205  00A8  28AE               	goto	l3224
  4206  00A9                     u3490:
  4207  00A9                     l3222:
  4208  00A9  0833               	movf	___flmul@bexp,w
  4209  00AA  1D03               	btfss	3,2
  4210  00AB  28AD               	goto	u3501
  4211  00AC  28AE               	goto	u3500
  4212  00AD                     u3501:
  4213  00AD  28B7               	goto	l3228
  4214  00AE                     u3500:
  4215  00AE                     l3224:
  4216  00AE  3000               	movlw	0
  4217  00AF  00A3               	movwf	?___flmul+3
  4218  00B0  3000               	movlw	0
  4219  00B1  00A2               	movwf	?___flmul+2
  4220  00B2  3000               	movlw	0
  4221  00B3  00A1               	movwf	?___flmul+1
  4222  00B4  3000               	movlw	0
  4223  00B5  00A0               	movwf	?___flmul
  4224  00B6  2BAA               	goto	l1076
  4225  00B7                     l3228:
  4226  00B7  0820               	movf	___flmul@b,w
  4227  00B8  00A8               	movwf	??___flmul
  4228  00B9  0828               	movf	??___flmul,w
  4229  00BA  00F0               	movwf	__Umul8_16@multiplicand
  4230  00BB  0826               	movf	___flmul@a+2,w
  4231  00BC  160A  118A  23DE  120A  118A  	fcall	__Umul8_16
  4232  00C1  0871               	movf	?__Umul8_16+1,w
  4233  00C2  1283               	bcf	3,5	;RP0=0, select bank0
  4234  00C3  1303               	bcf	3,6	;RP1=0, select bank0
  4235  00C4  00B9               	movwf	___flmul@temp+1
  4236  00C5  0870               	movf	?__Umul8_16,w
  4237  00C6  00B8               	movwf	___flmul@temp
  4238  00C7                     l3230:
  4239  00C7  0838               	movf	___flmul@temp,w
  4240  00C8  00A8               	movwf	??___flmul
  4241  00C9  01A9               	clrf	??___flmul+1
  4242  00CA  01AA               	clrf	??___flmul+2
  4243  00CB  01AB               	clrf	??___flmul+3
  4244  00CC  082B               	movf	??___flmul+3,w
  4245  00CD  00B1               	movwf	___flmul@grs+3
  4246  00CE  082A               	movf	??___flmul+2,w
  4247  00CF  00B0               	movwf	___flmul@grs+2
  4248  00D0  0829               	movf	??___flmul+1,w
  4249  00D1  00AF               	movwf	___flmul@grs+1
  4250  00D2  0828               	movf	??___flmul,w
  4251  00D3  00AE               	movwf	___flmul@grs
  4252  00D4                     l3232:
  4253  00D4  0839               	movf	___flmul@temp+1,w
  4254  00D5  00A8               	movwf	??___flmul
  4255  00D6  01A9               	clrf	??___flmul+1
  4256  00D7  01AA               	clrf	??___flmul+2
  4257  00D8  01AB               	clrf	??___flmul+3
  4258  00D9  082B               	movf	??___flmul+3,w
  4259  00DA  00B7               	movwf	___flmul@prod+3
  4260  00DB  082A               	movf	??___flmul+2,w
  4261  00DC  00B6               	movwf	___flmul@prod+2
  4262  00DD  0829               	movf	??___flmul+1,w
  4263  00DE  00B5               	movwf	___flmul@prod+1
  4264  00DF  0828               	movf	??___flmul,w
  4265  00E0  00B4               	movwf	___flmul@prod
  4266  00E1  0821               	movf	___flmul@b+1,w
  4267  00E2  00A8               	movwf	??___flmul
  4268  00E3  0828               	movf	??___flmul,w
  4269  00E4  00F0               	movwf	__Umul8_16@multiplicand
  4270  00E5  0825               	movf	___flmul@a+1,w
  4271  00E6  160A  118A  23DE  120A  118A  	fcall	__Umul8_16
  4272  00EB  0871               	movf	?__Umul8_16+1,w
  4273  00EC  1283               	bcf	3,5	;RP0=0, select bank0
  4274  00ED  1303               	bcf	3,6	;RP1=0, select bank0
  4275  00EE  00B9               	movwf	___flmul@temp+1
  4276  00EF  0870               	movf	?__Umul8_16,w
  4277  00F0  00B8               	movwf	___flmul@temp
  4278  00F1                     l3234:
  4279  00F1  0838               	movf	___flmul@temp,w
  4280  00F2  00A8               	movwf	??___flmul
  4281  00F3  01A9               	clrf	??___flmul+1
  4282  00F4  01AA               	clrf	??___flmul+2
  4283  00F5  01AB               	clrf	??___flmul+3
  4284  00F6  0828               	movf	??___flmul,w
  4285  00F7  07AE               	addwf	___flmul@grs,f
  4286  00F8  0829               	movf	??___flmul+1,w
  4287  00F9  1103               	clrz
  4288  00FA  1803               	skipnc
  4289  00FB  3E01               	addlw	1
  4290  00FC  1903               	skipnz
  4291  00FD  28FF               	goto	u3511
  4292  00FE  07AF               	addwf	___flmul@grs+1,f
  4293  00FF                     u3511:
  4294  00FF  082A               	movf	??___flmul+2,w
  4295  0100  1103               	clrz
  4296  0101  1803               	skipnc
  4297  0102  3E01               	addlw	1
  4298  0103  1903               	skipnz
  4299  0104  2906               	goto	u3512
  4300  0105  07B0               	addwf	___flmul@grs+2,f
  4301  0106                     u3512:
  4302  0106  082B               	movf	??___flmul+3,w
  4303  0107  1103               	clrz
  4304  0108  1803               	skipnc
  4305  0109  3E01               	addlw	1
  4306  010A  1903               	skipnz
  4307  010B  290D               	goto	u3513
  4308  010C  07B1               	addwf	___flmul@grs+3,f
  4309  010D                     u3513:
  4310  010D                     l3236:
  4311  010D  0839               	movf	___flmul@temp+1,w
  4312  010E  00A8               	movwf	??___flmul
  4313  010F  01A9               	clrf	??___flmul+1
  4314  0110  01AA               	clrf	??___flmul+2
  4315  0111  01AB               	clrf	??___flmul+3
  4316  0112  0828               	movf	??___flmul,w
  4317  0113  07B4               	addwf	___flmul@prod,f
  4318  0114  0829               	movf	??___flmul+1,w
  4319  0115  1103               	clrz
  4320  0116  1803               	skipnc
  4321  0117  3E01               	addlw	1
  4322  0118  1903               	skipnz
  4323  0119  291B               	goto	u3521
  4324  011A  07B5               	addwf	___flmul@prod+1,f
  4325  011B                     u3521:
  4326  011B  082A               	movf	??___flmul+2,w
  4327  011C  1103               	clrz
  4328  011D  1803               	skipnc
  4329  011E  3E01               	addlw	1
  4330  011F  1903               	skipnz
  4331  0120  2922               	goto	u3522
  4332  0121  07B6               	addwf	___flmul@prod+2,f
  4333  0122                     u3522:
  4334  0122  082B               	movf	??___flmul+3,w
  4335  0123  1103               	clrz
  4336  0124  1803               	skipnc
  4337  0125  3E01               	addlw	1
  4338  0126  1903               	skipnz
  4339  0127  2929               	goto	u3523
  4340  0128  07B7               	addwf	___flmul@prod+3,f
  4341  0129                     u3523:
  4342  0129  0822               	movf	___flmul@b+2,w
  4343  012A  00A8               	movwf	??___flmul
  4344  012B  0828               	movf	??___flmul,w
  4345  012C  00F0               	movwf	__Umul8_16@multiplicand
  4346  012D  0824               	movf	___flmul@a,w
  4347  012E  160A  118A  23DE  120A  118A  	fcall	__Umul8_16
  4348  0133  0871               	movf	?__Umul8_16+1,w
  4349  0134  1283               	bcf	3,5	;RP0=0, select bank0
  4350  0135  1303               	bcf	3,6	;RP1=0, select bank0
  4351  0136  00B9               	movwf	___flmul@temp+1
  4352  0137  0870               	movf	?__Umul8_16,w
  4353  0138  00B8               	movwf	___flmul@temp
  4354  0139                     l3238:
  4355  0139  0838               	movf	___flmul@temp,w
  4356  013A  00A8               	movwf	??___flmul
  4357  013B  01A9               	clrf	??___flmul+1
  4358  013C  01AA               	clrf	??___flmul+2
  4359  013D  01AB               	clrf	??___flmul+3
  4360  013E  0828               	movf	??___flmul,w
  4361  013F  07AE               	addwf	___flmul@grs,f
  4362  0140  0829               	movf	??___flmul+1,w
  4363  0141  1103               	clrz
  4364  0142  1803               	skipnc
  4365  0143  3E01               	addlw	1
  4366  0144  1903               	skipnz
  4367  0145  2947               	goto	u3531
  4368  0146  07AF               	addwf	___flmul@grs+1,f
  4369  0147                     u3531:
  4370  0147  082A               	movf	??___flmul+2,w
  4371  0148  1103               	clrz
  4372  0149  1803               	skipnc
  4373  014A  3E01               	addlw	1
  4374  014B  1903               	skipnz
  4375  014C  294E               	goto	u3532
  4376  014D  07B0               	addwf	___flmul@grs+2,f
  4377  014E                     u3532:
  4378  014E  082B               	movf	??___flmul+3,w
  4379  014F  1103               	clrz
  4380  0150  1803               	skipnc
  4381  0151  3E01               	addlw	1
  4382  0152  1903               	skipnz
  4383  0153  2955               	goto	u3533
  4384  0154  07B1               	addwf	___flmul@grs+3,f
  4385  0155                     u3533:
  4386  0155                     l3240:
  4387  0155  0839               	movf	___flmul@temp+1,w
  4388  0156  00A8               	movwf	??___flmul
  4389  0157  01A9               	clrf	??___flmul+1
  4390  0158  01AA               	clrf	??___flmul+2
  4391  0159  01AB               	clrf	??___flmul+3
  4392  015A  0828               	movf	??___flmul,w
  4393  015B  07B4               	addwf	___flmul@prod,f
  4394  015C  0829               	movf	??___flmul+1,w
  4395  015D  1103               	clrz
  4396  015E  1803               	skipnc
  4397  015F  3E01               	addlw	1
  4398  0160  1903               	skipnz
  4399  0161  2963               	goto	u3541
  4400  0162  07B5               	addwf	___flmul@prod+1,f
  4401  0163                     u3541:
  4402  0163  082A               	movf	??___flmul+2,w
  4403  0164  1103               	clrz
  4404  0165  1803               	skipnc
  4405  0166  3E01               	addlw	1
  4406  0167  1903               	skipnz
  4407  0168  296A               	goto	u3542
  4408  0169  07B6               	addwf	___flmul@prod+2,f
  4409  016A                     u3542:
  4410  016A  082B               	movf	??___flmul+3,w
  4411  016B  1103               	clrz
  4412  016C  1803               	skipnc
  4413  016D  3E01               	addlw	1
  4414  016E  1903               	skipnz
  4415  016F  2971               	goto	u3543
  4416  0170  07B7               	addwf	___flmul@prod+3,f
  4417  0171                     u3543:
  4418  0171                     l3242:
  4419  0171  3008               	movlw	8
  4420  0172  00A8               	movwf	??___flmul
  4421  0173                     u3555:
  4422  0173  1003               	clrc
  4423  0174  0DAE               	rlf	___flmul@grs,f
  4424  0175  0DAF               	rlf	___flmul@grs+1,f
  4425  0176  0DB0               	rlf	___flmul@grs+2,f
  4426  0177  0DB1               	rlf	___flmul@grs+3,f
  4427  0178  0BA8               	decfsz	??___flmul,f
  4428  0179  2973               	goto	u3555
  4429  017A                     l3244:
  4430  017A  0821               	movf	___flmul@b+1,w
  4431  017B  00A8               	movwf	??___flmul
  4432  017C  0828               	movf	??___flmul,w
  4433  017D  00F0               	movwf	__Umul8_16@multiplicand
  4434  017E  0824               	movf	___flmul@a,w
  4435  017F  160A  118A  23DE  120A  118A  	fcall	__Umul8_16
  4436  0184  0871               	movf	?__Umul8_16+1,w
  4437  0185  1283               	bcf	3,5	;RP0=0, select bank0
  4438  0186  1303               	bcf	3,6	;RP1=0, select bank0
  4439  0187  00B9               	movwf	___flmul@temp+1
  4440  0188  0870               	movf	?__Umul8_16,w
  4441  0189  00B8               	movwf	___flmul@temp
  4442  018A                     l3246:
  4443  018A  0838               	movf	___flmul@temp,w
  4444  018B  00A8               	movwf	??___flmul
  4445  018C  0839               	movf	___flmul@temp+1,w
  4446  018D  00A9               	movwf	??___flmul+1
  4447  018E  01AA               	clrf	??___flmul+2
  4448  018F  01AB               	clrf	??___flmul+3
  4449  0190  0828               	movf	??___flmul,w
  4450  0191  07AE               	addwf	___flmul@grs,f
  4451  0192  0829               	movf	??___flmul+1,w
  4452  0193  1103               	clrz
  4453  0194  1803               	skipnc
  4454  0195  3E01               	addlw	1
  4455  0196  1903               	skipnz
  4456  0197  2999               	goto	u3561
  4457  0198  07AF               	addwf	___flmul@grs+1,f
  4458  0199                     u3561:
  4459  0199  082A               	movf	??___flmul+2,w
  4460  019A  1103               	clrz
  4461  019B  1803               	skipnc
  4462  019C  3E01               	addlw	1
  4463  019D  1903               	skipnz
  4464  019E  29A0               	goto	u3562
  4465  019F  07B0               	addwf	___flmul@grs+2,f
  4466  01A0                     u3562:
  4467  01A0  082B               	movf	??___flmul+3,w
  4468  01A1  1103               	clrz
  4469  01A2  1803               	skipnc
  4470  01A3  3E01               	addlw	1
  4471  01A4  1903               	skipnz
  4472  01A5  29A7               	goto	u3563
  4473  01A6  07B1               	addwf	___flmul@grs+3,f
  4474  01A7                     u3563:
  4475  01A7                     l3248:
  4476  01A7  0820               	movf	___flmul@b,w
  4477  01A8  00A8               	movwf	??___flmul
  4478  01A9  0828               	movf	??___flmul,w
  4479  01AA  00F0               	movwf	__Umul8_16@multiplicand
  4480  01AB  0825               	movf	___flmul@a+1,w
  4481  01AC  160A  118A  23DE  120A  118A  	fcall	__Umul8_16
  4482  01B1  0871               	movf	?__Umul8_16+1,w
  4483  01B2  1283               	bcf	3,5	;RP0=0, select bank0
  4484  01B3  1303               	bcf	3,6	;RP1=0, select bank0
  4485  01B4  00B9               	movwf	___flmul@temp+1
  4486  01B5  0870               	movf	?__Umul8_16,w
  4487  01B6  00B8               	movwf	___flmul@temp
  4488  01B7                     l3250:
  4489  01B7  0838               	movf	___flmul@temp,w
  4490  01B8  00A8               	movwf	??___flmul
  4491  01B9  0839               	movf	___flmul@temp+1,w
  4492  01BA  00A9               	movwf	??___flmul+1
  4493  01BB  01AA               	clrf	??___flmul+2
  4494  01BC  01AB               	clrf	??___flmul+3
  4495  01BD  0828               	movf	??___flmul,w
  4496  01BE  07AE               	addwf	___flmul@grs,f
  4497  01BF  0829               	movf	??___flmul+1,w
  4498  01C0  1103               	clrz
  4499  01C1  1803               	skipnc
  4500  01C2  3E01               	addlw	1
  4501  01C3  1903               	skipnz
  4502  01C4  29C6               	goto	u3571
  4503  01C5  07AF               	addwf	___flmul@grs+1,f
  4504  01C6                     u3571:
  4505  01C6  082A               	movf	??___flmul+2,w
  4506  01C7  1103               	clrz
  4507  01C8  1803               	skipnc
  4508  01C9  3E01               	addlw	1
  4509  01CA  1903               	skipnz
  4510  01CB  29CD               	goto	u3572
  4511  01CC  07B0               	addwf	___flmul@grs+2,f
  4512  01CD                     u3572:
  4513  01CD  082B               	movf	??___flmul+3,w
  4514  01CE  1103               	clrz
  4515  01CF  1803               	skipnc
  4516  01D0  3E01               	addlw	1
  4517  01D1  1903               	skipnz
  4518  01D2  29D4               	goto	u3573
  4519  01D3  07B1               	addwf	___flmul@grs+3,f
  4520  01D4                     u3573:
  4521  01D4                     l3252:
  4522  01D4  3008               	movlw	8
  4523  01D5  00A8               	movwf	??___flmul
  4524  01D6                     u3585:
  4525  01D6  1003               	clrc
  4526  01D7  0DAE               	rlf	___flmul@grs,f
  4527  01D8  0DAF               	rlf	___flmul@grs+1,f
  4528  01D9  0DB0               	rlf	___flmul@grs+2,f
  4529  01DA  0DB1               	rlf	___flmul@grs+3,f
  4530  01DB  0BA8               	decfsz	??___flmul,f
  4531  01DC  29D6               	goto	u3585
  4532  01DD  0820               	movf	___flmul@b,w
  4533  01DE  00A8               	movwf	??___flmul
  4534  01DF  0828               	movf	??___flmul,w
  4535  01E0  00F0               	movwf	__Umul8_16@multiplicand
  4536  01E1  0824               	movf	___flmul@a,w
  4537  01E2  160A  118A  23DE  120A  118A  	fcall	__Umul8_16
  4538  01E7  0871               	movf	?__Umul8_16+1,w
  4539  01E8  1283               	bcf	3,5	;RP0=0, select bank0
  4540  01E9  1303               	bcf	3,6	;RP1=0, select bank0
  4541  01EA  00B9               	movwf	___flmul@temp+1
  4542  01EB  0870               	movf	?__Umul8_16,w
  4543  01EC  00B8               	movwf	___flmul@temp
  4544  01ED                     l3254:
  4545  01ED  0838               	movf	___flmul@temp,w
  4546  01EE  00A8               	movwf	??___flmul
  4547  01EF  0839               	movf	___flmul@temp+1,w
  4548  01F0  00A9               	movwf	??___flmul+1
  4549  01F1  01AA               	clrf	??___flmul+2
  4550  01F2  01AB               	clrf	??___flmul+3
  4551  01F3  0828               	movf	??___flmul,w
  4552  01F4  07AE               	addwf	___flmul@grs,f
  4553  01F5  0829               	movf	??___flmul+1,w
  4554  01F6  1103               	clrz
  4555  01F7  1803               	skipnc
  4556  01F8  3E01               	addlw	1
  4557  01F9  1903               	skipnz
  4558  01FA  29FC               	goto	u3591
  4559  01FB  07AF               	addwf	___flmul@grs+1,f
  4560  01FC                     u3591:
  4561  01FC  082A               	movf	??___flmul+2,w
  4562  01FD  1103               	clrz
  4563  01FE  1803               	skipnc
  4564  01FF  3E01               	addlw	1
  4565  0200  1903               	skipnz
  4566  0201  2A03               	goto	u3592
  4567  0202  07B0               	addwf	___flmul@grs+2,f
  4568  0203                     u3592:
  4569  0203  082B               	movf	??___flmul+3,w
  4570  0204  1103               	clrz
  4571  0205  1803               	skipnc
  4572  0206  3E01               	addlw	1
  4573  0207  1903               	skipnz
  4574  0208  2A0A               	goto	u3593
  4575  0209  07B1               	addwf	___flmul@grs+3,f
  4576  020A                     u3593:
  4577  020A                     l3256:
  4578  020A  0821               	movf	___flmul@b+1,w
  4579  020B  00A8               	movwf	??___flmul
  4580  020C  0828               	movf	??___flmul,w
  4581  020D  00F0               	movwf	__Umul8_16@multiplicand
  4582  020E  0826               	movf	___flmul@a+2,w
  4583  020F  160A  118A  23DE  120A  118A  	fcall	__Umul8_16
  4584  0214  0871               	movf	?__Umul8_16+1,w
  4585  0215  1283               	bcf	3,5	;RP0=0, select bank0
  4586  0216  1303               	bcf	3,6	;RP1=0, select bank0
  4587  0217  00B9               	movwf	___flmul@temp+1
  4588  0218  0870               	movf	?__Umul8_16,w
  4589  0219  00B8               	movwf	___flmul@temp
  4590  021A  0838               	movf	___flmul@temp,w
  4591  021B  00A8               	movwf	??___flmul
  4592  021C  0839               	movf	___flmul@temp+1,w
  4593  021D  00A9               	movwf	??___flmul+1
  4594  021E  01AA               	clrf	??___flmul+2
  4595  021F  01AB               	clrf	??___flmul+3
  4596  0220  0828               	movf	??___flmul,w
  4597  0221  07B4               	addwf	___flmul@prod,f
  4598  0222  0829               	movf	??___flmul+1,w
  4599  0223  1103               	clrz
  4600  0224  1803               	skipnc
  4601  0225  3E01               	addlw	1
  4602  0226  1903               	skipnz
  4603  0227  2A29               	goto	u3601
  4604  0228  07B5               	addwf	___flmul@prod+1,f
  4605  0229                     u3601:
  4606  0229  082A               	movf	??___flmul+2,w
  4607  022A  1103               	clrz
  4608  022B  1803               	skipnc
  4609  022C  3E01               	addlw	1
  4610  022D  1903               	skipnz
  4611  022E  2A30               	goto	u3602
  4612  022F  07B6               	addwf	___flmul@prod+2,f
  4613  0230                     u3602:
  4614  0230  082B               	movf	??___flmul+3,w
  4615  0231  1103               	clrz
  4616  0232  1803               	skipnc
  4617  0233  3E01               	addlw	1
  4618  0234  1903               	skipnz
  4619  0235  2A37               	goto	u3603
  4620  0236  07B7               	addwf	___flmul@prod+3,f
  4621  0237                     u3603:
  4622  0237                     l3258:
  4623  0237  0822               	movf	___flmul@b+2,w
  4624  0238  00A8               	movwf	??___flmul
  4625  0239  0828               	movf	??___flmul,w
  4626  023A  00F0               	movwf	__Umul8_16@multiplicand
  4627  023B  0825               	movf	___flmul@a+1,w
  4628  023C  160A  118A  23DE  120A  118A  	fcall	__Umul8_16
  4629  0241  0871               	movf	?__Umul8_16+1,w
  4630  0242  1283               	bcf	3,5	;RP0=0, select bank0
  4631  0243  1303               	bcf	3,6	;RP1=0, select bank0
  4632  0244  00B9               	movwf	___flmul@temp+1
  4633  0245  0870               	movf	?__Umul8_16,w
  4634  0246  00B8               	movwf	___flmul@temp
  4635  0247                     l3260:
  4636  0247  0838               	movf	___flmul@temp,w
  4637  0248  00A8               	movwf	??___flmul
  4638  0249  0839               	movf	___flmul@temp+1,w
  4639  024A  00A9               	movwf	??___flmul+1
  4640  024B  01AA               	clrf	??___flmul+2
  4641  024C  01AB               	clrf	??___flmul+3
  4642  024D  0828               	movf	??___flmul,w
  4643  024E  07B4               	addwf	___flmul@prod,f
  4644  024F  0829               	movf	??___flmul+1,w
  4645  0250  1103               	clrz
  4646  0251  1803               	skipnc
  4647  0252  3E01               	addlw	1
  4648  0253  1903               	skipnz
  4649  0254  2A56               	goto	u3611
  4650  0255  07B5               	addwf	___flmul@prod+1,f
  4651  0256                     u3611:
  4652  0256  082A               	movf	??___flmul+2,w
  4653  0257  1103               	clrz
  4654  0258  1803               	skipnc
  4655  0259  3E01               	addlw	1
  4656  025A  1903               	skipnz
  4657  025B  2A5D               	goto	u3612
  4658  025C  07B6               	addwf	___flmul@prod+2,f
  4659  025D                     u3612:
  4660  025D  082B               	movf	??___flmul+3,w
  4661  025E  1103               	clrz
  4662  025F  1803               	skipnc
  4663  0260  3E01               	addlw	1
  4664  0261  1903               	skipnz
  4665  0262  2A64               	goto	u3613
  4666  0263  07B7               	addwf	___flmul@prod+3,f
  4667  0264                     u3613:
  4668  0264  0822               	movf	___flmul@b+2,w
  4669  0265  00A8               	movwf	??___flmul
  4670  0266  0828               	movf	??___flmul,w
  4671  0267  00F0               	movwf	__Umul8_16@multiplicand
  4672  0268  0826               	movf	___flmul@a+2,w
  4673  0269  160A  118A  23DE  120A  118A  	fcall	__Umul8_16
  4674  026E  0871               	movf	?__Umul8_16+1,w
  4675  026F  1283               	bcf	3,5	;RP0=0, select bank0
  4676  0270  1303               	bcf	3,6	;RP1=0, select bank0
  4677  0271  00B9               	movwf	___flmul@temp+1
  4678  0272  0870               	movf	?__Umul8_16,w
  4679  0273  00B8               	movwf	___flmul@temp
  4680  0274                     l3262:
  4681  0274  0838               	movf	___flmul@temp,w
  4682  0275  00A8               	movwf	??___flmul
  4683  0276  0839               	movf	___flmul@temp+1,w
  4684  0277  00A9               	movwf	??___flmul+1
  4685  0278  01AA               	clrf	??___flmul+2
  4686  0279  01AB               	clrf	??___flmul+3
  4687  027A  3008               	movlw	8
  4688  027B                     u3625:
  4689  027B  1003               	clrc
  4690  027C  0DA8               	rlf	??___flmul,f
  4691  027D  0DA9               	rlf	??___flmul+1,f
  4692  027E  0DAA               	rlf	??___flmul+2,f
  4693  027F  0DAB               	rlf	??___flmul+3,f
  4694  0280                     u3620:
  4695  0280  3EFF               	addlw	-1
  4696  0281  1D03               	skipz
  4697  0282  2A7B               	goto	u3625
  4698  0283  0828               	movf	??___flmul,w
  4699  0284  07B4               	addwf	___flmul@prod,f
  4700  0285  0829               	movf	??___flmul+1,w
  4701  0286  1103               	clrz
  4702  0287  1803               	skipnc
  4703  0288  3E01               	addlw	1
  4704  0289  1903               	skipnz
  4705  028A  2A8C               	goto	u3631
  4706  028B  07B5               	addwf	___flmul@prod+1,f
  4707  028C                     u3631:
  4708  028C  082A               	movf	??___flmul+2,w
  4709  028D  1103               	clrz
  4710  028E  1803               	skipnc
  4711  028F  3E01               	addlw	1
  4712  0290  1903               	skipnz
  4713  0291  2A93               	goto	u3632
  4714  0292  07B6               	addwf	___flmul@prod+2,f
  4715  0293                     u3632:
  4716  0293  082B               	movf	??___flmul+3,w
  4717  0294  1103               	clrz
  4718  0295  1803               	skipnc
  4719  0296  3E01               	addlw	1
  4720  0297  1903               	skipnz
  4721  0298  2A9A               	goto	u3633
  4722  0299  07B7               	addwf	___flmul@prod+3,f
  4723  029A                     u3633:
  4724  029A                     l3264:
  4725  029A  082E               	movf	___flmul@grs,w
  4726  029B  00A8               	movwf	??___flmul
  4727  029C  082F               	movf	___flmul@grs+1,w
  4728  029D  00A9               	movwf	??___flmul+1
  4729  029E  0830               	movf	___flmul@grs+2,w
  4730  029F  00AA               	movwf	??___flmul+2
  4731  02A0  0831               	movf	___flmul@grs+3,w
  4732  02A1  00AB               	movwf	??___flmul+3
  4733  02A2  3018               	movlw	24
  4734  02A3                     u3645:
  4735  02A3  1003               	clrc
  4736  02A4  0CAB               	rrf	??___flmul+3,f
  4737  02A5  0CAA               	rrf	??___flmul+2,f
  4738  02A6  0CA9               	rrf	??___flmul+1,f
  4739  02A7  0CA8               	rrf	??___flmul,f
  4740  02A8                     u3640:
  4741  02A8  3EFF               	addlw	-1
  4742  02A9  1D03               	skipz
  4743  02AA  2AA3               	goto	u3645
  4744  02AB  0828               	movf	??___flmul,w
  4745  02AC  07B4               	addwf	___flmul@prod,f
  4746  02AD  0829               	movf	??___flmul+1,w
  4747  02AE  1103               	clrz
  4748  02AF  1803               	skipnc
  4749  02B0  3E01               	addlw	1
  4750  02B1  1903               	skipnz
  4751  02B2  2AB4               	goto	u3651
  4752  02B3  07B5               	addwf	___flmul@prod+1,f
  4753  02B4                     u3651:
  4754  02B4  082A               	movf	??___flmul+2,w
  4755  02B5  1103               	clrz
  4756  02B6  1803               	skipnc
  4757  02B7  3E01               	addlw	1
  4758  02B8  1903               	skipnz
  4759  02B9  2ABB               	goto	u3652
  4760  02BA  07B6               	addwf	___flmul@prod+2,f
  4761  02BB                     u3652:
  4762  02BB  082B               	movf	??___flmul+3,w
  4763  02BC  1103               	clrz
  4764  02BD  1803               	skipnc
  4765  02BE  3E01               	addlw	1
  4766  02BF  1903               	skipnz
  4767  02C0  2AC2               	goto	u3653
  4768  02C1  07B7               	addwf	___flmul@prod+3,f
  4769  02C2                     u3653:
  4770  02C2                     l3266:
  4771  02C2  3008               	movlw	8
  4772  02C3  00A8               	movwf	??___flmul
  4773  02C4                     u3665:
  4774  02C4  1003               	clrc
  4775  02C5  0DAE               	rlf	___flmul@grs,f
  4776  02C6  0DAF               	rlf	___flmul@grs+1,f
  4777  02C7  0DB0               	rlf	___flmul@grs+2,f
  4778  02C8  0DB1               	rlf	___flmul@grs+3,f
  4779  02C9  0BA8               	decfsz	??___flmul,f
  4780  02CA  2AC4               	goto	u3665
  4781  02CB                     l3268:
  4782  02CB  0833               	movf	___flmul@bexp,w
  4783  02CC  0732               	addwf	___flmul@aexp,w
  4784  02CD  00A8               	movwf	??___flmul
  4785  02CE  01A9               	clrf	??___flmul+1
  4786  02CF  0DA9               	rlf	??___flmul+1,f
  4787  02D0  0828               	movf	??___flmul,w
  4788  02D1  3E82               	addlw	130
  4789  02D2  00B8               	movwf	___flmul@temp
  4790  02D3  0829               	movf	??___flmul+1,w
  4791  02D4  1803               	skipnc
  4792  02D5  3E01               	addlw	1
  4793  02D6  3EFF               	addlw	255
  4794  02D7  00B9               	movwf	___flmul@temp+1
  4795  02D8  2AF6               	goto	l3280
  4796  02D9                     l3270:
  4797  02D9  3001               	movlw	1
  4798  02DA  00A8               	movwf	??___flmul
  4799  02DB                     u3675:
  4800  02DB  1003               	clrc
  4801  02DC  0DB4               	rlf	___flmul@prod,f
  4802  02DD  0DB5               	rlf	___flmul@prod+1,f
  4803  02DE  0DB6               	rlf	___flmul@prod+2,f
  4804  02DF  0DB7               	rlf	___flmul@prod+3,f
  4805  02E0  0BA8               	decfsz	??___flmul,f
  4806  02E1  2ADB               	goto	u3675
  4807  02E2                     l3272:
  4808  02E2  1FB1               	btfss	___flmul@grs+3,7
  4809  02E3  2AE5               	goto	u3681
  4810  02E4  2AE6               	goto	u3680
  4811  02E5                     u3681:
  4812  02E5  2AE7               	goto	l3276
  4813  02E6                     u3680:
  4814  02E6                     l3274:
  4815  02E6  1434               	bsf	___flmul@prod,0
  4816  02E7                     l3276:
  4817  02E7  3001               	movlw	1
  4818  02E8  00A8               	movwf	??___flmul
  4819  02E9                     u3695:
  4820  02E9  1003               	clrc
  4821  02EA  0DAE               	rlf	___flmul@grs,f
  4822  02EB  0DAF               	rlf	___flmul@grs+1,f
  4823  02EC  0DB0               	rlf	___flmul@grs+2,f
  4824  02ED  0DB1               	rlf	___flmul@grs+3,f
  4825  02EE  0BA8               	decfsz	??___flmul,f
  4826  02EF  2AE9               	goto	u3695
  4827  02F0                     l3278:
  4828  02F0  30FF               	movlw	255
  4829  02F1  07B8               	addwf	___flmul@temp,f
  4830  02F2  1803               	skipnc
  4831  02F3  0AB9               	incf	___flmul@temp+1,f
  4832  02F4  30FF               	movlw	255
  4833  02F5  07B9               	addwf	___flmul@temp+1,f
  4834  02F6                     l3280:
  4835  02F6  1FB6               	btfss	___flmul@prod+2,7
  4836  02F7  2AF9               	goto	u3701
  4837  02F8  2AFA               	goto	u3700
  4838  02F9                     u3701:
  4839  02F9  2AD9               	goto	l3270
  4840  02FA                     u3700:
  4841  02FA                     l3282:
  4842  02FA  01B2               	clrf	___flmul@aexp
  4843  02FB                     l3284:
  4844  02FB  1FB1               	btfss	___flmul@grs+3,7
  4845  02FC  2AFE               	goto	u3711
  4846  02FD  2AFF               	goto	u3710
  4847  02FE                     u3711:
  4848  02FE  2B1B               	goto	l3292
  4849  02FF                     u3710:
  4850  02FF                     l3286:
  4851  02FF  30FF               	movlw	255
  4852  0300  052E               	andwf	___flmul@grs,w
  4853  0301  00A8               	movwf	??___flmul
  4854  0302  30FF               	movlw	255
  4855  0303  052F               	andwf	___flmul@grs+1,w
  4856  0304  00A9               	movwf	??___flmul+1
  4857  0305  30FF               	movlw	255
  4858  0306  0530               	andwf	___flmul@grs+2,w
  4859  0307  00AA               	movwf	??___flmul+2
  4860  0308  307F               	movlw	127
  4861  0309  0531               	andwf	___flmul@grs+3,w
  4862  030A  00AB               	movwf	??___flmul+3
  4863  030B  082B               	movf	??___flmul+3,w
  4864  030C  042A               	iorwf	??___flmul+2,w
  4865  030D  0429               	iorwf	??___flmul+1,w
  4866  030E  0428               	iorwf	??___flmul,w
  4867  030F  1903               	skipnz
  4868  0310  2B12               	goto	u3721
  4869  0311  2B13               	goto	u3720
  4870  0312                     u3721:
  4871  0312  2B16               	goto	l1082
  4872  0313                     u3720:
  4873  0313                     l3288:
  4874  0313  01B2               	clrf	___flmul@aexp
  4875  0314  0AB2               	incf	___flmul@aexp,f
  4876  0315  2B1B               	goto	l3292
  4877  0316                     l1082:
  4878  0316  1C34               	btfss	___flmul@prod,0
  4879  0317  2B19               	goto	u3731
  4880  0318  2B1A               	goto	u3730
  4881  0319                     u3731:
  4882  0319  2B1B               	goto	l3292
  4883  031A                     u3730:
  4884  031A  2B13               	goto	l3288
  4885  031B                     l3292:
  4886  031B  0832               	movf	___flmul@aexp,w
  4887  031C  1903               	btfsc	3,2
  4888  031D  2B1F               	goto	u3741
  4889  031E  2B20               	goto	u3740
  4890  031F                     u3741:
  4891  031F  2B51               	goto	l3302
  4892  0320                     u3740:
  4893  0320                     l3294:
  4894  0320  3001               	movlw	1
  4895  0321  07B4               	addwf	___flmul@prod,f
  4896  0322  3000               	movlw	0
  4897  0323  1803               	skipnc
  4898  0324  3001               	movlw	1
  4899  0325  07B5               	addwf	___flmul@prod+1,f
  4900  0326  3000               	movlw	0
  4901  0327  1803               	skipnc
  4902  0328  3001               	movlw	1
  4903  0329  07B6               	addwf	___flmul@prod+2,f
  4904  032A  3000               	movlw	0
  4905  032B  1803               	skipnc
  4906  032C  3001               	movlw	1
  4907  032D  07B7               	addwf	___flmul@prod+3,f
  4908  032E                     l3296:
  4909  032E  1C37               	btfss	___flmul@prod+3,0
  4910  032F  2B31               	goto	u3751
  4911  0330  2B32               	goto	u3750
  4912  0331                     u3751:
  4913  0331  2B51               	goto	l3302
  4914  0332                     u3750:
  4915  0332                     l3298:
  4916  0332  0834               	movf	___flmul@prod,w
  4917  0333  00A8               	movwf	??___flmul
  4918  0334  0835               	movf	___flmul@prod+1,w
  4919  0335  00A9               	movwf	??___flmul+1
  4920  0336  0836               	movf	___flmul@prod+2,w
  4921  0337  00AA               	movwf	??___flmul+2
  4922  0338  0837               	movf	___flmul@prod+3,w
  4923  0339  00AB               	movwf	??___flmul+3
  4924  033A  3001               	movlw	1
  4925  033B  00AC               	movwf	??___flmul+4
  4926  033C                     u3765:
  4927  033C  0D2B               	rlf	??___flmul+3,w
  4928  033D  0CAB               	rrf	??___flmul+3,f
  4929  033E  0CAA               	rrf	??___flmul+2,f
  4930  033F  0CA9               	rrf	??___flmul+1,f
  4931  0340  0CA8               	rrf	??___flmul,f
  4932  0341                     u3760:
  4933  0341  0BAC               	decfsz	??___flmul+4,f
  4934  0342  2B3C               	goto	u3765
  4935  0343  082B               	movf	??___flmul+3,w
  4936  0344  00B7               	movwf	___flmul@prod+3
  4937  0345  082A               	movf	??___flmul+2,w
  4938  0346  00B6               	movwf	___flmul@prod+2
  4939  0347  0829               	movf	??___flmul+1,w
  4940  0348  00B5               	movwf	___flmul@prod+1
  4941  0349  0828               	movf	??___flmul,w
  4942  034A  00B4               	movwf	___flmul@prod
  4943  034B                     l3300:
  4944  034B  3001               	movlw	1
  4945  034C  07B8               	addwf	___flmul@temp,f
  4946  034D  1803               	skipnc
  4947  034E  0AB9               	incf	___flmul@temp+1,f
  4948  034F  3000               	movlw	0
  4949  0350  07B9               	addwf	___flmul@temp+1,f
  4950  0351                     l3302:
  4951  0351  0839               	movf	___flmul@temp+1,w
  4952  0352  3A80               	xorlw	128
  4953  0353  00FF               	movwf	btemp+1
  4954  0354  3080               	movlw	128
  4955  0355  027F               	subwf	btemp+1,w
  4956  0356  1D03               	skipz
  4957  0357  2B5A               	goto	u3775
  4958  0358  30FF               	movlw	255
  4959  0359  0238               	subwf	___flmul@temp,w
  4960  035A                     u3775:
  4961  035A  1C03               	skipc
  4962  035B  2B5D               	goto	u3771
  4963  035C  2B5E               	goto	u3770
  4964  035D                     u3771:
  4965  035D  2B69               	goto	l3306
  4966  035E                     u3770:
  4967  035E                     l3304:
  4968  035E  307F               	movlw	127
  4969  035F  1283               	bcf	3,5	;RP0=0, select bank0
  4970  0360  1303               	bcf	3,6	;RP1=0, select bank0
  4971  0361  00B7               	movwf	___flmul@prod+3
  4972  0362  3080               	movlw	128
  4973  0363  00B6               	movwf	___flmul@prod+2
  4974  0364  3000               	movlw	0
  4975  0365  00B5               	movwf	___flmul@prod+1
  4976  0366  3000               	movlw	0
  4977  0367  00B4               	movwf	___flmul@prod
  4978  0368  2B9E               	goto	l1088
  4979  0369                     l3306:
  4980  0369  1283               	bcf	3,5	;RP0=0, select bank0
  4981  036A  1303               	bcf	3,6	;RP1=0, select bank0
  4982  036B  0839               	movf	___flmul@temp+1,w
  4983  036C  3A80               	xorlw	128
  4984  036D  00FF               	movwf	btemp+1
  4985  036E  3080               	movlw	128
  4986  036F  027F               	subwf	btemp+1,w
  4987  0370  1D03               	skipz
  4988  0371  2B74               	goto	u3785
  4989  0372  3001               	movlw	1
  4990  0373  0238               	subwf	___flmul@temp,w
  4991  0374                     u3785:
  4992  0374  1803               	skipnc
  4993  0375  2B77               	goto	u3781
  4994  0376  2B78               	goto	u3780
  4995  0377                     u3781:
  4996  0377  2B84               	goto	l3312
  4997  0378                     u3780:
  4998  0378                     l3308:
  4999  0378  3000               	movlw	0
  5000  0379  1283               	bcf	3,5	;RP0=0, select bank0
  5001  037A  1303               	bcf	3,6	;RP1=0, select bank0
  5002  037B  00B7               	movwf	___flmul@prod+3
  5003  037C  3000               	movlw	0
  5004  037D  00B6               	movwf	___flmul@prod+2
  5005  037E  3000               	movlw	0
  5006  037F  00B5               	movwf	___flmul@prod+1
  5007  0380  3000               	movlw	0
  5008  0381  00B4               	movwf	___flmul@prod
  5009  0382                     l3310:
  5010  0382  01AD               	clrf	___flmul@sign
  5011  0383  2B9E               	goto	l1088
  5012  0384                     l3312:
  5013  0384  1283               	bcf	3,5	;RP0=0, select bank0
  5014  0385  1303               	bcf	3,6	;RP1=0, select bank0
  5015  0386  0838               	movf	___flmul@temp,w
  5016  0387  00A8               	movwf	??___flmul
  5017  0388  0828               	movf	??___flmul,w
  5018  0389  00B3               	movwf	___flmul@bexp
  5019  038A  30FF               	movlw	255
  5020  038B  05B4               	andwf	___flmul@prod,f
  5021  038C  30FF               	movlw	255
  5022  038D  05B5               	andwf	___flmul@prod+1,f
  5023  038E  307F               	movlw	127
  5024  038F  05B6               	andwf	___flmul@prod+2,f
  5025  0390  3000               	movlw	0
  5026  0391  05B7               	andwf	___flmul@prod+3,f
  5027  0392                     l3314:
  5028  0392  1C33               	btfss	___flmul@bexp,0
  5029  0393  2B95               	goto	u3791
  5030  0394  2B96               	goto	u3790
  5031  0395                     u3791:
  5032  0395  2B97               	goto	l3318
  5033  0396                     u3790:
  5034  0396                     l3316:
  5035  0396  17B6               	bsf	___flmul@prod+2,7
  5036  0397                     l3318:
  5037  0397  0833               	movf	___flmul@bexp,w
  5038  0398  00A8               	movwf	??___flmul
  5039  0399  1003               	clrc
  5040  039A  0C28               	rrf	??___flmul,w
  5041  039B  00A9               	movwf	??___flmul+1
  5042  039C  0829               	movf	??___flmul+1,w
  5043  039D  00B7               	movwf	___flmul@prod+3
  5044  039E                     l1088:
  5045  039E  082D               	movf	___flmul@sign,w
  5046  039F  00A8               	movwf	??___flmul
  5047  03A0  0828               	movf	??___flmul,w
  5048  03A1  04B7               	iorwf	___flmul@prod+3,f
  5049  03A2                     l3320:
  5050  03A2  0837               	movf	___flmul@prod+3,w
  5051  03A3  00A3               	movwf	?___flmul+3
  5052  03A4  0836               	movf	___flmul@prod+2,w
  5053  03A5  00A2               	movwf	?___flmul+2
  5054  03A6  0835               	movf	___flmul@prod+1,w
  5055  03A7  00A1               	movwf	?___flmul+1
  5056  03A8  0834               	movf	___flmul@prod,w
  5057  03A9  00A0               	movwf	?___flmul
  5058  03AA                     l1076:
  5059  03AA  0008               	return
  5060  03AB                     __end_of___flmul:
  5061                           
  5062                           	psect	text6
  5063  13DE                     __ptext6:	
  5064 ;; *************** function __Umul8_16 *****************
  5065 ;; Defined at:
  5066 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\Umul8_16.c"
  5067 ;; Parameters:    Size  Location     Type
  5068 ;;  multiplier      1    wreg     unsigned char 
  5069 ;;  multiplicand    1    0[COMMON] unsigned char 
  5070 ;; Auto vars:     Size  Location     Type
  5071 ;;  multiplier      1    8[COMMON] unsigned char 
  5072 ;;  word_mpld       2    6[COMMON] unsigned int 
  5073 ;;  product         2    4[COMMON] unsigned int 
  5074 ;; Return value:  Size  Location     Type
  5075 ;;                  2    0[COMMON] unsigned int 
  5076 ;; Registers used:
  5077 ;;		wreg, status,2, status,0
  5078 ;; Tracked objects:
  5079 ;;		On entry : 0/0
  5080 ;;		On exit  : 0/0
  5081 ;;		Unchanged: 0/0
  5082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5083 ;;      Params:         2       0       0       0       0
  5084 ;;      Locals:         5       0       0       0       0
  5085 ;;      Temps:          2       0       0       0       0
  5086 ;;      Totals:         9       0       0       0       0
  5087 ;;Total ram usage:        9 bytes
  5088 ;; Hardware stack levels used: 1
  5089 ;; This function calls:
  5090 ;;		Nothing
  5091 ;; This function is called by:
  5092 ;;		___flmul
  5093 ;; This function uses a non-reentrant model
  5094 ;;
  5095                           
  5096  13DE                     __Umul8_16:	
  5097                           ;psect for function __Umul8_16
  5098                           
  5099                           
  5100                           ;incstack = 0
  5101                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5102                           ;__Umul8_16@multiplier stored from wreg
  5103  13DE  00F8               	movwf	__Umul8_16@multiplier
  5104  13DF                     l2724:
  5105  13DF  01F4               	clrf	__Umul8_16@product
  5106  13E0  01F5               	clrf	__Umul8_16@product+1
  5107  13E1                     l2726:
  5108  13E1  0870               	movf	__Umul8_16@multiplicand,w
  5109  13E2  00F2               	movwf	??__Umul8_16
  5110  13E3  01F3               	clrf	??__Umul8_16+1
  5111  13E4  0872               	movf	??__Umul8_16,w
  5112  13E5  00F6               	movwf	__Umul8_16@word_mpld
  5113  13E6  0873               	movf	??__Umul8_16+1,w
  5114  13E7  00F7               	movwf	__Umul8_16@word_mpld+1
  5115  13E8                     l2728:
  5116  13E8  1C78               	btfss	__Umul8_16@multiplier,0
  5117  13E9  2BEB               	goto	u2551
  5118  13EA  2BEC               	goto	u2550
  5119  13EB                     u2551:
  5120  13EB  2BF2               	goto	l1095
  5121  13EC                     u2550:
  5122  13EC                     l2730:
  5123  13EC  0876               	movf	__Umul8_16@word_mpld,w
  5124  13ED  07F4               	addwf	__Umul8_16@product,f
  5125  13EE  1803               	skipnc
  5126  13EF  0AF5               	incf	__Umul8_16@product+1,f
  5127  13F0  0877               	movf	__Umul8_16@word_mpld+1,w
  5128  13F1  07F5               	addwf	__Umul8_16@product+1,f
  5129  13F2                     l1095:
  5130  13F2  3001               	movlw	1
  5131  13F3                     u2565:
  5132  13F3  1003               	clrc
  5133  13F4  0DF6               	rlf	__Umul8_16@word_mpld,f
  5134  13F5  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  5135  13F6  3EFF               	addlw	-1
  5136  13F7  1D03               	skipz
  5137  13F8  2BF3               	goto	u2565
  5138  13F9  1003               	clrc
  5139  13FA  0CF8               	rrf	__Umul8_16@multiplier,f
  5140  13FB                     l2732:
  5141  13FB  0878               	movf	__Umul8_16@multiplier,w
  5142  13FC  1D03               	btfss	3,2
  5143  13FD  2BFF               	goto	u2571
  5144  13FE  2C00               	goto	u2570
  5145  13FF                     u2571:
  5146  13FF  2BE8               	goto	l2728
  5147  1400                     u2570:
  5148  1400                     l2734:
  5149  1400  0875               	movf	__Umul8_16@product+1,w
  5150  1401  00F1               	movwf	?__Umul8_16+1
  5151  1402  0874               	movf	__Umul8_16@product,w
  5152  1403  00F0               	movwf	?__Umul8_16
  5153  1404                     l1097:
  5154  1404  0008               	return
  5155  1405                     __end_of__Umul8_16:
  5156                           
  5157                           	psect	text7
  5158  0ABD                     __ptext7:	
  5159 ;; *************** function ___fladd *****************
  5160 ;; Defined at:
  5161 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\sprcadd.c"
  5162 ;; Parameters:    Size  Location     Type
  5163 ;;  b               4   26[BANK0 ] unsigned int 
  5164 ;;  a               4   30[BANK0 ] unsigned int 
  5165 ;; Auto vars:     Size  Location     Type
  5166 ;;  grs             1   45[BANK0 ] unsigned char 
  5167 ;;  bexp            1   44[BANK0 ] unsigned char 
  5168 ;;  aexp            1   43[BANK0 ] unsigned char 
  5169 ;;  signs           1   42[BANK0 ] unsigned char 
  5170 ;; Return value:  Size  Location     Type
  5171 ;;                  4   26[BANK0 ] unsigned char 
  5172 ;; Registers used:
  5173 ;;		wreg, status,2, status,0, btemp+1
  5174 ;; Tracked objects:
  5175 ;;		On entry : 0/0
  5176 ;;		On exit  : 0/0
  5177 ;;		Unchanged: 0/0
  5178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5179 ;;      Params:         0       8       0       0       0
  5180 ;;      Locals:         0       4       0       0       0
  5181 ;;      Temps:          0       8       0       0       0
  5182 ;;      Totals:         0      20       0       0       0
  5183 ;;Total ram usage:       20 bytes
  5184 ;; Hardware stack levels used: 1
  5185 ;; This function calls:
  5186 ;;		Nothing
  5187 ;; This function is called by:
  5188 ;;		_Update_Farenheit
  5189 ;;		_Update_Celsius
  5190 ;; This function uses a non-reentrant model
  5191 ;;
  5192                           
  5193  0ABD                     ___fladd:	
  5194                           ;psect for function ___fladd
  5195                           
  5196  0ABD                     l2990:	
  5197                           ;incstack = 0
  5198                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  5199                           
  5200  0ABD  1283               	bcf	3,5	;RP0=0, select bank0
  5201  0ABE  1303               	bcf	3,6	;RP1=0, select bank0
  5202  0ABF  083D               	movf	___fladd@b+3,w
  5203  0AC0  3980               	andlw	128
  5204  0AC1  00C2               	movwf	??___fladd
  5205  0AC2  0842               	movf	??___fladd,w
  5206  0AC3  00CA               	movwf	___fladd@signs
  5207  0AC4                     l2992:
  5208  0AC4  083D               	movf	___fladd@b+3,w
  5209  0AC5  00C2               	movwf	??___fladd
  5210  0AC6  0742               	addwf	??___fladd,w
  5211  0AC7  00C3               	movwf	??___fladd+1
  5212  0AC8  0843               	movf	??___fladd+1,w
  5213  0AC9  00CC               	movwf	___fladd@bexp
  5214  0ACA                     l2994:
  5215  0ACA  1FBC               	btfss	___fladd@b+2,7
  5216  0ACB  2ACD               	goto	u2971
  5217  0ACC  2ACE               	goto	u2970
  5218  0ACD                     u2971:
  5219  0ACD  2ACF               	goto	l2998
  5220  0ACE                     u2970:
  5221  0ACE                     l2996:
  5222  0ACE  144C               	bsf	___fladd@bexp,0
  5223  0ACF                     l2998:
  5224  0ACF  084C               	movf	___fladd@bexp,w
  5225  0AD0  1903               	btfsc	3,2
  5226  0AD1  2AD3               	goto	u2981
  5227  0AD2  2AD4               	goto	u2980
  5228  0AD3                     u2981:
  5229  0AD3  2AE4               	goto	l3008
  5230  0AD4                     u2980:
  5231  0AD4                     l3000:
  5232  0AD4  0A4C               	incf	___fladd@bexp,w
  5233  0AD5  1D03               	btfss	3,2
  5234  0AD6  2AD8               	goto	u2991
  5235  0AD7  2AD9               	goto	u2990
  5236  0AD8                     u2991:
  5237  0AD8  2AE1               	goto	l3004
  5238  0AD9                     u2990:
  5239  0AD9                     l3002:
  5240  0AD9  3000               	movlw	0
  5241  0ADA  00BD               	movwf	___fladd@b+3
  5242  0ADB  3000               	movlw	0
  5243  0ADC  00BC               	movwf	___fladd@b+2
  5244  0ADD  3000               	movlw	0
  5245  0ADE  00BB               	movwf	___fladd@b+1
  5246  0ADF  3000               	movlw	0
  5247  0AE0  00BA               	movwf	___fladd@b
  5248  0AE1                     l3004:
  5249  0AE1  17BC               	bsf	___fladd@b+2,7
  5250  0AE2                     l3006:
  5251  0AE2  01BD               	clrf	___fladd@b+3
  5252  0AE3  2AEC               	goto	l3010
  5253  0AE4                     l3008:
  5254  0AE4  3000               	movlw	0
  5255  0AE5  00BD               	movwf	___fladd@b+3
  5256  0AE6  3000               	movlw	0
  5257  0AE7  00BC               	movwf	___fladd@b+2
  5258  0AE8  3000               	movlw	0
  5259  0AE9  00BB               	movwf	___fladd@b+1
  5260  0AEA  3000               	movlw	0
  5261  0AEB  00BA               	movwf	___fladd@b
  5262  0AEC                     l3010:
  5263  0AEC  0841               	movf	___fladd@a+3,w
  5264  0AED  3980               	andlw	128
  5265  0AEE  00C2               	movwf	??___fladd
  5266  0AEF  0842               	movf	??___fladd,w
  5267  0AF0  00CB               	movwf	___fladd@aexp
  5268  0AF1                     l3012:
  5269  0AF1  084B               	movf	___fladd@aexp,w
  5270  0AF2  064A               	xorwf	___fladd@signs,w
  5271  0AF3  1903               	skipnz
  5272  0AF4  2AF6               	goto	u3001
  5273  0AF5  2AF7               	goto	u3000
  5274  0AF6                     u3001:
  5275  0AF6  2AF8               	goto	l3016
  5276  0AF7                     u3000:
  5277  0AF7                     l3014:
  5278  0AF7  174A               	bsf	___fladd@signs,6
  5279  0AF8                     l3016:
  5280  0AF8  0841               	movf	___fladd@a+3,w
  5281  0AF9  00C2               	movwf	??___fladd
  5282  0AFA  0742               	addwf	??___fladd,w
  5283  0AFB  00C3               	movwf	??___fladd+1
  5284  0AFC  0843               	movf	??___fladd+1,w
  5285  0AFD  00CB               	movwf	___fladd@aexp
  5286  0AFE                     l3018:
  5287  0AFE  1FC0               	btfss	___fladd@a+2,7
  5288  0AFF  2B01               	goto	u3011
  5289  0B00  2B02               	goto	u3010
  5290  0B01                     u3011:
  5291  0B01  2B03               	goto	l3022
  5292  0B02                     u3010:
  5293  0B02                     l3020:
  5294  0B02  144B               	bsf	___fladd@aexp,0
  5295  0B03                     l3022:
  5296  0B03  084B               	movf	___fladd@aexp,w
  5297  0B04  1903               	btfsc	3,2
  5298  0B05  2B07               	goto	u3021
  5299  0B06  2B08               	goto	u3020
  5300  0B07                     u3021:
  5301  0B07  2B18               	goto	l3032
  5302  0B08                     u3020:
  5303  0B08                     l3024:
  5304  0B08  0A4B               	incf	___fladd@aexp,w
  5305  0B09  1D03               	btfss	3,2
  5306  0B0A  2B0C               	goto	u3031
  5307  0B0B  2B0D               	goto	u3030
  5308  0B0C                     u3031:
  5309  0B0C  2B15               	goto	l3028
  5310  0B0D                     u3030:
  5311  0B0D                     l3026:
  5312  0B0D  3000               	movlw	0
  5313  0B0E  00C1               	movwf	___fladd@a+3
  5314  0B0F  3000               	movlw	0
  5315  0B10  00C0               	movwf	___fladd@a+2
  5316  0B11  3000               	movlw	0
  5317  0B12  00BF               	movwf	___fladd@a+1
  5318  0B13  3000               	movlw	0
  5319  0B14  00BE               	movwf	___fladd@a
  5320  0B15                     l3028:
  5321  0B15  17C0               	bsf	___fladd@a+2,7
  5322  0B16                     l3030:
  5323  0B16  01C1               	clrf	___fladd@a+3
  5324  0B17  2B20               	goto	l980
  5325  0B18                     l3032:
  5326  0B18  3000               	movlw	0
  5327  0B19  00C1               	movwf	___fladd@a+3
  5328  0B1A  3000               	movlw	0
  5329  0B1B  00C0               	movwf	___fladd@a+2
  5330  0B1C  3000               	movlw	0
  5331  0B1D  00BF               	movwf	___fladd@a+1
  5332  0B1E  3000               	movlw	0
  5333  0B1F  00BE               	movwf	___fladd@a
  5334  0B20                     l980:
  5335  0B20  084C               	movf	___fladd@bexp,w
  5336  0B21  024B               	subwf	___fladd@aexp,w
  5337  0B22  1803               	skipnc
  5338  0B23  2B25               	goto	u3041
  5339  0B24  2B26               	goto	u3040
  5340  0B25                     u3041:
  5341  0B25  2B6A               	goto	l3068
  5342  0B26                     u3040:
  5343  0B26                     l3034:
  5344  0B26  1F4A               	btfss	___fladd@signs,6
  5345  0B27  2B29               	goto	u3051
  5346  0B28  2B2A               	goto	u3050
  5347  0B29                     u3051:
  5348  0B29  2B2E               	goto	l3038
  5349  0B2A                     u3050:
  5350  0B2A                     l3036:
  5351  0B2A  3080               	movlw	128
  5352  0B2B  00C2               	movwf	??___fladd
  5353  0B2C  0842               	movf	??___fladd,w
  5354  0B2D  06CA               	xorwf	___fladd@signs,f
  5355  0B2E                     l3038:
  5356  0B2E  084C               	movf	___fladd@bexp,w
  5357  0B2F  00C2               	movwf	??___fladd
  5358  0B30  0842               	movf	??___fladd,w
  5359  0B31  00CD               	movwf	___fladd@grs
  5360  0B32                     l3040:
  5361  0B32  084B               	movf	___fladd@aexp,w
  5362  0B33  00C2               	movwf	??___fladd
  5363  0B34  0842               	movf	??___fladd,w
  5364  0B35  00CC               	movwf	___fladd@bexp
  5365  0B36                     l3042:
  5366  0B36  084D               	movf	___fladd@grs,w
  5367  0B37  00C2               	movwf	??___fladd
  5368  0B38  0842               	movf	??___fladd,w
  5369  0B39  00CB               	movwf	___fladd@aexp
  5370  0B3A                     l3044:
  5371  0B3A  083A               	movf	___fladd@b,w
  5372  0B3B  00C2               	movwf	??___fladd
  5373  0B3C  0842               	movf	??___fladd,w
  5374  0B3D  00CD               	movwf	___fladd@grs
  5375  0B3E                     l3046:
  5376  0B3E  083E               	movf	___fladd@a,w
  5377  0B3F  00C2               	movwf	??___fladd
  5378  0B40  0842               	movf	??___fladd,w
  5379  0B41  00BA               	movwf	___fladd@b
  5380  0B42                     l3048:
  5381  0B42  084D               	movf	___fladd@grs,w
  5382  0B43  00C2               	movwf	??___fladd
  5383  0B44  0842               	movf	??___fladd,w
  5384  0B45  00BE               	movwf	___fladd@a
  5385  0B46                     l3050:
  5386  0B46  083B               	movf	___fladd@b+1,w
  5387  0B47  00C2               	movwf	??___fladd
  5388  0B48  0842               	movf	??___fladd,w
  5389  0B49  00CD               	movwf	___fladd@grs
  5390  0B4A                     l3052:
  5391  0B4A  083F               	movf	___fladd@a+1,w
  5392  0B4B  00C2               	movwf	??___fladd
  5393  0B4C  0842               	movf	??___fladd,w
  5394  0B4D  00BB               	movwf	___fladd@b+1
  5395  0B4E                     l3054:
  5396  0B4E  084D               	movf	___fladd@grs,w
  5397  0B4F  00C2               	movwf	??___fladd
  5398  0B50  0842               	movf	??___fladd,w
  5399  0B51  00BF               	movwf	___fladd@a+1
  5400  0B52                     l3056:
  5401  0B52  083C               	movf	___fladd@b+2,w
  5402  0B53  00C2               	movwf	??___fladd
  5403  0B54  0842               	movf	??___fladd,w
  5404  0B55  00CD               	movwf	___fladd@grs
  5405  0B56                     l3058:
  5406  0B56  0840               	movf	___fladd@a+2,w
  5407  0B57  00C2               	movwf	??___fladd
  5408  0B58  0842               	movf	??___fladd,w
  5409  0B59  00BC               	movwf	___fladd@b+2
  5410  0B5A                     l3060:
  5411  0B5A  084D               	movf	___fladd@grs,w
  5412  0B5B  00C2               	movwf	??___fladd
  5413  0B5C  0842               	movf	??___fladd,w
  5414  0B5D  00C0               	movwf	___fladd@a+2
  5415  0B5E                     l3062:
  5416  0B5E  083D               	movf	___fladd@b+3,w
  5417  0B5F  00C2               	movwf	??___fladd
  5418  0B60  0842               	movf	??___fladd,w
  5419  0B61  00CD               	movwf	___fladd@grs
  5420  0B62                     l3064:
  5421  0B62  0841               	movf	___fladd@a+3,w
  5422  0B63  00C2               	movwf	??___fladd
  5423  0B64  0842               	movf	??___fladd,w
  5424  0B65  00BD               	movwf	___fladd@b+3
  5425  0B66                     l3066:
  5426  0B66  084D               	movf	___fladd@grs,w
  5427  0B67  00C2               	movwf	??___fladd
  5428  0B68  0842               	movf	??___fladd,w
  5429  0B69  00C1               	movwf	___fladd@a+3
  5430  0B6A                     l3068:
  5431  0B6A  01CD               	clrf	___fladd@grs
  5432  0B6B                     l3070:
  5433  0B6B  084B               	movf	___fladd@aexp,w
  5434  0B6C  00C2               	movwf	??___fladd
  5435  0B6D  01C3               	clrf	??___fladd+1
  5436  0B6E  0843               	movf	??___fladd+1,w
  5437  0B6F  00C5               	movwf	??___fladd+3
  5438  0B70  084C               	movf	___fladd@bexp,w
  5439  0B71  0242               	subwf	??___fladd,w
  5440  0B72  00C4               	movwf	??___fladd+2
  5441  0B73  1C03               	skipc
  5442  0B74  03C5               	decf	??___fladd+3,f
  5443  0B75  0845               	movf	??___fladd+3,w
  5444  0B76  3A80               	xorlw	128
  5445  0B77  00FF               	movwf	btemp+1
  5446  0B78  3080               	movlw	128
  5447  0B79  027F               	subwf	btemp+1,w
  5448  0B7A  1D03               	skipz
  5449  0B7B  2B7E               	goto	u3065
  5450  0B7C  301A               	movlw	26
  5451  0B7D  0244               	subwf	??___fladd+2,w
  5452  0B7E                     u3065:
  5453  0B7E  1C03               	skipc
  5454  0B7F  2B81               	goto	u3061
  5455  0B80  2B82               	goto	u3060
  5456  0B81                     u3061:
  5457  0B81  2BBF               	goto	l3086
  5458  0B82                     u3060:
  5459  0B82                     l3072:
  5460  0B82  1283               	bcf	3,5	;RP0=0, select bank0
  5461  0B83  1303               	bcf	3,6	;RP1=0, select bank0
  5462  0B84  083D               	movf	___fladd@b+3,w
  5463  0B85  043C               	iorwf	___fladd@b+2,w
  5464  0B86  043B               	iorwf	___fladd@b+1,w
  5465  0B87  043A               	iorwf	___fladd@b,w
  5466  0B88  1D03               	skipz
  5467  0B89  2B8B               	goto	u3071
  5468  0B8A  2B8D               	goto	u3070
  5469  0B8B                     u3071:
  5470  0B8B  3001               	movlw	1
  5471  0B8C  2B8E               	goto	u3080
  5472  0B8D                     u3070:
  5473  0B8D  3000               	movlw	0
  5474  0B8E                     u3080:
  5475  0B8E  00C2               	movwf	??___fladd
  5476  0B8F  0842               	movf	??___fladd,w
  5477  0B90  00CD               	movwf	___fladd@grs
  5478  0B91  3000               	movlw	0
  5479  0B92  00BD               	movwf	___fladd@b+3
  5480  0B93  3000               	movlw	0
  5481  0B94  00BC               	movwf	___fladd@b+2
  5482  0B95  3000               	movlw	0
  5483  0B96  00BB               	movwf	___fladd@b+1
  5484  0B97  3000               	movlw	0
  5485  0B98  00BA               	movwf	___fladd@b
  5486  0B99  084B               	movf	___fladd@aexp,w
  5487  0B9A  00C2               	movwf	??___fladd
  5488  0B9B  0842               	movf	??___fladd,w
  5489  0B9C  00CC               	movwf	___fladd@bexp
  5490  0B9D  2BC7               	goto	l984
  5491  0B9E                     l986:
  5492  0B9E  1C4D               	btfss	___fladd@grs,0
  5493  0B9F  2BA1               	goto	u3091
  5494  0BA0  2BA2               	goto	u3090
  5495  0BA1                     u3091:
  5496  0BA1  2BAB               	goto	l3076
  5497  0BA2                     u3090:
  5498  0BA2                     l3074:
  5499  0BA2  084D               	movf	___fladd@grs,w
  5500  0BA3  00C2               	movwf	??___fladd
  5501  0BA4  1003               	clrc
  5502  0BA5  0C42               	rrf	??___fladd,w
  5503  0BA6  3801               	iorlw	1
  5504  0BA7  00C3               	movwf	??___fladd+1
  5505  0BA8  0843               	movf	??___fladd+1,w
  5506  0BA9  00CD               	movwf	___fladd@grs
  5507  0BAA  2BAD               	goto	l3078
  5508  0BAB                     l3076:
  5509  0BAB  1003               	clrc
  5510  0BAC  0CCD               	rrf	___fladd@grs,f
  5511  0BAD                     l3078:
  5512  0BAD  1C3A               	btfss	___fladd@b,0
  5513  0BAE  2BB0               	goto	u3101
  5514  0BAF  2BB1               	goto	u3100
  5515  0BB0                     u3101:
  5516  0BB0  2BB2               	goto	l3082
  5517  0BB1                     u3100:
  5518  0BB1                     l3080:
  5519  0BB1  17CD               	bsf	___fladd@grs,7
  5520  0BB2                     l3082:
  5521  0BB2  3001               	movlw	1
  5522  0BB3  00C2               	movwf	??___fladd
  5523  0BB4                     u3115:
  5524  0BB4  0D3D               	rlf	___fladd@b+3,w
  5525  0BB5  0CBD               	rrf	___fladd@b+3,f
  5526  0BB6  0CBC               	rrf	___fladd@b+2,f
  5527  0BB7  0CBB               	rrf	___fladd@b+1,f
  5528  0BB8  0CBA               	rrf	___fladd@b,f
  5529  0BB9  0BC2               	decfsz	??___fladd& (0+127),f
  5530  0BBA  2BB4               	goto	u3115
  5531  0BBB                     l3084:
  5532  0BBB  3001               	movlw	1
  5533  0BBC  00C2               	movwf	??___fladd
  5534  0BBD  0842               	movf	??___fladd,w
  5535  0BBE  07CC               	addwf	___fladd@bexp,f
  5536  0BBF                     l3086:
  5537  0BBF  1283               	bcf	3,5	;RP0=0, select bank0
  5538  0BC0  1303               	bcf	3,6	;RP1=0, select bank0
  5539  0BC1  084B               	movf	___fladd@aexp,w
  5540  0BC2  024C               	subwf	___fladd@bexp,w
  5541  0BC3  1C03               	skipc
  5542  0BC4  2BC6               	goto	u3121
  5543  0BC5  2BC7               	goto	u3120
  5544  0BC6                     u3121:
  5545  0BC6  2B9E               	goto	l986
  5546  0BC7                     u3120:
  5547  0BC7                     l984:
  5548  0BC7  1B4A               	btfsc	___fladd@signs,6
  5549  0BC8  2BCA               	goto	u3131
  5550  0BC9  2BCB               	goto	u3130
  5551  0BCA                     u3131:
  5552  0BCA  2C16               	goto	l3112
  5553  0BCB                     u3130:
  5554  0BCB                     l3088:
  5555  0BCB  084C               	movf	___fladd@bexp,w
  5556  0BCC  1D03               	btfss	3,2
  5557  0BCD  2BCF               	goto	u3141
  5558  0BCE  2BD0               	goto	u3140
  5559  0BCF                     u3141:
  5560  0BCF  2BD9               	goto	l3094
  5561  0BD0                     u3140:
  5562  0BD0                     l3090:
  5563  0BD0  3000               	movlw	0
  5564  0BD1  00BD               	movwf	?___fladd+3
  5565  0BD2  3000               	movlw	0
  5566  0BD3  00BC               	movwf	?___fladd+2
  5567  0BD4  3000               	movlw	0
  5568  0BD5  00BB               	movwf	?___fladd+1
  5569  0BD6  3000               	movlw	0
  5570  0BD7  00BA               	movwf	?___fladd
  5571  0BD8  2D44               	goto	l993
  5572  0BD9                     l3094:
  5573  0BD9  083E               	movf	___fladd@a,w
  5574  0BDA  07BA               	addwf	___fladd@b,f
  5575  0BDB  083F               	movf	___fladd@a+1,w
  5576  0BDC  1103               	clrz
  5577  0BDD  1803               	skipnc
  5578  0BDE  3E01               	addlw	1
  5579  0BDF  1903               	skipnz
  5580  0BE0  2BE2               	goto	u3151
  5581  0BE1  07BB               	addwf	___fladd@b+1,f
  5582  0BE2                     u3151:
  5583  0BE2  0840               	movf	___fladd@a+2,w
  5584  0BE3  1103               	clrz
  5585  0BE4  1803               	skipnc
  5586  0BE5  3E01               	addlw	1
  5587  0BE6  1903               	skipnz
  5588  0BE7  2BE9               	goto	u3152
  5589  0BE8  07BC               	addwf	___fladd@b+2,f
  5590  0BE9                     u3152:
  5591  0BE9  0841               	movf	___fladd@a+3,w
  5592  0BEA  1103               	clrz
  5593  0BEB  1803               	skipnc
  5594  0BEC  3E01               	addlw	1
  5595  0BED  1903               	skipnz
  5596  0BEE  2BF0               	goto	u3153
  5597  0BEF  07BD               	addwf	___fladd@b+3,f
  5598  0BF0                     u3153:
  5599  0BF0                     l3096:
  5600  0BF0  1C3D               	btfss	___fladd@b+3,0
  5601  0BF1  2BF3               	goto	u3161
  5602  0BF2  2BF4               	goto	u3160
  5603  0BF3                     u3161:
  5604  0BF3  2CCA               	goto	l3146
  5605  0BF4                     u3160:
  5606  0BF4                     l3098:
  5607  0BF4  1C4D               	btfss	___fladd@grs,0
  5608  0BF5  2BF7               	goto	u3171
  5609  0BF6  2BF8               	goto	u3170
  5610  0BF7                     u3171:
  5611  0BF7  2C01               	goto	l3102
  5612  0BF8                     u3170:
  5613  0BF8                     l3100:
  5614  0BF8  084D               	movf	___fladd@grs,w
  5615  0BF9  00C2               	movwf	??___fladd
  5616  0BFA  1003               	clrc
  5617  0BFB  0C42               	rrf	??___fladd,w
  5618  0BFC  3801               	iorlw	1
  5619  0BFD  00C3               	movwf	??___fladd+1
  5620  0BFE  0843               	movf	??___fladd+1,w
  5621  0BFF  00CD               	movwf	___fladd@grs
  5622  0C00  2C03               	goto	l3104
  5623  0C01                     l3102:
  5624  0C01  1003               	clrc
  5625  0C02  0CCD               	rrf	___fladd@grs,f
  5626  0C03                     l3104:
  5627  0C03  1C3A               	btfss	___fladd@b,0
  5628  0C04  2C06               	goto	u3181
  5629  0C05  2C07               	goto	u3180
  5630  0C06                     u3181:
  5631  0C06  2C08               	goto	l3108
  5632  0C07                     u3180:
  5633  0C07                     l3106:
  5634  0C07  17CD               	bsf	___fladd@grs,7
  5635  0C08                     l3108:
  5636  0C08  3001               	movlw	1
  5637  0C09  00C2               	movwf	??___fladd
  5638  0C0A                     u3195:
  5639  0C0A  0D3D               	rlf	___fladd@b+3,w
  5640  0C0B  0CBD               	rrf	___fladd@b+3,f
  5641  0C0C  0CBC               	rrf	___fladd@b+2,f
  5642  0C0D  0CBB               	rrf	___fladd@b+1,f
  5643  0C0E  0CBA               	rrf	___fladd@b,f
  5644  0C0F  0BC2               	decfsz	??___fladd& (0+127),f
  5645  0C10  2C0A               	goto	u3195
  5646  0C11                     l3110:
  5647  0C11  3001               	movlw	1
  5648  0C12  00C2               	movwf	??___fladd
  5649  0C13  0842               	movf	??___fladd,w
  5650  0C14  07CC               	addwf	___fladd@bexp,f
  5651  0C15  2CCA               	goto	l3146
  5652  0C16                     l3112:
  5653  0C16  083D               	movf	___fladd@b+3,w
  5654  0C17  3A80               	xorlw	128
  5655  0C18  00FF               	movwf	btemp+1
  5656  0C19  0841               	movf	___fladd@a+3,w
  5657  0C1A  3A80               	xorlw	128
  5658  0C1B  027F               	subwf	btemp+1,w
  5659  0C1C  1D03               	skipz
  5660  0C1D  2C28               	goto	u3203
  5661  0C1E  0840               	movf	___fladd@a+2,w
  5662  0C1F  023C               	subwf	___fladd@b+2,w
  5663  0C20  1D03               	skipz
  5664  0C21  2C28               	goto	u3203
  5665  0C22  083F               	movf	___fladd@a+1,w
  5666  0C23  023B               	subwf	___fladd@b+1,w
  5667  0C24  1D03               	skipz
  5668  0C25  2C28               	goto	u3203
  5669  0C26  083E               	movf	___fladd@a,w
  5670  0C27  023A               	subwf	___fladd@b,w
  5671  0C28                     u3203:
  5672  0C28  1803               	skipnc
  5673  0C29  2C2B               	goto	u3201
  5674  0C2A  2C2C               	goto	u3200
  5675  0C2B                     u3201:
  5676  0C2B  2C84               	goto	l3122
  5677  0C2C                     u3200:
  5678  0C2C                     l3114:
  5679  0C2C  30FF               	movlw	255
  5680  0C2D  00C2               	movwf	??___fladd
  5681  0C2E  30FF               	movlw	255
  5682  0C2F  00C3               	movwf	??___fladd+1
  5683  0C30  30FF               	movlw	255
  5684  0C31  00C4               	movwf	??___fladd+2
  5685  0C32  30FF               	movlw	255
  5686  0C33  00C5               	movwf	??___fladd+3
  5687  0C34  083E               	movf	___fladd@a,w
  5688  0C35  00C6               	movwf	??___fladd+4
  5689  0C36  083F               	movf	___fladd@a+1,w
  5690  0C37  00C7               	movwf	??___fladd+5
  5691  0C38  0840               	movf	___fladd@a+2,w
  5692  0C39  00C8               	movwf	??___fladd+6
  5693  0C3A  0841               	movf	___fladd@a+3,w
  5694  0C3B  00C9               	movwf	??___fladd+7
  5695  0C3C  083A               	movf	___fladd@b,w
  5696  0C3D  02C6               	subwf	??___fladd+4,f
  5697  0C3E  083B               	movf	___fladd@b+1,w
  5698  0C3F  1C03               	skipc
  5699  0C40  0F3B               	incfsz	___fladd@b+1,w
  5700  0C41  2C43               	goto	u3211
  5701  0C42  2C44               	goto	u3212
  5702  0C43                     u3211:
  5703  0C43  02C7               	subwf	??___fladd+5,f
  5704  0C44                     u3212:
  5705  0C44  083C               	movf	___fladd@b+2,w
  5706  0C45  1C03               	skipc
  5707  0C46  0F3C               	incfsz	___fladd@b+2,w
  5708  0C47  2C49               	goto	u3213
  5709  0C48  2C4A               	goto	u3214
  5710  0C49                     u3213:
  5711  0C49  02C8               	subwf	??___fladd+6,f
  5712  0C4A                     u3214:
  5713  0C4A  083D               	movf	___fladd@b+3,w
  5714  0C4B  1C03               	skipc
  5715  0C4C  0F3D               	incfsz	___fladd@b+3,w
  5716  0C4D  2C4F               	goto	u3215
  5717  0C4E  2C50               	goto	u3216
  5718  0C4F                     u3215:
  5719  0C4F  02C9               	subwf	??___fladd+7,f
  5720  0C50                     u3216:
  5721  0C50  0846               	movf	??___fladd+4,w
  5722  0C51  07C2               	addwf	??___fladd,f
  5723  0C52  0847               	movf	??___fladd+5,w
  5724  0C53  1803               	skipnc
  5725  0C54  0F47               	incfsz	??___fladd+5,w
  5726  0C55  2C57               	goto	u3220
  5727  0C56  2C58               	goto	u3221
  5728  0C57                     u3220:
  5729  0C57  07C3               	addwf	??___fladd+1,f
  5730  0C58                     u3221:
  5731  0C58  0848               	movf	??___fladd+6,w
  5732  0C59  1803               	skipnc
  5733  0C5A  0F48               	incfsz	??___fladd+6,w
  5734  0C5B  2C5D               	goto	u3222
  5735  0C5C  2C5E               	goto	u3223
  5736  0C5D                     u3222:
  5737  0C5D  07C4               	addwf	??___fladd+2,f
  5738  0C5E                     u3223:
  5739  0C5E  0849               	movf	??___fladd+7,w
  5740  0C5F  1803               	skipnc
  5741  0C60  0A49               	incf	??___fladd+7,w
  5742  0C61  07C5               	addwf	??___fladd+3,f
  5743  0C62  0845               	movf	??___fladd+3,w
  5744  0C63  00BD               	movwf	___fladd@b+3
  5745  0C64  0844               	movf	??___fladd+2,w
  5746  0C65  00BC               	movwf	___fladd@b+2
  5747  0C66  0843               	movf	??___fladd+1,w
  5748  0C67  00BB               	movwf	___fladd@b+1
  5749  0C68  0842               	movf	??___fladd,w
  5750  0C69  00BA               	movwf	___fladd@b
  5751  0C6A                     l3116:
  5752  0C6A  3080               	movlw	128
  5753  0C6B  00C2               	movwf	??___fladd
  5754  0C6C  0842               	movf	??___fladd,w
  5755  0C6D  06CA               	xorwf	___fladd@signs,f
  5756  0C6E  09CD               	comf	___fladd@grs,f
  5757  0C6F  0ACD               	incf	___fladd@grs,f
  5758  0C70                     l3118:
  5759  0C70  084D               	movf	___fladd@grs,w
  5760  0C71  1D03               	btfss	3,2
  5761  0C72  2C74               	goto	u3231
  5762  0C73  2C75               	goto	u3230
  5763  0C74                     u3231:
  5764  0C74  2C92               	goto	l1001
  5765  0C75                     u3230:
  5766  0C75                     l3120:
  5767  0C75  3001               	movlw	1
  5768  0C76  07BA               	addwf	___fladd@b,f
  5769  0C77  3000               	movlw	0
  5770  0C78  1803               	skipnc
  5771  0C79  3001               	movlw	1
  5772  0C7A  07BB               	addwf	___fladd@b+1,f
  5773  0C7B  3000               	movlw	0
  5774  0C7C  1803               	skipnc
  5775  0C7D  3001               	movlw	1
  5776  0C7E  07BC               	addwf	___fladd@b+2,f
  5777  0C7F  3000               	movlw	0
  5778  0C80  1803               	skipnc
  5779  0C81  3001               	movlw	1
  5780  0C82  07BD               	addwf	___fladd@b+3,f
  5781  0C83  2C92               	goto	l1001
  5782  0C84                     l3122:
  5783  0C84  083E               	movf	___fladd@a,w
  5784  0C85  02BA               	subwf	___fladd@b,f
  5785  0C86  083F               	movf	___fladd@a+1,w
  5786  0C87  1C03               	skipc
  5787  0C88  0F3F               	incfsz	___fladd@a+1,w
  5788  0C89  02BB               	subwf	___fladd@b+1,f
  5789  0C8A  0840               	movf	___fladd@a+2,w
  5790  0C8B  1C03               	skipc
  5791  0C8C  0F40               	incfsz	___fladd@a+2,w
  5792  0C8D  02BC               	subwf	___fladd@b+2,f
  5793  0C8E  0841               	movf	___fladd@a+3,w
  5794  0C8F  1C03               	skipc
  5795  0C90  0F41               	incfsz	___fladd@a+3,w
  5796  0C91  02BD               	subwf	___fladd@b+3,f
  5797  0C92                     l1001:
  5798  0C92  083D               	movf	___fladd@b+3,w
  5799  0C93  043C               	iorwf	___fladd@b+2,w
  5800  0C94  043B               	iorwf	___fladd@b+1,w
  5801  0C95  043A               	iorwf	___fladd@b,w
  5802  0C96  1D03               	skipz
  5803  0C97  2C99               	goto	u3241
  5804  0C98  2C9A               	goto	u3240
  5805  0C99                     u3241:
  5806  0C99  2CC6               	goto	l3144
  5807  0C9A                     u3240:
  5808  0C9A                     l3124:
  5809  0C9A  084D               	movf	___fladd@grs,w
  5810  0C9B  1D03               	btfss	3,2
  5811  0C9C  2C9E               	goto	u3251
  5812  0C9D  2C9F               	goto	u3250
  5813  0C9E                     u3251:
  5814  0C9E  2CC6               	goto	l3144
  5815  0C9F                     u3250:
  5816  0C9F                     l3126:
  5817  0C9F  3000               	movlw	0
  5818  0CA0  00BD               	movwf	?___fladd+3
  5819  0CA1  3000               	movlw	0
  5820  0CA2  00BC               	movwf	?___fladd+2
  5821  0CA3  3000               	movlw	0
  5822  0CA4  00BB               	movwf	?___fladd+1
  5823  0CA5  3000               	movlw	0
  5824  0CA6  00BA               	movwf	?___fladd
  5825  0CA7  2D44               	goto	l993
  5826  0CA8                     l3130:
  5827  0CA8  3001               	movlw	1
  5828  0CA9  00C2               	movwf	??___fladd
  5829  0CAA                     u3265:
  5830  0CAA  1003               	clrc
  5831  0CAB  0DBA               	rlf	___fladd@b,f
  5832  0CAC  0DBB               	rlf	___fladd@b+1,f
  5833  0CAD  0DBC               	rlf	___fladd@b+2,f
  5834  0CAE  0DBD               	rlf	___fladd@b+3,f
  5835  0CAF  0BC2               	decfsz	??___fladd,f
  5836  0CB0  2CAA               	goto	u3265
  5837  0CB1                     l3132:
  5838  0CB1  1FCD               	btfss	___fladd@grs,7
  5839  0CB2  2CB4               	goto	u3271
  5840  0CB3  2CB5               	goto	u3270
  5841  0CB4                     u3271:
  5842  0CB4  2CB6               	goto	l1005
  5843  0CB5                     u3270:
  5844  0CB5                     l3134:
  5845  0CB5  143A               	bsf	___fladd@b,0
  5846  0CB6                     l1005:
  5847  0CB6  1C4D               	btfss	___fladd@grs,0
  5848  0CB7  2CB9               	goto	u3281
  5849  0CB8  2CBA               	goto	u3280
  5850  0CB9                     u3281:
  5851  0CB9  2CBD               	goto	l3138
  5852  0CBA                     u3280:
  5853  0CBA                     l3136:
  5854  0CBA  1403               	setc
  5855  0CBB  0DCD               	rlf	___fladd@grs,f
  5856  0CBC  2CBF               	goto	l3140
  5857  0CBD                     l3138:
  5858  0CBD  1003               	clrc
  5859  0CBE  0DCD               	rlf	___fladd@grs,f
  5860  0CBF                     l3140:
  5861  0CBF  084C               	movf	___fladd@bexp,w
  5862  0CC0  1903               	btfsc	3,2
  5863  0CC1  2CC3               	goto	u3291
  5864  0CC2  2CC4               	goto	u3290
  5865  0CC3                     u3291:
  5866  0CC3  2CC6               	goto	l3144
  5867  0CC4                     u3290:
  5868  0CC4                     l3142:
  5869  0CC4  3001               	movlw	1
  5870  0CC5  02CC               	subwf	___fladd@bexp,f
  5871  0CC6                     l3144:
  5872  0CC6  1FBC               	btfss	___fladd@b+2,7
  5873  0CC7  2CC9               	goto	u3301
  5874  0CC8  2CCA               	goto	u3300
  5875  0CC9                     u3301:
  5876  0CC9  2CA8               	goto	l3130
  5877  0CCA                     u3300:
  5878  0CCA                     l3146:
  5879  0CCA  01CB               	clrf	___fladd@aexp
  5880  0CCB                     l3148:
  5881  0CCB  1FCD               	btfss	___fladd@grs,7
  5882  0CCC  2CCE               	goto	u3311
  5883  0CCD  2CCF               	goto	u3310
  5884  0CCE                     u3311:
  5885  0CCE  2CDD               	goto	l3156
  5886  0CCF                     u3310:
  5887  0CCF                     l3150:
  5888  0CCF  084D               	movf	___fladd@grs,w
  5889  0CD0  397F               	andlw	127
  5890  0CD1  1903               	btfsc	3,2
  5891  0CD2  2CD4               	goto	u3321
  5892  0CD3  2CD5               	goto	u3320
  5893  0CD4                     u3321:
  5894  0CD4  2CD8               	goto	l1011
  5895  0CD5                     u3320:
  5896  0CD5                     l3152:
  5897  0CD5  01CB               	clrf	___fladd@aexp
  5898  0CD6  0ACB               	incf	___fladd@aexp,f
  5899  0CD7  2CDD               	goto	l3156
  5900  0CD8                     l1011:
  5901  0CD8  1C3A               	btfss	___fladd@b,0
  5902  0CD9  2CDB               	goto	u3331
  5903  0CDA  2CDC               	goto	u3330
  5904  0CDB                     u3331:
  5905  0CDB  2CDD               	goto	l3156
  5906  0CDC                     u3330:
  5907  0CDC  2CD5               	goto	l3152
  5908  0CDD                     l3156:
  5909  0CDD  084B               	movf	___fladd@aexp,w
  5910  0CDE  1903               	btfsc	3,2
  5911  0CDF  2CE1               	goto	u3341
  5912  0CE0  2CE2               	goto	u3340
  5913  0CE1                     u3341:
  5914  0CE1  2D16               	goto	l1014
  5915  0CE2                     u3340:
  5916  0CE2                     l3158:
  5917  0CE2  3001               	movlw	1
  5918  0CE3  07BA               	addwf	___fladd@b,f
  5919  0CE4  3000               	movlw	0
  5920  0CE5  1803               	skipnc
  5921  0CE6  3001               	movlw	1
  5922  0CE7  07BB               	addwf	___fladd@b+1,f
  5923  0CE8  3000               	movlw	0
  5924  0CE9  1803               	skipnc
  5925  0CEA  3001               	movlw	1
  5926  0CEB  07BC               	addwf	___fladd@b+2,f
  5927  0CEC  3000               	movlw	0
  5928  0CED  1803               	skipnc
  5929  0CEE  3001               	movlw	1
  5930  0CEF  07BD               	addwf	___fladd@b+3,f
  5931  0CF0                     l3160:
  5932  0CF0  1C3D               	btfss	___fladd@b+3,0
  5933  0CF1  2CF3               	goto	u3351
  5934  0CF2  2CF4               	goto	u3350
  5935  0CF3                     u3351:
  5936  0CF3  2D16               	goto	l1014
  5937  0CF4                     u3350:
  5938  0CF4                     l3162:
  5939  0CF4  083A               	movf	___fladd@b,w
  5940  0CF5  00C2               	movwf	??___fladd
  5941  0CF6  083B               	movf	___fladd@b+1,w
  5942  0CF7  00C3               	movwf	??___fladd+1
  5943  0CF8  083C               	movf	___fladd@b+2,w
  5944  0CF9  00C4               	movwf	??___fladd+2
  5945  0CFA  083D               	movf	___fladd@b+3,w
  5946  0CFB  00C5               	movwf	??___fladd+3
  5947  0CFC  3001               	movlw	1
  5948  0CFD  00C6               	movwf	??___fladd+4
  5949  0CFE                     u3365:
  5950  0CFE  0D45               	rlf	??___fladd+3,w
  5951  0CFF  0CC5               	rrf	??___fladd+3,f
  5952  0D00  0CC4               	rrf	??___fladd+2,f
  5953  0D01  0CC3               	rrf	??___fladd+1,f
  5954  0D02  0CC2               	rrf	??___fladd,f
  5955  0D03                     u3360:
  5956  0D03  0BC6               	decfsz	??___fladd+4,f
  5957  0D04  2CFE               	goto	u3365
  5958  0D05  0845               	movf	??___fladd+3,w
  5959  0D06  00BD               	movwf	___fladd@b+3
  5960  0D07  0844               	movf	??___fladd+2,w
  5961  0D08  00BC               	movwf	___fladd@b+2
  5962  0D09  0843               	movf	??___fladd+1,w
  5963  0D0A  00BB               	movwf	___fladd@b+1
  5964  0D0B  0842               	movf	??___fladd,w
  5965  0D0C  00BA               	movwf	___fladd@b
  5966  0D0D  0A4C               	incf	___fladd@bexp,w
  5967  0D0E  1903               	btfsc	3,2
  5968  0D0F  2D11               	goto	u3371
  5969  0D10  2D12               	goto	u3370
  5970  0D11                     u3371:
  5971  0D11  2D16               	goto	l1014
  5972  0D12                     u3370:
  5973  0D12                     l3164:
  5974  0D12  3001               	movlw	1
  5975  0D13  00C2               	movwf	??___fladd
  5976  0D14  0842               	movf	??___fladd,w
  5977  0D15  07CC               	addwf	___fladd@bexp,f
  5978  0D16                     l1014:
  5979  0D16  0A4C               	incf	___fladd@bexp,w
  5980  0D17  1903               	btfsc	3,2
  5981  0D18  2D1A               	goto	u3381
  5982  0D19  2D1B               	goto	u3380
  5983  0D1A                     u3381:
  5984  0D1A  2D20               	goto	l3168
  5985  0D1B                     u3380:
  5986  0D1B                     l3166:
  5987  0D1B  084C               	movf	___fladd@bexp,w
  5988  0D1C  1D03               	btfss	3,2
  5989  0D1D  2D1F               	goto	u3391
  5990  0D1E  2D20               	goto	u3390
  5991  0D1F                     u3391:
  5992  0D1F  2D2E               	goto	l3174
  5993  0D20                     u3390:
  5994  0D20                     l3168:
  5995  0D20  3000               	movlw	0
  5996  0D21  00BD               	movwf	___fladd@b+3
  5997  0D22  3000               	movlw	0
  5998  0D23  00BC               	movwf	___fladd@b+2
  5999  0D24  3000               	movlw	0
  6000  0D25  00BB               	movwf	___fladd@b+1
  6001  0D26  3000               	movlw	0
  6002  0D27  00BA               	movwf	___fladd@b
  6003  0D28                     l3170:
  6004  0D28  084C               	movf	___fladd@bexp,w
  6005  0D29  1D03               	btfss	3,2
  6006  0D2A  2D2C               	goto	u3401
  6007  0D2B  2D2D               	goto	u3400
  6008  0D2C                     u3401:
  6009  0D2C  2D2E               	goto	l3174
  6010  0D2D                     u3400:
  6011  0D2D                     l3172:
  6012  0D2D  01CA               	clrf	___fladd@signs
  6013  0D2E                     l3174:
  6014  0D2E  1C4C               	btfss	___fladd@bexp,0
  6015  0D2F  2D31               	goto	u3411
  6016  0D30  2D32               	goto	u3410
  6017  0D31                     u3411:
  6018  0D31  2D34               	goto	l3178
  6019  0D32                     u3410:
  6020  0D32                     l3176:
  6021  0D32  17BC               	bsf	___fladd@b+2,7
  6022  0D33  2D38               	goto	l1022
  6023  0D34                     l3178:
  6024  0D34  307F               	movlw	127
  6025  0D35  00C2               	movwf	??___fladd
  6026  0D36  0842               	movf	??___fladd,w
  6027  0D37  05BC               	andwf	___fladd@b+2,f
  6028  0D38                     l1022:
  6029  0D38  084C               	movf	___fladd@bexp,w
  6030  0D39  00C2               	movwf	??___fladd
  6031  0D3A  1003               	clrc
  6032  0D3B  0C42               	rrf	??___fladd,w
  6033  0D3C  00C3               	movwf	??___fladd+1
  6034  0D3D  0843               	movf	??___fladd+1,w
  6035  0D3E  00BD               	movwf	___fladd@b+3
  6036  0D3F                     l3180:
  6037  0D3F  1FCA               	btfss	___fladd@signs,7
  6038  0D40  2D42               	goto	u3421
  6039  0D41  2D43               	goto	u3420
  6040  0D42                     u3421:
  6041  0D42  2D44               	goto	l1023
  6042  0D43                     u3420:
  6043  0D43                     l3182:
  6044  0D43  17BD               	bsf	___fladd@b+3,7
  6045  0D44                     l1023:
  6046  0D44                     l993:
  6047  0D44  0008               	return
  6048  0D45                     __end_of___fladd:
  6049                           
  6050                           	psect	text8
  6051  12F8                     __ptext8:	
  6052 ;; *************** function _RotaryEncoder_Init *****************
  6053 ;; Defined at:
  6054 ;;		line 12 in file "RotaryEncoder.c"
  6055 ;; Parameters:    Size  Location     Type
  6056 ;;		None
  6057 ;; Auto vars:     Size  Location     Type
  6058 ;;		None
  6059 ;; Return value:  Size  Location     Type
  6060 ;;                  1    wreg      void 
  6061 ;; Registers used:
  6062 ;;		wreg, status,2, status,0
  6063 ;; Tracked objects:
  6064 ;;		On entry : 0/0
  6065 ;;		On exit  : 0/0
  6066 ;;		Unchanged: 0/0
  6067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6068 ;;      Params:         0       0       0       0       0
  6069 ;;      Locals:         0       0       0       0       0
  6070 ;;      Temps:          0       0       0       0       0
  6071 ;;      Totals:         0       0       0       0       0
  6072 ;;Total ram usage:        0 bytes
  6073 ;; Hardware stack levels used: 1
  6074 ;; This function calls:
  6075 ;;		Nothing
  6076 ;; This function is called by:
  6077 ;;		_main
  6078 ;; This function uses a non-reentrant model
  6079 ;;
  6080                           
  6081  12F8                     _RotaryEncoder_Init:	
  6082                           ;psect for function _RotaryEncoder_Init
  6083                           
  6084  12F8                     l3476:	
  6085                           ;incstack = 0
  6086                           ; Regs used in _RotaryEncoder_Init: [wreg+status,2+status,0]
  6087                           
  6088                           
  6089                           ;RotaryEncoder.c: 14:     T2CON = 0x04;
  6090  12F8  3004               	movlw	4
  6091  12F9  1283               	bcf	3,5	;RP0=0, select bank0
  6092  12FA  1303               	bcf	3,6	;RP1=0, select bank0
  6093  12FB  0092               	movwf	18	;volatile
  6094                           
  6095                           ;RotaryEncoder.c: 15:     PR2 = 101;
  6096  12FC  3065               	movlw	101
  6097  12FD  1683               	bsf	3,5	;RP0=1, select bank1
  6098  12FE  1303               	bcf	3,6	;RP1=0, select bank1
  6099  12FF  0092               	movwf	18	;volatile
  6100  1300                     l3478:
  6101                           
  6102                           ;RotaryEncoder.c: 17:     TRISBbits.TRISB0 = 1;
  6103  1300  1406               	bsf	6,0	;volatile
  6104  1301                     l3480:
  6105                           
  6106                           ;RotaryEncoder.c: 18:     TRISBbits.TRISB3 = 1;
  6107  1301  1586               	bsf	6,3	;volatile
  6108  1302                     l3482:
  6109                           
  6110                           ;RotaryEncoder.c: 19:     TRISBbits.TRISB7 = 1;
  6111  1302  1786               	bsf	6,7	;volatile
  6112  1303                     l3484:
  6113                           
  6114                           ;RotaryEncoder.c: 21:     PSTRCONbits.STRB = 1;
  6115  1303  149D               	bsf	29,1	;volatile
  6116  1304                     l3486:
  6117                           
  6118                           ;RotaryEncoder.c: 22:     PSTRCONbits.STRC = 1;
  6119  1304  151D               	bsf	29,2	;volatile
  6120  1305                     l3488:
  6121                           
  6122                           ;RotaryEncoder.c: 23:     PSTRCONbits.STRD = 1;
  6123  1305  159D               	bsf	29,3	;volatile
  6124  1306                     l3490:
  6125                           
  6126                           ;RotaryEncoder.c: 26:     CCP1CONbits.P1M = 0x00;
  6127  1306  303F               	movlw	-193
  6128  1307  1283               	bcf	3,5	;RP0=0, select bank0
  6129  1308  1303               	bcf	3,6	;RP1=0, select bank0
  6130  1309  0597               	andwf	23,f	;volatile
  6131  130A                     l3492:
  6132                           
  6133                           ;RotaryEncoder.c: 27:     CCP1CONbits.CCP1M = 0b1100;
  6134  130A  0817               	movf	23,w	;volatile
  6135  130B  39F0               	andlw	-16
  6136  130C  380C               	iorlw	12
  6137  130D  0097               	movwf	23	;volatile
  6138  130E                     l484:
  6139  130E  0008               	return
  6140  130F                     __end_of_RotaryEncoder_Init:
  6141                           
  6142                           	psect	text9
  6143  1536                     __ptext9:	
  6144 ;; *************** function _ReadPhoto *****************
  6145 ;; Defined at:
  6146 ;;		line 14 in file "PhotoResistor.c"
  6147 ;; Parameters:    Size  Location     Type
  6148 ;;		None
  6149 ;; Auto vars:     Size  Location     Type
  6150 ;;		None
  6151 ;; Return value:  Size  Location     Type
  6152 ;;                  1    wreg      void 
  6153 ;; Registers used:
  6154 ;;		wreg, status,2, status,0
  6155 ;; Tracked objects:
  6156 ;;		On entry : 0/0
  6157 ;;		On exit  : 0/0
  6158 ;;		Unchanged: 0/0
  6159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6160 ;;      Params:         0       0       0       0       0
  6161 ;;      Locals:         0       0       0       0       0
  6162 ;;      Temps:          2       0       0       0       0
  6163 ;;      Totals:         2       0       0       0       0
  6164 ;;Total ram usage:        2 bytes
  6165 ;; Hardware stack levels used: 1
  6166 ;; This function calls:
  6167 ;;		Nothing
  6168 ;; This function is called by:
  6169 ;;		_main
  6170 ;; This function uses a non-reentrant model
  6171 ;;
  6172                           
  6173  1536                     _ReadPhoto:	
  6174                           ;psect for function _ReadPhoto
  6175                           
  6176  1536                     l3540:	
  6177                           ;incstack = 0
  6178                           ; Regs used in _ReadPhoto: [wreg+status,2+status,0]
  6179                           
  6180                           
  6181                           ;PhotoResistor.c: 17:     ADCON0bits.ADCS = 0b11;
  6182  1536  30C0               	movlw	192
  6183  1537  1283               	bcf	3,5	;RP0=0, select bank0
  6184  1538  1303               	bcf	3,6	;RP1=0, select bank0
  6185  1539  049F               	iorwf	31,f	;volatile
  6186                           
  6187                           ;PhotoResistor.c: 18:     ADCON0bits.CHS = 0b1101;
  6188  153A  081F               	movf	31,w	;volatile
  6189  153B  39C3               	andlw	-61
  6190  153C  3834               	iorlw	52
  6191  153D  009F               	movwf	31	;volatile
  6192  153E                     l3542:
  6193                           
  6194                           ;PhotoResistor.c: 21:     ADCON1bits.VCFG1 = 0;
  6195  153E  1683               	bsf	3,5	;RP0=1, select bank1
  6196  153F  1303               	bcf	3,6	;RP1=0, select bank1
  6197  1540  129F               	bcf	31,5	;volatile
  6198  1541                     l3544:
  6199                           
  6200                           ;PhotoResistor.c: 22:     ADCON1bits.VCFG0 = 0;
  6201  1541  121F               	bcf	31,4	;volatile
  6202  1542                     l3546:
  6203                           
  6204                           ;PhotoResistor.c: 23:     ADCON1bits.ADFM = 1;
  6205  1542  179F               	bsf	31,7	;volatile
  6206  1543                     l3548:
  6207                           
  6208                           ;PhotoResistor.c: 26:     PIR1bits.ADIF = 0;
  6209  1543  1283               	bcf	3,5	;RP0=0, select bank0
  6210  1544  1303               	bcf	3,6	;RP1=0, select bank0
  6211  1545  130C               	bcf	12,6	;volatile
  6212  1546                     l3550:
  6213                           
  6214                           ;PhotoResistor.c: 29:     PIE1bits.ADIE = 1;
  6215  1546  1683               	bsf	3,5	;RP0=1, select bank1
  6216  1547  1303               	bcf	3,6	;RP1=0, select bank1
  6217  1548  170C               	bsf	12,6	;volatile
  6218  1549                     l3552:
  6219                           
  6220                           ;PhotoResistor.c: 31:     ADCON0bits.ADON = 1;
  6221  1549  1283               	bcf	3,5	;RP0=0, select bank0
  6222  154A  1303               	bcf	3,6	;RP1=0, select bank0
  6223  154B  141F               	bsf	31,0	;volatile
  6224  154C                     l3554:
  6225                           
  6226                           ;PhotoResistor.c: 34:     ADCON0bits.GO = 1;
  6227  154C  149F               	bsf	31,1	;volatile
  6228  154D                     l530:	
  6229                           ;PhotoResistor.c: 36:     while(ADCON0bits.GO == 1);
  6230                           
  6231  154D  189F               	btfsc	31,1	;volatile
  6232  154E  2D50               	goto	u4071
  6233  154F  2D51               	goto	u4070
  6234  1550                     u4071:
  6235  1550  2D4D               	goto	l530
  6236  1551                     u4070:
  6237  1551                     l3556:
  6238                           
  6239                           ;PhotoResistor.c: 39:     photo_result = 0x0000;
  6240  1551  1683               	bsf	3,5	;RP0=1, select bank1
  6241  1552  1303               	bcf	3,6	;RP1=0, select bank1
  6242  1553  01E6               	clrf	_photo_result^(0+128)
  6243  1554  01E7               	clrf	(_photo_result+1)^(0+128)
  6244  1555                     l3558:
  6245                           
  6246                           ;PhotoResistor.c: 40:     photo_result = ADRESH;
  6247  1555  1283               	bcf	3,5	;RP0=0, select bank0
  6248  1556  1303               	bcf	3,6	;RP1=0, select bank0
  6249  1557  081E               	movf	30,w	;volatile
  6250  1558  00F0               	movwf	??_ReadPhoto
  6251  1559  01F1               	clrf	??_ReadPhoto+1
  6252  155A  0870               	movf	??_ReadPhoto,w
  6253  155B  1683               	bsf	3,5	;RP0=1, select bank1
  6254  155C  1303               	bcf	3,6	;RP1=0, select bank1
  6255  155D  00E6               	movwf	_photo_result^(0+128)
  6256  155E  0871               	movf	??_ReadPhoto+1,w
  6257  155F  00E7               	movwf	(_photo_result+1)^(0+128)
  6258  1560                     l3560:
  6259                           
  6260                           ;PhotoResistor.c: 41:     photo_result = photo_result << 8;
  6261  1560  0866               	movf	_photo_result^(0+128),w
  6262  1561  00F1               	movwf	??_ReadPhoto+1
  6263  1562  01F0               	clrf	??_ReadPhoto
  6264  1563  0870               	movf	??_ReadPhoto,w
  6265  1564  00E6               	movwf	_photo_result^(0+128)
  6266  1565  0871               	movf	??_ReadPhoto+1,w
  6267  1566  00E7               	movwf	(_photo_result+1)^(0+128)
  6268  1567                     l3562:
  6269                           
  6270                           ;PhotoResistor.c: 42:     photo_result = photo_result | ADRESL;
  6271  1567  0866               	movf	_photo_result^(0+128),w
  6272  1568  041E               	iorwf	30,w	;volatile
  6273  1569  00F0               	movwf	??_ReadPhoto
  6274  156A  0867               	movf	(_photo_result+1)^(0+128),w
  6275  156B  00F1               	movwf	??_ReadPhoto+1
  6276  156C  0870               	movf	??_ReadPhoto,w
  6277  156D  00E6               	movwf	_photo_result^(0+128)
  6278  156E  0871               	movf	??_ReadPhoto+1,w
  6279  156F  00E7               	movwf	(_photo_result+1)^(0+128)
  6280  1570                     l3564:
  6281                           
  6282                           ;PhotoResistor.c: 44:     PIR1bits.ADIF = 0;
  6283  1570  1283               	bcf	3,5	;RP0=0, select bank0
  6284  1571  1303               	bcf	3,6	;RP1=0, select bank0
  6285  1572  130C               	bcf	12,6	;volatile
  6286  1573                     l533:
  6287  1573  0008               	return
  6288  1574                     __end_of_ReadPhoto:
  6289                           
  6290                           	psect	text10
  6291  14F8                     __ptext10:	
  6292 ;; *************** function _RTC_Read_Clock *****************
  6293 ;; Defined at:
  6294 ;;		line 16 in file "RTC.c"
  6295 ;; Parameters:    Size  Location     Type
  6296 ;;  read_clock_a    1    wreg     unsigned char 
  6297 ;; Auto vars:     Size  Location     Type
  6298 ;;  read_clock_a    1    5[COMMON] unsigned char 
  6299 ;; Return value:  Size  Location     Type
  6300 ;;                  1    wreg      void 
  6301 ;; Registers used:
  6302 ;;		wreg, status,2, status,0, pclath, cstack
  6303 ;; Tracked objects:
  6304 ;;		On entry : 0/0
  6305 ;;		On exit  : 0/0
  6306 ;;		Unchanged: 0/0
  6307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6308 ;;      Params:         0       0       0       0       0
  6309 ;;      Locals:         1       0       0       0       0
  6310 ;;      Temps:          2       0       0       0       0
  6311 ;;      Totals:         3       0       0       0       0
  6312 ;;Total ram usage:        3 bytes
  6313 ;; Hardware stack levels used: 1
  6314 ;; Hardware stack levels required when called: 3
  6315 ;; This function calls:
  6316 ;;		_I2C_Read
  6317 ;;		_I2C_Repeated_Start
  6318 ;;		_I2C_Start
  6319 ;;		_I2C_Write
  6320 ;; This function is called by:
  6321 ;;		_main
  6322 ;; This function uses a non-reentrant model
  6323 ;;
  6324                           
  6325  14F8                     _RTC_Read_Clock:	
  6326                           ;psect for function _RTC_Read_Clock
  6327                           
  6328                           
  6329                           ;incstack = 0
  6330                           ; Regs used in _RTC_Read_Clock: [wreg+status,2+status,0+pclath+cstack]
  6331                           ;RTC_Read_Clock@read_clock_address stored from wreg
  6332  14F8  00F5               	movwf	RTC_Read_Clock@read_clock_address
  6333  14F9                     l3510:
  6334                           
  6335                           ;RTC.c: 16: void RTC_Read_Clock(char read_clock_address);RTC.c: 17: {;RTC.c: 18:     I2C
      +                          _Start(0xD0);
  6336  14F9  30D0               	movlw	208
  6337  14FA  160A  118A  230F  160A  118A  	fcall	_I2C_Start
  6338                           
  6339                           ;RTC.c: 19:     I2C_Write(read_clock_address);
  6340  14FF  0875               	movf	RTC_Read_Clock@read_clock_address,w
  6341  1500  160A  118A  22BA  160A  118A  	fcall	_I2C_Write
  6342                           
  6343                           ;RTC.c: 20:     I2C_Repeated_Start(0xD1);
  6344  1505  30D1               	movlw	209
  6345  1506  160A  118A  2328  160A  118A  	fcall	_I2C_Repeated_Start
  6346                           
  6347                           ;RTC.c: 21:     sec = I2C_Read(0);
  6348  150B  3000               	movlw	0
  6349  150C  160A  118A  23B9  160A  118A  	fcall	_I2C_Read
  6350  1511  00F3               	movwf	??_RTC_Read_Clock
  6351  1512  01F4               	clrf	??_RTC_Read_Clock+1
  6352  1513  0873               	movf	??_RTC_Read_Clock,w
  6353  1514  1683               	bsf	3,5	;RP0=1, select bank1
  6354  1515  1303               	bcf	3,6	;RP1=0, select bank1
  6355  1516  00E2               	movwf	_sec^(0+128)
  6356  1517  0874               	movf	??_RTC_Read_Clock+1,w
  6357  1518  00E3               	movwf	(_sec+1)^(0+128)
  6358                           
  6359                           ;RTC.c: 22:     min = I2C_Read(0);
  6360  1519  3000               	movlw	0
  6361  151A  160A  118A  23B9  160A  118A  	fcall	_I2C_Read
  6362  151F  00F3               	movwf	??_RTC_Read_Clock
  6363  1520  01F4               	clrf	??_RTC_Read_Clock+1
  6364  1521  0873               	movf	??_RTC_Read_Clock,w
  6365  1522  1683               	bsf	3,5	;RP0=1, select bank1
  6366  1523  1303               	bcf	3,6	;RP1=0, select bank1
  6367  1524  00E0               	movwf	_min^(0+128)
  6368  1525  0874               	movf	??_RTC_Read_Clock+1,w
  6369  1526  00E1               	movwf	(_min+1)^(0+128)
  6370                           
  6371                           ;RTC.c: 23:     hour= I2C_Read(1);
  6372  1527  3001               	movlw	1
  6373  1528  160A  118A  23B9  160A  118A  	fcall	_I2C_Read
  6374  152D  00F3               	movwf	??_RTC_Read_Clock
  6375  152E  01F4               	clrf	??_RTC_Read_Clock+1
  6376  152F  0873               	movf	??_RTC_Read_Clock,w
  6377  1530  1683               	bsf	3,5	;RP0=1, select bank1
  6378  1531  1303               	bcf	3,6	;RP1=0, select bank1
  6379  1532  00DE               	movwf	_hour^(0+128)
  6380  1533  0874               	movf	??_RTC_Read_Clock+1,w
  6381  1534  00DF               	movwf	(_hour+1)^(0+128)
  6382  1535                     l412:
  6383  1535  0008               	return
  6384  1536                     __end_of_RTC_Read_Clock:
  6385                           
  6386                           	psect	text11
  6387  15B6                     __ptext11:	
  6388 ;; *************** function _RTC_Read_Calendar *****************
  6389 ;; Defined at:
  6390 ;;		line 27 in file "RTC.c"
  6391 ;; Parameters:    Size  Location     Type
  6392 ;;  read_calenda    1    wreg     unsigned char 
  6393 ;; Auto vars:     Size  Location     Type
  6394 ;;  read_calenda    1    5[COMMON] unsigned char 
  6395 ;; Return value:  Size  Location     Type
  6396 ;;                  1    wreg      void 
  6397 ;; Registers used:
  6398 ;;		wreg, status,2, status,0, pclath, cstack
  6399 ;; Tracked objects:
  6400 ;;		On entry : 0/0
  6401 ;;		On exit  : 0/0
  6402 ;;		Unchanged: 0/0
  6403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6404 ;;      Params:         0       0       0       0       0
  6405 ;;      Locals:         1       0       0       0       0
  6406 ;;      Temps:          2       0       0       0       0
  6407 ;;      Totals:         3       0       0       0       0
  6408 ;;Total ram usage:        3 bytes
  6409 ;; Hardware stack levels used: 1
  6410 ;; Hardware stack levels required when called: 3
  6411 ;; This function calls:
  6412 ;;		_I2C_Read
  6413 ;;		_I2C_Repeated_Start
  6414 ;;		_I2C_Start
  6415 ;;		_I2C_Stop
  6416 ;;		_I2C_Write
  6417 ;; This function is called by:
  6418 ;;		_main
  6419 ;; This function uses a non-reentrant model
  6420 ;;
  6421                           
  6422  15B6                     _RTC_Read_Calendar:	
  6423                           ;psect for function _RTC_Read_Calendar
  6424                           
  6425                           
  6426                           ;incstack = 0
  6427                           ; Regs used in _RTC_Read_Calendar: [wreg+status,2+status,0+pclath+cstack]
  6428                           ;RTC_Read_Calendar@read_calendar_address stored from wreg
  6429  15B6  00F5               	movwf	RTC_Read_Calendar@read_calendar_address
  6430  15B7                     l3512:
  6431                           
  6432                           ;RTC.c: 27: void RTC_Read_Calendar(char read_calendar_address);RTC.c: 28: {;RTC.c: 29:  
      +                             I2C_Start(0xD0);
  6433  15B7  30D0               	movlw	208
  6434  15B8  160A  118A  230F  160A  118A  	fcall	_I2C_Start
  6435                           
  6436                           ;RTC.c: 30:     I2C_Write(read_calendar_address);
  6437  15BD  0875               	movf	RTC_Read_Calendar@read_calendar_address,w
  6438  15BE  160A  118A  22BA  160A  118A  	fcall	_I2C_Write
  6439                           
  6440                           ;RTC.c: 31:     I2C_Repeated_Start(0xD1);
  6441  15C3  30D1               	movlw	209
  6442  15C4  160A  118A  2328  160A  118A  	fcall	_I2C_Repeated_Start
  6443                           
  6444                           ;RTC.c: 32:     Day = I2C_Read(0);
  6445  15C9  3000               	movlw	0
  6446  15CA  160A  118A  23B9  160A  118A  	fcall	_I2C_Read
  6447  15CF  00F3               	movwf	??_RTC_Read_Calendar
  6448  15D0  01F4               	clrf	??_RTC_Read_Calendar+1
  6449  15D1  0873               	movf	??_RTC_Read_Calendar,w
  6450  15D2  1683               	bsf	3,5	;RP0=1, select bank1
  6451  15D3  1303               	bcf	3,6	;RP1=0, select bank1
  6452  15D4  00DC               	movwf	_Day^(0+128)
  6453  15D5  0874               	movf	??_RTC_Read_Calendar+1,w
  6454  15D6  00DD               	movwf	(_Day+1)^(0+128)
  6455                           
  6456                           ;RTC.c: 33:     Date = I2C_Read(0);
  6457  15D7  3000               	movlw	0
  6458  15D8  160A  118A  23B9  160A  118A  	fcall	_I2C_Read
  6459  15DD  00F3               	movwf	??_RTC_Read_Calendar
  6460  15DE  01F4               	clrf	??_RTC_Read_Calendar+1
  6461  15DF  0873               	movf	??_RTC_Read_Calendar,w
  6462  15E0  1683               	bsf	3,5	;RP0=1, select bank1
  6463  15E1  1303               	bcf	3,6	;RP1=0, select bank1
  6464  15E2  00DA               	movwf	_Date^(0+128)
  6465  15E3  0874               	movf	??_RTC_Read_Calendar+1,w
  6466  15E4  00DB               	movwf	(_Date+1)^(0+128)
  6467                           
  6468                           ;RTC.c: 34:     Month = I2C_Read(0);
  6469  15E5  3000               	movlw	0
  6470  15E6  160A  118A  23B9  160A  118A  	fcall	_I2C_Read
  6471  15EB  00F3               	movwf	??_RTC_Read_Calendar
  6472  15EC  01F4               	clrf	??_RTC_Read_Calendar+1
  6473  15ED  0873               	movf	??_RTC_Read_Calendar,w
  6474  15EE  1683               	bsf	3,5	;RP0=1, select bank1
  6475  15EF  1303               	bcf	3,6	;RP1=0, select bank1
  6476  15F0  00D8               	movwf	_Month^(0+128)
  6477  15F1  0874               	movf	??_RTC_Read_Calendar+1,w
  6478  15F2  00D9               	movwf	(_Month+1)^(0+128)
  6479                           
  6480                           ;RTC.c: 35:     Year = I2C_Read(1);
  6481  15F3  3001               	movlw	1
  6482  15F4  160A  118A  23B9  160A  118A  	fcall	_I2C_Read
  6483  15F9  00F3               	movwf	??_RTC_Read_Calendar
  6484  15FA  01F4               	clrf	??_RTC_Read_Calendar+1
  6485  15FB  0873               	movf	??_RTC_Read_Calendar,w
  6486  15FC  1683               	bsf	3,5	;RP0=1, select bank1
  6487  15FD  1303               	bcf	3,6	;RP1=0, select bank1
  6488  15FE  00D6               	movwf	_Year^(0+128)
  6489  15FF  0874               	movf	??_RTC_Read_Calendar+1,w
  6490  1600  00D7               	movwf	(_Year+1)^(0+128)
  6491                           
  6492                           ;RTC.c: 36:     I2C_Stop();
  6493  1601  160A  118A  226E  160A  118A  	fcall	_I2C_Stop
  6494  1606                     l415:
  6495  1606  0008               	return
  6496  1607                     __end_of_RTC_Read_Calendar:
  6497                           
  6498                           	psect	text12
  6499  1328                     __ptext12:	
  6500 ;; *************** function _I2C_Repeated_Start *****************
  6501 ;; Defined at:
  6502 ;;		line 77 in file "I2C_Master.c"
  6503 ;; Parameters:    Size  Location     Type
  6504 ;;  slave_read_a    1    wreg     unsigned char 
  6505 ;; Auto vars:     Size  Location     Type
  6506 ;;  slave_read_a    1    1[COMMON] unsigned char 
  6507 ;; Return value:  Size  Location     Type
  6508 ;;                  1    wreg      unsigned char 
  6509 ;; Registers used:
  6510 ;;		wreg, status,2, status,0, pclath, cstack
  6511 ;; Tracked objects:
  6512 ;;		On entry : 0/0
  6513 ;;		On exit  : 0/0
  6514 ;;		Unchanged: 0/0
  6515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6516 ;;      Params:         0       0       0       0       0
  6517 ;;      Locals:         1       0       0       0       0
  6518 ;;      Temps:          0       0       0       0       0
  6519 ;;      Totals:         1       0       0       0       0
  6520 ;;Total ram usage:        1 bytes
  6521 ;; Hardware stack levels used: 1
  6522 ;; Hardware stack levels required when called: 2
  6523 ;; This function calls:
  6524 ;;		_I2C_Write
  6525 ;; This function is called by:
  6526 ;;		_RTC_Read_Clock
  6527 ;;		_RTC_Read_Calendar
  6528 ;; This function uses a non-reentrant model
  6529 ;;
  6530                           
  6531  1328                     _I2C_Repeated_Start:	
  6532                           ;psect for function _I2C_Repeated_Start
  6533                           
  6534                           
  6535                           ;incstack = 0
  6536                           ; Regs used in _I2C_Repeated_Start: [wreg+status,2+status,0+pclath+cstack]
  6537                           ;I2C_Repeated_Start@slave_read_address stored from wreg
  6538  1328  00F1               	movwf	I2C_Repeated_Start@slave_read_address
  6539  1329                     l2752:
  6540                           
  6541                           ;I2C_Master.c: 77: char I2C_Repeated_Start(char slave_read_address);I2C_Master.c: 78: {;
      +                          I2C_Master.c: 79:     RSEN = 1;
  6542  1329  1683               	bsf	3,5	;RP0=1, select bank1
  6543  132A  1303               	bcf	3,6	;RP1=0, select bank1
  6544  132B  1491               	bsf	17,1	;volatile
  6545  132C                     l80:	
  6546                           ;I2C_Master.c: 80:     while(RSEN);
  6547                           
  6548  132C  1891               	btfsc	17,1	;volatile
  6549  132D  2B2F               	goto	u2601
  6550  132E  2B30               	goto	u2600
  6551  132F                     u2601:
  6552  132F  2B2C               	goto	l80
  6553  1330                     u2600:
  6554  1330                     l82:
  6555                           
  6556                           ;I2C_Master.c: 81:     SSPIF = 0;
  6557  1330  1283               	bcf	3,5	;RP0=0, select bank0
  6558  1331  1303               	bcf	3,6	;RP1=0, select bank0
  6559  1332  118C               	bcf	12,3	;volatile
  6560                           
  6561                           ;I2C_Master.c: 82:  if(!SSPSTATbits.S)
  6562  1333  1683               	bsf	3,5	;RP0=1, select bank1
  6563  1334  1303               	bcf	3,6	;RP1=0, select bank1
  6564  1335  1994               	btfsc	20,3	;volatile
  6565  1336  2B38               	goto	u2611
  6566  1337  2B39               	goto	u2610
  6567  1338                     u2611:
  6568  1338  2B3A               	goto	l2756
  6569  1339                     u2610:
  6570  1339  2B40               	goto	l84
  6571  133A                     l2756:
  6572                           
  6573                           ;I2C_Master.c: 84:     I2C_Write(slave_read_address);
  6574  133A  0871               	movf	I2C_Repeated_Start@slave_read_address,w
  6575  133B  160A  118A  22BA  160A  118A  	fcall	_I2C_Write
  6576  1340                     l2758:
  6577  1340                     l84:	
  6578                           ;I2C_Master.c: 85:     if (ACKSTAT)
  6579                           
  6580  1340  0008               	return
  6581  1341                     __end_of_I2C_Repeated_Start:
  6582                           
  6583                           	psect	text13
  6584  13B9                     __ptext13:	
  6585 ;; *************** function _I2C_Read *****************
  6586 ;; Defined at:
  6587 ;;		line 10 in file "I2C_Master.c"
  6588 ;; Parameters:    Size  Location     Type
  6589 ;;  flag            1    wreg     unsigned char 
  6590 ;; Auto vars:     Size  Location     Type
  6591 ;;  flag            1    1[COMMON] unsigned char 
  6592 ;;  buffer          1    2[COMMON] unsigned char 
  6593 ;; Return value:  Size  Location     Type
  6594 ;;                  1    wreg      unsigned char 
  6595 ;; Registers used:
  6596 ;;		wreg, status,2, status,0, pclath, cstack
  6597 ;; Tracked objects:
  6598 ;;		On entry : 0/0
  6599 ;;		On exit  : 0/0
  6600 ;;		Unchanged: 0/0
  6601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6602 ;;      Params:         0       0       0       0       0
  6603 ;;      Locals:         2       0       0       0       0
  6604 ;;      Temps:          1       0       0       0       0
  6605 ;;      Totals:         3       0       0       0       0
  6606 ;;Total ram usage:        3 bytes
  6607 ;; Hardware stack levels used: 1
  6608 ;; Hardware stack levels required when called: 1
  6609 ;; This function calls:
  6610 ;;		_I2C_Ack
  6611 ;;		_I2C_Nack
  6612 ;;		_I2C_Ready
  6613 ;; This function is called by:
  6614 ;;		_RTC_Read_Clock
  6615 ;;		_RTC_Read_Calendar
  6616 ;; This function uses a non-reentrant model
  6617 ;;
  6618                           
  6619  13B9                     _I2C_Read:	
  6620                           ;psect for function _I2C_Read
  6621                           
  6622                           
  6623                           ;incstack = 0
  6624                           ; Regs used in _I2C_Read: [wreg+status,2+status,0+pclath+cstack]
  6625                           ;I2C_Read@flag stored from wreg
  6626  13B9  00F1               	movwf	I2C_Read@flag
  6627  13BA                     l2738:
  6628                           
  6629                           ;I2C_Master.c: 10: char I2C_Read(char flag);I2C_Master.c: 12: {;I2C_Master.c: 13:       
      +                            char buffer;;I2C_Master.c: 14:         RCEN = 1;
  6630  13BA  1683               	bsf	3,5	;RP0=1, select bank1
  6631  13BB  1303               	bcf	3,6	;RP1=0, select bank1
  6632  13BC  1591               	bsf	17,3	;volatile
  6633  13BD                     l45:	
  6634                           ;I2C_Master.c: 15:         while(!SSPSTATbits.BF);
  6635                           
  6636  13BD  1C14               	btfss	20,0	;volatile
  6637  13BE  2BC0               	goto	u2581
  6638  13BF  2BC1               	goto	u2580
  6639  13C0                     u2581:
  6640  13C0  2BBD               	goto	l45
  6641  13C1                     u2580:
  6642  13C1                     l2740:
  6643                           
  6644                           ;I2C_Master.c: 17:         buffer = SSPBUF;
  6645  13C1  1283               	bcf	3,5	;RP0=0, select bank0
  6646  13C2  1303               	bcf	3,6	;RP1=0, select bank0
  6647  13C3  0813               	movf	19,w	;volatile
  6648  13C4  00F0               	movwf	??_I2C_Read
  6649  13C5  0870               	movf	??_I2C_Read,w
  6650  13C6  00F2               	movwf	I2C_Read@buffer
  6651  13C7                     l2742:
  6652                           
  6653                           ;I2C_Master.c: 19:         if(flag==0)
  6654  13C7  0871               	movf	I2C_Read@flag,w
  6655  13C8  1D03               	btfss	3,2
  6656  13C9  2BCB               	goto	u2591
  6657  13CA  2BCC               	goto	u2590
  6658  13CB                     u2591:
  6659  13CB  2BD2               	goto	l2746
  6660  13CC                     u2590:
  6661  13CC                     l2744:
  6662                           
  6663                           ;I2C_Master.c: 20:             I2C_Ack();
  6664  13CC  160A  118A  2277  160A  118A  	fcall	_I2C_Ack
  6665  13D1  2BD7               	goto	l49
  6666  13D2                     l2746:
  6667                           
  6668                           ;I2C_Master.c: 22:             I2C_Nack();
  6669  13D2  160A  118A  2280  160A  118A  	fcall	_I2C_Nack
  6670  13D7                     l49:
  6671                           
  6672                           ;I2C_Master.c: 23:         I2C_Ready();
  6673  13D7  160A  118A  225E  160A  118A  	fcall	_I2C_Ready
  6674  13DC                     l2748:
  6675                           
  6676                           ;I2C_Master.c: 24:         return(buffer);
  6677  13DC  0872               	movf	I2C_Read@buffer,w
  6678  13DD                     l50:
  6679  13DD  0008               	return
  6680  13DE                     __end_of_I2C_Read:
  6681                           
  6682                           	psect	text14
  6683  1280                     __ptext14:	
  6684 ;; *************** function _I2C_Nack *****************
  6685 ;; Defined at:
  6686 ;;		line 117 in file "I2C_Master.c"
  6687 ;; Parameters:    Size  Location     Type
  6688 ;;		None
  6689 ;; Auto vars:     Size  Location     Type
  6690 ;;		None
  6691 ;; Return value:  Size  Location     Type
  6692 ;;                  1    wreg      void 
  6693 ;; Registers used:
  6694 ;;		None
  6695 ;; Tracked objects:
  6696 ;;		On entry : 0/0
  6697 ;;		On exit  : 0/0
  6698 ;;		Unchanged: 0/0
  6699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6700 ;;      Params:         0       0       0       0       0
  6701 ;;      Locals:         0       0       0       0       0
  6702 ;;      Temps:          0       0       0       0       0
  6703 ;;      Totals:         0       0       0       0       0
  6704 ;;Total ram usage:        0 bytes
  6705 ;; Hardware stack levels used: 1
  6706 ;; This function calls:
  6707 ;;		Nothing
  6708 ;; This function is called by:
  6709 ;;		_I2C_Read
  6710 ;; This function uses a non-reentrant model
  6711 ;;
  6712                           
  6713  1280                     _I2C_Nack:	
  6714                           ;psect for function _I2C_Nack
  6715                           
  6716  1280                     l2620:	
  6717                           ;incstack = 0
  6718                           ; Regs used in _I2C_Nack: []
  6719                           
  6720                           
  6721                           ;I2C_Master.c: 119:     ACKDT=1;
  6722  1280  1683               	bsf	3,5	;RP0=1, select bank1
  6723  1281  1303               	bcf	3,6	;RP1=0, select bank1
  6724  1282  1691               	bsf	17,5	;volatile
  6725                           
  6726                           ;I2C_Master.c: 120:  ACKEN=1;
  6727  1283  1611               	bsf	17,4	;volatile
  6728  1284                     l107:	
  6729                           ;I2C_Master.c: 121:     while(ACKEN);
  6730                           
  6731  1284  1A11               	btfsc	17,4	;volatile
  6732  1285  2A87               	goto	u2251
  6733  1286  2A88               	goto	u2250
  6734  1287                     u2251:
  6735  1287  2A84               	goto	l107
  6736  1288                     u2250:
  6737  1288                     l110:
  6738  1288  0008               	return
  6739  1289                     __end_of_I2C_Nack:
  6740                           
  6741                           	psect	text15
  6742  1277                     __ptext15:	
  6743 ;; *************** function _I2C_Ack *****************
  6744 ;; Defined at:
  6745 ;;		line 110 in file "I2C_Master.c"
  6746 ;; Parameters:    Size  Location     Type
  6747 ;;		None
  6748 ;; Auto vars:     Size  Location     Type
  6749 ;;		None
  6750 ;; Return value:  Size  Location     Type
  6751 ;;                  1    wreg      void 
  6752 ;; Registers used:
  6753 ;;		None
  6754 ;; Tracked objects:
  6755 ;;		On entry : 0/0
  6756 ;;		On exit  : 0/0
  6757 ;;		Unchanged: 0/0
  6758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6759 ;;      Params:         0       0       0       0       0
  6760 ;;      Locals:         0       0       0       0       0
  6761 ;;      Temps:          0       0       0       0       0
  6762 ;;      Totals:         0       0       0       0       0
  6763 ;;Total ram usage:        0 bytes
  6764 ;; Hardware stack levels used: 1
  6765 ;; This function calls:
  6766 ;;		Nothing
  6767 ;; This function is called by:
  6768 ;;		_I2C_Read
  6769 ;; This function uses a non-reentrant model
  6770 ;;
  6771                           
  6772  1277                     _I2C_Ack:	
  6773                           ;psect for function _I2C_Ack
  6774                           
  6775  1277                     l2618:	
  6776                           ;incstack = 0
  6777                           ; Regs used in _I2C_Ack: []
  6778                           
  6779                           
  6780                           ;I2C_Master.c: 112:     ACKDT=0;
  6781  1277  1683               	bsf	3,5	;RP0=1, select bank1
  6782  1278  1303               	bcf	3,6	;RP1=0, select bank1
  6783  1279  1291               	bcf	17,5	;volatile
  6784                           
  6785                           ;I2C_Master.c: 113:  ACKEN=1;
  6786  127A  1611               	bsf	17,4	;volatile
  6787  127B                     l101:	
  6788                           ;I2C_Master.c: 114:     while(ACKEN);
  6789                           
  6790  127B  1A11               	btfsc	17,4	;volatile
  6791  127C  2A7E               	goto	u2241
  6792  127D  2A7F               	goto	u2240
  6793  127E                     u2241:
  6794  127E  2A7B               	goto	l101
  6795  127F                     u2240:
  6796  127F                     l104:
  6797  127F  0008               	return
  6798  1280                     __end_of_I2C_Ack:
  6799                           
  6800                           	psect	text16
  6801  1405                     __ptext16:	
  6802 ;; *************** function _RTC_Clock_Write *****************
  6803 ;; Defined at:
  6804 ;;		line 39 in file "RTC.c"
  6805 ;; Parameters:    Size  Location     Type
  6806 ;;  sec             1    wreg     unsigned char 
  6807 ;;  min             1    2[COMMON] unsigned char 
  6808 ;;  hour            1    3[COMMON] unsigned char 
  6809 ;;  AM_PM           1    4[COMMON] unsigned char 
  6810 ;; Auto vars:     Size  Location     Type
  6811 ;;  sec             1    6[COMMON] unsigned char 
  6812 ;; Return value:  Size  Location     Type
  6813 ;;                  1    wreg      void 
  6814 ;; Registers used:
  6815 ;;		wreg, status,2, status,0, pclath, cstack
  6816 ;; Tracked objects:
  6817 ;;		On entry : 0/0
  6818 ;;		On exit  : 0/0
  6819 ;;		Unchanged: 0/0
  6820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6821 ;;      Params:         3       0       0       0       0
  6822 ;;      Locals:         1       0       0       0       0
  6823 ;;      Temps:          1       0       0       0       0
  6824 ;;      Totals:         5       0       0       0       0
  6825 ;;Total ram usage:        5 bytes
  6826 ;; Hardware stack levels used: 1
  6827 ;; Hardware stack levels required when called: 3
  6828 ;; This function calls:
  6829 ;;		_I2C_Start
  6830 ;;		_I2C_Stop
  6831 ;;		_I2C_Write
  6832 ;; This function is called by:
  6833 ;;		_main
  6834 ;; This function uses a non-reentrant model
  6835 ;;
  6836                           
  6837  1405                     _RTC_Clock_Write:	
  6838                           ;psect for function _RTC_Clock_Write
  6839                           
  6840                           
  6841                           ;incstack = 0
  6842                           ; Regs used in _RTC_Clock_Write: [wreg+status,2+status,0+pclath+cstack]
  6843                           ;RTC_Clock_Write@sec stored from wreg
  6844  1405  00F6               	movwf	RTC_Clock_Write@sec
  6845  1406                     l3494:
  6846                           
  6847                           ;RTC.c: 39: void RTC_Clock_Write(char sec, char min, char hour, char AM_PM);RTC.c: 40: {
      +                          ;RTC.c: 41:     hour = (hour | AM_PM);
  6848  1406  0873               	movf	RTC_Clock_Write@hour,w
  6849  1407  0474               	iorwf	RTC_Clock_Write@AM_PM,w
  6850  1408  00F5               	movwf	??_RTC_Clock_Write
  6851  1409  0875               	movf	??_RTC_Clock_Write,w
  6852  140A  00F3               	movwf	RTC_Clock_Write@hour
  6853  140B                     l3496:
  6854                           
  6855                           ;RTC.c: 42:  I2C_Start(0xD0);
  6856  140B  30D0               	movlw	208
  6857  140C  160A  118A  230F  160A  118A  	fcall	_I2C_Start
  6858  1411                     l3498:
  6859                           
  6860                           ;RTC.c: 43:  I2C_Write(0);
  6861  1411  3000               	movlw	0
  6862  1412  160A  118A  22BA  160A  118A  	fcall	_I2C_Write
  6863  1417                     l3500:
  6864                           
  6865                           ;RTC.c: 44:  I2C_Write(sec);
  6866  1417  0876               	movf	RTC_Clock_Write@sec,w
  6867  1418  160A  118A  22BA  160A  118A  	fcall	_I2C_Write
  6868  141D                     l3502:
  6869                           
  6870                           ;RTC.c: 45:  I2C_Write(min);
  6871  141D  0872               	movf	RTC_Clock_Write@min,w
  6872  141E  160A  118A  22BA  160A  118A  	fcall	_I2C_Write
  6873  1423                     l3504:
  6874                           
  6875                           ;RTC.c: 46:  I2C_Write(hour);
  6876  1423  0873               	movf	RTC_Clock_Write@hour,w
  6877  1424  160A  118A  22BA  160A  118A  	fcall	_I2C_Write
  6878  1429                     l3506:
  6879                           
  6880                           ;RTC.c: 47:  I2C_Stop();
  6881  1429  160A  118A  226E  160A  118A  	fcall	_I2C_Stop
  6882  142E                     l418:
  6883  142E  0008               	return
  6884  142F                     __end_of_RTC_Clock_Write:
  6885                           
  6886                           	psect	text17
  6887  142F                     __ptext17:	
  6888 ;; *************** function _RTC_Calendar_Write *****************
  6889 ;; Defined at:
  6890 ;;		line 50 in file "RTC.c"
  6891 ;; Parameters:    Size  Location     Type
  6892 ;;  day             1    wreg     unsigned char 
  6893 ;;  date            1    2[COMMON] unsigned char 
  6894 ;;  month           1    3[COMMON] unsigned char 
  6895 ;;  year            1    4[COMMON] unsigned char 
  6896 ;; Auto vars:     Size  Location     Type
  6897 ;;  day             1    5[COMMON] unsigned char 
  6898 ;; Return value:  Size  Location     Type
  6899 ;;                  1    wreg      void 
  6900 ;; Registers used:
  6901 ;;		wreg, status,2, status,0, pclath, cstack
  6902 ;; Tracked objects:
  6903 ;;		On entry : 0/0
  6904 ;;		On exit  : 0/0
  6905 ;;		Unchanged: 0/0
  6906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6907 ;;      Params:         3       0       0       0       0
  6908 ;;      Locals:         1       0       0       0       0
  6909 ;;      Temps:          0       0       0       0       0
  6910 ;;      Totals:         4       0       0       0       0
  6911 ;;Total ram usage:        4 bytes
  6912 ;; Hardware stack levels used: 1
  6913 ;; Hardware stack levels required when called: 3
  6914 ;; This function calls:
  6915 ;;		_I2C_Start
  6916 ;;		_I2C_Stop
  6917 ;;		_I2C_Write
  6918 ;; This function is called by:
  6919 ;;		_main
  6920 ;; This function uses a non-reentrant model
  6921 ;;
  6922                           
  6923  142F                     _RTC_Calendar_Write:	
  6924                           ;psect for function _RTC_Calendar_Write
  6925                           
  6926                           
  6927                           ;incstack = 0
  6928                           ; Regs used in _RTC_Calendar_Write: [wreg+status,2+status,0+pclath+cstack]
  6929                           ;RTC_Calendar_Write@day stored from wreg
  6930  142F  00F5               	movwf	RTC_Calendar_Write@day
  6931  1430                     l3508:
  6932                           
  6933                           ;RTC.c: 50: void RTC_Calendar_Write(char day, char date, char month, char year);RTC.c: 5
      +                          1: {;RTC.c: 52:  I2C_Start(0xD0);
  6934  1430  30D0               	movlw	208
  6935  1431  160A  118A  230F  160A  118A  	fcall	_I2C_Start
  6936                           
  6937                           ;RTC.c: 53:  I2C_Write(3);
  6938  1436  3003               	movlw	3
  6939  1437  160A  118A  22BA  160A  118A  	fcall	_I2C_Write
  6940                           
  6941                           ;RTC.c: 54:  I2C_Write(day);
  6942  143C  0875               	movf	RTC_Calendar_Write@day,w
  6943  143D  160A  118A  22BA  160A  118A  	fcall	_I2C_Write
  6944                           
  6945                           ;RTC.c: 55:  I2C_Write(date);
  6946  1442  0872               	movf	RTC_Calendar_Write@date,w
  6947  1443  160A  118A  22BA  160A  118A  	fcall	_I2C_Write
  6948                           
  6949                           ;RTC.c: 56:  I2C_Write(month);
  6950  1448  0873               	movf	RTC_Calendar_Write@month,w
  6951  1449  160A  118A  22BA  160A  118A  	fcall	_I2C_Write
  6952                           
  6953                           ;RTC.c: 57:  I2C_Write(year);
  6954  144E  0874               	movf	RTC_Calendar_Write@year,w
  6955  144F  160A  118A  22BA  160A  118A  	fcall	_I2C_Write
  6956                           
  6957                           ;RTC.c: 58:  I2C_Stop();
  6958  1454  160A  118A  226E  160A  118A  	fcall	_I2C_Stop
  6959  1459                     l421:
  6960  1459  0008               	return
  6961  145A                     __end_of_RTC_Calendar_Write:
  6962                           
  6963                           	psect	text18
  6964  1253                     __ptext18:	
  6965 ;; *************** function _LED_Init *****************
  6966 ;; Defined at:
  6967 ;;		line 4 in file "LED.c"
  6968 ;; Parameters:    Size  Location     Type
  6969 ;;		None
  6970 ;; Auto vars:     Size  Location     Type
  6971 ;;		None
  6972 ;; Return value:  Size  Location     Type
  6973 ;;                  1    wreg      void 
  6974 ;; Registers used:
  6975 ;;		wreg
  6976 ;; Tracked objects:
  6977 ;;		On entry : 0/0
  6978 ;;		On exit  : 0/0
  6979 ;;		Unchanged: 0/0
  6980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6981 ;;      Params:         0       0       0       0       0
  6982 ;;      Locals:         0       0       0       0       0
  6983 ;;      Temps:          0       0       0       0       0
  6984 ;;      Totals:         0       0       0       0       0
  6985 ;;Total ram usage:        0 bytes
  6986 ;; Hardware stack levels used: 1
  6987 ;; This function calls:
  6988 ;;		Nothing
  6989 ;; This function is called by:
  6990 ;;		_main
  6991 ;; This function uses a non-reentrant model
  6992 ;;
  6993                           
  6994  1253                     _LED_Init:	
  6995                           ;psect for function _LED_Init
  6996                           
  6997  1253                     l3474:	
  6998                           ;incstack = 0
  6999                           ; Regs used in _LED_Init: [wreg]
  7000                           
  7001                           
  7002                           ;LED.c: 6:     TRISB |= (0 << 1);
  7003  1253  1683               	bsf	3,5	;RP0=1, select bank1
  7004  1254  1303               	bcf	3,6	;RP1=0, select bank1
  7005  1255  0806               	movf	6,w	;volatile
  7006  1256                     l432:
  7007  1256  0008               	return
  7008  1257                     __end_of_LED_Init:
  7009                           
  7010                           	psect	text19
  7011  145A                     __ptext19:	
  7012 ;; *************** function _LCD_String_xy *****************
  7013 ;; Defined at:
  7014 ;;		line 8 in file "LCD.c"
  7015 ;; Parameters:    Size  Location     Type
  7016 ;;  row             1    wreg     unsigned char 
  7017 ;;  pos             1    0[BANK0 ] unsigned char 
  7018 ;;  msg             2    1[BANK0 ] PTR const unsigned char 
  7019 ;;		 -> main@buffer3_613(16), main@buffer3_610(16), date(10), hours(10), 
  7020 ;;		 -> STR_6(3), STR_5(3), main@buffer3(16), 
  7021 ;; Auto vars:     Size  Location     Type
  7022 ;;  row             1    4[BANK0 ] unsigned char 
  7023 ;;  location        1    5[BANK0 ] unsigned char 
  7024 ;; Return value:  Size  Location     Type
  7025 ;;                  1    wreg      void 
  7026 ;; Registers used:
  7027 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7028 ;; Tracked objects:
  7029 ;;		On entry : 0/0
  7030 ;;		On exit  : 0/0
  7031 ;;		Unchanged: 0/0
  7032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7033 ;;      Params:         0       3       0       0       0
  7034 ;;      Locals:         0       2       0       0       0
  7035 ;;      Temps:          0       1       0       0       0
  7036 ;;      Totals:         0       6       0       0       0
  7037 ;;Total ram usage:        6 bytes
  7038 ;; Hardware stack levels used: 1
  7039 ;; Hardware stack levels required when called: 7
  7040 ;; This function calls:
  7041 ;;		_LCD_CMD
  7042 ;;		_LCD_Write_String
  7043 ;; This function is called by:
  7044 ;;		_main
  7045 ;; This function uses a non-reentrant model
  7046 ;;
  7047                           
  7048  145A                     _LCD_String_xy:	
  7049                           ;psect for function _LCD_String_xy
  7050                           
  7051                           
  7052                           ;incstack = 0
  7053                           ; Regs used in _LCD_String_xy: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7054                           ;LCD_String_xy@row stored from wreg
  7055  145A  1283               	bcf	3,5	;RP0=0, select bank0
  7056  145B  1303               	bcf	3,6	;RP1=0, select bank0
  7057  145C  00A4               	movwf	LCD_String_xy@row
  7058  145D                     l3380:
  7059  145D                     l3382:
  7060                           
  7061                           ;LCD.c: 11:     if(row<=1)
  7062  145D  3002               	movlw	2
  7063  145E  0224               	subwf	LCD_String_xy@row,w
  7064  145F  1803               	skipnc
  7065  1460  2C62               	goto	u3941
  7066  1461  2C63               	goto	u3940
  7067  1462                     u3941:
  7068  1462  2C70               	goto	l3388
  7069  1463                     u3940:
  7070  1463                     l3384:
  7071                           
  7072                           ;LCD.c: 12:     {;LCD.c: 13:         location = (0x80) | ((pos) & 0x0f);
  7073  1463  0820               	movf	LCD_String_xy@pos,w
  7074  1464  390F               	andlw	15
  7075  1465  3880               	iorlw	128
  7076  1466  00A3               	movwf	??_LCD_String_xy
  7077  1467  0823               	movf	??_LCD_String_xy,w
  7078  1468  00A5               	movwf	LCD_String_xy@location
  7079  1469                     l3386:
  7080                           
  7081                           ;LCD.c: 14:         LCD_CMD(location);
  7082  1469  0825               	movf	LCD_String_xy@location,w
  7083  146A  160A  118A  235B  160A  118A  	fcall	_LCD_CMD
  7084                           
  7085                           ;LCD.c: 15:     }
  7086  146F  2C7C               	goto	l3392
  7087  1470                     l3388:
  7088                           
  7089                           ;LCD.c: 17:     {;LCD.c: 18:         location = (0xC0) | ((pos) & 0x0f);
  7090  1470  0820               	movf	LCD_String_xy@pos,w
  7091  1471  390F               	andlw	15
  7092  1472  38C0               	iorlw	192
  7093  1473  00A3               	movwf	??_LCD_String_xy
  7094  1474  0823               	movf	??_LCD_String_xy,w
  7095  1475  00A5               	movwf	LCD_String_xy@location
  7096  1476                     l3390:
  7097                           
  7098                           ;LCD.c: 19:         LCD_CMD(location);
  7099  1476  0825               	movf	LCD_String_xy@location,w
  7100  1477  160A  118A  235B  160A  118A  	fcall	_LCD_CMD
  7101  147C                     l3392:
  7102                           
  7103                           ;LCD.c: 23:     LCD_Write_String(msg);
  7104  147C  1283               	bcf	3,5	;RP0=0, select bank0
  7105  147D  1303               	bcf	3,6	;RP1=0, select bank0
  7106  147E  0821               	movf	LCD_String_xy@msg,w
  7107  147F  00F7               	movwf	LCD_Write_String@Str
  7108  1480  0822               	movf	LCD_String_xy@msg+1,w
  7109  1481  00F8               	movwf	LCD_Write_String@Str+1
  7110  1482  160A  118A  2574  160A  118A  	fcall	_LCD_Write_String
  7111  1487                     l133:
  7112  1487  0008               	return
  7113  1488                     __end_of_LCD_String_xy:
  7114                           
  7115                           	psect	text20
  7116  16E1                     __ptext20:	
  7117 ;; *************** function _LCD_Init *****************
  7118 ;; Defined at:
  7119 ;;		line 27 in file "LCD.c"
  7120 ;; Parameters:    Size  Location     Type
  7121 ;;		None
  7122 ;; Auto vars:     Size  Location     Type
  7123 ;;		None
  7124 ;; Return value:  Size  Location     Type
  7125 ;;                  1    wreg      void 
  7126 ;; Registers used:
  7127 ;;		wreg, status,2, status,0, pclath, cstack
  7128 ;; Tracked objects:
  7129 ;;		On entry : 0/0
  7130 ;;		On exit  : 0/0
  7131 ;;		Unchanged: 0/0
  7132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7133 ;;      Params:         0       0       0       0       0
  7134 ;;      Locals:         0       0       0       0       0
  7135 ;;      Temps:          2       0       0       0       0
  7136 ;;      Totals:         2       0       0       0       0
  7137 ;;Total ram usage:        2 bytes
  7138 ;; Hardware stack levels used: 1
  7139 ;; Hardware stack levels required when called: 6
  7140 ;; This function calls:
  7141 ;;		_IO_Expander_Write
  7142 ;;		_LCD_CMD
  7143 ;; This function is called by:
  7144 ;;		_main
  7145 ;; This function uses a non-reentrant model
  7146 ;;
  7147                           
  7148  16E1                     _LCD_Init:	
  7149                           ;psect for function _LCD_Init
  7150                           
  7151  16E1                     l3394:	
  7152                           ;incstack = 0
  7153                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  7154                           
  7155                           
  7156                           ;LCD.c: 29:   IO_Expander_Write(0x00);
  7157  16E1  3000               	movlw	0
  7158  16E2  160A  118A  22E2  160A  118A  	fcall	_IO_Expander_Write
  7159  16E7                     l3396:
  7160                           
  7161                           ;LCD.c: 30:   _delay((unsigned long)((30)*(8000000/4000.0)));
  7162  16E7  304E               	movlw	78
  7163  16E8  00F8               	movwf	??_LCD_Init+1
  7164  16E9  30EB               	movlw	235
  7165  16EA  00F7               	movwf	??_LCD_Init
  7166  16EB                     u4457:
  7167  16EB  0BF7               	decfsz	??_LCD_Init,f
  7168  16EC  2EEB               	goto	u4457
  7169  16ED  0BF8               	decfsz	??_LCD_Init+1,f
  7170  16EE  2EEB               	goto	u4457
  7171  16EF                     l3398:
  7172                           
  7173                           ;LCD.c: 31:   LCD_CMD(0x03);
  7174  16EF  3003               	movlw	3
  7175  16F0  160A  118A  235B  160A  118A  	fcall	_LCD_CMD
  7176                           
  7177                           ;LCD.c: 32:   _delay((unsigned long)((5)*(8000000/4000.0)));
  7178  16F5  300D               	movlw	13
  7179  16F6  00F8               	movwf	??_LCD_Init+1
  7180  16F7  30FB               	movlw	251
  7181  16F8  00F7               	movwf	??_LCD_Init
  7182  16F9                     u4467:
  7183  16F9  0BF7               	decfsz	??_LCD_Init,f
  7184  16FA  2EF9               	goto	u4467
  7185  16FB  0BF8               	decfsz	??_LCD_Init+1,f
  7186  16FC  2EF9               	goto	u4467
  7187  16FD  2EFE               	nop2
  7188  16FE                     l3400:
  7189                           
  7190                           ;LCD.c: 33:   LCD_CMD(0x03);
  7191  16FE  3003               	movlw	3
  7192  16FF  160A  118A  235B  160A  118A  	fcall	_LCD_CMD
  7193  1704                     l3402:
  7194                           
  7195                           ;LCD.c: 34:   _delay((unsigned long)((5)*(8000000/4000.0)));
  7196  1704  300D               	movlw	13
  7197  1705  00F8               	movwf	??_LCD_Init+1
  7198  1706  30FB               	movlw	251
  7199  1707  00F7               	movwf	??_LCD_Init
  7200  1708                     u4477:
  7201  1708  0BF7               	decfsz	??_LCD_Init,f
  7202  1709  2F08               	goto	u4477
  7203  170A  0BF8               	decfsz	??_LCD_Init+1,f
  7204  170B  2F08               	goto	u4477
  7205  170C  2F0D               	nop2
  7206                           
  7207                           ;LCD.c: 35:   LCD_CMD(0x03);
  7208  170D  3003               	movlw	3
  7209  170E  160A  118A  235B  160A  118A  	fcall	_LCD_CMD
  7210  1713                     l3404:
  7211                           
  7212                           ;LCD.c: 36:   _delay((unsigned long)((5)*(8000000/4000.0)));
  7213  1713  300D               	movlw	13
  7214  1714  00F8               	movwf	??_LCD_Init+1
  7215  1715  30FB               	movlw	251
  7216  1716  00F7               	movwf	??_LCD_Init
  7217  1717                     u4487:
  7218  1717  0BF7               	decfsz	??_LCD_Init,f
  7219  1718  2F17               	goto	u4487
  7220  1719  0BF8               	decfsz	??_LCD_Init+1,f
  7221  171A  2F17               	goto	u4487
  7222  171B  2F1C               	nop2
  7223  171C                     l3406:
  7224                           
  7225                           ;LCD.c: 37:   LCD_CMD(0x02);
  7226  171C  3002               	movlw	2
  7227  171D  160A  118A  235B  160A  118A  	fcall	_LCD_CMD
  7228                           
  7229                           ;LCD.c: 38:   _delay((unsigned long)((5)*(8000000/4000.0)));
  7230  1722  300D               	movlw	13
  7231  1723  00F8               	movwf	??_LCD_Init+1
  7232  1724  30FB               	movlw	251
  7233  1725  00F7               	movwf	??_LCD_Init
  7234  1726                     u4497:
  7235  1726  0BF7               	decfsz	??_LCD_Init,f
  7236  1727  2F26               	goto	u4497
  7237  1728  0BF8               	decfsz	??_LCD_Init+1,f
  7238  1729  2F26               	goto	u4497
  7239  172A  2F2B               	nop2
  7240  172B                     l3408:
  7241                           
  7242                           ;LCD.c: 39:   LCD_CMD(0x20 | (2 << 2));
  7243  172B  3028               	movlw	40
  7244  172C  160A  118A  235B  160A  118A  	fcall	_LCD_CMD
  7245  1731                     l3410:
  7246                           
  7247                           ;LCD.c: 40:   _delay((unsigned long)((50)*(8000000/4000.0)));
  7248  1731  3082               	movlw	130
  7249  1732  00F8               	movwf	??_LCD_Init+1
  7250  1733  30DD               	movlw	221
  7251  1734  00F7               	movwf	??_LCD_Init
  7252  1735                     u4507:
  7253  1735  0BF7               	decfsz	??_LCD_Init,f
  7254  1736  2F35               	goto	u4507
  7255  1737  0BF8               	decfsz	??_LCD_Init+1,f
  7256  1738  2F35               	goto	u4507
  7257  1739  2F3A               	nop2
  7258                           
  7259                           ;LCD.c: 41:   LCD_CMD(0x0C);
  7260  173A  300C               	movlw	12
  7261  173B  160A  118A  235B  160A  118A  	fcall	_LCD_CMD
  7262  1740                     l3412:
  7263                           
  7264                           ;LCD.c: 42:   _delay((unsigned long)((50)*(8000000/4000.0)));
  7265  1740  3082               	movlw	130
  7266  1741  00F8               	movwf	??_LCD_Init+1
  7267  1742  30DD               	movlw	221
  7268  1743  00F7               	movwf	??_LCD_Init
  7269  1744                     u4517:
  7270  1744  0BF7               	decfsz	??_LCD_Init,f
  7271  1745  2F44               	goto	u4517
  7272  1746  0BF8               	decfsz	??_LCD_Init+1,f
  7273  1747  2F44               	goto	u4517
  7274  1748  2F49               	nop2
  7275  1749                     l3414:
  7276                           
  7277                           ;LCD.c: 43:   LCD_CMD(0x01);
  7278  1749  3001               	movlw	1
  7279  174A  160A  118A  235B  160A  118A  	fcall	_LCD_CMD
  7280                           
  7281                           ;LCD.c: 44:   _delay((unsigned long)((50)*(8000000/4000.0)));
  7282  174F  3082               	movlw	130
  7283  1750  00F8               	movwf	??_LCD_Init+1
  7284  1751  30DD               	movlw	221
  7285  1752  00F7               	movwf	??_LCD_Init
  7286  1753                     u4527:
  7287  1753  0BF7               	decfsz	??_LCD_Init,f
  7288  1754  2F53               	goto	u4527
  7289  1755  0BF8               	decfsz	??_LCD_Init+1,f
  7290  1756  2F53               	goto	u4527
  7291  1757  2F58               	nop2
  7292  1758                     l3416:
  7293                           
  7294                           ;LCD.c: 45:   LCD_CMD(0x04 | 0x02);
  7295  1758  3006               	movlw	6
  7296  1759  160A  118A  235B  160A  118A  	fcall	_LCD_CMD
  7297  175E                     l3418:
  7298                           
  7299                           ;LCD.c: 46:   _delay((unsigned long)((50)*(8000000/4000.0)));
  7300  175E  3082               	movlw	130
  7301  175F  00F8               	movwf	??_LCD_Init+1
  7302  1760  30DD               	movlw	221
  7303  1761  00F7               	movwf	??_LCD_Init
  7304  1762                     u4537:
  7305  1762  0BF7               	decfsz	??_LCD_Init,f
  7306  1763  2F62               	goto	u4537
  7307  1764  0BF8               	decfsz	??_LCD_Init+1,f
  7308  1765  2F62               	goto	u4537
  7309  1766  2F67               	nop2
  7310  1767                     l136:
  7311  1767  0008               	return
  7312  1768                     __end_of_LCD_Init:
  7313                           
  7314                           	psect	text21
  7315  1289                     __ptext21:	
  7316 ;; *************** function _LCD_Clear *****************
  7317 ;; Defined at:
  7318 ;;		line 128 in file "LCD.c"
  7319 ;; Parameters:    Size  Location     Type
  7320 ;;		None
  7321 ;; Auto vars:     Size  Location     Type
  7322 ;;		None
  7323 ;; Return value:  Size  Location     Type
  7324 ;;                  1    wreg      void 
  7325 ;; Registers used:
  7326 ;;		wreg, status,2, status,0, pclath, cstack
  7327 ;; Tracked objects:
  7328 ;;		On entry : 0/0
  7329 ;;		On exit  : 0/0
  7330 ;;		Unchanged: 0/0
  7331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7332 ;;      Params:         0       0       0       0       0
  7333 ;;      Locals:         0       0       0       0       0
  7334 ;;      Temps:          1       0       0       0       0
  7335 ;;      Totals:         1       0       0       0       0
  7336 ;;Total ram usage:        1 bytes
  7337 ;; Hardware stack levels used: 1
  7338 ;; Hardware stack levels required when called: 6
  7339 ;; This function calls:
  7340 ;;		_LCD_CMD
  7341 ;; This function is called by:
  7342 ;;		_main
  7343 ;; This function uses a non-reentrant model
  7344 ;;
  7345                           
  7346  1289                     _LCD_Clear:	
  7347                           ;psect for function _LCD_Clear
  7348                           
  7349  1289                     l3420:	
  7350                           ;incstack = 0
  7351                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  7352                           
  7353                           
  7354                           ;LCD.c: 130:   LCD_CMD(0x01);
  7355  1289  3001               	movlw	1
  7356  128A  160A  118A  235B  160A  118A  	fcall	_LCD_CMD
  7357  128F                     l3422:
  7358                           
  7359                           ;LCD.c: 131:   _delay((unsigned long)((40)*(8000000/4000000.0)));
  7360  128F  301A               	movlw	26
  7361  1290  00F7               	movwf	??_LCD_Clear
  7362  1291                     u4547:
  7363  1291  0BF7               	decfsz	??_LCD_Clear,f
  7364  1292  2A91               	goto	u4547
  7365  1293  0000               	nop
  7366  1294                     l178:
  7367  1294  0008               	return
  7368  1295                     __end_of_LCD_Clear:
  7369                           
  7370                           	psect	text22
  7371  12CE                     __ptext22:	
  7372 ;; *************** function _I2C_Init *****************
  7373 ;; Defined at:
  7374 ;;		line 27 in file "I2C_Master.c"
  7375 ;; Parameters:    Size  Location     Type
  7376 ;;		None
  7377 ;; Auto vars:     Size  Location     Type
  7378 ;;		None
  7379 ;; Return value:  Size  Location     Type
  7380 ;;                  1    wreg      void 
  7381 ;; Registers used:
  7382 ;;		wreg, status,2
  7383 ;; Tracked objects:
  7384 ;;		On entry : 0/0
  7385 ;;		On exit  : 0/0
  7386 ;;		Unchanged: 0/0
  7387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7388 ;;      Params:         0       0       0       0       0
  7389 ;;      Locals:         0       0       0       0       0
  7390 ;;      Temps:          0       0       0       0       0
  7391 ;;      Totals:         0       0       0       0       0
  7392 ;;Total ram usage:        0 bytes
  7393 ;; Hardware stack levels used: 1
  7394 ;; This function calls:
  7395 ;;		Nothing
  7396 ;; This function is called by:
  7397 ;;		_main
  7398 ;; This function uses a non-reentrant model
  7399 ;;
  7400                           
  7401  12CE                     _I2C_Init:	
  7402                           ;psect for function _I2C_Init
  7403                           
  7404  12CE                     l3368:	
  7405                           ;incstack = 0
  7406                           ; Regs used in _I2C_Init: [wreg+status,2]
  7407                           
  7408                           
  7409                           ;I2C_Master.c: 29:     TRISCbits.TRISC3 = 1;
  7410  12CE  1683               	bsf	3,5	;RP0=1, select bank1
  7411  12CF  1303               	bcf	3,6	;RP1=0, select bank1
  7412  12D0  1587               	bsf	7,3	;volatile
  7413                           
  7414                           ;I2C_Master.c: 30:  TRISCbits.TRISC4 = 1;
  7415  12D1  1607               	bsf	7,4	;volatile
  7416  12D2                     l3370:
  7417                           
  7418                           ;I2C_Master.c: 31:  SSPSTAT=80;
  7419  12D2  3050               	movlw	80
  7420  12D3  0094               	movwf	20	;volatile
  7421                           
  7422                           ;I2C_Master.c: 32:     SSPCON=0x28;
  7423  12D4  3028               	movlw	40
  7424  12D5  1283               	bcf	3,5	;RP0=0, select bank0
  7425  12D6  1303               	bcf	3,6	;RP1=0, select bank0
  7426  12D7  0094               	movwf	20	;volatile
  7427  12D8                     l3372:
  7428                           
  7429                           ;I2C_Master.c: 34:  SSPCON2=0;
  7430  12D8  1683               	bsf	3,5	;RP0=1, select bank1
  7431  12D9  1303               	bcf	3,6	;RP1=0, select bank1
  7432  12DA  0191               	clrf	17	;volatile
  7433  12DB                     l3374:
  7434                           
  7435                           ;I2C_Master.c: 35:     SSPADD=((8000000/(4*100000))-1);
  7436  12DB  3013               	movlw	19
  7437  12DC  0093               	movwf	19	;volatile
  7438  12DD                     l3376:
  7439                           
  7440                           ;I2C_Master.c: 36:     SSPIE=1;
  7441  12DD  158C               	bsf	12,3	;volatile
  7442  12DE                     l3378:
  7443                           
  7444                           ;I2C_Master.c: 37:     SSPIF=0;
  7445  12DE  1283               	bcf	3,5	;RP0=0, select bank0
  7446  12DF  1303               	bcf	3,6	;RP1=0, select bank0
  7447  12E0  118C               	bcf	12,3	;volatile
  7448  12E1                     l53:
  7449  12E1  0008               	return
  7450  12E2                     __end_of_I2C_Init:
  7451                           
  7452                           	psect	text23
  7453  1607                     __ptext23:	
  7454 ;; *************** function _DisplayTemp *****************
  7455 ;; Defined at:
  7456 ;;		line 59 in file "Temp.c"
  7457 ;; Parameters:    Size  Location     Type
  7458 ;;		None
  7459 ;; Auto vars:     Size  Location     Type
  7460 ;;  buffer2        16   40[BANK0 ] unsigned char [16]
  7461 ;;  buffer1        16   24[BANK0 ] unsigned char [16]
  7462 ;; Return value:  Size  Location     Type
  7463 ;;                  1    wreg      void 
  7464 ;; Registers used:
  7465 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7466 ;; Tracked objects:
  7467 ;;		On entry : 0/0
  7468 ;;		On exit  : 0/0
  7469 ;;		Unchanged: 0/0
  7470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7471 ;;      Params:         0       0       0       0       0
  7472 ;;      Locals:         0      32       0       0       0
  7473 ;;      Temps:          0       3       0       0       0
  7474 ;;      Totals:         0      35       0       0       0
  7475 ;;Total ram usage:       35 bytes
  7476 ;; Hardware stack levels used: 1
  7477 ;; Hardware stack levels required when called: 7
  7478 ;; This function calls:
  7479 ;;		_LCD_Set_Cursor
  7480 ;;		_LCD_Write_String
  7481 ;;		_sprintf
  7482 ;; This function is called by:
  7483 ;;		_main
  7484 ;; This function uses a non-reentrant model
  7485 ;;
  7486                           
  7487  1607                     _DisplayTemp:	
  7488                           ;psect for function _DisplayTemp
  7489                           
  7490  1607                     l3460:	
  7491                           ;incstack = 0
  7492                           ; Regs used in _DisplayTemp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7493                           
  7494                           
  7495                           ;Temp.c: 61:     char buffer1[16], buffer2[16];;Temp.c: 62:     sprintf(buffer1, "Temp:%
      +                          3d*C", temperature_c);
  7496  1607  3038               	movlw	(low (DisplayTemp@buffer1| 0))& (0+255)
  7497  1608  1283               	bcf	3,5	;RP0=0, select bank0
  7498  1609  1303               	bcf	3,6	;RP1=0, select bank0
  7499  160A  00A0               	movwf	sprintf@sp
  7500  160B  3000               	movlw	0
  7501  160C  00A1               	movwf	sprintf@sp+1
  7502  160D  3030               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  7503  160E  00B5               	movwf	??_DisplayTemp
  7504  160F  0835               	movf	??_DisplayTemp,w
  7505  1610  00A2               	movwf	sprintf@f
  7506  1611  0869               	movf	_temperature_c+1,w
  7507  1612  00A4               	movwf	?_sprintf+4
  7508  1613  0868               	movf	_temperature_c,w
  7509  1614  00A3               	movwf	?_sprintf+3
  7510  1615  120A  158A  2545  160A  118A  	fcall	_sprintf
  7511  161A                     l3462:
  7512                           
  7513                           ;Temp.c: 63:     _delay((unsigned long)((1)*(8000000/4000.0)));
  7514  161A  3003               	movlw	3
  7515  161B  1283               	bcf	3,5	;RP0=0, select bank0
  7516  161C  1303               	bcf	3,6	;RP1=0, select bank0
  7517  161D  00B6               	movwf	??_DisplayTemp+1
  7518  161E  3097               	movlw	151
  7519  161F  00B5               	movwf	??_DisplayTemp
  7520  1620                     u4557:
  7521  1620  0BB5               	decfsz	??_DisplayTemp,f
  7522  1621  2E20               	goto	u4557
  7523  1622  0BB6               	decfsz	??_DisplayTemp+1,f
  7524  1623  2E20               	goto	u4557
  7525  1624                     l3464:
  7526                           
  7527                           ;Temp.c: 64:     LCD_Write_String(buffer1);
  7528  1624  3038               	movlw	(low (DisplayTemp@buffer1| 0))& (0+255)
  7529  1625  00F7               	movwf	LCD_Write_String@Str
  7530  1626  3000               	movlw	0
  7531  1627  00F8               	movwf	LCD_Write_String@Str+1
  7532  1628  160A  118A  2574  160A  118A  	fcall	_LCD_Write_String
  7533  162D                     l3466:
  7534                           
  7535                           ;Temp.c: 65:     LCD_Set_Cursor('2','0');
  7536  162D  3030               	movlw	48
  7537  162E  1283               	bcf	3,5	;RP0=0, select bank0
  7538  162F  1303               	bcf	3,6	;RP1=0, select bank0
  7539  1630  00B5               	movwf	??_DisplayTemp
  7540  1631  0835               	movf	??_DisplayTemp,w
  7541  1632  00F7               	movwf	LCD_Set_Cursor@COL
  7542  1633  3032               	movlw	50
  7543  1634  160A  118A  2488  160A  118A  	fcall	_LCD_Set_Cursor
  7544  1639                     l3468:
  7545                           
  7546                           ;Temp.c: 66:     sprintf(buffer2, "Temp:%3d*F", temperature_f);
  7547  1639  3048               	movlw	(low (DisplayTemp@buffer2| 0))& (0+255)
  7548  163A  1283               	bcf	3,5	;RP0=0, select bank0
  7549  163B  1303               	bcf	3,6	;RP1=0, select bank0
  7550  163C  00A0               	movwf	sprintf@sp
  7551  163D  3000               	movlw	0
  7552  163E  00A1               	movwf	sprintf@sp+1
  7553  163F  303B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  7554  1640  00B5               	movwf	??_DisplayTemp
  7555  1641  0835               	movf	??_DisplayTemp,w
  7556  1642  00A2               	movwf	sprintf@f
  7557  1643  0867               	movf	_temperature_f+1,w
  7558  1644  00A4               	movwf	?_sprintf+4
  7559  1645  0866               	movf	_temperature_f,w
  7560  1646  00A3               	movwf	?_sprintf+3
  7561  1647  120A  158A  2545  160A  118A  	fcall	_sprintf
  7562  164C                     l3470:
  7563                           
  7564                           ;Temp.c: 67:     LCD_Write_String(buffer2);
  7565  164C  3048               	movlw	(low (DisplayTemp@buffer2| 0))& (0+255)
  7566  164D  00F7               	movwf	LCD_Write_String@Str
  7567  164E  3000               	movlw	0
  7568  164F  00F8               	movwf	LCD_Write_String@Str+1
  7569  1650  160A  118A  2574  160A  118A  	fcall	_LCD_Write_String
  7570  1655                     l3472:
  7571                           
  7572                           ;Temp.c: 68:     _delay((unsigned long)((200)*(8000000/4000.0)));
  7573  1655  3003               	movlw	3
  7574  1656  1283               	bcf	3,5	;RP0=0, select bank0
  7575  1657  1303               	bcf	3,6	;RP1=0, select bank0
  7576  1658  00B7               	movwf	??_DisplayTemp+2
  7577  1659  3008               	movlw	8
  7578  165A  00B6               	movwf	??_DisplayTemp+1
  7579  165B  3076               	movlw	118
  7580  165C  00B5               	movwf	??_DisplayTemp
  7581  165D                     u4567:
  7582  165D  0BB5               	decfsz	??_DisplayTemp,f
  7583  165E  2E5D               	goto	u4567
  7584  165F  0BB6               	decfsz	??_DisplayTemp+1,f
  7585  1660  2E5D               	goto	u4567
  7586  1661  0BB7               	decfsz	??_DisplayTemp+2,f
  7587  1662  2E5D               	goto	u4567
  7588  1663  0000               	nop
  7589  1664                     l217:
  7590  1664  0008               	return
  7591  1665                     __end_of_DisplayTemp:
  7592                           
  7593                           	psect	text24
  7594  0D45                     __ptext24:	
  7595 ;; *************** function _sprintf *****************
  7596 ;; Defined at:
  7597 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c"
  7598 ;; Parameters:    Size  Location     Type
  7599 ;;  sp              2    0[BANK0 ] PTR unsigned char 
  7600 ;;		 -> main@buffer3_613(16), main@buffer3_610(16), year(10), month(10), 
  7601 ;;		 -> date(10), hours(10), mins(10), secs(10), 
  7602 ;;		 -> main@buffer3(16), DisplayTemp@buffer2(16), DisplayTemp@buffer1(16), 
  7603 ;;  f               1    2[BANK0 ] PTR const unsigned char 
  7604 ;;		 -> STR_25(9), STR_24(9), STR_15(4), STR_14(4), 
  7605 ;;		 -> STR_13(8), STR_12(8), STR_11(4), STR_10(4), 
  7606 ;;		 -> STR_9(8), STR_8(4), STR_7(4), STR_3(3), 
  7607 ;;		 -> STR_2(11), STR_1(11), 
  7608 ;; Auto vars:     Size  Location     Type
  7609 ;;  idx             1    8[BANK0 ] unsigned char 
  7610 ;;  tmpval          4    0        struct .
  7611 ;;  width           2   18[BANK0 ] int 
  7612 ;;  val             2   16[BANK0 ] unsigned int 
  7613 ;;  len             2   13[BANK0 ] unsigned int 
  7614 ;;  cp              2   10[BANK0 ] PTR const unsigned char 
  7615 ;;		 -> STR_26(7), ?_sprintf(2), STR_4(12), result(2), 
  7616 ;;  c               1   20[BANK0 ] unsigned char 
  7617 ;;  flag            1   15[BANK0 ] unsigned char 
  7618 ;;  ap              1   12[BANK0 ] PTR void [1]
  7619 ;;		 -> ?_sprintf(2), 
  7620 ;;  prec            1    9[BANK0 ] char 
  7621 ;; Return value:  Size  Location     Type
  7622 ;;                  2    0[BANK0 ] int 
  7623 ;; Registers used:
  7624 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7625 ;; Tracked objects:
  7626 ;;		On entry : 0/0
  7627 ;;		On exit  : 0/0
  7628 ;;		Unchanged: 0/0
  7629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7630 ;;      Params:         0       5       0       0       0
  7631 ;;      Locals:         0      13       0       0       0
  7632 ;;      Temps:          0       3       0       0       0
  7633 ;;      Totals:         0      21       0       0       0
  7634 ;;Total ram usage:       21 bytes
  7635 ;; Hardware stack levels used: 1
  7636 ;; Hardware stack levels required when called: 1
  7637 ;; This function calls:
  7638 ;;		___lwdiv
  7639 ;;		___lwmod
  7640 ;;		___wmul
  7641 ;;		_isdigit
  7642 ;; This function is called by:
  7643 ;;		_DisplayTemp
  7644 ;;		_main
  7645 ;; This function uses a non-reentrant model
  7646 ;;
  7647                           
  7648  0D45                     _sprintf:	
  7649                           ;psect for function _sprintf
  7650                           
  7651  0D45                     l2788:	
  7652                           ;incstack = 0
  7653                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7654                           
  7655                           
  7656                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 521:  
      +                          signed char prec;
  7657  0D45  3023               	movlw	(low ((?_sprintf| 0+3)))& (0+255)
  7658  0D46  1283               	bcf	3,5	;RP0=0, select bank0
  7659  0D47  1303               	bcf	3,6	;RP1=0, select bank0
  7660  0D48  00A5               	movwf	??_sprintf
  7661  0D49  0825               	movf	??_sprintf,w
  7662  0D4A  00AC               	movwf	sprintf@ap
  7663                           
  7664                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  7665  0D4B  2FE7               	goto	l2928
  7666  0D4C                     l2790:
  7667                           
  7668                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  7669  0D4C  3025               	movlw	37
  7670  0D4D  0634               	xorwf	sprintf@c,w
  7671  0D4E  1903               	btfsc	3,2
  7672  0D4F  2D51               	goto	u2651
  7673  0D50  2D52               	goto	u2650
  7674  0D51                     u2651:
  7675  0D51  2D62               	goto	l2796
  7676  0D52                     u2650:
  7677  0D52                     l2792:
  7678                           
  7679                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  7680  0D52  0834               	movf	sprintf@c,w
  7681  0D53  00A5               	movwf	??_sprintf
  7682  0D54  0820               	movf	sprintf@sp,w
  7683  0D55  0084               	movwf	4
  7684  0D56  1783               	bsf	3,7
  7685  0D57  1C21               	btfss	sprintf@sp+1,0
  7686  0D58  1383               	bcf	3,7
  7687  0D59  0825               	movf	??_sprintf,w
  7688  0D5A  0080               	movwf	0
  7689  0D5B                     l2794:
  7690  0D5B  3001               	movlw	1
  7691  0D5C  07A0               	addwf	sprintf@sp,f
  7692  0D5D  1803               	skipnc
  7693  0D5E  0AA1               	incf	sprintf@sp+1,f
  7694  0D5F  3000               	movlw	0
  7695  0D60  07A1               	addwf	sprintf@sp+1,f
  7696                           
  7697                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 559:    continue;
  7698  0D61  2FE7               	goto	l2928
  7699  0D62                     l2796:
  7700                           
  7701                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  7702  0D62  01B2               	clrf	sprintf@width
  7703  0D63  01B3               	clrf	sprintf@width+1
  7704                           
  7705                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  7706  0D64  01AF               	clrf	sprintf@flag
  7707  0D65                     l2798:
  7708                           
  7709                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  7710  0D65  0822               	movf	sprintf@f,w
  7711  0D66  0084               	movwf	4
  7712  0D67  120A  158A  200A  120A  158A  	fcall	stringdir
  7713  0D6C  160A  118A  2295  120A  158A  	fcall	_isdigit
  7714  0D71  1C03               	btfss	3,0
  7715  0D72  2D74               	goto	u2661
  7716  0D73  2D75               	goto	u2660
  7717  0D74                     u2661:
  7718  0D74  2E47               	goto	l2846
  7719  0D75                     u2660:
  7720  0D75                     l2800:
  7721                           
  7722                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  7723  0D75  1283               	bcf	3,5	;RP0=0, select bank0
  7724  0D76  1303               	bcf	3,6	;RP1=0, select bank0
  7725  0D77  01B2               	clrf	sprintf@width
  7726  0D78  01B3               	clrf	sprintf@width+1
  7727  0D79                     l2802:
  7728                           
  7729                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  7730  0D79  300A               	movlw	10
  7731  0D7A  00F0               	movwf	___wmul@multiplier
  7732  0D7B  3000               	movlw	0
  7733  0D7C  00F1               	movwf	___wmul@multiplier+1
  7734  0D7D  1283               	bcf	3,5	;RP0=0, select bank0
  7735  0D7E  1303               	bcf	3,6	;RP1=0, select bank0
  7736  0D7F  0833               	movf	sprintf@width+1,w
  7737  0D80  00F3               	movwf	___wmul@multiplicand+1
  7738  0D81  0832               	movf	sprintf@width,w
  7739  0D82  00F2               	movwf	___wmul@multiplicand
  7740  0D83  160A  118A  2394  120A  158A  	fcall	___wmul
  7741  0D88  0871               	movf	?___wmul+1,w
  7742  0D89  1283               	bcf	3,5	;RP0=0, select bank0
  7743  0D8A  1303               	bcf	3,6	;RP1=0, select bank0
  7744  0D8B  00B3               	movwf	sprintf@width+1
  7745  0D8C  0870               	movf	?___wmul,w
  7746  0D8D  00B2               	movwf	sprintf@width
  7747  0D8E                     l2804:
  7748                           
  7749                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  7750  0D8E  0822               	movf	sprintf@f,w
  7751  0D8F  0084               	movwf	4
  7752  0D90  120A  158A  200A  120A  158A  	fcall	stringdir
  7753  0D95  3ED0               	addlw	208
  7754  0D96  00A5               	movwf	??_sprintf
  7755  0D97  30FF               	movlw	255
  7756  0D98  1803               	skipnc
  7757  0D99  3000               	movlw	0
  7758  0D9A  00A6               	movwf	??_sprintf+1
  7759  0D9B  0825               	movf	??_sprintf,w
  7760  0D9C  07B2               	addwf	sprintf@width,f
  7761  0D9D  1803               	skipnc
  7762  0D9E  0AB3               	incf	sprintf@width+1,f
  7763  0D9F  0826               	movf	??_sprintf+1,w
  7764  0DA0  07B3               	addwf	sprintf@width+1,f
  7765  0DA1                     l2806:
  7766  0DA1  3001               	movlw	1
  7767  0DA2  00A5               	movwf	??_sprintf
  7768  0DA3  0825               	movf	??_sprintf,w
  7769  0DA4  07A2               	addwf	sprintf@f,f
  7770  0DA5                     l2808:
  7771                           
  7772                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  7773  0DA5  0822               	movf	sprintf@f,w
  7774  0DA6  0084               	movwf	4
  7775  0DA7  120A  158A  200A  120A  158A  	fcall	stringdir
  7776  0DAC  160A  118A  2295  120A  158A  	fcall	_isdigit
  7777  0DB1  1803               	btfsc	3,0
  7778  0DB2  2DB4               	goto	u2671
  7779  0DB3  2DB5               	goto	u2670
  7780  0DB4                     u2671:
  7781  0DB4  2D79               	goto	l2802
  7782  0DB5                     u2670:
  7783  0DB5  2E47               	goto	l2846
  7784  0DB6                     l640:	
  7785                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 744:   case 'x':
  7786                           
  7787                           
  7788                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 747:    flag |= 0
      +                          x80;
  7789  0DB6  17AF               	bsf	sprintf@flag,7
  7790                           
  7791                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 749:    break;
  7792  0DB7  2E6C               	goto	l639
  7793  0DB8                     l2810:
  7794                           
  7795                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 760:     cp = (*(
      +                          const char * *)__va_arg((*(const char * **)ap), (const char *)0));
  7796  0DB8  082C               	movf	sprintf@ap,w
  7797  0DB9  0084               	movwf	4
  7798  0DBA  1383               	bcf	3,7	;select IRP bank0
  7799  0DBB  0800               	movf	0,w
  7800  0DBC  00AA               	movwf	sprintf@cp
  7801  0DBD  0A84               	incf	4,f
  7802  0DBE  0800               	movf	0,w
  7803  0DBF  0384               	decf	4,f
  7804  0DC0  00AB               	movwf	sprintf@cp+1
  7805  0DC1                     l2812:
  7806  0DC1  3002               	movlw	2
  7807  0DC2  00A5               	movwf	??_sprintf
  7808  0DC3  0825               	movf	??_sprintf,w
  7809  0DC4  07AC               	addwf	sprintf@ap,f
  7810  0DC5                     l2814:
  7811                           
  7812                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 766:    if(!cp)
  7813  0DC5  082A               	movf	sprintf@cp,w
  7814  0DC6  042B               	iorwf	sprintf@cp+1,w
  7815  0DC7  1D03               	btfss	3,2
  7816  0DC8  2DCA               	goto	u2681
  7817  0DC9  2DCB               	goto	u2680
  7818  0DCA                     u2681:
  7819  0DCA  2DCF               	goto	l2818
  7820  0DCB                     u2680:
  7821  0DCB                     l2816:
  7822                           
  7823                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 767:     cp = "(n
      +                          ull)";
  7824  0DCB  3068               	movlw	(low ((STR_26-__stringbase)| (0+32768)))& (0+255)
  7825  0DCC  00AA               	movwf	sprintf@cp
  7826  0DCD  3080               	movlw	128
  7827  0DCE  00AB               	movwf	sprintf@cp+1
  7828  0DCF                     l2818:
  7829                           
  7830                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 771:    len = 0;
  7831  0DCF  01AD               	clrf	sprintf@len
  7832  0DD0  01AE               	clrf	sprintf@len+1
  7833                           
  7834                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 772:    while(cp[
      +                          len])
  7835  0DD1  2DD8               	goto	l2822
  7836  0DD2                     l2820:
  7837                           
  7838                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 773:     len++;
  7839  0DD2  3001               	movlw	1
  7840  0DD3  07AD               	addwf	sprintf@len,f
  7841  0DD4  1803               	skipnc
  7842  0DD5  0AAE               	incf	sprintf@len+1,f
  7843  0DD6  3000               	movlw	0
  7844  0DD7  07AE               	addwf	sprintf@len+1,f
  7845  0DD8                     l2822:
  7846                           
  7847                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 772:    while(cp[
      +                          len])
  7848  0DD8  082D               	movf	sprintf@len,w
  7849  0DD9  072A               	addwf	sprintf@cp,w
  7850  0DDA  0084               	movwf	4
  7851  0DDB  082B               	movf	sprintf@cp+1,w
  7852  0DDC  1803               	skipnc
  7853  0DDD  0A2B               	incf	sprintf@cp+1,w
  7854  0DDE  00FF               	movwf	btemp+1
  7855  0DDF  120A  158A  2000  120A  158A  	fcall	stringtab
  7856  0DE4  3A00               	xorlw	0
  7857  0DE5  1D03               	skipz
  7858  0DE6  2DE8               	goto	u2691
  7859  0DE7  2DE9               	goto	u2690
  7860  0DE8                     u2691:
  7861  0DE8  2DD2               	goto	l2820
  7862  0DE9                     u2690:
  7863  0DE9                     l2824:
  7864                           
  7865                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 783:    if(((unsi
      +                          gned)width) > len)
  7866  0DE9  0833               	movf	sprintf@width+1,w
  7867  0DEA  022E               	subwf	sprintf@len+1,w
  7868  0DEB  1D03               	skipz
  7869  0DEC  2DEF               	goto	u2705
  7870  0DED  0832               	movf	sprintf@width,w
  7871  0DEE  022D               	subwf	sprintf@len,w
  7872  0DEF                     u2705:
  7873  0DEF  1803               	skipnc
  7874  0DF0  2DF2               	goto	u2701
  7875  0DF1  2DF3               	goto	u2700
  7876  0DF2                     u2701:
  7877  0DF2  2DFA               	goto	l2828
  7878  0DF3                     u2700:
  7879  0DF3                     l2826:
  7880                           
  7881                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 784:     width -=
      +                           len;
  7882  0DF3  082D               	movf	sprintf@len,w
  7883  0DF4  02B2               	subwf	sprintf@width,f
  7884  0DF5  082E               	movf	sprintf@len+1,w
  7885  0DF6  1C03               	skipc
  7886  0DF7  03B3               	decf	sprintf@width+1,f
  7887  0DF8  02B3               	subwf	sprintf@width+1,f
  7888  0DF9  2E0C               	goto	l2834
  7889  0DFA                     l2828:
  7890                           
  7891                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 786:     width = 
      +                          0;
  7892  0DFA  01B2               	clrf	sprintf@width
  7893  0DFB  01B3               	clrf	sprintf@width+1
  7894  0DFC  2E0C               	goto	l2834
  7895  0DFD                     l2830:
  7896                           
  7897                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 791:      ((*sp++
      +                           = (' ')));
  7898  0DFD  3020               	movlw	32
  7899  0DFE  00A5               	movwf	??_sprintf
  7900  0DFF  0820               	movf	sprintf@sp,w
  7901  0E00  0084               	movwf	4
  7902  0E01  1783               	bsf	3,7
  7903  0E02  1C21               	btfss	sprintf@sp+1,0
  7904  0E03  1383               	bcf	3,7
  7905  0E04  0825               	movf	??_sprintf,w
  7906  0E05  0080               	movwf	0
  7907  0E06                     l2832:
  7908  0E06  3001               	movlw	1
  7909  0E07  07A0               	addwf	sprintf@sp,f
  7910  0E08  1803               	skipnc
  7911  0E09  0AA1               	incf	sprintf@sp+1,f
  7912  0E0A  3000               	movlw	0
  7913  0E0B  07A1               	addwf	sprintf@sp+1,f
  7914  0E0C                     l2834:
  7915                           
  7916                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 790:     while(wi
      +                          dth--)
  7917  0E0C  30FF               	movlw	255
  7918  0E0D  07B2               	addwf	sprintf@width,f
  7919  0E0E  1803               	skipnc
  7920  0E0F  0AB3               	incf	sprintf@width+1,f
  7921  0E10  30FF               	movlw	255
  7922  0E11  07B3               	addwf	sprintf@width+1,f
  7923  0E12  0A32               	incf	sprintf@width,w
  7924  0E13  1D03               	skipz
  7925  0E14  2E19               	goto	u2711
  7926  0E15  0A33               	incf	sprintf@width+1,w
  7927  0E16  1D03               	btfss	3,2
  7928  0E17  2E19               	goto	u2711
  7929  0E18  2E1A               	goto	u2710
  7930  0E19                     u2711:
  7931  0E19  2DFD               	goto	l2830
  7932  0E1A                     u2710:
  7933  0E1A  2E38               	goto	l2842
  7934  0E1B                     l2836:
  7935                           
  7936                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 794:     ((*sp++ 
      +                          = (*cp++)));
  7937  0E1B  082B               	movf	sprintf@cp+1,w
  7938  0E1C  00FF               	movwf	btemp+1
  7939  0E1D  082A               	movf	sprintf@cp,w
  7940  0E1E  0084               	movwf	4
  7941  0E1F  120A  158A  2000  120A  158A  	fcall	stringtab
  7942  0E24  00A5               	movwf	??_sprintf
  7943  0E25  0820               	movf	sprintf@sp,w
  7944  0E26  0084               	movwf	4
  7945  0E27  1783               	bsf	3,7
  7946  0E28  1C21               	btfss	sprintf@sp+1,0
  7947  0E29  1383               	bcf	3,7
  7948  0E2A  0825               	movf	??_sprintf,w
  7949  0E2B  0080               	movwf	0
  7950  0E2C                     l2838:
  7951  0E2C  3001               	movlw	1
  7952  0E2D  07AA               	addwf	sprintf@cp,f
  7953  0E2E  1803               	skipnc
  7954  0E2F  0AAB               	incf	sprintf@cp+1,f
  7955  0E30  3000               	movlw	0
  7956  0E31  07AB               	addwf	sprintf@cp+1,f
  7957  0E32                     l2840:
  7958  0E32  3001               	movlw	1
  7959  0E33  07A0               	addwf	sprintf@sp,f
  7960  0E34  1803               	skipnc
  7961  0E35  0AA1               	incf	sprintf@sp+1,f
  7962  0E36  3000               	movlw	0
  7963  0E37  07A1               	addwf	sprintf@sp+1,f
  7964  0E38                     l2842:
  7965                           
  7966                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 793:    while(len
      +                          --)
  7967  0E38  3001               	movlw	1
  7968  0E39  02AD               	subwf	sprintf@len,f
  7969  0E3A  3000               	movlw	0
  7970  0E3B  1C03               	skipc
  7971  0E3C  03AE               	decf	sprintf@len+1,f
  7972  0E3D  02AE               	subwf	sprintf@len+1,f
  7973  0E3E  0A2D               	incf	sprintf@len,w
  7974  0E3F  1D03               	skipz
  7975  0E40  2E45               	goto	u2721
  7976  0E41  0A2E               	incf	sprintf@len+1,w
  7977  0E42  1D03               	btfss	3,2
  7978  0E43  2E45               	goto	u2721
  7979  0E44  2E46               	goto	u2720
  7980  0E45                     u2721:
  7981  0E45  2E1B               	goto	l2836
  7982  0E46                     u2720:
  7983  0E46  2FE7               	goto	l2928
  7984  0E47                     l2846:
  7985  0E47  3001               	movlw	1
  7986  0E48  1283               	bcf	3,5	;RP0=0, select bank0
  7987  0E49  1303               	bcf	3,6	;RP1=0, select bank0
  7988  0E4A  07A2               	addwf	sprintf@f,f
  7989  0E4B  30FF               	movlw	-1
  7990  0E4C  0722               	addwf	sprintf@f,w
  7991  0E4D  0084               	movwf	4
  7992  0E4E  120A  158A  200A  120A  158A  	fcall	stringdir
  7993  0E53  00B4               	movwf	sprintf@c
  7994  0E54  00A5               	movwf	??_sprintf
  7995  0E55  01A6               	clrf	??_sprintf+1
  7996                           
  7997                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7998                           ; Switch size 1, requested type "simple"
  7999                           ; Number of cases is 1, Range of values is 0 to 0
  8000                           ; switch strategies available:
  8001                           ; Name         Instructions Cycles
  8002                           ; simple_byte            4     3 (average)
  8003                           ; direct_byte           11     8 (fixed)
  8004                           ; jumptable            260     6 (fixed)
  8005                           ;	Chosen strategy is simple_byte
  8006  0E56  0826               	movf	??_sprintf+1,w
  8007  0E57  3A00               	xorlw	0	; case 0
  8008  0E58  1903               	skipnz
  8009  0E59  2E5B               	goto	l3982
  8010  0E5A  2FE7               	goto	l2928
  8011  0E5B                     l3982:
  8012                           
  8013                           ; Switch size 1, requested type "simple"
  8014                           ; Number of cases is 5, Range of values is 0 to 120
  8015                           ; switch strategies available:
  8016                           ; Name         Instructions Cycles
  8017                           ; simple_byte           16     9 (average)
  8018                           ; jumptable            260     6 (fixed)
  8019                           ;	Chosen strategy is simple_byte
  8020  0E5B  0825               	movf	??_sprintf,w
  8021  0E5C  3A00               	xorlw	0	; case 0
  8022  0E5D  1903               	skipnz
  8023  0E5E  2FF9               	goto	l2930
  8024  0E5F  3A64               	xorlw	100	; case 100
  8025  0E60  1903               	skipnz
  8026  0E61  2E6C               	goto	l639
  8027  0E62  3A0D               	xorlw	13	; case 105
  8028  0E63  1903               	skipnz
  8029  0E64  2E6C               	goto	l639
  8030  0E65  3A1A               	xorlw	26	; case 115
  8031  0E66  1903               	skipnz
  8032  0E67  2DB8               	goto	l2810
  8033  0E68  3A0B               	xorlw	11	; case 120
  8034  0E69  1903               	skipnz
  8035  0E6A  2DB6               	goto	l640
  8036  0E6B  2FE7               	goto	l2928
  8037  0E6C                     l639:
  8038                           
  8039                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1277:   if((flag 
      +                          & 0x80) == 0x00)
  8040  0E6C  1BAF               	btfsc	sprintf@flag,7
  8041  0E6D  2E6F               	goto	u2731
  8042  0E6E  2E70               	goto	u2730
  8043  0E6F                     u2731:
  8044  0E6F  2E8A               	goto	l2858
  8045  0E70                     u2730:
  8046  0E70                     l2848:
  8047                           
  8048                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  8049  0E70  082C               	movf	sprintf@ap,w
  8050  0E71  0084               	movwf	4
  8051  0E72  1383               	bcf	3,7	;select IRP bank0
  8052  0E73  0800               	movf	0,w
  8053  0E74  00B0               	movwf	sprintf@val
  8054  0E75  0A84               	incf	4,f
  8055  0E76  0800               	movf	0,w
  8056  0E77  00B1               	movwf	sprintf@val+1
  8057  0E78                     l2850:
  8058  0E78  3002               	movlw	2
  8059  0E79  00A5               	movwf	??_sprintf
  8060  0E7A  0825               	movf	??_sprintf,w
  8061  0E7B  07AC               	addwf	sprintf@ap,f
  8062  0E7C                     l2852:
  8063                           
  8064                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  8065  0E7C  1FB1               	btfss	sprintf@val+1,7
  8066  0E7D  2E7F               	goto	u2741
  8067  0E7E  2E80               	goto	u2740
  8068  0E7F                     u2741:
  8069  0E7F  2EE9               	goto	l2884
  8070  0E80                     u2740:
  8071  0E80                     l2854:
  8072                           
  8073                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  8074  0E80  3003               	movlw	3
  8075  0E81  00A5               	movwf	??_sprintf
  8076  0E82  0825               	movf	??_sprintf,w
  8077  0E83  04AF               	iorwf	sprintf@flag,f
  8078  0E84                     l2856:
  8079                           
  8080                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  8081  0E84  09B0               	comf	sprintf@val,f
  8082  0E85  09B1               	comf	sprintf@val+1,f
  8083  0E86  0AB0               	incf	sprintf@val,f
  8084  0E87  1903               	skipnz
  8085  0E88  0AB1               	incf	sprintf@val+1,f
  8086  0E89  2EE9               	goto	l2884
  8087  0E8A                     l2858:
  8088                           
  8089                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  8090  0E8A  082C               	movf	sprintf@ap,w
  8091  0E8B  0084               	movwf	4
  8092  0E8C  1383               	bcf	3,7	;select IRP bank0
  8093  0E8D  0800               	movf	0,w
  8094  0E8E  00B0               	movwf	sprintf@val
  8095  0E8F  0A84               	incf	4,f
  8096  0E90  0800               	movf	0,w
  8097  0E91  00B1               	movwf	sprintf@val+1
  8098  0E92                     l2860:
  8099  0E92  3002               	movlw	2
  8100  0E93  00A5               	movwf	??_sprintf
  8101  0E94  0825               	movf	??_sprintf,w
  8102  0E95  07AC               	addwf	sprintf@ap,f
  8103  0E96  2EE9               	goto	l2884
  8104  0E97                     l659:	
  8105                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1325:   case 0x00
      +                          :
  8106                           
  8107                           
  8108                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  8109  0E97  01B4               	clrf	sprintf@c
  8110  0E98  0AB4               	incf	sprintf@c,f
  8111  0E99                     l2866:
  8112                           
  8113                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  8114  0E99  0834               	movf	sprintf@c,w
  8115  0E9A  00A5               	movwf	??_sprintf
  8116  0E9B  0725               	addwf	??_sprintf,w
  8117  0E9C  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  8118  0E9D  0084               	movwf	4
  8119  0E9E  120A  158A  200A  120A  158A  	fcall	stringdir
  8120  0EA3  00A6               	movwf	??_sprintf+1
  8121  0EA4  120A  158A  200A  120A  158A  	fcall	stringdir
  8122  0EA9  00A7               	movwf	??_sprintf+2
  8123  0EAA  0827               	movf	??_sprintf+2,w
  8124  0EAB  0231               	subwf	sprintf@val+1,w
  8125  0EAC  1D03               	skipz
  8126  0EAD  2EB0               	goto	u2755
  8127  0EAE  0826               	movf	??_sprintf+1,w
  8128  0EAF  0230               	subwf	sprintf@val,w
  8129  0EB0                     u2755:
  8130  0EB0  1803               	skipnc
  8131  0EB1  2EB3               	goto	u2751
  8132  0EB2  2EB4               	goto	u2750
  8133  0EB3                     u2751:
  8134  0EB3  2EB5               	goto	l2870
  8135  0EB4                     u2750:
  8136  0EB4  2EFA               	goto	l2886
  8137  0EB5                     l2870:
  8138  0EB5  3001               	movlw	1
  8139  0EB6  00A5               	movwf	??_sprintf
  8140  0EB7  0825               	movf	??_sprintf,w
  8141  0EB8  07B4               	addwf	sprintf@c,f
  8142  0EB9  3005               	movlw	5
  8143  0EBA  0634               	xorwf	sprintf@c,w
  8144  0EBB  1D03               	btfss	3,2
  8145  0EBC  2EBE               	goto	u2761
  8146  0EBD  2EBF               	goto	u2760
  8147  0EBE                     u2761:
  8148  0EBE  2E99               	goto	l2866
  8149  0EBF                     u2760:
  8150  0EBF  2EFA               	goto	l2886
  8151  0EC0                     l664:	
  8152                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1340:   case 0x80
      +                          :
  8153                           
  8154                           
  8155                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1342:    for(c = 
      +                          1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  8156  0EC0  01B4               	clrf	sprintf@c
  8157  0EC1  0AB4               	incf	sprintf@c,f
  8158  0EC2                     l2876:
  8159                           
  8160                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1343:     if(val 
      +                          < hexpowers[c])
  8161  0EC2  0834               	movf	sprintf@c,w
  8162  0EC3  00A5               	movwf	??_sprintf
  8163  0EC4  0725               	addwf	??_sprintf,w
  8164  0EC5  3E0B               	addlw	low ((_hexpowers-__stringbase)| (0+32768))
  8165  0EC6  0084               	movwf	4
  8166  0EC7  120A  158A  200A  120A  158A  	fcall	stringdir
  8167  0ECC  00A6               	movwf	??_sprintf+1
  8168  0ECD  120A  158A  200A  120A  158A  	fcall	stringdir
  8169  0ED2  00A7               	movwf	??_sprintf+2
  8170  0ED3  0827               	movf	??_sprintf+2,w
  8171  0ED4  0231               	subwf	sprintf@val+1,w
  8172  0ED5  1D03               	skipz
  8173  0ED6  2ED9               	goto	u2775
  8174  0ED7  0826               	movf	??_sprintf+1,w
  8175  0ED8  0230               	subwf	sprintf@val,w
  8176  0ED9                     u2775:
  8177  0ED9  1803               	skipnc
  8178  0EDA  2EDC               	goto	u2771
  8179  0EDB  2EDD               	goto	u2770
  8180  0EDC                     u2771:
  8181  0EDC  2EDE               	goto	l2880
  8182  0EDD                     u2770:
  8183  0EDD  2EFA               	goto	l2886
  8184  0EDE                     l2880:
  8185  0EDE  3001               	movlw	1
  8186  0EDF  00A5               	movwf	??_sprintf
  8187  0EE0  0825               	movf	??_sprintf,w
  8188  0EE1  07B4               	addwf	sprintf@c,f
  8189  0EE2  3004               	movlw	4
  8190  0EE3  0634               	xorwf	sprintf@c,w
  8191  0EE4  1D03               	btfss	3,2
  8192  0EE5  2EE7               	goto	u2781
  8193  0EE6  2EE8               	goto	u2780
  8194  0EE7                     u2781:
  8195  0EE7  2EC2               	goto	l2876
  8196  0EE8                     u2780:
  8197  0EE8  2EFA               	goto	l2886
  8198  0EE9                     l2884:
  8199  0EE9  082F               	movf	sprintf@flag,w
  8200  0EEA  3980               	andlw	128
  8201  0EEB  00A5               	movwf	??_sprintf
  8202  0EEC  01A6               	clrf	??_sprintf+1
  8203                           
  8204                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8205                           ; Switch size 1, requested type "simple"
  8206                           ; Number of cases is 1, Range of values is 0 to 0
  8207                           ; switch strategies available:
  8208                           ; Name         Instructions Cycles
  8209                           ; simple_byte            4     3 (average)
  8210                           ; direct_byte           11     8 (fixed)
  8211                           ; jumptable            260     6 (fixed)
  8212                           ;	Chosen strategy is simple_byte
  8213  0EED  0826               	movf	??_sprintf+1,w
  8214  0EEE  3A00               	xorlw	0	; case 0
  8215  0EEF  1903               	skipnz
  8216  0EF0  2EF2               	goto	l3984
  8217  0EF1  2EFA               	goto	l2886
  8218  0EF2                     l3984:
  8219                           
  8220                           ; Switch size 1, requested type "simple"
  8221                           ; Number of cases is 2, Range of values is 0 to 128
  8222                           ; switch strategies available:
  8223                           ; Name         Instructions Cycles
  8224                           ; simple_byte            7     4 (average)
  8225                           ; jumptable            260     6 (fixed)
  8226                           ;	Chosen strategy is simple_byte
  8227  0EF2  0825               	movf	??_sprintf,w
  8228  0EF3  3A00               	xorlw	0	; case 0
  8229  0EF4  1903               	skipnz
  8230  0EF5  2E97               	goto	l659
  8231  0EF6  3A80               	xorlw	128	; case 128
  8232  0EF7  1903               	skipnz
  8233  0EF8  2EC0               	goto	l664
  8234  0EF9  2EFA               	goto	l2886
  8235  0EFA                     l2886:
  8236                           
  8237                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
  8238  0EFA  0832               	movf	sprintf@width,w
  8239  0EFB  0433               	iorwf	sprintf@width+1,w
  8240  0EFC  1903               	btfsc	3,2
  8241  0EFD  2EFF               	goto	u2791
  8242  0EFE  2F00               	goto	u2790
  8243  0EFF                     u2791:
  8244  0EFF  2F0C               	goto	l668
  8245  0F00                     u2790:
  8246  0F00                     l2888:
  8247  0F00  082F               	movf	sprintf@flag,w
  8248  0F01  3903               	andlw	3
  8249  0F02  1903               	btfsc	3,2
  8250  0F03  2F05               	goto	u2801
  8251  0F04  2F06               	goto	u2800
  8252  0F05                     u2801:
  8253  0F05  2F0C               	goto	l668
  8254  0F06                     u2800:
  8255  0F06                     l2890:
  8256                           
  8257                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1372:    width--;
  8258  0F06  30FF               	movlw	255
  8259  0F07  07B2               	addwf	sprintf@width,f
  8260  0F08  1803               	skipnc
  8261  0F09  0AB3               	incf	sprintf@width+1,f
  8262  0F0A  30FF               	movlw	255
  8263  0F0B  07B3               	addwf	sprintf@width+1,f
  8264  0F0C                     l668:
  8265                           
  8266                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  8267  0F0C  0833               	movf	sprintf@width+1,w
  8268  0F0D  3A80               	xorlw	128
  8269  0F0E  3C80               	sublw	128
  8270  0F0F  1D03               	skipz
  8271  0F10  2F13               	goto	u2815
  8272  0F11  0832               	movf	sprintf@width,w
  8273  0F12  0234               	subwf	sprintf@c,w
  8274  0F13                     u2815:
  8275  0F13  1803               	skipnc
  8276  0F14  2F16               	goto	u2811
  8277  0F15  2F17               	goto	u2810
  8278  0F16                     u2811:
  8279  0F16  2F23               	goto	l2894
  8280  0F17                     u2810:
  8281  0F17                     l2892:
  8282                           
  8283                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  8284  0F17  1283               	bcf	3,5	;RP0=0, select bank0
  8285  0F18  1303               	bcf	3,6	;RP1=0, select bank0
  8286  0F19  0834               	movf	sprintf@c,w
  8287  0F1A  00A5               	movwf	??_sprintf
  8288  0F1B  01A6               	clrf	??_sprintf+1
  8289  0F1C  0825               	movf	??_sprintf,w
  8290  0F1D  02B2               	subwf	sprintf@width,f
  8291  0F1E  0826               	movf	??_sprintf+1,w
  8292  0F1F  1C03               	skipc
  8293  0F20  03B3               	decf	sprintf@width+1,f
  8294  0F21  02B3               	subwf	sprintf@width+1,f
  8295  0F22  2F27               	goto	l2896
  8296  0F23                     l2894:
  8297                           
  8298                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  8299  0F23  1283               	bcf	3,5	;RP0=0, select bank0
  8300  0F24  1303               	bcf	3,6	;RP1=0, select bank0
  8301  0F25  01B2               	clrf	sprintf@width
  8302  0F26  01B3               	clrf	sprintf@width+1
  8303  0F27                     l2896:
  8304                           
  8305                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1450:    if(width
  8306  0F27  0832               	movf	sprintf@width,w
  8307  0F28  0433               	iorwf	sprintf@width+1,w
  8308  0F29  1903               	btfsc	3,2
  8309  0F2A  2F2C               	goto	u2821
  8310  0F2B  2F2D               	goto	u2820
  8311  0F2C                     u2821:
  8312  0F2C  2F48               	goto	l2904
  8313  0F2D                     u2820:
  8314  0F2D                     l2898:
  8315                           
  8316                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  8317  0F2D  3020               	movlw	32
  8318  0F2E  00A5               	movwf	??_sprintf
  8319  0F2F  0820               	movf	sprintf@sp,w
  8320  0F30  0084               	movwf	4
  8321  0F31  1783               	bsf	3,7
  8322  0F32  1C21               	btfss	sprintf@sp+1,0
  8323  0F33  1383               	bcf	3,7
  8324  0F34  0825               	movf	??_sprintf,w
  8325  0F35  0080               	movwf	0
  8326  0F36                     l2900:
  8327  0F36  3001               	movlw	1
  8328  0F37  07A0               	addwf	sprintf@sp,f
  8329  0F38  1803               	skipnc
  8330  0F39  0AA1               	incf	sprintf@sp+1,f
  8331  0F3A  3000               	movlw	0
  8332  0F3B  07A1               	addwf	sprintf@sp+1,f
  8333  0F3C                     l2902:
  8334  0F3C  30FF               	movlw	255
  8335  0F3D  07B2               	addwf	sprintf@width,f
  8336  0F3E  1803               	skipnc
  8337  0F3F  0AB3               	incf	sprintf@width+1,f
  8338  0F40  30FF               	movlw	255
  8339  0F41  07B3               	addwf	sprintf@width+1,f
  8340  0F42  0832               	movf	sprintf@width,w
  8341  0F43  0433               	iorwf	sprintf@width+1,w
  8342  0F44  1D03               	btfss	3,2
  8343  0F45  2F47               	goto	u2831
  8344  0F46  2F48               	goto	u2830
  8345  0F47                     u2831:
  8346  0F47  2F2D               	goto	l2898
  8347  0F48                     u2830:
  8348  0F48                     l2904:
  8349                           
  8350                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
  8351  0F48  082F               	movf	sprintf@flag,w
  8352  0F49  3903               	andlw	3
  8353  0F4A  1903               	btfsc	3,2
  8354  0F4B  2F4D               	goto	u2841
  8355  0F4C  2F4E               	goto	u2840
  8356  0F4D                     u2841:
  8357  0F4D  2F5D               	goto	l2910
  8358  0F4E                     u2840:
  8359  0F4E                     l2906:
  8360                           
  8361                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  8362  0F4E  302D               	movlw	45
  8363  0F4F  00A5               	movwf	??_sprintf
  8364  0F50  0820               	movf	sprintf@sp,w
  8365  0F51  0084               	movwf	4
  8366  0F52  1783               	bsf	3,7
  8367  0F53  1C21               	btfss	sprintf@sp+1,0
  8368  0F54  1383               	bcf	3,7
  8369  0F55  0825               	movf	??_sprintf,w
  8370  0F56  0080               	movwf	0
  8371  0F57                     l2908:
  8372  0F57  3001               	movlw	1
  8373  0F58  07A0               	addwf	sprintf@sp,f
  8374  0F59  1803               	skipnc
  8375  0F5A  0AA1               	incf	sprintf@sp+1,f
  8376  0F5B  3000               	movlw	0
  8377  0F5C  07A1               	addwf	sprintf@sp+1,f
  8378  0F5D                     l2910:
  8379                           
  8380                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  8381  0F5D  0834               	movf	sprintf@c,w
  8382  0F5E  00A5               	movwf	??_sprintf
  8383  0F5F  0825               	movf	??_sprintf,w
  8384  0F60  00A9               	movwf	sprintf@prec
  8385                           
  8386                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  8387  0F61  2FDE               	goto	l2926
  8388  0F62                     l2912:
  8389                           
  8390                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1515:     c = (va
      +                          l / dpowers[(unsigned char)prec]) % 10 + '0';
  8391  0F62  300A               	movlw	10
  8392  0F63  00F8               	movwf	___lwmod@divisor
  8393  0F64  3000               	movlw	0
  8394  0F65  00F9               	movwf	___lwmod@divisor+1
  8395  0F66  0829               	movf	sprintf@prec,w
  8396  0F67  00A5               	movwf	??_sprintf
  8397  0F68  0725               	addwf	??_sprintf,w
  8398  0F69  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  8399  0F6A  0084               	movwf	4
  8400  0F6B  120A  158A  200A  120A  158A  	fcall	stringdir
  8401  0F70  00F0               	movwf	___lwdiv@divisor
  8402  0F71  120A  158A  200A  120A  158A  	fcall	stringdir
  8403  0F76  00F1               	movwf	___lwdiv@divisor+1
  8404  0F77  0831               	movf	sprintf@val+1,w
  8405  0F78  00F3               	movwf	___lwdiv@dividend+1
  8406  0F79  0830               	movf	sprintf@val,w
  8407  0F7A  00F2               	movwf	___lwdiv@dividend
  8408  0F7B  120A  118A  2006  120A  158A  	fcall	___lwdiv
  8409  0F80  0871               	movf	?___lwdiv+1,w
  8410  0F81  00FB               	movwf	___lwmod@dividend+1
  8411  0F82  0870               	movf	?___lwdiv,w
  8412  0F83  00FA               	movwf	___lwmod@dividend
  8413  0F84  160A  118A  24BE  120A  158A  	fcall	___lwmod
  8414  0F89  0878               	movf	?___lwmod,w
  8415  0F8A  3E30               	addlw	48
  8416  0F8B  1283               	bcf	3,5	;RP0=0, select bank0
  8417  0F8C  1303               	bcf	3,6	;RP1=0, select bank0
  8418  0F8D  00A6               	movwf	??_sprintf+1
  8419  0F8E  0826               	movf	??_sprintf+1,w
  8420  0F8F  00B4               	movwf	sprintf@c
  8421                           
  8422                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1517:     break;
  8423  0F90  2FCF               	goto	l2922
  8424  0F91                     l2914:
  8425                           
  8426                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1525:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1526:     unsigned char 
      +                          idx = (val / hexpowers[(unsigned char)prec]) & 0xF;
  8427  0F91  0829               	movf	sprintf@prec,w
  8428  0F92  00A5               	movwf	??_sprintf
  8429  0F93  0725               	addwf	??_sprintf,w
  8430  0F94  3E0B               	addlw	low ((_hexpowers-__stringbase)| (0+32768))
  8431  0F95  0084               	movwf	4
  8432  0F96  120A  158A  200A  120A  158A  	fcall	stringdir
  8433  0F9B  00F0               	movwf	___lwdiv@divisor
  8434  0F9C  120A  158A  200A  120A  158A  	fcall	stringdir
  8435  0FA1  00F1               	movwf	___lwdiv@divisor+1
  8436  0FA2  0831               	movf	sprintf@val+1,w
  8437  0FA3  00F3               	movwf	___lwdiv@dividend+1
  8438  0FA4  0830               	movf	sprintf@val,w
  8439  0FA5  00F2               	movwf	___lwdiv@dividend
  8440  0FA6  120A  118A  2006  120A  158A  	fcall	___lwdiv
  8441  0FAB  0870               	movf	?___lwdiv,w
  8442  0FAC  390F               	andlw	15
  8443  0FAD  1283               	bcf	3,5	;RP0=0, select bank0
  8444  0FAE  1303               	bcf	3,6	;RP1=0, select bank0
  8445  0FAF  00A6               	movwf	??_sprintf+1
  8446  0FB0  0826               	movf	??_sprintf+1,w
  8447  0FB1  00A8               	movwf	sprintf@idx
  8448  0FB2                     l2916:
  8449                           
  8450                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1532:     c = "01
      +                          23456789abcdef"[idx];
  8451  0FB2  0828               	movf	sprintf@idx,w
  8452  0FB3  3E13               	addlw	low ((STR_27-__stringbase)| (0+32768))
  8453  0FB4  0084               	movwf	4
  8454  0FB5  120A  158A  200A  120A  158A  	fcall	stringdir
  8455  0FBA  00A5               	movwf	??_sprintf
  8456  0FBB  0825               	movf	??_sprintf,w
  8457  0FBC  00B4               	movwf	sprintf@c
  8458                           
  8459                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1534:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1536:     break;
  8460  0FBD  2FCF               	goto	l2922
  8461  0FBE                     l2920:
  8462  0FBE  082F               	movf	sprintf@flag,w
  8463  0FBF  3980               	andlw	128
  8464  0FC0  00A5               	movwf	??_sprintf
  8465  0FC1  01A6               	clrf	??_sprintf+1
  8466                           
  8467                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8468                           ; Switch size 1, requested type "simple"
  8469                           ; Number of cases is 1, Range of values is 0 to 0
  8470                           ; switch strategies available:
  8471                           ; Name         Instructions Cycles
  8472                           ; simple_byte            4     3 (average)
  8473                           ; direct_byte           11     8 (fixed)
  8474                           ; jumptable            260     6 (fixed)
  8475                           ;	Chosen strategy is simple_byte
  8476  0FC2  0826               	movf	??_sprintf+1,w
  8477  0FC3  3A00               	xorlw	0	; case 0
  8478  0FC4  1903               	skipnz
  8479  0FC5  2FC7               	goto	l3986
  8480  0FC6  2FCF               	goto	l2922
  8481  0FC7                     l3986:
  8482                           
  8483                           ; Switch size 1, requested type "simple"
  8484                           ; Number of cases is 2, Range of values is 0 to 128
  8485                           ; switch strategies available:
  8486                           ; Name         Instructions Cycles
  8487                           ; simple_byte            7     4 (average)
  8488                           ; jumptable            260     6 (fixed)
  8489                           ;	Chosen strategy is simple_byte
  8490  0FC7  0825               	movf	??_sprintf,w
  8491  0FC8  3A00               	xorlw	0	; case 0
  8492  0FC9  1903               	skipnz
  8493  0FCA  2F62               	goto	l2912
  8494  0FCB  3A80               	xorlw	128	; case 128
  8495  0FCC  1903               	skipnz
  8496  0FCD  2F91               	goto	l2914
  8497  0FCE  2FCF               	goto	l2922
  8498  0FCF                     l2922:
  8499                           
  8500                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ 
      +                          = (c)));
  8501  0FCF  0834               	movf	sprintf@c,w
  8502  0FD0  00A5               	movwf	??_sprintf
  8503  0FD1  0820               	movf	sprintf@sp,w
  8504  0FD2  0084               	movwf	4
  8505  0FD3  1783               	bsf	3,7
  8506  0FD4  1C21               	btfss	sprintf@sp+1,0
  8507  0FD5  1383               	bcf	3,7
  8508  0FD6  0825               	movf	??_sprintf,w
  8509  0FD7  0080               	movwf	0
  8510  0FD8                     l2924:
  8511  0FD8  3001               	movlw	1
  8512  0FD9  07A0               	addwf	sprintf@sp,f
  8513  0FDA  1803               	skipnc
  8514  0FDB  0AA1               	incf	sprintf@sp+1,f
  8515  0FDC  3000               	movlw	0
  8516  0FDD  07A1               	addwf	sprintf@sp+1,f
  8517  0FDE                     l2926:
  8518                           
  8519                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  8520  0FDE  30FF               	movlw	255
  8521  0FDF  00A5               	movwf	??_sprintf
  8522  0FE0  0825               	movf	??_sprintf,w
  8523  0FE1  07A9               	addwf	sprintf@prec,f
  8524  0FE2  0A29               	incf	sprintf@prec,w
  8525  0FE3  1D03               	btfss	3,2
  8526  0FE4  2FE6               	goto	u2851
  8527  0FE5  2FE7               	goto	u2850
  8528  0FE6                     u2851:
  8529  0FE6  2FBE               	goto	l2920
  8530  0FE7                     u2850:
  8531  0FE7                     l2928:
  8532                           
  8533                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  8534  0FE7  3001               	movlw	1
  8535  0FE8  07A2               	addwf	sprintf@f,f
  8536  0FE9  30FF               	movlw	-1
  8537  0FEA  0722               	addwf	sprintf@f,w
  8538  0FEB  0084               	movwf	4
  8539  0FEC  120A  158A  200A  120A  158A  	fcall	stringdir
  8540  0FF1  00A5               	movwf	??_sprintf
  8541  0FF2  0825               	movf	??_sprintf,w
  8542  0FF3  00B4               	movwf	sprintf@c
  8543  0FF4  0834               	movf	sprintf@c,w
  8544  0FF5  1D03               	btfss	3,2
  8545  0FF6  2FF8               	goto	u2861
  8546  0FF7  2FF9               	goto	u2860
  8547  0FF8                     u2861:
  8548  0FF8  2D4C               	goto	l2790
  8549  0FF9                     u2860:
  8550  0FF9                     l2930:
  8551                           
  8552                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  8553  0FF9  0820               	movf	sprintf@sp,w
  8554  0FFA  0084               	movwf	4
  8555  0FFB  1783               	bsf	3,7
  8556  0FFC  1C21               	btfss	sprintf@sp+1,0
  8557  0FFD  1383               	bcf	3,7
  8558  0FFE  0180               	clrf	0
  8559  0FFF                     l683:
  8560  0FFF  0008               	return
  8561  1000                     __end_of_sprintf:
  8562                           
  8563                           	psect	text25
  8564  1295                     __ptext25:	
  8565 ;; *************** function _isdigit *****************
  8566 ;; Defined at:
  8567 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\isdigit.c"
  8568 ;; Parameters:    Size  Location     Type
  8569 ;;  c               1    wreg     unsigned char 
  8570 ;; Auto vars:     Size  Location     Type
  8571 ;;  c               1    1[COMMON] unsigned char 
  8572 ;; Return value:  Size  Location     Type
  8573 ;;		None               void
  8574 ;; Registers used:
  8575 ;;		wreg, status,2, status,0
  8576 ;; Tracked objects:
  8577 ;;		On entry : 0/0
  8578 ;;		On exit  : 0/0
  8579 ;;		Unchanged: 0/0
  8580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8581 ;;      Params:         0       0       0       0       0
  8582 ;;      Locals:         2       0       0       0       0
  8583 ;;      Temps:          0       0       0       0       0
  8584 ;;      Totals:         2       0       0       0       0
  8585 ;;Total ram usage:        2 bytes
  8586 ;; Hardware stack levels used: 1
  8587 ;; This function calls:
  8588 ;;		Nothing
  8589 ;; This function is called by:
  8590 ;;		_sprintf
  8591 ;; This function uses a non-reentrant model
  8592 ;;
  8593                           
  8594  1295                     _isdigit:	
  8595                           ;psect for function _isdigit
  8596                           
  8597                           
  8598                           ;incstack = 0
  8599                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  8600                           ;isdigit@c stored from wreg
  8601  1295  00F1               	movwf	isdigit@c
  8602  1296                     l2650:
  8603  1296  01F0               	clrf	_isdigit$1375
  8604  1297                     l2652:
  8605  1297  303A               	movlw	58
  8606  1298  0271               	subwf	isdigit@c,w
  8607  1299  1803               	skipnc
  8608  129A  2A9C               	goto	u2361
  8609  129B  2A9D               	goto	u2360
  8610  129C                     u2361:
  8611  129C  2AA5               	goto	l2658
  8612  129D                     u2360:
  8613  129D                     l2654:
  8614  129D  3030               	movlw	48
  8615  129E  0271               	subwf	isdigit@c,w
  8616  129F  1C03               	skipc
  8617  12A0  2AA2               	goto	u2371
  8618  12A1  2AA3               	goto	u2370
  8619  12A2                     u2371:
  8620  12A2  2AA5               	goto	l2658
  8621  12A3                     u2370:
  8622  12A3                     l2656:
  8623  12A3  01F0               	clrf	_isdigit$1375
  8624  12A4  0AF0               	incf	_isdigit$1375,f
  8625  12A5                     l2658:
  8626  12A5  0C70               	rrf	_isdigit$1375,w
  8627  12A6                     l1140:
  8628  12A6  0008               	return
  8629  12A7                     __end_of_isdigit:
  8630                           
  8631                           	psect	text26
  8632  1394                     __ptext26:	
  8633 ;; *************** function ___wmul *****************
  8634 ;; Defined at:
  8635 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\Umul16.c"
  8636 ;; Parameters:    Size  Location     Type
  8637 ;;  multiplier      2    0[COMMON] unsigned int 
  8638 ;;  multiplicand    2    2[COMMON] unsigned int 
  8639 ;; Auto vars:     Size  Location     Type
  8640 ;;  product         2    4[COMMON] unsigned int 
  8641 ;; Return value:  Size  Location     Type
  8642 ;;                  2    0[COMMON] unsigned int 
  8643 ;; Registers used:
  8644 ;;		wreg, status,2, status,0
  8645 ;; Tracked objects:
  8646 ;;		On entry : 0/0
  8647 ;;		On exit  : 0/0
  8648 ;;		Unchanged: 0/0
  8649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8650 ;;      Params:         4       0       0       0       0
  8651 ;;      Locals:         2       0       0       0       0
  8652 ;;      Temps:          0       0       0       0       0
  8653 ;;      Totals:         6       0       0       0       0
  8654 ;;Total ram usage:        6 bytes
  8655 ;; Hardware stack levels used: 1
  8656 ;; This function calls:
  8657 ;;		Nothing
  8658 ;; This function is called by:
  8659 ;;		_sprintf
  8660 ;; This function uses a non-reentrant model
  8661 ;;
  8662                           
  8663  1394                     ___wmul:	
  8664                           ;psect for function ___wmul
  8665                           
  8666  1394                     l2662:	
  8667                           ;incstack = 0
  8668                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  8669                           
  8670  1394  01F4               	clrf	___wmul@product
  8671  1395  01F5               	clrf	___wmul@product+1
  8672  1396                     l2664:
  8673  1396  1C70               	btfss	___wmul@multiplier,0
  8674  1397  2B99               	goto	u2381
  8675  1398  2B9A               	goto	u2380
  8676  1399                     u2381:
  8677  1399  2BA0               	goto	l687
  8678  139A                     u2380:
  8679  139A                     l2666:
  8680  139A  0872               	movf	___wmul@multiplicand,w
  8681  139B  07F4               	addwf	___wmul@product,f
  8682  139C  1803               	skipnc
  8683  139D  0AF5               	incf	___wmul@product+1,f
  8684  139E  0873               	movf	___wmul@multiplicand+1,w
  8685  139F  07F5               	addwf	___wmul@product+1,f
  8686  13A0                     l687:
  8687  13A0  3001               	movlw	1
  8688  13A1                     u2395:
  8689  13A1  1003               	clrc
  8690  13A2  0DF2               	rlf	___wmul@multiplicand,f
  8691  13A3  0DF3               	rlf	___wmul@multiplicand+1,f
  8692  13A4  3EFF               	addlw	-1
  8693  13A5  1D03               	skipz
  8694  13A6  2BA1               	goto	u2395
  8695  13A7                     l2668:
  8696  13A7  3001               	movlw	1
  8697  13A8                     u2405:
  8698  13A8  1003               	clrc
  8699  13A9  0CF1               	rrf	___wmul@multiplier+1,f
  8700  13AA  0CF0               	rrf	___wmul@multiplier,f
  8701  13AB  3EFF               	addlw	-1
  8702  13AC  1D03               	skipz
  8703  13AD  2BA8               	goto	u2405
  8704  13AE                     l2670:
  8705  13AE  0870               	movf	___wmul@multiplier,w
  8706  13AF  0471               	iorwf	___wmul@multiplier+1,w
  8707  13B0  1D03               	btfss	3,2
  8708  13B1  2BB3               	goto	u2411
  8709  13B2  2BB4               	goto	u2410
  8710  13B3                     u2411:
  8711  13B3  2B96               	goto	l2664
  8712  13B4                     u2410:
  8713  13B4                     l2672:
  8714  13B4  0875               	movf	___wmul@product+1,w
  8715  13B5  00F1               	movwf	?___wmul+1
  8716  13B6  0874               	movf	___wmul@product,w
  8717  13B7  00F0               	movwf	?___wmul
  8718  13B8                     l689:
  8719  13B8  0008               	return
  8720  13B9                     __end_of___wmul:
  8721                           
  8722                           	psect	text27
  8723  14BE                     __ptext27:	
  8724 ;; *************** function ___lwmod *****************
  8725 ;; Defined at:
  8726 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\lwmod.c"
  8727 ;; Parameters:    Size  Location     Type
  8728 ;;  divisor         2    8[COMMON] unsigned int 
  8729 ;;  dividend        2   10[COMMON] unsigned int 
  8730 ;; Auto vars:     Size  Location     Type
  8731 ;;  counter         1   13[COMMON] unsigned char 
  8732 ;; Return value:  Size  Location     Type
  8733 ;;                  2    8[COMMON] unsigned int 
  8734 ;; Registers used:
  8735 ;;		wreg, status,2, status,0
  8736 ;; Tracked objects:
  8737 ;;		On entry : 0/0
  8738 ;;		On exit  : 0/0
  8739 ;;		Unchanged: 0/0
  8740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8741 ;;      Params:         4       0       0       0       0
  8742 ;;      Locals:         1       0       0       0       0
  8743 ;;      Temps:          1       0       0       0       0
  8744 ;;      Totals:         6       0       0       0       0
  8745 ;;Total ram usage:        6 bytes
  8746 ;; Hardware stack levels used: 1
  8747 ;; This function calls:
  8748 ;;		Nothing
  8749 ;; This function is called by:
  8750 ;;		_sprintf
  8751 ;; This function uses a non-reentrant model
  8752 ;;
  8753                           
  8754  14BE                     ___lwmod:	
  8755                           ;psect for function ___lwmod
  8756                           
  8757  14BE                     l2702:	
  8758                           ;incstack = 0
  8759                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  8760                           
  8761  14BE  0878               	movf	___lwmod@divisor,w
  8762  14BF  0479               	iorwf	___lwmod@divisor+1,w
  8763  14C0  1903               	btfsc	3,2
  8764  14C1  2CC3               	goto	u2491
  8765  14C2  2CC4               	goto	u2490
  8766  14C3                     u2491:
  8767  14C3  2CF3               	goto	l2720
  8768  14C4                     u2490:
  8769  14C4                     l2704:
  8770  14C4  01FD               	clrf	___lwmod@counter
  8771  14C5  0AFD               	incf	___lwmod@counter,f
  8772  14C6  2CD2               	goto	l2710
  8773  14C7                     l2706:
  8774  14C7  3001               	movlw	1
  8775  14C8                     u2505:
  8776  14C8  1003               	clrc
  8777  14C9  0DF8               	rlf	___lwmod@divisor,f
  8778  14CA  0DF9               	rlf	___lwmod@divisor+1,f
  8779  14CB  3EFF               	addlw	-1
  8780  14CC  1D03               	skipz
  8781  14CD  2CC8               	goto	u2505
  8782  14CE                     l2708:
  8783  14CE  3001               	movlw	1
  8784  14CF  00FC               	movwf	??___lwmod
  8785  14D0  087C               	movf	??___lwmod,w
  8786  14D1  07FD               	addwf	___lwmod@counter,f
  8787  14D2                     l2710:
  8788  14D2  1FF9               	btfss	___lwmod@divisor+1,7
  8789  14D3  2CD5               	goto	u2511
  8790  14D4  2CD6               	goto	u2510
  8791  14D5                     u2511:
  8792  14D5  2CC7               	goto	l2706
  8793  14D6                     u2510:
  8794  14D6                     l2712:
  8795  14D6  0879               	movf	___lwmod@divisor+1,w
  8796  14D7  027B               	subwf	___lwmod@dividend+1,w
  8797  14D8  1D03               	skipz
  8798  14D9  2CDC               	goto	u2525
  8799  14DA  0878               	movf	___lwmod@divisor,w
  8800  14DB  027A               	subwf	___lwmod@dividend,w
  8801  14DC                     u2525:
  8802  14DC  1C03               	skipc
  8803  14DD  2CDF               	goto	u2521
  8804  14DE  2CE0               	goto	u2520
  8805  14DF                     u2521:
  8806  14DF  2CE6               	goto	l2716
  8807  14E0                     u2520:
  8808  14E0                     l2714:
  8809  14E0  0878               	movf	___lwmod@divisor,w
  8810  14E1  02FA               	subwf	___lwmod@dividend,f
  8811  14E2  0879               	movf	___lwmod@divisor+1,w
  8812  14E3  1C03               	skipc
  8813  14E4  03FB               	decf	___lwmod@dividend+1,f
  8814  14E5  02FB               	subwf	___lwmod@dividend+1,f
  8815  14E6                     l2716:
  8816  14E6  3001               	movlw	1
  8817  14E7                     u2535:
  8818  14E7  1003               	clrc
  8819  14E8  0CF9               	rrf	___lwmod@divisor+1,f
  8820  14E9  0CF8               	rrf	___lwmod@divisor,f
  8821  14EA  3EFF               	addlw	-1
  8822  14EB  1D03               	skipz
  8823  14EC  2CE7               	goto	u2535
  8824  14ED                     l2718:
  8825  14ED  3001               	movlw	1
  8826  14EE  02FD               	subwf	___lwmod@counter,f
  8827  14EF  1D03               	btfss	3,2
  8828  14F0  2CF2               	goto	u2541
  8829  14F1  2CF3               	goto	u2540
  8830  14F2                     u2541:
  8831  14F2  2CD6               	goto	l2712
  8832  14F3                     u2540:
  8833  14F3                     l2720:
  8834  14F3  087B               	movf	___lwmod@dividend+1,w
  8835  14F4  00F9               	movwf	?___lwmod+1
  8836  14F5  087A               	movf	___lwmod@dividend,w
  8837  14F6  00F8               	movwf	?___lwmod
  8838  14F7                     l969:
  8839  14F7  0008               	return
  8840  14F8                     __end_of___lwmod:
  8841                           
  8842                           	psect	text28
  8843  0006                     __ptext28:	
  8844 ;; *************** function ___lwdiv *****************
  8845 ;; Defined at:
  8846 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\lwdiv.c"
  8847 ;; Parameters:    Size  Location     Type
  8848 ;;  divisor         2    0[COMMON] unsigned int 
  8849 ;;  dividend        2    2[COMMON] unsigned int 
  8850 ;; Auto vars:     Size  Location     Type
  8851 ;;  quotient        2    5[COMMON] unsigned int 
  8852 ;;  counter         1    7[COMMON] unsigned char 
  8853 ;; Return value:  Size  Location     Type
  8854 ;;                  2    0[COMMON] unsigned int 
  8855 ;; Registers used:
  8856 ;;		wreg, status,2, status,0
  8857 ;; Tracked objects:
  8858 ;;		On entry : 0/0
  8859 ;;		On exit  : 0/0
  8860 ;;		Unchanged: 0/0
  8861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8862 ;;      Params:         4       0       0       0       0
  8863 ;;      Locals:         3       0       0       0       0
  8864 ;;      Temps:          1       0       0       0       0
  8865 ;;      Totals:         8       0       0       0       0
  8866 ;;Total ram usage:        8 bytes
  8867 ;; Hardware stack levels used: 1
  8868 ;; This function calls:
  8869 ;;		Nothing
  8870 ;; This function is called by:
  8871 ;;		_sprintf
  8872 ;; This function uses a non-reentrant model
  8873 ;;
  8874                           
  8875  0006                     ___lwdiv:	
  8876                           ;psect for function ___lwdiv
  8877                           
  8878  0006                     l2676:	
  8879                           ;incstack = 0
  8880                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  8881                           
  8882  0006  01F5               	clrf	___lwdiv@quotient
  8883  0007  01F6               	clrf	___lwdiv@quotient+1
  8884  0008                     l2678:
  8885  0008  0870               	movf	___lwdiv@divisor,w
  8886  0009  0471               	iorwf	___lwdiv@divisor+1,w
  8887  000A  1903               	btfsc	3,2
  8888  000B  280D               	goto	u2421
  8889  000C  280E               	goto	u2420
  8890  000D                     u2421:
  8891  000D  2845               	goto	l2698
  8892  000E                     u2420:
  8893  000E                     l2680:
  8894  000E  01F7               	clrf	___lwdiv@counter
  8895  000F  0AF7               	incf	___lwdiv@counter,f
  8896  0010  281C               	goto	l2686
  8897  0011                     l2682:
  8898  0011  3001               	movlw	1
  8899  0012                     u2435:
  8900  0012  1003               	clrc
  8901  0013  0DF0               	rlf	___lwdiv@divisor,f
  8902  0014  0DF1               	rlf	___lwdiv@divisor+1,f
  8903  0015  3EFF               	addlw	-1
  8904  0016  1D03               	skipz
  8905  0017  2812               	goto	u2435
  8906  0018                     l2684:
  8907  0018  3001               	movlw	1
  8908  0019  00F4               	movwf	??___lwdiv
  8909  001A  0874               	movf	??___lwdiv,w
  8910  001B  07F7               	addwf	___lwdiv@counter,f
  8911  001C                     l2686:
  8912  001C  1FF1               	btfss	___lwdiv@divisor+1,7
  8913  001D  281F               	goto	u2441
  8914  001E  2820               	goto	u2440
  8915  001F                     u2441:
  8916  001F  2811               	goto	l2682
  8917  0020                     u2440:
  8918  0020                     l2688:
  8919  0020  3001               	movlw	1
  8920  0021                     u2455:
  8921  0021  1003               	clrc
  8922  0022  0DF5               	rlf	___lwdiv@quotient,f
  8923  0023  0DF6               	rlf	___lwdiv@quotient+1,f
  8924  0024  3EFF               	addlw	-1
  8925  0025  1D03               	skipz
  8926  0026  2821               	goto	u2455
  8927  0027  0871               	movf	___lwdiv@divisor+1,w
  8928  0028  0273               	subwf	___lwdiv@dividend+1,w
  8929  0029  1D03               	skipz
  8930  002A  282D               	goto	u2465
  8931  002B  0870               	movf	___lwdiv@divisor,w
  8932  002C  0272               	subwf	___lwdiv@dividend,w
  8933  002D                     u2465:
  8934  002D  1C03               	skipc
  8935  002E  2830               	goto	u2461
  8936  002F  2831               	goto	u2460
  8937  0030                     u2461:
  8938  0030  2838               	goto	l2694
  8939  0031                     u2460:
  8940  0031                     l2690:
  8941  0031  0870               	movf	___lwdiv@divisor,w
  8942  0032  02F2               	subwf	___lwdiv@dividend,f
  8943  0033  0871               	movf	___lwdiv@divisor+1,w
  8944  0034  1C03               	skipc
  8945  0035  03F3               	decf	___lwdiv@dividend+1,f
  8946  0036  02F3               	subwf	___lwdiv@dividend+1,f
  8947  0037                     l2692:
  8948  0037  1475               	bsf	___lwdiv@quotient,0
  8949  0038                     l2694:
  8950  0038  3001               	movlw	1
  8951  0039                     u2475:
  8952  0039  1003               	clrc
  8953  003A  0CF1               	rrf	___lwdiv@divisor+1,f
  8954  003B  0CF0               	rrf	___lwdiv@divisor,f
  8955  003C  3EFF               	addlw	-1
  8956  003D  1D03               	skipz
  8957  003E  2839               	goto	u2475
  8958  003F                     l2696:
  8959  003F  3001               	movlw	1
  8960  0040  02F7               	subwf	___lwdiv@counter,f
  8961  0041  1D03               	btfss	3,2
  8962  0042  2844               	goto	u2481
  8963  0043  2845               	goto	u2480
  8964  0044                     u2481:
  8965  0044  2820               	goto	l2688
  8966  0045                     u2480:
  8967  0045                     l2698:
  8968  0045  0876               	movf	___lwdiv@quotient+1,w
  8969  0046  00F1               	movwf	?___lwdiv+1
  8970  0047  0875               	movf	___lwdiv@quotient,w
  8971  0048  00F0               	movwf	?___lwdiv
  8972  0049                     l959:
  8973  0049  0008               	return
  8974  004A                     __end_of___lwdiv:
  8975                           
  8976                           	psect	text29
  8977  1574                     __ptext29:	
  8978 ;; *************** function _LCD_Write_String *****************
  8979 ;; Defined at:
  8980 ;;		line 79 in file "LCD.c"
  8981 ;; Parameters:    Size  Location     Type
  8982 ;;  Str             2    7[COMMON] PTR const unsigned char 
  8983 ;;		 -> main@buffer3_613(16), main@buffer3_610(16), STR_23(4), STR_22(4), 
  8984 ;;		 -> STR_21(4), STR_20(4), STR_19(4), STR_18(4), 
  8985 ;;		 -> STR_17(4), STR_16(4), year(10), month(10), 
  8986 ;;		 -> date(10), hours(10), mins(10), secs(10), 
  8987 ;;		 -> STR_6(3), STR_5(3), main@buffer3(16), DisplayTemp@buffer2(16), 
  8988 ;;		 -> DisplayTemp@buffer1(16), 
  8989 ;; Auto vars:     Size  Location     Type
  8990 ;;  i               2   12[COMMON] int 
  8991 ;; Return value:  Size  Location     Type
  8992 ;;                  1    wreg      void 
  8993 ;; Registers used:
  8994 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8995 ;; Tracked objects:
  8996 ;;		On entry : 0/0
  8997 ;;		On exit  : 0/0
  8998 ;;		Unchanged: 0/0
  8999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9000 ;;      Params:         2       0       0       0       0
  9001 ;;      Locals:         2       0       0       0       0
  9002 ;;      Temps:          3       0       0       0       0
  9003 ;;      Totals:         7       0       0       0       0
  9004 ;;Total ram usage:        7 bytes
  9005 ;; Hardware stack levels used: 1
  9006 ;; Hardware stack levels required when called: 6
  9007 ;; This function calls:
  9008 ;;		_LCD_Write_Char
  9009 ;; This function is called by:
  9010 ;;		_LCD_String_xy
  9011 ;;		_DisplayTemp
  9012 ;;		_main
  9013 ;; This function uses a non-reentrant model
  9014 ;;
  9015                           
  9016  1574                     _LCD_Write_String:	
  9017                           ;psect for function _LCD_Write_String
  9018                           
  9019  1574                     l2764:	
  9020                           ;incstack = 0
  9021                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9022                           
  9023                           
  9024                           ;LCD.c: 79: void LCD_Write_String(const char* Str);LCD.c: 80: {;LCD.c: 81:   for(int i=0
      +                          ; Str[i]!='\0'; i++)
  9025  1574  01FC               	clrf	LCD_Write_String@i
  9026  1575  01FD               	clrf	LCD_Write_String@i+1
  9027  1576  2D99               	goto	l2770
  9028  1577                     l2766:
  9029                           
  9030                           ;LCD.c: 82:     LCD_Write_Char(Str[i]);
  9031  1577  087C               	movf	LCD_Write_String@i,w
  9032  1578  0777               	addwf	LCD_Write_String@Str,w
  9033  1579  00FA               	movwf	??_LCD_Write_String+1
  9034  157A  0878               	movf	LCD_Write_String@Str+1,w
  9035  157B  00F9               	movwf	??_LCD_Write_String
  9036  157C  1803               	skipnc
  9037  157D  0AF9               	incf	??_LCD_Write_String,f
  9038  157E  1FFC               	btfss	LCD_Write_String@i,7
  9039  157F  2D81               	goto	u2620
  9040  1580  03F9               	decf	??_LCD_Write_String,f
  9041  1581                     u2620:
  9042  1581  0879               	movf	??_LCD_Write_String,w
  9043  1582  00FB               	movwf	??_LCD_Write_String+2
  9044  1583  087B               	movf	??_LCD_Write_String+2,w
  9045  1584  1283               	bcf	3,5	;RP0=0, select bank0
  9046  1585  1303               	bcf	3,6	;RP1=0, select bank0
  9047  1586  00FF               	movwf	btemp+1
  9048  1587  087A               	movf	??_LCD_Write_String+1,w
  9049  1588  0084               	movwf	4
  9050  1589  120A  158A  2000  160A  118A  	fcall	stringtab
  9051  158E  160A  118A  2377  160A  118A  	fcall	_LCD_Write_Char
  9052  1593                     l2768:
  9053  1593  3001               	movlw	1
  9054  1594  07FC               	addwf	LCD_Write_String@i,f
  9055  1595  1803               	skipnc
  9056  1596  0AFD               	incf	LCD_Write_String@i+1,f
  9057  1597  3000               	movlw	0
  9058  1598  07FD               	addwf	LCD_Write_String@i+1,f
  9059  1599                     l2770:
  9060  1599  087C               	movf	LCD_Write_String@i,w
  9061  159A  0777               	addwf	LCD_Write_String@Str,w
  9062  159B  00FA               	movwf	??_LCD_Write_String+1
  9063  159C  0878               	movf	LCD_Write_String@Str+1,w
  9064  159D  00F9               	movwf	??_LCD_Write_String
  9065  159E  1803               	skipnc
  9066  159F  0AF9               	incf	??_LCD_Write_String,f
  9067  15A0  1FFC               	btfss	LCD_Write_String@i,7
  9068  15A1  2DA3               	goto	u2630
  9069  15A2  03F9               	decf	??_LCD_Write_String,f
  9070  15A3                     u2630:
  9071  15A3  0879               	movf	??_LCD_Write_String,w
  9072  15A4  00FB               	movwf	??_LCD_Write_String+2
  9073  15A5  087B               	movf	??_LCD_Write_String+2,w
  9074  15A6  1283               	bcf	3,5	;RP0=0, select bank0
  9075  15A7  1303               	bcf	3,6	;RP1=0, select bank0
  9076  15A8  00FF               	movwf	btemp+1
  9077  15A9  087A               	movf	??_LCD_Write_String+1,w
  9078  15AA  0084               	movwf	4
  9079  15AB  120A  158A  2000  160A  118A  	fcall	stringtab
  9080  15B0  3A00               	xorlw	0
  9081  15B1  1D03               	skipz
  9082  15B2  2DB4               	goto	u2641
  9083  15B3  2DB5               	goto	u2640
  9084  15B4                     u2641:
  9085  15B4  2D77               	goto	l2766
  9086  15B5                     u2640:
  9087  15B5                     l154:
  9088  15B5  0008               	return
  9089  15B6                     __end_of_LCD_Write_String:
  9090                           
  9091                           	psect	text30
  9092  1377                     __ptext30:	
  9093 ;; *************** function _LCD_Write_Char *****************
  9094 ;; Defined at:
  9095 ;;		line 72 in file "LCD.c"
  9096 ;; Parameters:    Size  Location     Type
  9097 ;;  Data            1    wreg     const unsigned char 
  9098 ;; Auto vars:     Size  Location     Type
  9099 ;;  Data            1    6[COMMON] const unsigned char 
  9100 ;; Return value:  Size  Location     Type
  9101 ;;                  1    wreg      void 
  9102 ;; Registers used:
  9103 ;;		wreg, status,2, status,0, pclath, cstack
  9104 ;; Tracked objects:
  9105 ;;		On entry : 0/0
  9106 ;;		On exit  : 0/0
  9107 ;;		Unchanged: 0/0
  9108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9109 ;;      Params:         0       0       0       0       0
  9110 ;;      Locals:         1       0       0       0       0
  9111 ;;      Temps:          1       0       0       0       0
  9112 ;;      Totals:         2       0       0       0       0
  9113 ;;Total ram usage:        2 bytes
  9114 ;; Hardware stack levels used: 1
  9115 ;; Hardware stack levels required when called: 5
  9116 ;; This function calls:
  9117 ;;		_LCD_Write_4Bit
  9118 ;; This function is called by:
  9119 ;;		_LCD_Write_String
  9120 ;; This function uses a non-reentrant model
  9121 ;;
  9122                           
  9123  1377                     _LCD_Write_Char:	
  9124                           ;psect for function _LCD_Write_Char
  9125                           
  9126                           
  9127                           ;incstack = 0
  9128                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  9129                           ;LCD_Write_Char@Data stored from wreg
  9130  1377  00F6               	movwf	LCD_Write_Char@Data
  9131  1378                     l2628:
  9132                           
  9133                           ;LCD.c: 72: void LCD_Write_Char(const char Data);LCD.c: 73: {;LCD.c: 74:   RS = 1;
  9134  1378  1283               	bcf	3,5	;RP0=0, select bank0
  9135  1379  1303               	bcf	3,6	;RP1=0, select bank0
  9136  137A  01EA               	clrf	_RS
  9137  137B  0AEA               	incf	_RS,f
  9138  137C                     l2630:
  9139                           
  9140                           ;LCD.c: 75:   LCD_Write_4Bit(Data & 0xF0);
  9141  137C  0876               	movf	LCD_Write_Char@Data,w
  9142  137D  39F0               	andlw	240
  9143  137E  160A  118A  2341  160A  118A  	fcall	_LCD_Write_4Bit
  9144                           
  9145                           ;LCD.c: 76:   LCD_Write_4Bit((Data << 4) & 0xF0);
  9146  1383  0876               	movf	LCD_Write_Char@Data,w
  9147  1384  00F5               	movwf	??_LCD_Write_Char
  9148  1385  3003               	movlw	3
  9149  1386                     u2275:
  9150  1386  1003               	clrc
  9151  1387  0DF5               	rlf	??_LCD_Write_Char,f
  9152  1388  3EFF               	addlw	-1
  9153  1389  1D03               	skipz
  9154  138A  2B86               	goto	u2275
  9155  138B  1003               	clrc
  9156  138C  0D75               	rlf	??_LCD_Write_Char,w
  9157  138D  39F0               	andlw	240
  9158  138E  160A  118A  2341  160A  118A  	fcall	_LCD_Write_4Bit
  9159  1393                     l148:
  9160  1393  0008               	return
  9161  1394                     __end_of_LCD_Write_Char:
  9162                           
  9163                           	psect	text31
  9164  1488                     __ptext31:	
  9165 ;; *************** function _LCD_Set_Cursor *****************
  9166 ;; Defined at:
  9167 ;;		line 85 in file "LCD.c"
  9168 ;; Parameters:    Size  Location     Type
  9169 ;;  ROW             1    wreg     unsigned char 
  9170 ;;  COL             1    7[COMMON] unsigned char 
  9171 ;; Auto vars:     Size  Location     Type
  9172 ;;  ROW             1   10[COMMON] unsigned char 
  9173 ;; Return value:  Size  Location     Type
  9174 ;;                  1    wreg      void 
  9175 ;; Registers used:
  9176 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9177 ;; Tracked objects:
  9178 ;;		On entry : 0/0
  9179 ;;		On exit  : 0/0
  9180 ;;		Unchanged: 0/0
  9181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9182 ;;      Params:         1       0       0       0       0
  9183 ;;      Locals:         1       0       0       0       0
  9184 ;;      Temps:          2       0       0       0       0
  9185 ;;      Totals:         4       0       0       0       0
  9186 ;;Total ram usage:        4 bytes
  9187 ;; Hardware stack levels used: 1
  9188 ;; Hardware stack levels required when called: 6
  9189 ;; This function calls:
  9190 ;;		_LCD_CMD
  9191 ;; This function is called by:
  9192 ;;		_DisplayTemp
  9193 ;; This function uses a non-reentrant model
  9194 ;;
  9195                           
  9196  1488                     _LCD_Set_Cursor:	
  9197                           ;psect for function _LCD_Set_Cursor
  9198                           
  9199                           
  9200                           ;incstack = 0
  9201                           ; Regs used in _LCD_Set_Cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9202                           ;LCD_Set_Cursor@ROW stored from wreg
  9203  1488  00FA               	movwf	LCD_Set_Cursor@ROW
  9204  1489                     l2772:
  9205                           
  9206                           ;LCD.c: 85: void LCD_Set_Cursor(unsigned char ROW, unsigned char COL);LCD.c: 86: {;LCD.c
      +                          : 87:   switch(ROW)
  9207  1489  2CAA               	goto	l2782
  9208  148A                     l2774:
  9209                           
  9210                           ;LCD.c: 90:       LCD_CMD(0xC0 + COL-1);
  9211  148A  0877               	movf	LCD_Set_Cursor@COL,w
  9212  148B  3EBF               	addlw	191
  9213  148C  160A  118A  235B  160A  118A  	fcall	_LCD_CMD
  9214                           
  9215                           ;LCD.c: 91:       break;
  9216  1491  2CBD               	goto	l163
  9217  1492                     l2776:
  9218                           
  9219                           ;LCD.c: 93:       LCD_CMD(0x94 + COL-1);
  9220  1492  0877               	movf	LCD_Set_Cursor@COL,w
  9221  1493  3E93               	addlw	147
  9222  1494  160A  118A  235B  160A  118A  	fcall	_LCD_CMD
  9223                           
  9224                           ;LCD.c: 94:       break;
  9225  1499  2CBD               	goto	l163
  9226  149A                     l2778:
  9227                           
  9228                           ;LCD.c: 96:       LCD_CMD(0xD4 + COL-1);
  9229  149A  0877               	movf	LCD_Set_Cursor@COL,w
  9230  149B  3ED3               	addlw	211
  9231  149C  160A  118A  235B  160A  118A  	fcall	_LCD_CMD
  9232                           
  9233                           ;LCD.c: 97:       break;
  9234  14A1  2CBD               	goto	l163
  9235  14A2                     l2780:
  9236                           
  9237                           ;LCD.c: 100:       LCD_CMD(0x80 + COL-1);
  9238  14A2  0877               	movf	LCD_Set_Cursor@COL,w
  9239  14A3  3E7F               	addlw	127
  9240  14A4  160A  118A  235B  160A  118A  	fcall	_LCD_CMD
  9241                           
  9242                           ;LCD.c: 101:   }
  9243  14A9  2CBD               	goto	l163
  9244  14AA                     l2782:
  9245  14AA  087A               	movf	LCD_Set_Cursor@ROW,w
  9246  14AB  00F8               	movwf	??_LCD_Set_Cursor
  9247  14AC  01F9               	clrf	??_LCD_Set_Cursor+1
  9248                           
  9249                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9250                           ; Switch size 1, requested type "simple"
  9251                           ; Number of cases is 1, Range of values is 0 to 0
  9252                           ; switch strategies available:
  9253                           ; Name         Instructions Cycles
  9254                           ; simple_byte            4     3 (average)
  9255                           ; direct_byte           11     8 (fixed)
  9256                           ; jumptable            260     6 (fixed)
  9257                           ;	Chosen strategy is simple_byte
  9258  14AD  0879               	movf	??_LCD_Set_Cursor+1,w
  9259  14AE  3A00               	xorlw	0	; case 0
  9260  14AF  1903               	skipnz
  9261  14B0  2CB2               	goto	l3988
  9262  14B1  2CA2               	goto	l2780
  9263  14B2                     l3988:
  9264                           
  9265                           ; Switch size 1, requested type "simple"
  9266                           ; Number of cases is 3, Range of values is 2 to 4
  9267                           ; switch strategies available:
  9268                           ; Name         Instructions Cycles
  9269                           ; simple_byte           10     6 (average)
  9270                           ; direct_byte           20    11 (fixed)
  9271                           ; jumptable            263     9 (fixed)
  9272                           ;	Chosen strategy is simple_byte
  9273  14B2  0878               	movf	??_LCD_Set_Cursor,w
  9274  14B3  3A02               	xorlw	2	; case 2
  9275  14B4  1903               	skipnz
  9276  14B5  2C8A               	goto	l2774
  9277  14B6  3A01               	xorlw	1	; case 3
  9278  14B7  1903               	skipnz
  9279  14B8  2C92               	goto	l2776
  9280  14B9  3A07               	xorlw	7	; case 4
  9281  14BA  1903               	skipnz
  9282  14BB  2C9A               	goto	l2778
  9283  14BC  2CA2               	goto	l2780
  9284  14BD                     l163:
  9285  14BD  0008               	return
  9286  14BE                     __end_of_LCD_Set_Cursor:
  9287                           
  9288                           	psect	text32
  9289  135B                     __ptext32:	
  9290 ;; *************** function _LCD_CMD *****************
  9291 ;; Defined at:
  9292 ;;		line 65 in file "LCD.c"
  9293 ;; Parameters:    Size  Location     Type
  9294 ;;  CMD             1    wreg     unsigned char 
  9295 ;; Auto vars:     Size  Location     Type
  9296 ;;  CMD             1    6[COMMON] unsigned char 
  9297 ;; Return value:  Size  Location     Type
  9298 ;;                  1    wreg      void 
  9299 ;; Registers used:
  9300 ;;		wreg, status,2, status,0, pclath, cstack
  9301 ;; Tracked objects:
  9302 ;;		On entry : 0/0
  9303 ;;		On exit  : 0/0
  9304 ;;		Unchanged: 0/0
  9305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9306 ;;      Params:         0       0       0       0       0
  9307 ;;      Locals:         1       0       0       0       0
  9308 ;;      Temps:          1       0       0       0       0
  9309 ;;      Totals:         2       0       0       0       0
  9310 ;;Total ram usage:        2 bytes
  9311 ;; Hardware stack levels used: 1
  9312 ;; Hardware stack levels required when called: 5
  9313 ;; This function calls:
  9314 ;;		_LCD_Write_4Bit
  9315 ;; This function is called by:
  9316 ;;		_LCD_String_xy
  9317 ;;		_LCD_Init
  9318 ;;		_LCD_Set_Cursor
  9319 ;;		_LCD_Clear
  9320 ;;		_LCD_SL
  9321 ;;		_LCD_SR
  9322 ;; This function uses a non-reentrant model
  9323 ;;
  9324                           
  9325  135B                     _LCD_CMD:	
  9326                           ;psect for function _LCD_CMD
  9327                           
  9328                           
  9329                           ;incstack = 0
  9330                           ; Regs used in _LCD_CMD: [wreg+status,2+status,0+pclath+cstack]
  9331                           ;LCD_CMD@CMD stored from wreg
  9332  135B  00F6               	movwf	LCD_CMD@CMD
  9333  135C                     l2622:
  9334                           
  9335                           ;LCD.c: 65: void LCD_CMD(unsigned char CMD);LCD.c: 66: {;LCD.c: 67:   RS = 0;
  9336  135C  1283               	bcf	3,5	;RP0=0, select bank0
  9337  135D  1303               	bcf	3,6	;RP1=0, select bank0
  9338  135E  01EA               	clrf	_RS
  9339  135F                     l2624:
  9340                           
  9341                           ;LCD.c: 68:   LCD_Write_4Bit(CMD & 0xF0);
  9342  135F  0876               	movf	LCD_CMD@CMD,w
  9343  1360  39F0               	andlw	240
  9344  1361  160A  118A  2341  160A  118A  	fcall	_LCD_Write_4Bit
  9345  1366                     l2626:
  9346                           
  9347                           ;LCD.c: 69:   LCD_Write_4Bit((CMD << 4) & 0xF0);
  9348  1366  0876               	movf	LCD_CMD@CMD,w
  9349  1367  00F5               	movwf	??_LCD_CMD
  9350  1368  3003               	movlw	3
  9351  1369                     u2265:
  9352  1369  1003               	clrc
  9353  136A  0DF5               	rlf	??_LCD_CMD,f
  9354  136B  3EFF               	addlw	-1
  9355  136C  1D03               	skipz
  9356  136D  2B69               	goto	u2265
  9357  136E  1003               	clrc
  9358  136F  0D75               	rlf	??_LCD_CMD,w
  9359  1370  39F0               	andlw	240
  9360  1371  160A  118A  2341  160A  118A  	fcall	_LCD_Write_4Bit
  9361  1376                     l145:
  9362  1376  0008               	return
  9363  1377                     __end_of_LCD_CMD:
  9364                           
  9365                           	psect	text33
  9366  1341                     __ptext33:	
  9367 ;; *************** function _LCD_Write_4Bit *****************
  9368 ;; Defined at:
  9369 ;;		line 56 in file "LCD.c"
  9370 ;; Parameters:    Size  Location     Type
  9371 ;;  Nibble          1    wreg     unsigned char 
  9372 ;; Auto vars:     Size  Location     Type
  9373 ;;  Nibble          1    4[COMMON] unsigned char 
  9374 ;; Return value:  Size  Location     Type
  9375 ;;                  1    wreg      void 
  9376 ;; Registers used:
  9377 ;;		wreg, status,2, status,0, pclath, cstack
  9378 ;; Tracked objects:
  9379 ;;		On entry : 0/0
  9380 ;;		On exit  : 0/0
  9381 ;;		Unchanged: 0/0
  9382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9383 ;;      Params:         0       0       0       0       0
  9384 ;;      Locals:         1       0       0       0       0
  9385 ;;      Temps:          1       0       0       0       0
  9386 ;;      Totals:         2       0       0       0       0
  9387 ;;Total ram usage:        2 bytes
  9388 ;; Hardware stack levels used: 1
  9389 ;; Hardware stack levels required when called: 4
  9390 ;; This function calls:
  9391 ;;		_IO_Expander_Write
  9392 ;; This function is called by:
  9393 ;;		_LCD_CMD
  9394 ;;		_LCD_Write_Char
  9395 ;; This function uses a non-reentrant model
  9396 ;;
  9397                           
  9398  1341                     _LCD_Write_4Bit:	
  9399                           ;psect for function _LCD_Write_4Bit
  9400                           
  9401                           
  9402                           ;incstack = 0
  9403                           ; Regs used in _LCD_Write_4Bit: [wreg+status,2+status,0+pclath+cstack]
  9404                           ;LCD_Write_4Bit@Nibble stored from wreg
  9405  1341  00F4               	movwf	LCD_Write_4Bit@Nibble
  9406  1342                     l2612:
  9407                           
  9408                           ;LCD.c: 56: void LCD_Write_4Bit(unsigned char Nibble);LCD.c: 57: {;LCD.c: 59:   Nibble |
      +                          = RS;
  9409  1342  1283               	bcf	3,5	;RP0=0, select bank0
  9410  1343  1303               	bcf	3,6	;RP1=0, select bank0
  9411  1344  086A               	movf	_RS,w
  9412  1345  00F3               	movwf	??_LCD_Write_4Bit
  9413  1346  0873               	movf	??_LCD_Write_4Bit,w
  9414  1347  04F4               	iorwf	LCD_Write_4Bit@Nibble,f
  9415  1348                     l2614:
  9416                           
  9417                           ;LCD.c: 60:   IO_Expander_Write(Nibble | 0x04);
  9418  1348  0874               	movf	LCD_Write_4Bit@Nibble,w
  9419  1349  3804               	iorlw	4
  9420  134A  160A  118A  22E2  160A  118A  	fcall	_IO_Expander_Write
  9421  134F                     l2616:
  9422                           
  9423                           ;LCD.c: 61:   IO_Expander_Write(Nibble & 0xFB);
  9424  134F  0874               	movf	LCD_Write_4Bit@Nibble,w
  9425  1350  39FB               	andlw	251
  9426  1351  160A  118A  22E2  160A  118A  	fcall	_IO_Expander_Write
  9427                           
  9428                           ;LCD.c: 62:   _delay((unsigned long)((50)*(8000000/4000000.0)));
  9429  1356  3021               	movlw	33
  9430  1357  00F3               	movwf	??_LCD_Write_4Bit
  9431  1358                     u4577:
  9432  1358  0BF3               	decfsz	??_LCD_Write_4Bit,f
  9433  1359  2B58               	goto	u4577
  9434  135A                     l142:
  9435  135A  0008               	return
  9436  135B                     __end_of_LCD_Write_4Bit:
  9437                           
  9438                           	psect	text34
  9439  12E2                     __ptext34:	
  9440 ;; *************** function _IO_Expander_Write *****************
  9441 ;; Defined at:
  9442 ;;		line 49 in file "LCD.c"
  9443 ;; Parameters:    Size  Location     Type
  9444 ;;  Data            1    wreg     unsigned char 
  9445 ;; Auto vars:     Size  Location     Type
  9446 ;;  Data            1    2[COMMON] unsigned char 
  9447 ;; Return value:  Size  Location     Type
  9448 ;;                  1    wreg      void 
  9449 ;; Registers used:
  9450 ;;		wreg, status,2, status,0, pclath, cstack
  9451 ;; Tracked objects:
  9452 ;;		On entry : 0/0
  9453 ;;		On exit  : 0/0
  9454 ;;		Unchanged: 0/0
  9455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9456 ;;      Params:         0       0       0       0       0
  9457 ;;      Locals:         1       0       0       0       0
  9458 ;;      Temps:          0       0       0       0       0
  9459 ;;      Totals:         1       0       0       0       0
  9460 ;;Total ram usage:        1 bytes
  9461 ;; Hardware stack levels used: 1
  9462 ;; Hardware stack levels required when called: 3
  9463 ;; This function calls:
  9464 ;;		_I2C_Start
  9465 ;;		_I2C_Stop
  9466 ;;		_I2C_Write
  9467 ;; This function is called by:
  9468 ;;		_LCD_Init
  9469 ;;		_LCD_Write_4Bit
  9470 ;;		_Backlight
  9471 ;;		_noBacklight
  9472 ;; This function uses a non-reentrant model
  9473 ;;
  9474                           
  9475  12E2                     _IO_Expander_Write:	
  9476                           ;psect for function _IO_Expander_Write
  9477                           
  9478                           
  9479                           ;incstack = 0
  9480                           ; Regs used in _IO_Expander_Write: [wreg+status,2+status,0+pclath+cstack]
  9481                           ;IO_Expander_Write@Data stored from wreg
  9482  12E2  00F2               	movwf	IO_Expander_Write@Data
  9483  12E3                     l2610:
  9484                           
  9485                           ;LCD.c: 49: void IO_Expander_Write(unsigned char Data);LCD.c: 50: {;LCD.c: 51:   I2C_Sta
      +                          rt(0x4E);
  9486  12E3  304E               	movlw	78
  9487  12E4  160A  118A  230F  160A  118A  	fcall	_I2C_Start
  9488                           
  9489                           ;LCD.c: 52:   I2C_Write(Data | BackLight_State);
  9490  12E9  0872               	movf	IO_Expander_Write@Data,w
  9491  12EA  1283               	bcf	3,5	;RP0=0, select bank0
  9492  12EB  1303               	bcf	3,6	;RP1=0, select bank0
  9493  12EC  046F               	iorwf	_BackLight_State,w
  9494  12ED  160A  118A  22BA  160A  118A  	fcall	_I2C_Write
  9495                           
  9496                           ;LCD.c: 53:   I2C_Stop();
  9497  12F2  160A  118A  226E  160A  118A  	fcall	_I2C_Stop
  9498  12F7                     l139:
  9499  12F7  0008               	return
  9500  12F8                     __end_of_IO_Expander_Write:
  9501                           
  9502                           	psect	text35
  9503  126E                     __ptext35:	
  9504 ;; *************** function _I2C_Stop *****************
  9505 ;; Defined at:
  9506 ;;		line 91 in file "I2C_Master.c"
  9507 ;; Parameters:    Size  Location     Type
  9508 ;;		None
  9509 ;; Auto vars:     Size  Location     Type
  9510 ;;		None
  9511 ;; Return value:  Size  Location     Type
  9512 ;;                  1    wreg      unsigned char 
  9513 ;; Registers used:
  9514 ;;		wreg
  9515 ;; Tracked objects:
  9516 ;;		On entry : 0/0
  9517 ;;		On exit  : 0/0
  9518 ;;		Unchanged: 0/0
  9519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9520 ;;      Params:         0       0       0       0       0
  9521 ;;      Locals:         0       0       0       0       0
  9522 ;;      Temps:          0       0       0       0       0
  9523 ;;      Totals:         0       0       0       0       0
  9524 ;;Total ram usage:        0 bytes
  9525 ;; Hardware stack levels used: 1
  9526 ;; This function calls:
  9527 ;;		Nothing
  9528 ;; This function is called by:
  9529 ;;		_IO_Expander_Write
  9530 ;;		_main
  9531 ;;		_RTC_Read_Calendar
  9532 ;;		_RTC_Clock_Write
  9533 ;;		_RTC_Calendar_Write
  9534 ;;		_I2C_Start_Wait
  9535 ;; This function uses a non-reentrant model
  9536 ;;
  9537                           
  9538  126E                     _I2C_Stop:	
  9539                           ;psect for function _I2C_Stop
  9540                           
  9541  126E                     l2600:	
  9542                           ;incstack = 0
  9543                           ; Regs used in _I2C_Stop: [wreg]
  9544                           
  9545                           
  9546                           ;I2C_Master.c: 93:     PEN = 1;
  9547  126E  1683               	bsf	3,5	;RP0=1, select bank1
  9548  126F  1303               	bcf	3,6	;RP1=0, select bank1
  9549  1270  1511               	bsf	17,2	;volatile
  9550  1271                     l89:	
  9551                           ;I2C_Master.c: 94:     while(PEN);
  9552                           
  9553  1271  1911               	btfsc	17,2	;volatile
  9554  1272  2A74               	goto	u2211
  9555  1273  2A75               	goto	u2210
  9556  1274                     u2211:
  9557  1274  2A71               	goto	l89
  9558  1275                     u2210:
  9559  1275                     l91:
  9560                           
  9561                           ;I2C_Master.c: 95:     if(!SSPSTATbits.P)
  9562  1275  0814               	movf	20,w	;volatile
  9563  1276                     l93:
  9564  1276  0008               	return
  9565  1277                     __end_of_I2C_Stop:
  9566                           
  9567                           	psect	text36
  9568  130F                     __ptext36:	
  9569 ;; *************** function _I2C_Start *****************
  9570 ;; Defined at:
  9571 ;;		line 66 in file "I2C_Master.c"
  9572 ;; Parameters:    Size  Location     Type
  9573 ;;  slave_write_    1    wreg     unsigned char 
  9574 ;; Auto vars:     Size  Location     Type
  9575 ;;  slave_write_    1    1[COMMON] unsigned char 
  9576 ;; Return value:  Size  Location     Type
  9577 ;;                  1    wreg      unsigned char 
  9578 ;; Registers used:
  9579 ;;		wreg, status,2, status,0, pclath, cstack
  9580 ;; Tracked objects:
  9581 ;;		On entry : 0/0
  9582 ;;		On exit  : 0/0
  9583 ;;		Unchanged: 0/0
  9584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9585 ;;      Params:         0       0       0       0       0
  9586 ;;      Locals:         1       0       0       0       0
  9587 ;;      Temps:          0       0       0       0       0
  9588 ;;      Totals:         1       0       0       0       0
  9589 ;;Total ram usage:        1 bytes
  9590 ;; Hardware stack levels used: 1
  9591 ;; Hardware stack levels required when called: 2
  9592 ;; This function calls:
  9593 ;;		_I2C_Write
  9594 ;; This function is called by:
  9595 ;;		_IO_Expander_Write
  9596 ;;		_RTC_Read_Clock
  9597 ;;		_RTC_Read_Calendar
  9598 ;;		_RTC_Clock_Write
  9599 ;;		_RTC_Calendar_Write
  9600 ;; This function uses a non-reentrant model
  9601 ;;
  9602                           
  9603  130F                     _I2C_Start:	
  9604                           ;psect for function _I2C_Start
  9605                           
  9606                           
  9607                           ;incstack = 0
  9608                           ; Regs used in _I2C_Start: [wreg+status,2+status,0+pclath+cstack]
  9609                           ;I2C_Start@slave_write_address stored from wreg
  9610  130F  00F1               	movwf	I2C_Start@slave_write_address
  9611  1310                     l2602:
  9612                           
  9613                           ;I2C_Master.c: 66: char I2C_Start(char slave_write_address);I2C_Master.c: 67: {;I2C_Mast
      +                          er.c: 68:     SSPCON2bits.SEN=1;
  9614  1310  1683               	bsf	3,5	;RP0=1, select bank1
  9615  1311  1303               	bcf	3,6	;RP1=0, select bank1
  9616  1312  1411               	bsf	17,0	;volatile
  9617  1313                     l73:	
  9618                           ;I2C_Master.c: 69:     while(SSPCON2bits.SEN);
  9619                           
  9620  1313  1811               	btfsc	17,0	;volatile
  9621  1314  2B16               	goto	u2221
  9622  1315  2B17               	goto	u2220
  9623  1316                     u2221:
  9624  1316  2B13               	goto	l73
  9625  1317                     u2220:
  9626  1317                     l75:
  9627                           
  9628                           ;I2C_Master.c: 70:  SSPIF=0;
  9629  1317  1283               	bcf	3,5	;RP0=0, select bank0
  9630  1318  1303               	bcf	3,6	;RP1=0, select bank0
  9631  1319  118C               	bcf	12,3	;volatile
  9632                           
  9633                           ;I2C_Master.c: 71:     if(!SSPSTATbits.S)
  9634  131A  1683               	bsf	3,5	;RP0=1, select bank1
  9635  131B  1303               	bcf	3,6	;RP1=0, select bank1
  9636  131C  1994               	btfsc	20,3	;volatile
  9637  131D  2B1F               	goto	u2231
  9638  131E  2B20               	goto	u2230
  9639  131F                     u2231:
  9640  131F  2B21               	goto	l2606
  9641  1320                     u2230:
  9642  1320  2B27               	goto	l77
  9643  1321                     l2606:
  9644                           
  9645                           ;I2C_Master.c: 73:     return (I2C_Write(slave_write_address));;	Return value of _I2C_St
      +                          art is never used
  9646  1321  0871               	movf	I2C_Start@slave_write_address,w
  9647  1322  160A  118A  22BA  160A  118A  	fcall	_I2C_Write
  9648  1327                     l77:
  9649  1327  0008               	return
  9650  1328                     __end_of_I2C_Start:
  9651                           
  9652                           	psect	text37
  9653  12BA                     __ptext37:	
  9654 ;; *************** function _I2C_Write *****************
  9655 ;; Defined at:
  9656 ;;		line 100 in file "I2C_Master.c"
  9657 ;; Parameters:    Size  Location     Type
  9658 ;;  data            1    wreg     unsigned char 
  9659 ;; Auto vars:     Size  Location     Type
  9660 ;;  data            1    0[COMMON] unsigned char 
  9661 ;; Return value:  Size  Location     Type
  9662 ;;                  1    wreg      unsigned char 
  9663 ;; Registers used:
  9664 ;;		wreg, status,2, status,0, pclath, cstack
  9665 ;; Tracked objects:
  9666 ;;		On entry : 0/0
  9667 ;;		On exit  : 0/0
  9668 ;;		Unchanged: 0/0
  9669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9670 ;;      Params:         0       0       0       0       0
  9671 ;;      Locals:         1       0       0       0       0
  9672 ;;      Temps:          0       0       0       0       0
  9673 ;;      Totals:         1       0       0       0       0
  9674 ;;Total ram usage:        1 bytes
  9675 ;; Hardware stack levels used: 1
  9676 ;; Hardware stack levels required when called: 1
  9677 ;; This function calls:
  9678 ;;		_I2C_Ready
  9679 ;; This function is called by:
  9680 ;;		_I2C_Start
  9681 ;;		_I2C_Repeated_Start
  9682 ;;		_IO_Expander_Write
  9683 ;;		_RTC_Read_Clock
  9684 ;;		_RTC_Read_Calendar
  9685 ;;		_RTC_Clock_Write
  9686 ;;		_RTC_Calendar_Write
  9687 ;;		_I2C_Start_Wait
  9688 ;; This function uses a non-reentrant model
  9689 ;;
  9690                           
  9691  12BA                     _I2C_Write:	
  9692                           ;psect for function _I2C_Write
  9693                           
  9694                           
  9695                           ;incstack = 0
  9696                           ; Regs used in _I2C_Write: [wreg+status,2+status,0+pclath+cstack]
  9697                           ;I2C_Write@data stored from wreg
  9698  12BA  00F0               	movwf	I2C_Write@data
  9699  12BB                     l2584:
  9700                           
  9701                           ;I2C_Master.c: 100: char I2C_Write(unsigned char data);I2C_Master.c: 101: {;I2C_Master.c
      +                          : 102:       SSPBUF = data;
  9702  12BB  0870               	movf	I2C_Write@data,w
  9703  12BC  1283               	bcf	3,5	;RP0=0, select bank0
  9704  12BD  1303               	bcf	3,6	;RP1=0, select bank0
  9705  12BE  0093               	movwf	19	;volatile
  9706  12BF                     l2586:
  9707                           
  9708                           ;I2C_Master.c: 103:       I2C_Ready();
  9709  12BF  160A  118A  225E  160A  118A  	fcall	_I2C_Ready
  9710  12C4                     l2588:
  9711                           
  9712                           ;I2C_Master.c: 104:       if (ACKSTAT)
  9713  12C4  1683               	bsf	3,5	;RP0=1, select bank1
  9714  12C5  1303               	bcf	3,6	;RP1=0, select bank1
  9715  12C6  1F11               	btfss	17,6	;volatile
  9716  12C7  2AC9               	goto	u2201
  9717  12C8  2ACA               	goto	u2200
  9718  12C9                     u2201:
  9719  12C9  2ACC               	goto	l2596
  9720  12CA                     u2200:
  9721  12CA                     l2590:
  9722                           
  9723                           ;I2C_Master.c: 105:         return 1;
  9724  12CA  3001               	movlw	1
  9725  12CB  2ACD               	goto	l97
  9726  12CC                     l2596:
  9727                           
  9728                           ;I2C_Master.c: 107:         return 2;
  9729  12CC  3002               	movlw	2
  9730  12CD                     l97:
  9731  12CD  0008               	return
  9732  12CE                     __end_of_I2C_Write:
  9733                           
  9734                           	psect	text38
  9735  125E                     __ptext38:	
  9736 ;; *************** function _I2C_Ready *****************
  9737 ;; Defined at:
  9738 ;;		line 41 in file "I2C_Master.c"
  9739 ;; Parameters:    Size  Location     Type
  9740 ;;		None
  9741 ;; Auto vars:     Size  Location     Type
  9742 ;;		None
  9743 ;; Return value:  Size  Location     Type
  9744 ;;                  1    wreg      void 
  9745 ;; Registers used:
  9746 ;;		None
  9747 ;; Tracked objects:
  9748 ;;		On entry : 0/0
  9749 ;;		On exit  : 0/0
  9750 ;;		Unchanged: 0/0
  9751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9752 ;;      Params:         0       0       0       0       0
  9753 ;;      Locals:         0       0       0       0       0
  9754 ;;      Temps:          0       0       0       0       0
  9755 ;;      Totals:         0       0       0       0       0
  9756 ;;Total ram usage:        0 bytes
  9757 ;; Hardware stack levels used: 1
  9758 ;; This function calls:
  9759 ;;		Nothing
  9760 ;; This function is called by:
  9761 ;;		_I2C_Read
  9762 ;;		_I2C_Write
  9763 ;; This function uses a non-reentrant model
  9764 ;;
  9765                           
  9766  125E                     _I2C_Ready:	
  9767                           ;psect for function _I2C_Ready
  9768                           
  9769  125E                     l2582:	
  9770                           ;incstack = 0
  9771                           ; Regs used in _I2C_Ready: []
  9772                           
  9773  125E                     l56:	
  9774                           ;I2C_Master.c: 43:     while(!SSPIF);
  9775                           
  9776  125E  1283               	bcf	3,5	;RP0=0, select bank0
  9777  125F  1303               	bcf	3,6	;RP1=0, select bank0
  9778  1260  1D8C               	btfss	12,3	;volatile
  9779  1261  2A63               	goto	u2191
  9780  1262  2A64               	goto	u2190
  9781  1263                     u2191:
  9782  1263  2A5E               	goto	l56
  9783  1264                     u2190:
  9784  1264                     l58:
  9785                           
  9786                           ;I2C_Master.c: 44:     SSPIF=0;
  9787  1264  118C               	bcf	12,3	;volatile
  9788  1265                     l59:
  9789  1265  0008               	return
  9790  1266                     __end_of_I2C_Ready:
  9791                           
  9792                           	psect	text39
  9793  08AD                     __ptext39:	
  9794 ;; *************** function _ChangeBrightness *****************
  9795 ;; Defined at:
  9796 ;;		line 31 in file "RotaryEncoder.c"
  9797 ;; Parameters:    Size  Location     Type
  9798 ;;		None
  9799 ;; Auto vars:     Size  Location     Type
  9800 ;;		None
  9801 ;; Return value:  Size  Location     Type
  9802 ;;                  1    wreg      void 
  9803 ;; Registers used:
  9804 ;;		wreg, status,2, status,0
  9805 ;; Tracked objects:
  9806 ;;		On entry : 0/0
  9807 ;;		On exit  : 0/0
  9808 ;;		Unchanged: 0/0
  9809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9810 ;;      Params:         0       0       0       0       0
  9811 ;;      Locals:         0       0       0       0       0
  9812 ;;      Temps:          2       0       0       0       0
  9813 ;;      Totals:         2       0       0       0       0
  9814 ;;Total ram usage:        2 bytes
  9815 ;; Hardware stack levels used: 1
  9816 ;; This function calls:
  9817 ;;		Nothing
  9818 ;; This function is called by:
  9819 ;;		_main
  9820 ;; This function uses a non-reentrant model
  9821 ;;
  9822                           
  9823  08AD                     _ChangeBrightness:	
  9824                           ;psect for function _ChangeBrightness
  9825                           
  9826  08AD                     l3514:	
  9827                           ;incstack = 0
  9828                           ; Regs used in _ChangeBrightness: [wreg+status,2+status,0]
  9829                           
  9830                           
  9831                           ;RotaryEncoder.c: 33:     lastStateCLK = PORTBbits.RB7;
  9832  08AD  1283               	bcf	3,5	;RP0=0, select bank0
  9833  08AE  1303               	bcf	3,6	;RP1=0, select bank0
  9834  08AF  0D06               	rlf	6,w	;volatile
  9835  08B0  0D06               	rlf	6,w	;volatile
  9836  08B1  3901               	andlw	1
  9837  08B2  00F0               	movwf	??_ChangeBrightness
  9838  08B3  01F1               	clrf	??_ChangeBrightness+1
  9839  08B4  0870               	movf	??_ChangeBrightness,w
  9840  08B5  00E2               	movwf	_lastStateCLK
  9841  08B6  0871               	movf	??_ChangeBrightness+1,w
  9842  08B7  00E3               	movwf	_lastStateCLK+1
  9843  08B8                     l3516:
  9844                           
  9845                           ;RotaryEncoder.c: 34:     CCPR1L = brightness;
  9846  08B8  1683               	bsf	3,5	;RP0=1, select bank1
  9847  08B9  1303               	bcf	3,6	;RP1=0, select bank1
  9848  08BA  086A               	movf	_brightness^(0+128),w
  9849  08BB  1283               	bcf	3,5	;RP0=0, select bank0
  9850  08BC  1303               	bcf	3,6	;RP1=0, select bank0
  9851  08BD  0095               	movwf	21	;volatile
  9852  08BE                     l3518:
  9853                           
  9854                           ;RotaryEncoder.c: 36:     if(PORTBbits.RB7 != lastStateCLK && PORTBbits.RB7 == 1){
  9855  08BE  0D06               	rlf	6,w	;volatile
  9856  08BF  0D06               	rlf	6,w	;volatile
  9857  08C0  3901               	andlw	1
  9858  08C1  00F0               	movwf	??_ChangeBrightness
  9859  08C2  01F1               	clrf	??_ChangeBrightness+1
  9860  08C3  0863               	movf	_lastStateCLK+1,w
  9861  08C4  0671               	xorwf	??_ChangeBrightness+1,w
  9862  08C5  1D03               	skipz
  9863  08C6  28C9               	goto	u3975
  9864  08C7  0862               	movf	_lastStateCLK,w
  9865  08C8  0670               	xorwf	??_ChangeBrightness,w
  9866  08C9                     u3975:
  9867  08C9  1903               	skipnz
  9868  08CA  28CC               	goto	u3971
  9869  08CB  28CD               	goto	u3970
  9870  08CC                     u3971:
  9871  08CC  2915               	goto	l3538
  9872  08CD                     u3970:
  9873  08CD                     l3520:
  9874  08CD  1F86               	btfss	6,7	;volatile
  9875  08CE  28D0               	goto	u3981
  9876  08CF  28D1               	goto	u3980
  9877  08D0                     u3981:
  9878  08D0  2915               	goto	l3538
  9879  08D1                     u3980:
  9880  08D1                     l3522:
  9881                           
  9882                           ;RotaryEncoder.c: 38:         if(PORTBbits.RB0 != PORTBbits.RB7 && brightness > 0){
  9883  08D1  1B86               	btfsc	6,7	;volatile
  9884  08D2  28D4               	goto	u3991
  9885  08D3  28D6               	goto	u3990
  9886  08D4                     u3991:
  9887  08D4  3001               	movlw	1
  9888  08D5  28D7               	goto	u3992
  9889  08D6                     u3990:
  9890  08D6  3000               	movlw	0
  9891  08D7                     u3992:
  9892  08D7  00F0               	movwf	??_ChangeBrightness
  9893  08D8  1806               	btfsc	6,0	;volatile
  9894  08D9  28DB               	goto	u4001
  9895  08DA  28DD               	goto	u4000
  9896  08DB                     u4001:
  9897  08DB  3001               	movlw	1
  9898  08DC  28DE               	goto	u4002
  9899  08DD                     u4000:
  9900  08DD  3000               	movlw	0
  9901  08DE                     u4002:
  9902  08DE  0670               	xorwf	??_ChangeBrightness,w
  9903  08DF  1903               	skipnz
  9904  08E0  28E2               	goto	u4011
  9905  08E1  28E3               	goto	u4010
  9906  08E2                     u4011:
  9907  08E2  28F4               	goto	l3530
  9908  08E3                     u4010:
  9909  08E3                     l3524:
  9910  08E3  1683               	bsf	3,5	;RP0=1, select bank1
  9911  08E4  1303               	bcf	3,6	;RP1=0, select bank1
  9912  08E5  086A               	movf	_brightness^(0+128),w
  9913  08E6  1903               	btfsc	3,2
  9914  08E7  28E9               	goto	u4021
  9915  08E8  28EA               	goto	u4020
  9916  08E9                     u4021:
  9917  08E9  28F4               	goto	l3530
  9918  08EA                     u4020:
  9919  08EA                     l3526:
  9920                           
  9921                           ;RotaryEncoder.c: 39:             brightness = brightness - 10;
  9922  08EA  086A               	movf	_brightness^(0+128),w
  9923  08EB  3EF6               	addlw	246
  9924  08EC  00F0               	movwf	??_ChangeBrightness
  9925  08ED  0870               	movf	??_ChangeBrightness,w
  9926  08EE  00EA               	movwf	_brightness^(0+128)
  9927  08EF                     l3528:
  9928                           
  9929                           ;RotaryEncoder.c: 40:             CCPR1L = brightness;
  9930  08EF  086A               	movf	_brightness^(0+128),w
  9931  08F0  1283               	bcf	3,5	;RP0=0, select bank0
  9932  08F1  1303               	bcf	3,6	;RP1=0, select bank0
  9933  08F2  0095               	movwf	21	;volatile
  9934                           
  9935                           ;RotaryEncoder.c: 41:         }
  9936  08F3  2915               	goto	l3538
  9937  08F4                     l3530:
  9938  08F4  1283               	bcf	3,5	;RP0=0, select bank0
  9939  08F5  1B86               	btfsc	6,7	;volatile
  9940  08F6  28F8               	goto	u4031
  9941  08F7  28FA               	goto	u4030
  9942  08F8                     u4031:
  9943  08F8  3001               	movlw	1
  9944  08F9  28FB               	goto	u4032
  9945  08FA                     u4030:
  9946  08FA  3000               	movlw	0
  9947  08FB                     u4032:
  9948  08FB  00F0               	movwf	??_ChangeBrightness
  9949  08FC  1806               	btfsc	6,0	;volatile
  9950  08FD  28FF               	goto	u4041
  9951  08FE  2901               	goto	u4040
  9952  08FF                     u4041:
  9953  08FF  3001               	movlw	1
  9954  0900  2902               	goto	u4042
  9955  0901                     u4040:
  9956  0901  3000               	movlw	0
  9957  0902                     u4042:
  9958  0902  0670               	xorwf	??_ChangeBrightness,w
  9959  0903  1D03               	skipz
  9960  0904  2906               	goto	u4051
  9961  0905  2907               	goto	u4050
  9962  0906                     u4051:
  9963  0906  2915               	goto	l3538
  9964  0907                     u4050:
  9965  0907                     l3532:
  9966  0907  3064               	movlw	100
  9967  0908  1683               	bsf	3,5	;RP0=1, select bank1
  9968  0909  1303               	bcf	3,6	;RP1=0, select bank1
  9969  090A  026A               	subwf	_brightness^(0+128),w
  9970  090B  1803               	skipnc
  9971  090C  290E               	goto	u4061
  9972  090D  290F               	goto	u4060
  9973  090E                     u4061:
  9974  090E  2915               	goto	l3538
  9975  090F                     u4060:
  9976  090F                     l3534:
  9977                           
  9978                           ;RotaryEncoder.c: 44:            brightness = brightness + 10;
  9979  090F  086A               	movf	_brightness^(0+128),w
  9980  0910  3E0A               	addlw	10
  9981  0911  00F0               	movwf	??_ChangeBrightness
  9982  0912  0870               	movf	??_ChangeBrightness,w
  9983  0913  00EA               	movwf	_brightness^(0+128)
  9984  0914  28EF               	goto	l3528
  9985  0915                     l3538:
  9986                           
  9987                           ;RotaryEncoder.c: 49:     lastStateCLK = PORTBbits.RB7;
  9988  0915  1283               	bcf	3,5	;RP0=0, select bank0
  9989  0916  0D06               	rlf	6,w	;volatile
  9990  0917  0D06               	rlf	6,w	;volatile
  9991  0918  3901               	andlw	1
  9992  0919  00F0               	movwf	??_ChangeBrightness
  9993  091A  01F1               	clrf	??_ChangeBrightness+1
  9994  091B  0870               	movf	??_ChangeBrightness,w
  9995  091C  00E2               	movwf	_lastStateCLK
  9996  091D  0871               	movf	??_ChangeBrightness+1,w
  9997  091E  00E3               	movwf	_lastStateCLK+1
  9998  091F                     l491:
  9999  091F  0008               	return
 10000  0920                     __end_of_ChangeBrightness:
 10001  007E                     btemp	set	126	;btemp
 10002  007E                     wtemp0	set	126
 10003                           
 10004                           	psect	idloc
 10005                           
 10006                           ;Config register IDLOC0 @ 0x2000
 10007                           ;	unspecified, using default values
 10008  2000                     	org	8192
 10009  2000  3FFF               	dw	16383
 10010                           
 10011                           ;Config register IDLOC1 @ 0x2001
 10012                           ;	unspecified, using default values
 10013  2001                     	org	8193
 10014  2001  3FFF               	dw	16383
 10015                           
 10016                           ;Config register IDLOC2 @ 0x2002
 10017                           ;	unspecified, using default values
 10018  2002                     	org	8194
 10019  2002  3FFF               	dw	16383
 10020                           
 10021                           ;Config register IDLOC3 @ 0x2003
 10022                           ;	unspecified, using default values
 10023  2003                     	org	8195
 10024  2003  3FFF               	dw	16383
 10025                           
 10026                           	psect	config
 10027                           
 10028                           ;Config register CONFIG1 @ 0x2007
 10029                           ;	Oscillator Selection bits
 10030                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
 10031                           ;	Watchdog Timer Enable bit
 10032                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 10033                           ;	Power-up Timer Enable bit
 10034                           ;	PWRTE = OFF, PWRT disabled
 10035                           ;	RE3/MCLR pin function select bit
 10036                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 10037                           ;	Code Protection bit
 10038                           ;	CP = OFF, Program memory code protection is disabled
 10039                           ;	Data Code Protection bit
 10040                           ;	CPD = OFF, Data memory code protection is disabled
 10041                           ;	Brown Out Reset Selection bits
 10042                           ;	BOREN = ON, BOR enabled
 10043                           ;	Internal External Switchover bit
 10044                           ;	IESO = ON, Internal/External Switchover mode is enabled
 10045                           ;	Fail-Safe Clock Monitor Enabled bit
 10046                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 10047                           ;	Low Voltage Programming Enable bit
 10048                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 10049                           ;	In-Circuit Debugger Mode bit
 10050                           ;	DEBUG = 0x1, unprogrammed default
 10051  2007                     	org	8199
 10052  2007  2FD2               	dw	12242
 10053                           
 10054                           ;Config register CONFIG2 @ 0x2008
 10055                           ;	Brown-out Reset Selection bit
 10056                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 10057                           ;	Flash Program Memory Self Write Enable bits
 10058                           ;	WRT = OFF, Write protection off
 10059  2008                     	org	8200
 10060  2008  3FFF               	dw	16383

Data Sizes:
    Strings     137
    Constant    18
    Data        13
    BSS         91
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     66      80
    BANK1            80     52      75
    BANK3            96      0      67
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_26(CODE[7]), ?_sprintf(BANK0[2]), STR_4(CODE[12]), result(BANK0[2]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 11
		 -> STR_25(CODE[9]), STR_24(CODE[9]), STR_15(CODE[4]), STR_14(CODE[4]), 
		 -> STR_13(CODE[8]), STR_12(CODE[8]), STR_11(CODE[4]), STR_10(CODE[4]), 
		 -> STR_9(CODE[8]), STR_8(CODE[4]), STR_7(CODE[4]), STR_3(CODE[3]), 
		 -> STR_2(CODE[11]), STR_1(CODE[11]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 16
		 -> main@buffer3_613(BANK1[16]), main@buffer3_610(BANK1[16]), year(BANK3[10]), month(BANK3[10]), 
		 -> date(BANK3[10]), hours(BANK3[10]), mins(BANK3[10]), secs(BANK3[10]), 
		 -> main@buffer3(BANK1[16]), DisplayTemp@buffer2(BANK0[16]), DisplayTemp@buffer1(BANK0[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    LCD_Write_String@Str	PTR const unsigned char  size(2) Largest target is 16
		 -> main@buffer3_613(BANK1[16]), main@buffer3_610(BANK1[16]), STR_23(CODE[4]), STR_22(CODE[4]), 
		 -> STR_21(CODE[4]), STR_20(CODE[4]), STR_19(CODE[4]), STR_18(CODE[4]), 
		 -> STR_17(CODE[4]), STR_16(CODE[4]), year(BANK3[10]), month(BANK3[10]), 
		 -> date(BANK3[10]), hours(BANK3[10]), mins(BANK3[10]), secs(BANK3[10]), 
		 -> STR_6(CODE[3]), STR_5(CODE[3]), main@buffer3(BANK1[16]), DisplayTemp@buffer2(BANK0[16]), 
		 -> DisplayTemp@buffer1(BANK0[16]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 16
		 -> main@buffer3_613(BANK1[16]), main@buffer3_610(BANK1[16]), date(BANK3[10]), hours(BANK3[10]), 
		 -> STR_6(CODE[3]), STR_5(CODE[3]), main@buffer3(BANK1[16]), 


Critical Paths under _main in COMMON

    _main->_LCD_Write_String
    _Update_Farenheit->___xxtofl
    _Update_Celsius->___xxtofl
    ___fltol->___xxtofl
    ___flmul->___xxtofl
    ___fladd->___xxtofl
    _RTC_Read_Clock->_I2C_Read
    _RTC_Read_Calendar->_I2C_Read
    _I2C_Repeated_Start->_I2C_Write
    _RTC_Clock_Write->_I2C_Start
    _RTC_Calendar_Write->_I2C_Start
    _LCD_String_xy->_LCD_Write_String
    _LCD_Init->_LCD_CMD
    _LCD_Clear->_LCD_CMD
    _DisplayTemp->_LCD_Write_String
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Char->_LCD_Write_4Bit
    _LCD_Set_Cursor->_LCD_CMD
    _LCD_CMD->_LCD_Write_4Bit
    _LCD_Write_4Bit->_IO_Expander_Write
    _IO_Expander_Write->_I2C_Start
    _I2C_Start->_I2C_Write

Critical Paths under _main in BANK0

    _main->_Update_Celsius
    _main->_Update_Farenheit
    _Update_Farenheit->___fltol
    _Update_Celsius->___fltol
    ___fltol->___fladd
    ___fladd->___flmul
    _DisplayTemp->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                55    55      0   29791
                                             63 BANK0      3     3      0
                                              0 BANK1     52    52      0
                   _ChangeBrightness
                        _DisplayTemp
                           _I2C_Init
                           _I2C_Stop
                          _LCD_Clear
                           _LCD_Init
                      _LCD_String_xy
                   _LCD_Write_String
                           _LED_Init
                 _RTC_Calendar_Write
                    _RTC_Clock_Write
                  _RTC_Read_Calendar
                     _RTC_Read_Clock
                          _ReadPhoto
                 _RotaryEncoder_Init
                     _Update_Celsius
                   _Update_Farenheit
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _Update_Farenheit                                     6     6      0    6621
                                             57 BANK0      6     6      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _Update_Celsius                                       6     6      0    6621
                                             57 BANK0      6     6      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     550
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             46 BANK0     11     7      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    2721
                                              0 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             20    12      8    2870
                                             26 BANK0     20    12      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _RotaryEncoder_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ReadPhoto                                            2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _RTC_Read_Clock                                       3     3      0     177
                                              3 COMMON     3     3      0
                           _I2C_Read
                 _I2C_Repeated_Start
                          _I2C_Start
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _RTC_Read_Calendar                                    3     3      0     177
                                              3 COMMON     3     3      0
                           _I2C_Read
                 _I2C_Repeated_Start
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Repeated_Start                                   1     1      0      44
                                              1 COMMON     1     1      0
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Read                                             3     3      0      45
                                              0 COMMON     3     3      0
                            _I2C_Ack
                           _I2C_Nack
                          _I2C_Ready
 ---------------------------------------------------------------------------------
 (3) _I2C_Nack                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Ack                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RTC_Clock_Write                                      5     2      3     405
                                              2 COMMON     5     2      3
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _RTC_Calendar_Write                                   4     1      3     382
                                              2 COMMON     4     1      3
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _LED_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_String_xy                                        6     3      3    3087
                                              0 BANK0      6     3      3
                            _LCD_CMD
                   _LCD_Write_String
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     265
                                              7 COMMON     2     2      0
                  _IO_Expander_Write
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            1     1      0     177
                                              7 COMMON     1     1      0
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DisplayTemp                                         35    35      0    5944
                                             21 BANK0     35    35      0
                     _LCD_Set_Cursor
                   _LCD_Write_String
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             25    20      5    3902
                                              0 BANK0     21    16      5
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     466
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_String                                     7     5      2    1559
                                              7 COMMON     7     5      2
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Char                                       2     2      0     177
                                              5 COMMON     2     2      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (2) _LCD_Set_Cursor                                       4     3      1     363
                                              7 COMMON     4     3      1
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _LCD_CMD                                              2     2      0     177
                                              5 COMMON     2     2      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_4Bit                                       2     2      0     133
                                              3 COMMON     2     2      0
                  _IO_Expander_Write
 ---------------------------------------------------------------------------------
 (4) _IO_Expander_Write                                    1     1      0      88
                                              2 COMMON     1     1      0
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Start                                            1     1      0      44
                                              1 COMMON     1     1      0
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Write                                            1     1      0      22
                                              0 COMMON     1     1      0
                          _I2C_Ready
 ---------------------------------------------------------------------------------
 (3) _I2C_Ready                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ChangeBrightness                                     2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ChangeBrightness
   _DisplayTemp
     _LCD_Set_Cursor
       _LCD_CMD
         _LCD_Write_4Bit
           _IO_Expander_Write
             _I2C_Start
               _I2C_Write
                 _I2C_Ready
             _I2C_Stop
             _I2C_Write
     _LCD_Write_String
       _LCD_Write_Char
         _LCD_Write_4Bit
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _I2C_Init
   _I2C_Stop
   _LCD_Clear
     _LCD_CMD
   _LCD_Init
     _IO_Expander_Write
     _LCD_CMD
   _LCD_String_xy
     _LCD_CMD
     _LCD_Write_String
   _LCD_Write_String
   _LED_Init
   _RTC_Calendar_Write
     _I2C_Start
     _I2C_Stop
     _I2C_Write
   _RTC_Clock_Write
     _I2C_Start
     _I2C_Stop
     _I2C_Write
   _RTC_Read_Calendar
     _I2C_Read
       _I2C_Ack
       _I2C_Nack
       _I2C_Ready
     _I2C_Repeated_Start
       _I2C_Write
     _I2C_Start
     _I2C_Stop
     _I2C_Write
   _RTC_Read_Clock
     _I2C_Read
     _I2C_Repeated_Start
     _I2C_Start
     _I2C_Write
   _ReadPhoto
   _RotaryEncoder_Init
   _Update_Celsius
     ___fladd
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
     ___fltol
       ___fladd (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _Update_Farenheit
     ___fladd
     ___flmul
     ___fltol
     ___xxtofl
   _sprintf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      43       9       69.8%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     34      4B       7       93.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     42      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      EC      12        0.0%
ABS                  0      0      EC       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Mon Apr 18 18:15:31 2022

                                     pc 0002                             _SSPSTATbits 0094  
                                    l50 13DD                                      l53 12E1  
                                    l45 13BD                                      l56 125E  
                                    l80 132C                                      l73 1313  
                                    l49 13D7                                      l58 1264  
                                    l82 1330                                      l59 1265  
                                    l75 1317                                      l91 1275  
                                    l84 1340                                      l77 1327  
                                    l93 1276                                      l97 12CD  
                                    l89 1271                                      _RS 006A  
                                    fsr 0004                     ___wmul@multiplicand 0072  
RTC_Read_Calendar@read_calendar_address 0075                     __Umul8_16@word_mpld 0076  
                                   l101 127B                                     l110 1288  
                                   l104 127F                                     l107 1284  
                                   l211 176B                                     l133 1487  
                                   l205 09DD                                     l142 135A  
                                   l214 17FF                                     l136 1767  
                                   l208 0ABC                                     l145 1376  
                                   l217 1664                                     l154 15B5  
                                   l139 12F7                                     l163 14BD  
                                   l331 0454                                     l148 1393  
                                   l412 1535                                     l421 1459  
                                   l415 1606                                     l432 1256  
                                   l361 06CB                                     l353 0689  
                                   l178 1294                                     l418 142E  
                                   l530 154D                                     l533 1573  
                                   l640 0DB6                                     l377 0792  
                                   l369 0720                                     l491 091F  
                                   l484 130E                                     l639 0E6C  
                                   l664 0EC0                                     l683 0FFF  
                                   l659 0E97                                     l668 0F0C  
                                   l687 13A0                                     l880 16CB  
                                   l689 13B8                                     l873 16E0  
                                   l883 16E0                                     l980 0B20  
                                   l959 0049                        ??_Update_Celsius 0059  
                                   l984 0BC7                                     l969 14F7  
                                   l993 0D44                                     l986 0B9E  
                                   _RB5 0035                                     _RC3 003B  
                                   _RE3 004B                                     _PR2 0092  
                                   _PEN 048A                                     _Day 00DC  
                       __end_of_I2C_Ack 1280                                     _min 00E0  
                                   _sec 00E2                                     fsr0 0004  
                                   indf 0000                            ___flmul@aexp 0032  
                          ___flmul@bexp 0033                            ___flmul@sign 002D  
                          ___flmul@temp 0038                            ___flmul@prod 0034  
                       __end_of_LCD_CMD 1377                             main@buffer3 00A0  
                   LCD_Write_String@Str 0077                          _LCD_Set_Cursor 1488  
                          ___fltol@exp1 0058                                    l1001 0C92  
                                  l1011 0CD8                                    l1005 0CB6  
                                  l1022 0D38                                    l1014 0D16  
                                  l1023 0D44                                    l1120 0942  
                                  l1122 09D9                                    l1140 12A6  
                                  l1133 09A3                                    l1134 09AF  
                                  l1126 0987                                    l3000 0AD4  
                                  l3010 0AEC                                    l3002 0AD9  
                                  l1082 0316                                    l3100 0BF8  
                                  l3020 0B02                                    l3012 0AF1  
                                  l3004 0AE1                                    l1076 03AA  
                                  l3110 0C11                                    l3102 0C01  
                                  l3030 0B16                                    l3022 0B03  
                                  l3014 0AF7                                    l3006 0AE2  
                                  l1095 13F2                                    l3120 0C75  
                                  l3104 0C03                                    l3112 0C16  
                                  l3040 0B32                                    l3024 0B08  
                                  l3032 0B18                                    l3016 0AF8  
                                  l3008 0AE4                                    l1088 039E  
                                  l3200 0070                                    l1097 1404  
                                  l3130 0CA8                                    l3114 0C2C  
                                  l3122 0C84                                    l3106 0C07  
                                  l3050 0B46                                    l3042 0B36  
                                  l3034 0B26                                    l3026 0B0D  
                                  l3018 0AFE                                    l3210 0088  
                                  l3202 0078                                    l3140 0CBF  
                                  l3132 0CB1                                    l3124 0C9A  
                                  l3116 0C6A                                    l3108 0C08  
                                  l3060 0B5A                                    l3052 0B4A  
                                  l3044 0B3A                                    l3036 0B2A  
                                  l3028 0B15                                    l3300 034B  
                                  l3220 00A4                                    l3212 008D  
                                  l3204 007D                                    l3150 0CCF  
                                  l3142 0CC4                                    l3134 0CB5  
                                  l3126 0C9F                                    l3118 0C70  
                                  l3070 0B6B                                    l3062 0B5E  
                                  l3054 0B4E                                    l3046 0B3E  
                                  l3038 0B2E                                    l3310 0382  
                                  l3302 0351                                    l3230 00C7  
                                  l3222 00A9                                    l3214 0092  
                                  l3206 0083                                    l2600 126E  
                                  l3400 16FE                                    l3160 0CF0  
                                  l3152 0CD5                                    l3136 0CBA  
                                  l3144 0CC6                                    l3080 0BB1  
                                  l3072 0B82                                    l3064 0B62  
                                  l3056 0B52                                    l3048 0B42  
                                  l3320 03A2                                    l3312 0384  
                                  l3304 035E                                    l3240 0155  
                                  l3232 00D4                                    l3224 00AE  
                                  l3216 009A                                    l3208 0087  
                                  l2602 1310                                    l2610 12E3  
                                  l3410 1731                                    l3402 1704  
                                  l3170 0D28                                    l3162 0CF4  
                                  l3138 0CBD                                    l3146 0CCA  
                                  l3090 0BD0                                    l3082 0BB2  
                                  l3074 0BA2                                    l3066 0B66  
                                  l3058 0B56                                    l3314 0392  
                                  l3306 0369                                    l3250 01B7  
                                  l3242 0171                                    l3234 00F1  
                                  l3218 009C                                    l3330 093A  
                                  l2612 1342                                    l3420 1289  
                                  l3412 1740                                    l3404 1713  
                                  l3500 1417                                    l2620 1280  
                                  l3180 0D3F                                    l3172 0D2D  
                                  l3164 0D12                                    l3156 0CDD  
                                  l3148 0CCB                                    l3084 0BBB  
                                  l3076 0BAB                                    l3068 0B6A  
                                  l3316 0396                                    l3308 0378  
                                  l3260 0247                                    l3252 01D4  
                                  l3244 017A                                    l3236 010D  
                                  l3228 00B7                                    l3340 0965  
                                  l3332 094A                                    l3324 0921  
                                  l2606 1321                                    l2614 1348  
                                  l2622 135C                                    l2630 137C  
                                  l2710 14D2                                    l2702 14BE  
                                  l3422 128F                                    l3414 1749  
                                  l3406 171C                                    l3502 141D  
                                  l3510 14F9                                    l3182 0D43  
                                  l3174 0D2E                                    l3166 0D1B  
                                  l3158 0CE2                                    l3094 0BD9  
                                  l3078 0BAD                                    l3086 0BBF  
                                  l3318 0397                                    l3270 02D9  
                                  l3262 0274                                    l3254 01ED  
                                  l3246 018A                                    l3238 0139  
                                  l3190 005B                                    l3350 0999  
                                  l3342 096C                                    l3326 0926  
                                  l3430 09EA                                    l3520 08CD  
                                  l2616 134F                                    l2624 135F  
                                  l2712 14D6                                    l2704 14C4  
                                  l2720 14F3                                    l2800 0D75  
                                  l3416 1758                                    l3408 172B  
                                  l3504 1423                                    l3512 15B7  
                                  l3176 0D32                                    l3168 0D20  
                                  l3096 0BF0                                    l3088 0BCB  
                                  l3272 02E2                                    l3280 02F6  
                                  l3264 029A                                    l3256 020A  
                                  l3248 01A7                                    l3192 005C  
                                  l3184 004A                                    l3360 09CC  
                                  l3352 099D                                    l3344 0970  
                                  l3336 0953                                    l3328 092A  
                                  l3440 0A92                                    l3432 09F1  
                                  l3424 09DA                                    l3600 03C3  
                                  l3530 08F4                                    l3522 08D1  
                                  l3514 08AD                                    l2626 1366  
                                  l2714 14E0                                    l2706 14C7  
                                  l2650 1296                                    l2810 0DB8  
                                  l2802 0D79                                    l3370 12D2  
                                  l3418 175E                                    l3506 1429  
                                  l2618 1277                                    l3178 0D34  
                                  l3098 0BF4                                    l2730 13EC  
                                  l3282 02FA                                    l3274 02E6  
                                  l3266 02C2                                    l3258 0237  
                                  l3194 0061                                    l3186 0051  
                                  l3362 09D0                                    l3354 09A7  
                                  l3346 097E                                    l3338 0958  
                                  l3450 177F                                    l3442 1768  
                                  l3434 09FE                                    l3426 09E1  
                                  l3610 03E2                                    l3602 03C8  
                                  l3532 0907                                    l3524 08E3  
                                  l3516 08B8                                    l2628 1378  
                                  l2716 14E6                                    l2708 14CE  
                                  l2652 1297                                    l2900 0F36  
                                  l2820 0DD2                                    l2812 0DC1  
                                  l2804 0D8E                                    l3460 1607  
                                  l3372 12D8                                    l3380 145D  
                                  l3508 1430                                    l2740 13C1  
                                  l3540 1536                                    l2732 13FB  
                                  l2724 13DF                                    l3292 031B  
                                  l3284 02FB                                    l3276 02E7  
                                  l3268 02CB                                    l3196 0066  
                                  l3188 0057                                    l3364 09D1  
                                  l3356 09B1                                    l3348 098E  
                                  l3452 178C                                    l3444 176F  
                                  l3436 0A4D                                    l3428 09E3  
                                  l3700 062F                                    l3620 041B  
                                  l3612 03F6                                    l3604 03CD  
                                  l3534 090F                                    l3526 08EA  
                                  l3518 08BE                                    l2582 125E  
                                  l2590 12CA                                    l2718 14ED  
                                  l2670 13AE                                    l2662 1394  
                                  l2654 129D                                    l2910 0F5D  
                                  l2902 0F3C                                    l2830 0DFD  
                                  l2822 0DD8                                    l2814 0DC5  
                                  l2806 0DA1                                    l3470 164C  
                                  l3462 161A                                    l3374 12DB  
                                  l3390 1476                                    l3382 145D  
                                  l2742 13C7                                    l3550 1546  
                                  l3542 153E                                    l2734 1400  
                                  l2726 13E1                                    l3294 0320  
                                  l3286 02FF                                    l3278 02F0  
                                  l3198 006E                                    l3358 09C7  
                                  l3454 178D                                    l3446 1771  
                                  l3438 0A4E                                    l3702 0639  
                                  l3710 0674                                    l3630 0458  
                                  l3622 043B                                    l3614 040A  
                                  l3606 03D2                                    l3528 08EF  
                                  l2584 12BB                                    l2680 000E  
                                  l2672 13B4                                    l2664 1396  
                                  l2656 12A3                                    l2920 0FBE  
                                  l2912 0F62                                    l2904 0F48  
                                  l2840 0E32                                    l2832 0E06  
                                  l2824 0DE9                                    l2816 0DCB  
                                  l2808 0DA5                                    l3472 1655  
                                  l3464 1624                                    l3376 12DD  
                                  l3368 12CE                                    l3392 147C  
                                  l3384 1463                                    l2744 13CC  
                                  l2752 1329                                    l3560 1560  
                                  l3552 1549                                    l3544 1541  
                                  l3480 1301                                    l2728 13E8  
                                  l3296 032E                                    l3288 0313  
                                  l3456 17D1                                    l3448 1778  
                                  l3712 067F                                    l3704 0643  
                                  l3640 047E                                    l3632 045C  
                                  l3800 079B                                    l3624 044A  
                                  l3616 040E                                    l3608 03D7  
                                  l3538 0915                                    l2586 12BF  
                                  l2770 1599                                    l2690 0031  
                                  l2682 0011                                    l2666 139A  
                                  l2658 12A5                                    l2914 0F91  
                                  l2922 0FCF                                    l2906 0F4E  
                                  l2850 0E78                                    l2930 0FF9  
                                  l2842 0E38                                    l2834 0E0C  
                                  l2826 0DF3                                    l2818 0DCF  
                                  l3466 162D                                    l3378 12DE  
                                  l3394 16E1                                    l3386 1469  
                                  l3474 1253                                    l2746 13D2  
                                  l2738 13BA                                    l3562 1567  
                                  l3554 154C                                    l3546 1542  
                                  l3490 1306                                    l3482 1302  
                                  l3298 0332                                    l3458 17FB  
                                  l3802 07A6                                    l3730 06A7  
                                  l3714 0685                                    l3650 04C6  
                                  l3642 0482                                    l3722 0692  
                                  l3626 0450                                    l3634 0467  
                                  l3618 0413                                    l2596 12CC  
                                  l2588 12C4                                    l2780 14A2  
                                  l2772 1489                                    l2764 1574  
                                  l2692 0037                                    l2684 0018  
                                  l2676 0006                                    l2668 13A7  
                                  l2924 0FD8                                    l2916 0FB2  
                                  l2908 0F57                                    l2860 0E92  
                                  l2852 0E7C                                    l2836 0E1B  
                                  l2828 0DFA                                    l3468 1639  
                                  l3396 16E7                                    l3388 1470  
                                  l2748 13DC                                    l2756 133A  
                                  l3564 1570                                    l3556 1551  
                                  l3548 1543                                    l3492 130A  
                                  l3484 1303                                    l3476 12F8  
                                  l3740 06B2                                    l3732 06A8  
                                  l3724 0699                                    l3708 064D  
                                  l3652 04E1                                    l3644 0493  
                                  l3660 051C                                    l3636 046D  
                                  l2774 148A                                    l2782 14AA  
                                  l2766 1577                                    l2694 0038  
                                  l2686 001C                                    l2678 0008  
                                  l2926 0FDE                                    l2870 0EB5  
                                  l2854 0E80                                    l2838 0E2C  
                                  l2846 0E47                                    l2790 0D4C  
                                  l3398 16EF                                    l3494 1406  
                                  l2758 1340                                    l3558 1555  
                                  l3486 1304                                    l3478 1300  
                                  l3742 06B7                                    l3734 06A9  
                                  l3726 069C                                    l3718 068D  
                                  l3662 0522                                    l3654 04FC  
                                  l3646 04A3                                    l3638 0478  
                                  l2776 1492                                    l2768 1593  
                                  l2696 003F                                    l2688 0020  
                                  l2880 0EDE                                    l2856 0E84  
                                  l2848 0E70                                    l2792 0D52  
                                  l2928 0FE7                                    l3496 140B  
                                  l3488 1305                                    l2960 167B  
                                  l3760 06E0                                    l3752 06CF  
                                  l3744 06BC                                    l3736 06AC  
                                  l3728 06A4                                    l3680 05A7  
                                  l3664 053D                                    l3656 0509  
                                  l3648 04AB                                    l3592 03AB  
                                  l2778 149A                                    l2698 0045  
                                  l2890 0F06                                    l2866 0E99  
                                  l2858 0E8A                                    l2794 0D5B  
                                  l3498 1411                                    l2970 169F  
                                  l2962 1690                                    l2954 1665  
                                  l3762 06FA                                    l3746 06C1  
                                  l3738 06AF                                    l3690 05FD  
                                  l3682 05C2                                    l3666 0558  
                                  l3674 0581                                    l3658 0512  
                                  l3594 03B3                                    l2892 0F17  
                                  l2876 0EC2                                    l2884 0EE9  
                                  l2796 0D62                                    l2788 0D45  
                                  l2964 1691                                    l2956 1672  
                                  l3780 0735                                    l3772 0724  
                                  l3764 0707                                    l3748 06C7  
                                  l3756 06D4                                    l3692 0607  
                                  l3684 05DD                                    l3676 0587  
                                  l3668 0573                                    l3596 03B7  
                                  l2894 0F23                                    l2886 0EFA  
                                  l2798 0D65                                    l2990 0ABD  
                                  l2966 1699                                    l3790 078A  
                                  l3782 074D                                    l3766 0716  
                                  l3758 06DB                                    l3694 0611  
                                  l3686 05EA                                    l3678 058C  
                                  l3598 03BE                                    l2896 0F27  
                                  l2888 0F00                                    l2992 0AC4  
                                  l2984 16C0                                    l2976 16A7  
                                  l2968 169B                                    l3792 078E  
                                  l3784 0768                                    l3768 071C  
                                  l3776 0729                                    l3696 061B  
                                  l3688 05F3                                    l2898 0F2D  
                                  l2994 0ACA                                    l2986 16D0  
                                  l2978 16B9                                    l3786 0775  
                                  l3778 0730                                    l3698 0625  
                                  l2996 0ACE                                    l2988 16D5  
                                  l3796 0796                                    l3788 0784  
                                  l3980 065D                                    l3982 0E5B  
                                  l2998 0ACF                                    l3984 0EF2  
                                  l3986 0FC7                                    l3988 14B2  
                                  STR_1 083F                                    STR_2 084A  
                                  STR_3 08A8                                    STR_4 0833  
                                  STR_5 08A5                                    STR_6 08A2  
                                  STR_7 087E                                    STR_8 0873  
                                  STR_9 086F                                    u2200 12CA  
                                  u3000 0AF7                                    u2201 12C9  
                                  u3001 0AF6                                    u2210 1275  
                                  u3010 0B02                                    u2211 1274  
                                  u3011 0B01                                    u2220 1317  
                                  u3100 0BB1                                    u3020 0B08  
                                  u2221 1316                                    u3101 0BB0  
                                  u3021 0B07                                    u2230 1320  
                                  u3030 0B0D                                    u2231 131F  
                                  u3031 0B0C                                    u4000 08DD  
                                  u2240 127F                                    u3200 0C2C  
                                  u3120 0BC7                                    u3040 0B26  
                                  u4001 08DB                                    u2241 127E  
                                  u3201 0C2B                                    u3121 0BC6  
                                  u3041 0B25                                    u4010 08E3  
                                  u4002 08DE                                    u2410 13B4  
                                  u2250 1288                                    u3130 0BCB  
                                  u3050 0B2A                                    u4011 08E2  
                                  u2411 13B3                                    u2251 1287  
                                  u3211 0C43                                    u3203 0C28  
                                  u3131 0BCA                                    u3115 0BB4  
                                  u3051 0B29                                    u4020 08EA  
                                  u2420 000E                                    u3300 0CCA  
                                  u3220 0C57                                    u3212 0C44  
                                  u3140 0BD0                                    u3060 0B82  
                                  u4021 08E9                                    u2421 000D  
                                  u2405 13A8                                    u3301 0CC9  
                                  u3221 0C58                                    u3213 0C49  
                                  u3141 0BCF                                    u3061 0B81  
                                  u4030 08FA                                    u2190 1264  
                                  u2510 14D6                                    u3310 0CCF  
                                  u3230 0C75                                    u3222 0C5D  
                                  u3214 0C4A                                    u3070 0B8D  
                                  u4110 041B                                    u4031 08F8  
                                  u2191 1263                                    u2511 14D5  
                                  u3311 0CCE                                    u3231 0C74  
                                  u3223 0C5E                                    u3215 0C4F  
                                  u3151 0BE2                                    u3071 0B8B  
                                  u4111 041A                                    u4040 0901  
                                  u4032 08FB                                    u2440 0020  
                                  u2520 14E0                                    u2360 129D  
                                  u2600 1330                                    u3400 0D2D  
                                  u3320 0CD5                                    u3240 0C9A  
                                  u3216 0C50                                    u3160 0BF4  
                                  u3152 0BE9                                    u3080 0B8E  
                                  u4200 0689                                    u4120 0450  
                                  u4041 08FF                                    u2265 1369  
                                  u2441 001F                                    u2521 14DF  
                                  u2505 14C8                                    u2361 129C  
                                  u2601 132F                                    u3401 0D2C  
                                  u3321 0CD4                                    u3241 0C99  
                                  u3161 0BF3                                    u3153 0BF0  
                                  u3065 0B7E                                    u4201 0688  
                                  u4121 044F                                    u4050 0907  
                                  u4042 0902                                    u2370 12A3  
                                  u2610 1339                                    u3410 0D32  
                                  u3330 0CDC                                    u3250 0C9F  
                                  u3170 0BF8                                    u3090 0BA2  
                                  u4210 068D                                    u4130 0454  
                                  u4051 0906                                    u2275 1386  
                                  u2435 0012                                    u2371 12A2  
                                  u2611 1338                                    u3411 0D31  
                                  u3331 0CDB                                    u3251 0C9E  
                                  u3171 0BF7                                    u3091 0BA1  
                                  u4211 068C                                    u4131 0453  
                                  u4060 090F                                    u2620 1581  
                                  u2460 0031                                    u2540 14F3  
                                  u2380 139A                                    u2700 0DF3  
                                  u3420 0D43                                    u3340 0CE2  
                                  u3180 0C07                                    u3500 00AE  
                                  u4300 0720                                    u4220 0691  
                                  u4140 0458                                    u4061 090E  
                                  u2461 0030                                    u2541 14F2  
                                  u2525 14DC                                    u2381 1399  
                                  u2701 0DF2                                    u3421 0D42  
                                  u3341 0CE1                                    u3181 0C06  
                                  u3501 00AD                                    u4301 071F  
                                  u4221 0690                                    u4141 0457  
                                  u2630 15A3                                    u2710 0E1A  
                                  u4070 1551                                    u3350 0CF4  
                                  u3270 0CB5                                    u2550 13EC  
                                  u3430 005B                                    u4310 0724  
                                  u4230 0699                                    u4150 045C  
                                  u2455 0021                                    u2535 14E7  
                                  u2711 0E19                                    u4071 1550  
                                  u3351 0CF3                                    u3271 0CB4  
                                  u2551 13EB                                    u3511 00FF  
                                  u3431 005A                                    u4311 0723  
                                  u4231 0698                                    u4151 045B  
                                  u2640 15B5                                    u2480 0045  
                                  u2800 0F06                                    u2720 0E46  
                                  u3360 0D03                                    u3280 0CBA  
                                  u3512 0106                                    u3440 0061  
                                  u4320 0728                                    u4240 06C7  
                                  u4160 046D                                    u2641 15B4  
                                  u2481 0044                                    u2465 002D  
                                  u2801 0F05                                    u2721 0E45  
                                  u2705 0DEF                                    u3281 0CB9  
                                  u3265 0CAA                                    u3601 0229  
                                  u3521 011B                                    u3513 010D  
                                  u3441 0060                                    u4321 0727  
                                  u4241 06C6                                    u4161 046C  
                                  u2490 14C4                                    u2810 0F17  
                                  u2730 0E70                                    u2650 0D52  
                                  u3370 0D12                                    u3290 0CC4  
                                  u2570 1400                                    u3602 0230  
                                  u3522 0122                                    u3450 0066  
                                  u4330 0730                                    u4250 06CB  
                                  u4170 047E                                    u2475 0039  
                                  u2491 14C3                                    u2395 13A1  
                                  u2811 0F16                                    u2731 0E6F  
                                  u2651 0D51                                    u3371 0D11  
                                  u3291 0CC3                                    u3195 0C0A  
                                  u2571 13FF                                    u3611 0256  
                                  u3603 0237                                    u3531 0147  
                                  u3523 0129                                    u3451 0065  
                                  u4331 072F                                    u4251 06CA  
                                  u4171 047D                                    u2820 0F2D  
                                  u2740 0E80                                    u2660 0D75  
                                  u2580 13C1                                    u3380 0D1B  
                                  u3700 02FA                                    u3620 0280  
                                  u3612 025D                                    u3532 014E  
                                  u3460 0087                                    u2900 16A6  
                                  u4340 078E                                    u4260 06CF  
                                  u4180 0482                                    u2821 0F2C  
                                  u2741 0E7F                                    u2661 0D74  
                                  u2581 13C0                                    u3381 0D1A  
                                  u3365 0CFE                                    u2565 13F3  
                                  u3701 02F9                                    u3613 0264  
                                  u3541 0163                                    u3533 0155  
                                  u3461 0086                                    u2901 16A5  
                                  u4341 078D                                    u4261 06CE  
                                  u4181 0481                                    u2830 0F48  
                                  u2750 0EB4                                    u2670 0DB5  
                                  u2590 13CC                                    u3390 0D20  
                                  u3710 02FF                                    u3542 016A  
                                  u3470 008D                                    u4350 0792  
                                  u4270 06D3                                    u4190 0685  
                                  u2831 0F47                                    u2815 0F13  
                                  u2751 0EB3                                    u2671 0DB4  
                                  u2591 13CB                                    u3391 0D1F  
                                  u3711 02FE                                    u3631 028C  
                                  u3543 0171                                    u3471 008C  
                                  u4351 0791                                    u4271 06D2  
                                  u4191 0684                                    u4407 0443  
                                  u2840 0F4E                                    u2760 0EBF  
                                  u2680 0DCB                                    u3720 0313  
                                  u3640 02A8                                    u3632 0293  
                                  u3480 0092                                    u2920 16B8  
                                  u3800 0926                                    u4360 0796  
                                  u4280 06DB                                    u2841 0F4D  
                                  u2761 0EBE                                    u2681 0DCA  
                                  u3721 0312                                    u3633 029A  
                                  u3625 027B                                    u3561 0199  
                                  u3481 0091                                    u2921 16B7  
                                  u3801 0925                                    u4361 0795  
                                  u4281 06DA                                    u4417 067A  
                                  u2850 0FE7                                    u2770 0EDD  
                                  u2690 0DE9                                    u3730 031A  
                                  u3562 01A0                                    u3490 00A9  
                                  u2930 16BF                                    u3810 092A  
                                  u4370 079A                                    u4290 071C  
                                  u2851 0FE6                                    u2771 0EDC  
                                  u2755 0EB0                                    u2691 0DE8  
                                  u4507 1735                                    u3731 0319  
                                  u3651 02B4                                    u3571 01C6  
                                  u3563 01A7                                    u3555 0173  
                                  u3491 00A8                                    u2931 16BE  
                                  u2915 16A8                                    u3811 0929  
                                  u4371 0799                                    u4291 071B  
                                  u4427 070F                                    u2860 0FF9  
                                  u2780 0EE8                                    u3740 0320  
                                  u3652 02BB                                    u3572 01CD  
                                  u3900 09A7                                    u3820 094A  
                                  u4380 07B5                                    u2861 0FF8  
                                  u2781 0EE7                                    u4517 1744  
                                  u3741 031F                                    u3653 02C2  
                                  u3645 02A3                                    u3573 01D4  
                                  u3901 09A6                                    u3821 0949  
                                  u4381 07B4                                    u4437 077D  
                                  u2790 0F00                                    u3750 0332  
                                  u2950 16D0                                    u2870 1672  
                                  u3910 09BC                                    u2791 0EFF  
                                  u2775 0ED9                                    u4527 1753  
                                  u3751 0331                                    u3591 01FC  
                                  u2951 16CF                                    u2871 1671  
                                  u4447 07A1                                    u3760 0341  
                                  u3680 02E6                                    u3592 0203  
                                  u2960 16D5                                    u2880 1689  
                                  u3920 09CC                                    u3840 096B  
                                  u4537 1762                                    u4457 16EB  
                                  u3681 02E5                                    u3665 02C4  
                                  u3593 020A                                    u3585 01D6  
                                  u2961 16D4                                    u2945 16C2  
                                  u3921 09CB                                    u3841 096A  
                                  u4385 07B1                                    u2970 0ACE  
                                  u3770 035E                                    u2890 169F  
                                  u3930 09D0                                    u4547 1291  
                                  u4467 16F9                                    u2971 0ACD  
                                  u3771 035D                                    u3675 02DB  
                                  u2891 169E                                    u3931 09CF  
                                  u3915 09B7                                    u3835 095D  
                                  u3940 1463                                    u2980 0AD4  
                                  u3780 0378                                    u3860 098D  
                                  _RCEN 048B                                    u4557 1620  
                                  u4477 1708                                    u3941 1462  
                                  u2981 0AD3                                    u3781 0377  
                                  u3765 033C                                    u2885 1684  
                                  u3861 098C                                    u4397 03DD  
                                  u2990 0AD9                                    u3790 0396  
                                  u3950 09E1                                    u4567 165D  
                                  u4487 1717                                    u2991 0AD8  
                                  u3791 0395                                    u3775 035A  
                                  u3695 02E9                                    u3855 097F  
                                  u3951 09E0                                    u3880 099D  
                                  u3960 176F                                    u4577 1358  
                                  u4497 1726                                    u3785 0374  
                                  u3881 099C                                    u3961 176E  
                                  u3970 08CD                                    u3890 09A3  
                                  u3971 08CC                                    u3891 09A2  
                                  u3875 0992                                    u3980 08D1  
                                  u3981 08D0                                    u3990 08D6  
                                  u3991 08D4                                    u3975 08C9  
                                  u3992 08D7                                    _RSEN 0489  
                                  _Date 00DA                                    _Year 00D6  
                     ?_LCD_Write_String 0077                                    _date 01A4  
                                  _days 01CC                                    _main 03AB  
                       ?_RTC_Read_Clock 0070                                    _hour 00DE  
                      __end_of_I2C_Nack 1289                                    _mins 01B8  
                                  _secs 01C2                        __end_of_I2C_Init 12E2  
                      __end_of_I2C_Read 13DE                                    _year 0190  
                                  btemp 007E                        __end_of_I2C_Stop 1277  
                                  start 0000                      ??_LCD_Write_String 0079  
                         _LCD_String_xy 145A                    LCD_Write_4Bit@Nibble 0074  
      RTC_Read_Clock@read_clock_address 0075                        __end_of_LCD_Init 1768  
                      __end_of_LED_Init 1257                       ?_Update_Farenheit 0070  
                            _Clock_type 00E9                     __end_of_DisplayTemp 1665  
                         ___fltol@sign1 0057                         __end_of___fladd 0D45  
                                 ?_main 0070                                   _ACKEN 048C  
                                 _ACKDT 048D                                   STR_10 087E  
                                 STR_11 0873                                   STR_12 086F  
                                 STR_20 089A                                   STR_21 088A  
                                 STR_13 0867                                   STR_14 086B  
                                 STR_22 0896                                   STR_15 087E  
                                 STR_23 089E                                   STR_16 0892  
                                 STR_24 085E                                   STR_17 088E  
                                 STR_25 0855                                   STR_18 0886  
                                 STR_26 0877                                   STR_19 0882  
                                 STR_27 0822                         __end_of___flmul 03AB  
                       __end_of___fltol 16E1                                   _ANSEL 0188  
                                 _T2CON 0012                                   _AM_PM 00E8  
                       __end_of___lwdiv 004A                         __end_of___lwmod 14F8  
                    ??_Update_Farenheit 0059                                   _PORTB 0006  
                                 _TRISB 0086                                   _TRISC 0087  
                                 _SSPIE 0463                                   _TRISE 0089  
                                 _SSPIF 0063                  __end_of_LCD_Set_Cursor 14BE  
                                 _Month 00D8                         __end_of_dpowers 081A  
                       __end_of_isdigit 12A7                                   _hours 01AE  
                                 _month 019A                       __end_of_I2C_Ready 1266  
                     __end_of_I2C_Start 1328                       __end_of_I2C_Write 12CE  
                                 pclath 000A                                   status 0003  
                                 wtemp0 007E                         __end_of_sprintf 1000  
                        ?_LCD_String_xy 0020                          _LCD_Write_4Bit 1341  
                        _LCD_Write_Char 1377                         __initialization 07B9  
                          __end_of_main 07B9                 RTC_Calendar_Write@month 0073  
                     _IO_Expander_Write 12E2                               ??_I2C_Ack 0070  
                    ?_IO_Expander_Write 0070                       ?_ChangeBrightness 0070  
                                ??_main 005F                       __end_of_LCD_Clear 1295  
                             ??_LCD_CMD 0075                      ??_ChangeBrightness 0070  
                    _RTC_Calendar_Write 142F                     ??_IO_Expander_Write 0072  
                       ?_LCD_Set_Cursor 0077                                  _ADRESH 001E  
                                _ADRESL 009E                                  _CCPR1L 0015  
                                _ANSELH 0189                        LCD_String_xy@msg 0021  
                      LCD_String_xy@pos 0020                        LCD_String_xy@row 0024  
                   ?_RTC_Calendar_Write 0072                                  _SSPADD 0093  
                                _SSPBUF 0013                                  _SSPCON 0014  
                __end_of_LCD_Write_4Bit 135B                        __end_of___xxtofl 09DA  
                __end_of_LCD_Write_Char 1394               __end_of_IO_Expander_Write 12F8  
                           _DisplayTemp 1607                               ??___fladd 0042  
                                ___wmul 1394                               ??___flmul 0028  
                             ??___fltol 0052                               ??___lwdiv 0074  
                             ??___lwmod 007C                    ??_RTC_Calendar_Write 0075  
                                _result 006B                      _I2C_Repeated_Start 1328  
                             ?_I2C_Nack 0070                               ??_isdigit 0070  
                             ?_I2C_Init 0070                               ?_I2C_Read 0070  
                             ?_I2C_Stop 0070                     ?_I2C_Repeated_Start 0070  
                             ??_sprintf 0025                            ___xxtofl@arg 007A  
                          ___xxtofl@exp 0079                            ___xxtofl@val 0070  
               __end_of__initialization 07FC                               ?_LCD_Init 0070  
                       ??_LCD_String_xy 0023                               ?_LED_Init 0070  
                       ?_LCD_Write_4Bit 0070                              ___fltol@f1 004E  
                       ?_LCD_Write_Char 0070                    ??_I2C_Repeated_Start 0071  
                        __pcstackCOMMON 0070                            __pidataBANK0 0003  
                          __pidataBANK1 1250                            __pidataBANK3 1257  
                    _RotaryEncoder_Init 12F8                       __end_of_ReadPhoto 1574  
                   ?_RotaryEncoder_Init 0070                              ??_I2C_Nack 0070  
                            ??_I2C_Init 0070                              ??_I2C_Read 0070  
                            ??_I2C_Stop 0070                        ??_RTC_Read_Clock 0073  
                          sprintf@width 0032                              __pbssBANK0 0062  
                            __pbssBANK1 00D4                              __pbssBANK3 0190  
                            ??_LCD_Init 0077                              ??_LED_Init 0070  
                    DisplayTemp@buffer1 0038                      DisplayTemp@buffer2 0048  
                  ??_RotaryEncoder_Init 0070                       __end_of__Umul8_16 1405  
                            __pmaintext 03AB                            I2C_Read@flag 0071  
                        I2C_Read@buffer 0072                                 ?___wmul 0070  
                               _I2C_Ack 1277                                 _ACKSTAT 048E  
                               _LCD_CMD 135B                               ?___xxtofl 0070  
                            _brightness 00EA                                 _SSPCON2 0091  
                               _SSPSTAT 0094                              __stringtab 0800  
                             _I2C_Ready 125E                               _I2C_Start 130F  
                             _I2C_Write 12BA                                 ___fladd 0ABD  
                     _RTC_Read_Calendar 15B6                                 ___flmul 004A  
                               ___fltol 1665                                 ___lwdiv 0006  
                               ___lwmod 14BE                      ?_RTC_Read_Calendar 0070  
                             _ANSELbits 0188                        ??_LCD_Set_Cursor 0078  
                               __ptext1 09DA                                 __ptext2 1768  
                               __ptext3 0920                                 __ptext4 1665  
                               __ptext5 004A                                 __ptext6 13DE  
                               __ptext7 0ABD                                 __ptext8 12F8  
                               __ptext9 1536                       __end_of_hexpowers 0822  
                               _dpowers 0810                                 _isdigit 1295  
                            ??___xxtofl 0074                     ??_RTC_Read_Calendar 0073  
                             _LCD_Clear 1289                                 _sprintf 0D45  
                               clrloop0 1267                                 main@tmp 00D0  
                  end_of_initialization 07FC                              ?_I2C_Ready 0070  
                            ?_I2C_Start 0070                              ?_I2C_Write 0070  
             __end_of_RTC_Read_Calendar 1607                            ?_DisplayTemp 0070  
                    RTC_Clock_Write@min 0072                      RTC_Clock_Write@sec 0076  
                             _PORTBbits 0006                              LCD_CMD@CMD 0076  
                           ___fladd@grs 004D                       ??_RTC_Clock_Write 0075  
                         ___xxtofl@sign 0078                               _TRISBbits 0086  
                             _TRISCbits 0087                              ?_LCD_Clear 0070  
                      ??_LCD_Write_4Bit 0073                       LCD_Write_String@i 007C  
                      ??_LCD_Write_Char 0075                             ___flmul@grs 002E  
                           _CCP1CONbits 0017                   _Update_Farenheit$1586 005B  
                        __end_of___wmul 13B9                        _LCD_Write_String 1574  
                   start_initialization 07B9                  RTC_Calendar_Write@date 0072  
                             _ReadPhoto 1536                  RTC_Calendar_Write@year 0074  
  I2C_Repeated_Start@slave_read_address 0071                        _Update_Farenheit 09DA  
                           ??_I2C_Ready 0070                             ??_I2C_Start 0071  
                           ??_I2C_Write 0070                     _Update_Celsius$1587 005B  
                 __end_of_LCD_String_xy 1488                               _Temp_Mode 0064  
                          _lastStateCLK 0062                                ??___wmul 0074  
                            init_fetch0 12A7                               __Umul8_16 13DE  
                           __pdataBANK0 006D                             __pdataBANK1 00E8  
                           __pdataBANK3 01CC                                ?_I2C_Ack 0070  
                             ___fladd@a 003E                               ___fladd@b 003A  
                              ?_LCD_CMD 0070                               ___flmul@a 0024  
                             ___flmul@b 0020                               ___latbits 0002  
                         __pcstackBANK0 0020                           __pcstackBANK1 00A0  
                           ??_LCD_Clear 0077                              ?_ReadPhoto 0070  
                          _isdigit$1375 0070                          _Update_Celsius 1768  
                       main@buffer3_610 00B0                         main@buffer3_613 00C0  
                      _ChangeBrightness 08AD                             sprintf@flag 002F  
                           sprintf@prec 0029                               _alarmTime 00E4  
                      ___lwdiv@dividend 0072                   IO_Expander_Write@Data 0072  
                              ?___fladd 003A                                ?___flmul 0020  
                              ?___fltol 004E                         main@displayMode 00D2  
                            ?__Umul8_16 0070                                ?___lwdiv 0070  
                              ?___lwmod 0078                               __pstrings 0800  
                              _I2C_Nack 1280                                ?_isdigit 0070  
                              _I2C_Init 12CE                                _I2C_Read 13B9  
                              _I2C_Stop 126E                  __end_of_Update_Celsius 1800  
                             _hexpowers 081A                        ___lwdiv@quotient 0075  
                 LCD_String_xy@location 0025                                ?_sprintf 0020  
                              _LCD_Init 16E1                          ___wmul@product 0074  
                              _LED_Init 1253                               clear_ram0 1266  
                              _PIE1bits 008C                                _PIR1bits 000C  
                       _RTC_Clock_Write 1405                              _ADCON0bits 001F  
                           __stringbase 080F                              _ADCON1bits 009F  
                     ___wmul@multiplier 0070                             ??_ReadPhoto 0070  
                       ?_Update_Celsius 0070            I2C_Start@slave_write_address 0071  
              __end_of_LCD_Write_String 15B6                   RTC_Calendar_Write@day 0075  
                         I2C_Write@data 0070                             ??__Umul8_16 0072  
              __end_of_Update_Farenheit 0ABD                      __end_of__stringtab 0810  
                            _ANSELHbits 0189                           _temperature_c 0068  
                         _temperature_f 0066                              sprintf@idx 0028  
                            sprintf@len 002D                              sprintf@val 0030  
                              ___xxtofl 0920                         ___lwdiv@divisor 0070  
                       ___lwdiv@counter 0077                                __ptext10 14F8  
                              __ptext11 15B6                                __ptext20 16E1  
                              __ptext12 1328                                __ptext21 1289  
                              __ptext13 13B9                                __ptext30 1377  
                              __ptext22 12CE                                __ptext14 1280  
                              __ptext31 1488                                __ptext23 1607  
                              __ptext15 1277                                __ptext32 135B  
                              __ptext24 0D45                                __ptext16 1405  
                              __ptext33 1341                                __ptext25 1295  
                              __ptext17 142F                                __ptext34 12E2  
                              __ptext26 1394                                __ptext18 1253  
                              __ptext35 126E                                __ptext27 14BE  
                              __ptext19 145A                                __ptext36 130F  
                              __ptext28 0006                                __ptext37 12BA  
                              __ptext29 1574                                __ptext38 125E  
                              __ptext39 08AD                                _btnState 00D4  
                       _BackLight_State 006F                 __end_of_RTC_Clock_Write 142F  
                          _photo_result 00E6              __end_of_RTC_Calendar_Write 145A  
              __end_of_ChangeBrightness 0920                      LCD_Write_Char@Data 0076  
                              init_ram0 12AB                    RTC_Clock_Write@AM_PM 0074  
                              isdigit@c 0071                               sprintf@ap 002C  
                             sprintf@cp 002A                               sprintf@sp 0020  
                        _colorIncrement 006D                        ___lwmod@dividend 007A  
            __end_of_I2C_Repeated_Start 1341                          _RTC_Read_Clock 14F8  
                             stringcode 080A                  __Umul8_16@multiplicand 0070  
                              sprintf@c 0034                                sprintf@f 0022  
                   RTC_Clock_Write@hour 0073                         ___lwmod@divisor 0078  
                           _PSTRCONbits 009D                         ___lwmod@counter 007D  
                              stringdir 080A                                stringtab 0800  
                     LCD_Set_Cursor@COL 0077                       LCD_Set_Cursor@ROW 007A  
                           _SSPCON2bits 0091                           ___fladd@signs 004A  
            __end_of_RotaryEncoder_Init 130F                            ___fladd@aexp 004B  
                          ___fladd@bexp 004C                  __end_of_RTC_Read_Clock 1536  
                  __Umul8_16@multiplier 0078                        ?_RTC_Clock_Write 0072  
                     __Umul8_16@product 0074                           ??_DisplayTemp 0035  
