

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Wed Apr 20 11:03:22 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F886
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	maintext,global,class=CODE,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text22,local,class=CODE,merge=1,delta=2,group=3
    41                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    55                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    56                           	dabs	1,0x7E,2
    57  0000                     
    58                           ; Version 2.40
    59                           ; Generated 17/11/2021 GMT
    60                           ; 
    61                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    62                           ; All rights reserved.
    63                           ; 
    64                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    65                           ; 
    66                           ; Redistribution and use in source and binary forms, with or without modification, are
    67                           ; permitted provided that the following conditions are met:
    68                           ; 
    69                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    70                           ;        conditions and the following disclaimer.
    71                           ; 
    72                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    73                           ;        of conditions and the following disclaimer in the documentation and/or other
    74                           ;        materials provided with the distribution. Publication is not required when
    75                           ;        this file is used in an embedded application.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC16F886 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93  0000                     	;# 
    94  0001                     	;# 
    95  0002                     	;# 
    96  0003                     	;# 
    97  0004                     	;# 
    98  0005                     	;# 
    99  0006                     	;# 
   100  0007                     	;# 
   101  0009                     	;# 
   102  000A                     	;# 
   103  000B                     	;# 
   104  000C                     	;# 
   105  000D                     	;# 
   106  000E                     	;# 
   107  000E                     	;# 
   108  000F                     	;# 
   109  0010                     	;# 
   110  0011                     	;# 
   111  0012                     	;# 
   112  0013                     	;# 
   113  0014                     	;# 
   114  0015                     	;# 
   115  0015                     	;# 
   116  0016                     	;# 
   117  0017                     	;# 
   118  0018                     	;# 
   119  0019                     	;# 
   120  001A                     	;# 
   121  001B                     	;# 
   122  001B                     	;# 
   123  001C                     	;# 
   124  001D                     	;# 
   125  001E                     	;# 
   126  001F                     	;# 
   127  0081                     	;# 
   128  0085                     	;# 
   129  0086                     	;# 
   130  0087                     	;# 
   131  0089                     	;# 
   132  008C                     	;# 
   133  008D                     	;# 
   134  008E                     	;# 
   135  008F                     	;# 
   136  0090                     	;# 
   137  0091                     	;# 
   138  0092                     	;# 
   139  0093                     	;# 
   140  0093                     	;# 
   141  0093                     	;# 
   142  0094                     	;# 
   143  0095                     	;# 
   144  0096                     	;# 
   145  0097                     	;# 
   146  0098                     	;# 
   147  0099                     	;# 
   148  009A                     	;# 
   149  009B                     	;# 
   150  009C                     	;# 
   151  009D                     	;# 
   152  009E                     	;# 
   153  009F                     	;# 
   154  0105                     	;# 
   155  0107                     	;# 
   156  0108                     	;# 
   157  0109                     	;# 
   158  010C                     	;# 
   159  010C                     	;# 
   160  010D                     	;# 
   161  010E                     	;# 
   162  010F                     	;# 
   163  0185                     	;# 
   164  0187                     	;# 
   165  0188                     	;# 
   166  0189                     	;# 
   167  018C                     	;# 
   168  018D                     	;# 
   169  0000                     	;# 
   170  0001                     	;# 
   171  0002                     	;# 
   172  0003                     	;# 
   173  0004                     	;# 
   174  0005                     	;# 
   175  0006                     	;# 
   176  0007                     	;# 
   177  0009                     	;# 
   178  000A                     	;# 
   179  000B                     	;# 
   180  000C                     	;# 
   181  000D                     	;# 
   182  000E                     	;# 
   183  000E                     	;# 
   184  000F                     	;# 
   185  0010                     	;# 
   186  0011                     	;# 
   187  0012                     	;# 
   188  0013                     	;# 
   189  0014                     	;# 
   190  0015                     	;# 
   191  0015                     	;# 
   192  0016                     	;# 
   193  0017                     	;# 
   194  0018                     	;# 
   195  0019                     	;# 
   196  001A                     	;# 
   197  001B                     	;# 
   198  001B                     	;# 
   199  001C                     	;# 
   200  001D                     	;# 
   201  001E                     	;# 
   202  001F                     	;# 
   203  0081                     	;# 
   204  0085                     	;# 
   205  0086                     	;# 
   206  0087                     	;# 
   207  0089                     	;# 
   208  008C                     	;# 
   209  008D                     	;# 
   210  008E                     	;# 
   211  008F                     	;# 
   212  0090                     	;# 
   213  0091                     	;# 
   214  0092                     	;# 
   215  0093                     	;# 
   216  0093                     	;# 
   217  0093                     	;# 
   218  0094                     	;# 
   219  0095                     	;# 
   220  0096                     	;# 
   221  0097                     	;# 
   222  0098                     	;# 
   223  0099                     	;# 
   224  009A                     	;# 
   225  009B                     	;# 
   226  009C                     	;# 
   227  009D                     	;# 
   228  009E                     	;# 
   229  009F                     	;# 
   230  0105                     	;# 
   231  0107                     	;# 
   232  0108                     	;# 
   233  0109                     	;# 
   234  010C                     	;# 
   235  010C                     	;# 
   236  010D                     	;# 
   237  010E                     	;# 
   238  010F                     	;# 
   239  0185                     	;# 
   240  0187                     	;# 
   241  0188                     	;# 
   242  0189                     	;# 
   243  018C                     	;# 
   244  018D                     	;# 
   245  0000                     	;# 
   246  0001                     	;# 
   247  0002                     	;# 
   248  0003                     	;# 
   249  0004                     	;# 
   250  0005                     	;# 
   251  0006                     	;# 
   252  0007                     	;# 
   253  0009                     	;# 
   254  000A                     	;# 
   255  000B                     	;# 
   256  000C                     	;# 
   257  000D                     	;# 
   258  000E                     	;# 
   259  000E                     	;# 
   260  000F                     	;# 
   261  0010                     	;# 
   262  0011                     	;# 
   263  0012                     	;# 
   264  0013                     	;# 
   265  0014                     	;# 
   266  0015                     	;# 
   267  0015                     	;# 
   268  0016                     	;# 
   269  0017                     	;# 
   270  0018                     	;# 
   271  0019                     	;# 
   272  001A                     	;# 
   273  001B                     	;# 
   274  001B                     	;# 
   275  001C                     	;# 
   276  001D                     	;# 
   277  001E                     	;# 
   278  001F                     	;# 
   279  0081                     	;# 
   280  0085                     	;# 
   281  0086                     	;# 
   282  0087                     	;# 
   283  0089                     	;# 
   284  008C                     	;# 
   285  008D                     	;# 
   286  008E                     	;# 
   287  008F                     	;# 
   288  0090                     	;# 
   289  0091                     	;# 
   290  0092                     	;# 
   291  0093                     	;# 
   292  0093                     	;# 
   293  0093                     	;# 
   294  0094                     	;# 
   295  0095                     	;# 
   296  0096                     	;# 
   297  0097                     	;# 
   298  0098                     	;# 
   299  0099                     	;# 
   300  009A                     	;# 
   301  009B                     	;# 
   302  009C                     	;# 
   303  009D                     	;# 
   304  009E                     	;# 
   305  009F                     	;# 
   306  0105                     	;# 
   307  0107                     	;# 
   308  0108                     	;# 
   309  0109                     	;# 
   310  010C                     	;# 
   311  010C                     	;# 
   312  010D                     	;# 
   313  010E                     	;# 
   314  010F                     	;# 
   315  0185                     	;# 
   316  0187                     	;# 
   317  0188                     	;# 
   318  0189                     	;# 
   319  018C                     	;# 
   320  018D                     	;# 
   321  0000                     	;# 
   322  0001                     	;# 
   323  0002                     	;# 
   324  0003                     	;# 
   325  0004                     	;# 
   326  0005                     	;# 
   327  0006                     	;# 
   328  0007                     	;# 
   329  0009                     	;# 
   330  000A                     	;# 
   331  000B                     	;# 
   332  000C                     	;# 
   333  000D                     	;# 
   334  000E                     	;# 
   335  000E                     	;# 
   336  000F                     	;# 
   337  0010                     	;# 
   338  0011                     	;# 
   339  0012                     	;# 
   340  0013                     	;# 
   341  0014                     	;# 
   342  0015                     	;# 
   343  0015                     	;# 
   344  0016                     	;# 
   345  0017                     	;# 
   346  0018                     	;# 
   347  0019                     	;# 
   348  001A                     	;# 
   349  001B                     	;# 
   350  001B                     	;# 
   351  001C                     	;# 
   352  001D                     	;# 
   353  001E                     	;# 
   354  001F                     	;# 
   355  0081                     	;# 
   356  0085                     	;# 
   357  0086                     	;# 
   358  0087                     	;# 
   359  0089                     	;# 
   360  008C                     	;# 
   361  008D                     	;# 
   362  008E                     	;# 
   363  008F                     	;# 
   364  0090                     	;# 
   365  0091                     	;# 
   366  0092                     	;# 
   367  0093                     	;# 
   368  0093                     	;# 
   369  0093                     	;# 
   370  0094                     	;# 
   371  0095                     	;# 
   372  0096                     	;# 
   373  0097                     	;# 
   374  0098                     	;# 
   375  0099                     	;# 
   376  009A                     	;# 
   377  009B                     	;# 
   378  009C                     	;# 
   379  009D                     	;# 
   380  009E                     	;# 
   381  009F                     	;# 
   382  0105                     	;# 
   383  0107                     	;# 
   384  0108                     	;# 
   385  0109                     	;# 
   386  010C                     	;# 
   387  010C                     	;# 
   388  010D                     	;# 
   389  010E                     	;# 
   390  010F                     	;# 
   391  0185                     	;# 
   392  0187                     	;# 
   393  0188                     	;# 
   394  0189                     	;# 
   395  018C                     	;# 
   396  018D                     	;# 
   397  0000                     	;# 
   398  0001                     	;# 
   399  0002                     	;# 
   400  0003                     	;# 
   401  0004                     	;# 
   402  0005                     	;# 
   403  0006                     	;# 
   404  0007                     	;# 
   405  0009                     	;# 
   406  000A                     	;# 
   407  000B                     	;# 
   408  000C                     	;# 
   409  000D                     	;# 
   410  000E                     	;# 
   411  000E                     	;# 
   412  000F                     	;# 
   413  0010                     	;# 
   414  0011                     	;# 
   415  0012                     	;# 
   416  0013                     	;# 
   417  0014                     	;# 
   418  0015                     	;# 
   419  0015                     	;# 
   420  0016                     	;# 
   421  0017                     	;# 
   422  0018                     	;# 
   423  0019                     	;# 
   424  001A                     	;# 
   425  001B                     	;# 
   426  001B                     	;# 
   427  001C                     	;# 
   428  001D                     	;# 
   429  001E                     	;# 
   430  001F                     	;# 
   431  0081                     	;# 
   432  0085                     	;# 
   433  0086                     	;# 
   434  0087                     	;# 
   435  0089                     	;# 
   436  008C                     	;# 
   437  008D                     	;# 
   438  008E                     	;# 
   439  008F                     	;# 
   440  0090                     	;# 
   441  0091                     	;# 
   442  0092                     	;# 
   443  0093                     	;# 
   444  0093                     	;# 
   445  0093                     	;# 
   446  0094                     	;# 
   447  0095                     	;# 
   448  0096                     	;# 
   449  0097                     	;# 
   450  0098                     	;# 
   451  0099                     	;# 
   452  009A                     	;# 
   453  009B                     	;# 
   454  009C                     	;# 
   455  009D                     	;# 
   456  009E                     	;# 
   457  009F                     	;# 
   458  0105                     	;# 
   459  0107                     	;# 
   460  0108                     	;# 
   461  0109                     	;# 
   462  010C                     	;# 
   463  010C                     	;# 
   464  010D                     	;# 
   465  010E                     	;# 
   466  010F                     	;# 
   467  0185                     	;# 
   468  0187                     	;# 
   469  0188                     	;# 
   470  0189                     	;# 
   471  018C                     	;# 
   472  018D                     	;# 
   473  0000                     	;# 
   474  0001                     	;# 
   475  0002                     	;# 
   476  0003                     	;# 
   477  0004                     	;# 
   478  0005                     	;# 
   479  0006                     	;# 
   480  0007                     	;# 
   481  0009                     	;# 
   482  000A                     	;# 
   483  000B                     	;# 
   484  000C                     	;# 
   485  000D                     	;# 
   486  000E                     	;# 
   487  000E                     	;# 
   488  000F                     	;# 
   489  0010                     	;# 
   490  0011                     	;# 
   491  0012                     	;# 
   492  0013                     	;# 
   493  0014                     	;# 
   494  0015                     	;# 
   495  0015                     	;# 
   496  0016                     	;# 
   497  0017                     	;# 
   498  0018                     	;# 
   499  0019                     	;# 
   500  001A                     	;# 
   501  001B                     	;# 
   502  001B                     	;# 
   503  001C                     	;# 
   504  001D                     	;# 
   505  001E                     	;# 
   506  001F                     	;# 
   507  0081                     	;# 
   508  0085                     	;# 
   509  0086                     	;# 
   510  0087                     	;# 
   511  0089                     	;# 
   512  008C                     	;# 
   513  008D                     	;# 
   514  008E                     	;# 
   515  008F                     	;# 
   516  0090                     	;# 
   517  0091                     	;# 
   518  0092                     	;# 
   519  0093                     	;# 
   520  0093                     	;# 
   521  0093                     	;# 
   522  0094                     	;# 
   523  0095                     	;# 
   524  0096                     	;# 
   525  0097                     	;# 
   526  0098                     	;# 
   527  0099                     	;# 
   528  009A                     	;# 
   529  009B                     	;# 
   530  009C                     	;# 
   531  009D                     	;# 
   532  009E                     	;# 
   533  009F                     	;# 
   534  0105                     	;# 
   535  0107                     	;# 
   536  0108                     	;# 
   537  0109                     	;# 
   538  010C                     	;# 
   539  010C                     	;# 
   540  010D                     	;# 
   541  010E                     	;# 
   542  010F                     	;# 
   543  0185                     	;# 
   544  0187                     	;# 
   545  0188                     	;# 
   546  0189                     	;# 
   547  018C                     	;# 
   548  018D                     	;# 
   549                           
   550                           	psect	idataBANK0
   551  0009                     __pidataBANK0:
   552                           
   553                           ;initializer for _BackLight_State
   554  0009  3408               	retlw	8
   555                           
   556                           	psect	idataBANK1
   557  08A6                     __pidataBANK1:
   558                           
   559                           ;initializer for _days
   560  08A6  3453               	retlw	83
   561  08A7  344D               	retlw	77
   562  08A8  3454               	retlw	84
   563  08A9  3457               	retlw	87
   564  08AA  3474               	retlw	116
   565  08AB  3446               	retlw	70
   566  08AC  3473               	retlw	115
   567                           
   568                           ;initializer for _AM_PM
   569  08AD  3405               	retlw	5
   570                           
   571                           ;initializer for _Clock_type
   572  08AE  3406               	retlw	6
   573                           
   574                           	psect	strings
   575  0800                     __pstrings:
   576  0800                     stringtab:
   577  0800                     __stringtab:
   578                           
   579                           ;	String table - string pointers are 1 byte each
   580  0800  1BFF               	btfsc	btemp+1,7
   581  0801  280A               	ljmp	stringcode
   582  0802  1383               	bcf	3,7
   583  0803  187F               	btfsc	btemp+1,0
   584  0804  1783               	bsf	3,7
   585  0805  0800               	movf	0,w
   586  0806  0A84               	incf	4,f
   587  0807  1903               	skipnz
   588  0808  0AFF               	incf	btemp+1,f
   589  0809  0008               	return
   590  080A                     stringcode:
   591  080A                     stringdir:
   592  080A  3008               	movlw	high stringdir
   593  080B  008A               	movwf	10
   594  080C  0804               	movf	4,w
   595  080D  0A84               	incf	4,f
   596  080E  0782               	addwf	2,f
   597  080F                     __stringbase:
   598  080F  3400               	retlw	0
   599  0810                     __end_of__stringtab:
   600  0810                     _dpowers:
   601  0810  3401               	retlw	1
   602  0811  3400               	retlw	0
   603  0812  340A               	retlw	10
   604  0813  3400               	retlw	0
   605  0814  3464               	retlw	100
   606  0815  3400               	retlw	0
   607  0816  34E8               	retlw	232
   608  0817  3403               	retlw	3
   609  0818  3410               	retlw	16
   610  0819  3427               	retlw	39
   611  081A                     __end_of_dpowers:
   612  081A                     _hexpowers:
   613  081A  3401               	retlw	1
   614  081B  3400               	retlw	0
   615  081C  3410               	retlw	16
   616  081D  3400               	retlw	0
   617  081E  3400               	retlw	0
   618  081F  3401               	retlw	1
   619  0820  3400               	retlw	0
   620  0821  3410               	retlw	16
   621  0822                     __end_of_hexpowers:
   622  000B                     _INTCONbits	set	11
   623  0012                     _T2CONbits	set	18
   624  0015                     _CCPR1L	set	21
   625  0017                     _CCP1CONbits	set	23
   626  0006                     _PORTB	set	6
   627  000C                     _PIR1bits	set	12
   628  001E                     _ADRESH	set	30
   629  001F                     _ADCON0bits	set	31
   630  0014                     _SSPCON	set	20
   631  0013                     _SSPBUF	set	19
   632  0035                     _RB5	set	53
   633  004B                     _RE3	set	75
   634  0063                     _SSPIF	set	99
   635  008C                     _PIE1bits	set	140
   636  009F                     _ADCON1bits	set	159
   637  009D                     _PSTRCONbits	set	157
   638  0092                     _PR2	set	146
   639  0089                     _TRISE	set	137
   640  0087                     _TRISC	set	135
   641  0086                     _TRISB	set	134
   642  009E                     _ADRESL	set	158
   643  0091                     _SSPCON2bits	set	145
   644  0093                     _SSPADD	set	147
   645  0091                     _SSPCON2	set	145
   646  0094                     _SSPSTAT	set	148
   647  0087                     _TRISCbits	set	135
   648  0094                     _SSPSTATbits	set	148
   649  048C                     _ACKEN	set	1164
   650  048D                     _ACKDT	set	1165
   651  048A                     _PEN	set	1162
   652  0489                     _RSEN	set	1161
   653  048E                     _ACKSTAT	set	1166
   654  0463                     _SSPIE	set	1123
   655  048B                     _RCEN	set	1163
   656  0188                     _ANSELbits	set	392
   657  0189                     _ANSELH	set	393
   658  0188                     _ANSEL	set	392
   659  0822                     STR_26:
   660  0822  3430               	retlw	48	;'0'
   661  0823  3431               	retlw	49	;'1'
   662  0824  3432               	retlw	50	;'2'
   663  0825  3433               	retlw	51	;'3'
   664  0826  3434               	retlw	52	;'4'
   665  0827  3435               	retlw	53	;'5'
   666  0828  3436               	retlw	54	;'6'
   667  0829  3437               	retlw	55	;'7'
   668  082A  3438               	retlw	56	;'8'
   669  082B  3439               	retlw	57	;'9'
   670  082C  3461               	retlw	97	;'a'
   671  082D  3462               	retlw	98	;'b'
   672  082E  3463               	retlw	99	;'c'
   673  082F  3464               	retlw	100	;'d'
   674  0830  3465               	retlw	101	;'e'
   675  0831  3466               	retlw	102	;'f'
   676  0832  3400               	retlw	0
   677  0833                     STR_4:
   678  0833  3448               	retlw	72	;'H'
   679  0834  3465               	retlw	101	;'e'
   680  0835  346C               	retlw	108	;'l'
   681  0836  346C               	retlw	108	;'l'
   682  0837  346F               	retlw	111	;'o'
   683  0838  3420               	retlw	32	;' '
   684  0839  3454               	retlw	84	;'T'
   685  083A  3468               	retlw	104	;'h'
   686  083B  3465               	retlw	101	;'e'
   687  083C  3472               	retlw	114	;'r'
   688  083D  3465               	retlw	101	;'e'
   689  083E  3400               	retlw	0
   690  083F                     STR_24:
   691  083F  3453               	retlw	83	;'S'
   692  0840  3470               	retlw	112	;'p'
   693  0841  3465               	retlw	101	;'e'
   694  0842  3461               	retlw	97	;'a'
   695  0843  346B               	retlw	107	;'k'
   696  0844  3465               	retlw	101	;'e'
   697  0845  3472               	retlw	114	;'r'
   698  0846  343A               	retlw	58	;':'
   699  0847  3425               	retlw	37	;'%'
   700  0848  3464               	retlw	100	;'d'
   701  0849  3400               	retlw	0
   702  084A                     STR_1:
   703  084A  3454               	retlw	84	;'T'
   704  084B  3465               	retlw	101	;'e'
   705  084C  346D               	retlw	109	;'m'
   706  084D  3470               	retlw	112	;'p'
   707  084E  343A               	retlw	58	;':'
   708  084F  3425               	retlw	37	;'%'
   709  0850  3433               	retlw	51	;'3'
   710  0851  3464               	retlw	100	;'d'
   711  0852  342A               	retlw	42	;'*'
   712  0853  3443               	retlw	67	;'C'
   713  0854  3400               	retlw	0
   714  0855                     STR_2:
   715  0855  3454               	retlw	84	;'T'
   716  0856  3465               	retlw	101	;'e'
   717  0857  346D               	retlw	109	;'m'
   718  0858  3470               	retlw	112	;'p'
   719  0859  343A               	retlw	58	;':'
   720  085A  3425               	retlw	37	;'%'
   721  085B  3433               	retlw	51	;'3'
   722  085C  3464               	retlw	100	;'d'
   723  085D  342A               	retlw	42	;'*'
   724  085E  3446               	retlw	70	;'F'
   725  085F  3400               	retlw	0
   726  0860                     STR_13:
   727  0860  3443               	retlw	67	;'C'
   728  0861  3461               	retlw	97	;'a'
   729  0862  346C               	retlw	108	;'l'
   730  0863  343A               	retlw	58	;':'
   731  0864  3425               	retlw	37	;'%'
   732  0865  3478               	retlw	120	;'x'
   733  0866  342D               	retlw	45	;'-'
   734  0867  3400               	retlw	0
   735  0868                     STR_9:
   736  0868  3454               	retlw	84	;'T'
   737  0869  3469               	retlw	105	;'i'
   738  086A  346D               	retlw	109	;'m'
   739  086B  343A               	retlw	58	;':'
   740  086C  3425               	retlw	37	;'%'
   741  086D  3478               	retlw	120	;'x'
   742  086E  343A               	retlw	58	;':'
   743  086F  3400               	retlw	0
   744  0870                     STR_25:
   745  0870  3428               	retlw	40	;'('
   746  0871  346E               	retlw	110	;'n'
   747  0872  3475               	retlw	117	;'u'
   748  0873  346C               	retlw	108	;'l'
   749  0874  346C               	retlw	108	;'l'
   750  0875  3429               	retlw	41	;')'
   751  0876  3400               	retlw	0
   752  0877                     STR_7:
   753  0877  3425               	retlw	37	;'%'
   754  0878  3478               	retlw	120	;'x'
   755  0879  3420               	retlw	32	;' '
   756  087A  3400               	retlw	0
   757  087B                     STR_19:
   758  087B  3457               	retlw	87	;'W'
   759  087C  3465               	retlw	101	;'e'
   760  087D  3464               	retlw	100	;'d'
   761  087E  3400               	retlw	0
   762  087F                     STR_18:
   763  087F  3454               	retlw	84	;'T'
   764  0880  3475               	retlw	117	;'u'
   765  0881  3465               	retlw	101	;'e'
   766  0882  3400               	retlw	0
   767  0883                     STR_21:
   768  0883  3446               	retlw	70	;'F'
   769  0884  3472               	retlw	114	;'r'
   770  0885  3469               	retlw	105	;'i'
   771  0886  3400               	retlw	0
   772  0887                     STR_17:
   773  0887  344D               	retlw	77	;'M'
   774  0888  346F               	retlw	111	;'o'
   775  0889  346E               	retlw	110	;'n'
   776  088A  3400               	retlw	0
   777  088B                     STR_16:
   778  088B  3453               	retlw	83	;'S'
   779  088C  3475               	retlw	117	;'u'
   780  088D  346E               	retlw	110	;'n'
   781  088E  3400               	retlw	0
   782  088F                     STR_22:
   783  088F  3453               	retlw	83	;'S'
   784  0890  3461               	retlw	97	;'a'
   785  0891  3474               	retlw	116	;'t'
   786  0892  3400               	retlw	0
   787  0893                     STR_20:
   788  0893  3454               	retlw	84	;'T'
   789  0894  3468               	retlw	104	;'h'
   790  0895  3475               	retlw	117	;'u'
   791  0896  3400               	retlw	0
   792  0897                     STR_23:
   793  0897  3449               	retlw	73	;'I'
   794  0898  346E               	retlw	110	;'n'
   795  0899  3476               	retlw	118	;'v'
   796  089A  3400               	retlw	0
   797  089B                     STR_6:
   798  089B  3441               	retlw	65	;'A'
   799  089C  344D               	retlw	77	;'M'
   800  089D  3400               	retlw	0
   801  089E                     STR_5:
   802  089E  3450               	retlw	80	;'P'
   803  089F  344D               	retlw	77	;'M'
   804  08A0  3400               	retlw	0
   805  08A1                     STR_3:
   806  08A1  3425               	retlw	37	;'%'
   807  08A2  3473               	retlw	115	;'s'
   808  08A3  3400               	retlw	0
   809  0877                     
   810                           	psect	cinit
   811  07CE                     start_initialization:	
   812                           ; #config settings
   813                           
   814  07CE                     __initialization:
   815                           
   816                           ; Initialize objects allocated to BANK1
   817  07CE  1383               	bcf	3,7	;select IRP bank0
   818  07CF  30EF               	movlw	low (__pdataBANK1+9)
   819  07D0  00FD               	movwf	btemp+-1
   820  07D1  3008               	movlw	high __pidataBANK1
   821  07D2  00FE               	movwf	btemp
   822  07D3  30A6               	movlw	low __pidataBANK1
   823  07D4  00FF               	movwf	btemp+1
   824  07D5  30E6               	movlw	low __pdataBANK1
   825  07D6  0084               	movwf	4
   826  07D7  160A  118A  23FE  120A  118A  	fcall	init_ram0
   827                           
   828                           ; Initialize objects allocated to BANK0
   829  07DC  120A  118A  2009  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   830  07E1  00E9               	movwf	__pdataBANK0& (0+127)
   831                           
   832                           ; Clear objects allocated to BANK3
   833  07E2  1783               	bsf	3,7	;select IRP bank2
   834  07E3  3090               	movlw	low __pbssBANK3
   835  07E4  0084               	movwf	4
   836  07E5  30B8               	movlw	low (__pbssBANK3+40)
   837  07E6  160A  118A  23B9  120A  118A  	fcall	clear_ram0
   838                           
   839                           ; Clear objects allocated to BANK1
   840  07EB  1383               	bcf	3,7	;select IRP bank0
   841  07EC  30C4               	movlw	low __pbssBANK1
   842  07ED  0084               	movwf	4
   843  07EE  30E6               	movlw	low (__pbssBANK1+34)
   844  07EF  160A  118A  23B9  120A  118A  	fcall	clear_ram0
   845                           
   846                           ; Clear objects allocated to BANK0
   847  07F4  305E               	movlw	low __pbssBANK0
   848  07F5  0084               	movwf	4
   849  07F6  3069               	movlw	low (__pbssBANK0+11)
   850  07F7  160A  118A  23B9  120A  118A  	fcall	clear_ram0
   851  07FC                     end_of_initialization:	
   852                           ;End of C runtime variable initialization code
   853                           
   854  07FC                     __end_of__initialization:
   855  07FC  0183               	clrf	3
   856  07FD  120A  118A  2BAF   	ljmp	_main	;jump to C main() function
   857                           
   858                           	psect	bssBANK0
   859  005E                     __pbssBANK0:
   860  005E                     _alarmTime:
   861  005E                     	ds	2
   862  0060                     _Temp_Mode:
   863  0060                     	ds	2
   864  0062                     _temperature_f:
   865  0062                     	ds	2
   866  0064                     _temperature_c:
   867  0064                     	ds	2
   868  0066                     _RS:
   869  0066                     	ds	1
   870  0067                     _result:
   871  0067                     	ds	2
   872                           
   873                           	psect	dataBANK0
   874  0069                     __pdataBANK0:
   875  0069                     _BackLight_State:
   876  0069                     	ds	1
   877                           
   878                           	psect	bssBANK1
   879  00C4                     __pbssBANK1:
   880  00C4                     _Year:
   881  00C4                     	ds	2
   882  00C6                     _Month:
   883  00C6                     	ds	2
   884  00C8                     _Date:
   885  00C8                     	ds	2
   886  00CA                     _Day:
   887  00CA                     	ds	2
   888  00CC                     _hour:
   889  00CC                     	ds	2
   890  00CE                     _min:
   891  00CE                     	ds	2
   892  00D0                     _sec:
   893  00D0                     	ds	2
   894  00D2                     _mins:
   895  00D2                     	ds	10
   896  00DC                     _secs:
   897  00DC                     	ds	10
   898                           
   899                           	psect	dataBANK1
   900  00E6                     __pdataBANK1:
   901  00E6                     _days:
   902  00E6                     	ds	7
   903  00ED                     _AM_PM:
   904  00ED                     	ds	1
   905  00EE                     _Clock_type:
   906  00EE                     	ds	1
   907                           
   908                           	psect	bssBANK3
   909  0190                     __pbssBANK3:
   910  0190                     _year:
   911  0190                     	ds	10
   912  019A                     _month:
   913  019A                     	ds	10
   914  01A4                     _date:
   915  01A4                     	ds	10
   916  01AE                     _hours:
   917  01AE                     	ds	10
   918                           
   919                           	psect	inittext
   920  13FA                     init_fetch0:	
   921                           ;	Called with low address in FSR and high address in W
   922                           
   923  13FA  087E               	movf	btemp,w
   924  13FB  008A               	movwf	10
   925  13FC  087F               	movf	btemp+1,w
   926  13FD  0082               	movwf	2
   927  13FE                     init_ram0:	
   928                           ;Called with:
   929                           ;	high address of idata address in btemp 
   930                           ;	low address of idata address in btemp+1 
   931                           ;	low address of data in FSR
   932                           ;	high address + 1 of data in btemp-1
   933                           
   934  13FE  160A  118A  23FA  160A  118A  	fcall	init_fetch0
   935  1403  0080               	movwf	0
   936  1404  0A84               	incf	4,f
   937  1405  0804               	movf	4,w
   938  1406  067D               	xorwf	btemp+-1,w
   939  1407  1903               	btfsc	3,2
   940  1408  3400               	retlw	0
   941  1409  0AFF               	incf	btemp+1,f
   942  140A  1903               	btfsc	3,2
   943  140B  0AFE               	incf	btemp,f
   944  140C  2BFE               	goto	init_ram0
   945                           
   946                           	psect	clrtext
   947  13B9                     clear_ram0:	
   948                           ;	Called with FSR containing the base address, and
   949                           ;	W with the last address+1
   950                           
   951  13B9  0064               	clrwdt	;clear the watchdog before getting into this loop
   952  13BA                     clrloop0:
   953  13BA  0180               	clrf	0	;clear RAM location pointed to by FSR
   954  13BB  0A84               	incf	4,f	;increment pointer
   955  13BC  0604               	xorwf	4,w	;XOR with final address
   956  13BD  1903               	btfsc	3,2	;have we reached the end yet?
   957  13BE  3400               	retlw	0	;all done for this memory range, return
   958  13BF  0604               	xorwf	4,w	;XOR again to restore value
   959  13C0  2BBA               	goto	clrloop0	;do the next byte
   960                           
   961                           	psect	cstackBANK1
   962  00A0                     __pcstackBANK1:
   963  00A0                     main@buffer3:
   964                           
   965                           ; 16 bytes @ 0x0
   966  00A0                     	ds	16
   967  00B0                     main@buffer3_737:
   968                           
   969                           ; 16 bytes @ 0x10
   970  00B0                     	ds	16
   971  00C0                     main@tmp:
   972                           
   973                           ; 2 bytes @ 0x20
   974  00C0                     	ds	2
   975  00C2                     main@displayMode:
   976                           
   977                           ; 2 bytes @ 0x22
   978  00C2                     	ds	2
   979                           
   980                           	psect	cstackCOMMON
   981  0070                     __pcstackCOMMON:
   982  0070                     ?_isdigit:
   983  0070                     ?_I2C_Ack:	
   984                           ; 1 bit 
   985                           
   986  0070                     ??_I2C_Ack:	
   987                           ; 1 bytes @ 0x0
   988                           
   989  0070                     ?_I2C_Nack:	
   990                           ; 1 bytes @ 0x0
   991                           
   992  0070                     ??_I2C_Nack:	
   993                           ; 1 bytes @ 0x0
   994                           
   995  0070                     ?_I2C_Ready:	
   996                           ; 1 bytes @ 0x0
   997                           
   998  0070                     ??_I2C_Ready:	
   999                           ; 1 bytes @ 0x0
  1000                           
  1001  0070                     ?_I2C_Write:	
  1002                           ; 1 bytes @ 0x0
  1003                           
  1004  0070                     ??_I2C_Write:	
  1005                           ; 1 bytes @ 0x0
  1006                           
  1007  0070                     ?_I2C_Stop:	
  1008                           ; 1 bytes @ 0x0
  1009                           
  1010  0070                     ??_I2C_Stop:	
  1011                           ; 1 bytes @ 0x0
  1012                           
  1013  0070                     ?_LCD_CMD:	
  1014                           ; 1 bytes @ 0x0
  1015                           
  1016  0070                     ?_IO_Expander_Write:	
  1017                           ; 1 bytes @ 0x0
  1018                           
  1019  0070                     ?_RTC_Read_Clock:	
  1020                           ; 1 bytes @ 0x0
  1021                           
  1022  0070                     ?_RTC_Read_Calendar:	
  1023                           ; 1 bytes @ 0x0
  1024                           
  1025  0070                     ??_isdigit:	
  1026                           ; 1 bytes @ 0x0
  1027                           
  1028  0070                     ?_I2C_Read:	
  1029                           ; 1 bytes @ 0x0
  1030                           
  1031  0070                     ??_I2C_Read:	
  1032                           ; 1 bytes @ 0x0
  1033                           
  1034  0070                     ?_I2C_Init:	
  1035                           ; 1 bytes @ 0x0
  1036                           
  1037  0070                     ??_I2C_Init:	
  1038                           ; 1 bytes @ 0x0
  1039                           
  1040  0070                     ?_I2C_Start:	
  1041                           ; 1 bytes @ 0x0
  1042                           
  1043  0070                     ?_I2C_Repeated_Start:	
  1044                           ; 1 bytes @ 0x0
  1045                           
  1046  0070                     ?_LCD_Init:	
  1047                           ; 1 bytes @ 0x0
  1048                           
  1049  0070                     ?_LCD_Write_4Bit:	
  1050                           ; 1 bytes @ 0x0
  1051                           
  1052  0070                     ?_LCD_Write_Char:	
  1053                           ; 1 bytes @ 0x0
  1054                           
  1055  0070                     ?_LCD_Clear:	
  1056                           ; 1 bytes @ 0x0
  1057                           
  1058  0070                     ?_Update_Farenheit:	
  1059                           ; 1 bytes @ 0x0
  1060                           
  1061  0070                     ?_Update_Celsius:	
  1062                           ; 1 bytes @ 0x0
  1063                           
  1064  0070                     ?_DisplayTemp:	
  1065                           ; 1 bytes @ 0x0
  1066                           
  1067  0070                     ?_main:	
  1068                           ; 1 bytes @ 0x0
  1069                           
  1070  0070                     ?__Umul8_16:	
  1071                           ; 1 bytes @ 0x0
  1072                           
  1073  0070                     ?___wmul:	
  1074                           ; 2 bytes @ 0x0
  1075                           
  1076  0070                     ?___lwdiv:	
  1077                           ; 2 bytes @ 0x0
  1078                           
  1079  0070                     ?___xxtofl:	
  1080                           ; 2 bytes @ 0x0
  1081                           
  1082  0070                     I2C_Write@data:	
  1083                           ; 4 bytes @ 0x0
  1084                           
  1085  0070                     __Umul8_16@multiplicand:	
  1086                           ; 1 bytes @ 0x0
  1087                           
  1088  0070                     _isdigit$1225:	
  1089                           ; 1 bytes @ 0x0
  1090                           
  1091  0070                     ___wmul@multiplier:	
  1092                           ; 1 bytes @ 0x0
  1093                           
  1094  0070                     ___lwdiv@divisor:	
  1095                           ; 2 bytes @ 0x0
  1096                           
  1097  0070                     ___xxtofl@val:	
  1098                           ; 2 bytes @ 0x0
  1099                           
  1100                           
  1101                           ; 4 bytes @ 0x0
  1102  0070                     	ds	1
  1103  0071                     ??_I2C_Start:
  1104  0071                     ??_I2C_Repeated_Start:	
  1105                           ; 1 bytes @ 0x1
  1106                           
  1107  0071                     I2C_Read@flag:	
  1108                           ; 1 bytes @ 0x1
  1109                           
  1110  0071                     I2C_Start@slave_write_address:	
  1111                           ; 1 bytes @ 0x1
  1112                           
  1113  0071                     I2C_Repeated_Start@slave_read_address:	
  1114                           ; 1 bytes @ 0x1
  1115                           
  1116  0071                     isdigit@c:	
  1117                           ; 1 bytes @ 0x1
  1118                           
  1119                           
  1120                           ; 1 bytes @ 0x1
  1121  0071                     	ds	1
  1122  0072                     ??_IO_Expander_Write:
  1123  0072                     ?_RTC_Clock_Write:	
  1124                           ; 1 bytes @ 0x2
  1125                           
  1126  0072                     ?_RTC_Calendar_Write:	
  1127                           ; 1 bytes @ 0x2
  1128                           
  1129  0072                     ??__Umul8_16:	
  1130                           ; 1 bytes @ 0x2
  1131                           
  1132  0072                     I2C_Read@buffer:	
  1133                           ; 1 bytes @ 0x2
  1134                           
  1135  0072                     IO_Expander_Write@Data:	
  1136                           ; 1 bytes @ 0x2
  1137                           
  1138  0072                     RTC_Clock_Write@min:	
  1139                           ; 1 bytes @ 0x2
  1140                           
  1141  0072                     RTC_Calendar_Write@date:	
  1142                           ; 1 bytes @ 0x2
  1143                           
  1144  0072                     ___wmul@multiplicand:	
  1145                           ; 1 bytes @ 0x2
  1146                           
  1147  0072                     ___lwdiv@dividend:	
  1148                           ; 2 bytes @ 0x2
  1149                           
  1150                           
  1151                           ; 2 bytes @ 0x2
  1152  0072                     	ds	1
  1153  0073                     ??_RTC_Read_Clock:
  1154  0073                     ??_RTC_Read_Calendar:	
  1155                           ; 1 bytes @ 0x3
  1156                           
  1157  0073                     ??_LCD_Write_4Bit:	
  1158                           ; 1 bytes @ 0x3
  1159                           
  1160  0073                     RTC_Clock_Write@hour:	
  1161                           ; 1 bytes @ 0x3
  1162                           
  1163  0073                     RTC_Calendar_Write@month:	
  1164                           ; 1 bytes @ 0x3
  1165                           
  1166                           
  1167                           ; 1 bytes @ 0x3
  1168  0073                     	ds	1
  1169  0074                     ??___wmul:
  1170  0074                     ??___lwdiv:	
  1171                           ; 1 bytes @ 0x4
  1172                           
  1173  0074                     ??___xxtofl:	
  1174                           ; 1 bytes @ 0x4
  1175                           
  1176  0074                     LCD_Write_4Bit@Nibble:	
  1177                           ; 1 bytes @ 0x4
  1178                           
  1179  0074                     RTC_Clock_Write@AM_PM:	
  1180                           ; 1 bytes @ 0x4
  1181                           
  1182  0074                     RTC_Calendar_Write@year:	
  1183                           ; 1 bytes @ 0x4
  1184                           
  1185  0074                     ___wmul@product:	
  1186                           ; 1 bytes @ 0x4
  1187                           
  1188  0074                     __Umul8_16@product:	
  1189                           ; 2 bytes @ 0x4
  1190                           
  1191                           
  1192                           ; 2 bytes @ 0x4
  1193  0074                     	ds	1
  1194  0075                     ??_LCD_CMD:
  1195  0075                     ??_RTC_Clock_Write:	
  1196                           ; 1 bytes @ 0x5
  1197                           
  1198  0075                     ??_RTC_Calendar_Write:	
  1199                           ; 1 bytes @ 0x5
  1200                           
  1201  0075                     ??_LCD_Write_Char:	
  1202                           ; 1 bytes @ 0x5
  1203                           
  1204  0075                     RTC_Read_Clock@read_clock_address:	
  1205                           ; 1 bytes @ 0x5
  1206                           
  1207  0075                     RTC_Read_Calendar@read_calendar_address:	
  1208                           ; 1 bytes @ 0x5
  1209                           
  1210  0075                     RTC_Calendar_Write@day:	
  1211                           ; 1 bytes @ 0x5
  1212                           
  1213  0075                     ___lwdiv@quotient:	
  1214                           ; 1 bytes @ 0x5
  1215                           
  1216                           
  1217                           ; 2 bytes @ 0x5
  1218  0075                     	ds	1
  1219  0076                     LCD_CMD@CMD:
  1220  0076                     LCD_Write_Char@Data:	
  1221                           ; 1 bytes @ 0x6
  1222                           
  1223  0076                     RTC_Clock_Write@sec:	
  1224                           ; 1 bytes @ 0x6
  1225                           
  1226  0076                     __Umul8_16@word_mpld:	
  1227                           ; 1 bytes @ 0x6
  1228                           
  1229                           
  1230                           ; 2 bytes @ 0x6
  1231  0076                     	ds	1
  1232  0077                     ?_LCD_Write_String:
  1233  0077                     ??_LCD_Init:	
  1234                           ; 1 bytes @ 0x7
  1235                           
  1236  0077                     ?_LCD_Set_Cursor:	
  1237                           ; 1 bytes @ 0x7
  1238                           
  1239  0077                     ??_LCD_Clear:	
  1240                           ; 1 bytes @ 0x7
  1241                           
  1242  0077                     LCD_Set_Cursor@COL:	
  1243                           ; 1 bytes @ 0x7
  1244                           
  1245  0077                     ___lwdiv@counter:	
  1246                           ; 1 bytes @ 0x7
  1247                           
  1248  0077                     LCD_Write_String@Str:	
  1249                           ; 1 bytes @ 0x7
  1250                           
  1251                           
  1252                           ; 2 bytes @ 0x7
  1253  0077                     	ds	1
  1254  0078                     ??_LCD_Set_Cursor:
  1255  0078                     ?___lwmod:	
  1256                           ; 1 bytes @ 0x8
  1257                           
  1258  0078                     __Umul8_16@multiplier:	
  1259                           ; 2 bytes @ 0x8
  1260                           
  1261  0078                     ___xxtofl@sign:	
  1262                           ; 1 bytes @ 0x8
  1263                           
  1264  0078                     ___lwmod@divisor:	
  1265                           ; 1 bytes @ 0x8
  1266                           
  1267                           
  1268                           ; 2 bytes @ 0x8
  1269  0078                     	ds	1
  1270  0079                     ??_LCD_Write_String:
  1271  0079                     ___xxtofl@exp:	
  1272                           ; 1 bytes @ 0x9
  1273                           
  1274                           
  1275                           ; 1 bytes @ 0x9
  1276  0079                     	ds	1
  1277  007A                     LCD_Set_Cursor@ROW:
  1278  007A                     ___lwmod@dividend:	
  1279                           ; 1 bytes @ 0xA
  1280                           
  1281  007A                     ___xxtofl@arg:	
  1282                           ; 2 bytes @ 0xA
  1283                           
  1284                           
  1285                           ; 4 bytes @ 0xA
  1286  007A                     	ds	2
  1287  007C                     ??___lwmod:
  1288  007C                     LCD_Write_String@i:	
  1289                           ; 1 bytes @ 0xC
  1290                           
  1291                           
  1292                           ; 2 bytes @ 0xC
  1293  007C                     	ds	1
  1294  007D                     ___lwmod@counter:
  1295                           
  1296                           ; 1 bytes @ 0xD
  1297  007D                     	ds	1
  1298                           
  1299                           	psect	cstackBANK0
  1300  0020                     __pcstackBANK0:
  1301  0020                     ?_LCD_String_xy:
  1302  0020                     ?_sprintf:	
  1303                           ; 1 bytes @ 0x0
  1304                           
  1305  0020                     ?___flmul:	
  1306                           ; 2 bytes @ 0x0
  1307                           
  1308  0020                     LCD_String_xy@pos:	
  1309                           ; 4 bytes @ 0x0
  1310                           
  1311  0020                     sprintf@sp:	
  1312                           ; 1 bytes @ 0x0
  1313                           
  1314  0020                     ___flmul@b:	
  1315                           ; 2 bytes @ 0x0
  1316                           
  1317                           
  1318                           ; 4 bytes @ 0x0
  1319  0020                     	ds	1
  1320  0021                     LCD_String_xy@msg:
  1321                           
  1322                           ; 2 bytes @ 0x1
  1323  0021                     	ds	1
  1324  0022                     sprintf@f:
  1325                           
  1326                           ; 1 bytes @ 0x2
  1327  0022                     	ds	1
  1328  0023                     ??_LCD_String_xy:
  1329                           
  1330                           ; 1 bytes @ 0x3
  1331  0023                     	ds	1
  1332  0024                     LCD_String_xy@row:
  1333  0024                     ___flmul@a:	
  1334                           ; 1 bytes @ 0x4
  1335                           
  1336                           
  1337                           ; 4 bytes @ 0x4
  1338  0024                     	ds	1
  1339  0025                     ??_sprintf:
  1340  0025                     LCD_String_xy@location:	
  1341                           ; 1 bytes @ 0x5
  1342                           
  1343                           
  1344                           ; 1 bytes @ 0x5
  1345  0025                     	ds	3
  1346  0028                     ??___flmul:
  1347  0028                     sprintf@idx:	
  1348                           ; 1 bytes @ 0x8
  1349                           
  1350                           
  1351                           ; 1 bytes @ 0x8
  1352  0028                     	ds	1
  1353  0029                     sprintf@prec:
  1354                           
  1355                           ; 1 bytes @ 0x9
  1356  0029                     	ds	1
  1357  002A                     sprintf@cp:
  1358                           
  1359                           ; 2 bytes @ 0xA
  1360  002A                     	ds	2
  1361  002C                     sprintf@ap:
  1362                           
  1363                           ; 1 bytes @ 0xC
  1364  002C                     	ds	1
  1365  002D                     ___flmul@sign:
  1366  002D                     sprintf@len:	
  1367                           ; 1 bytes @ 0xD
  1368                           
  1369                           
  1370                           ; 2 bytes @ 0xD
  1371  002D                     	ds	1
  1372  002E                     ___flmul@grs:
  1373                           
  1374                           ; 4 bytes @ 0xE
  1375  002E                     	ds	1
  1376  002F                     sprintf@flag:
  1377                           
  1378                           ; 1 bytes @ 0xF
  1379  002F                     	ds	1
  1380  0030                     sprintf@val:
  1381                           
  1382                           ; 2 bytes @ 0x10
  1383  0030                     	ds	2
  1384  0032                     ___flmul@aexp:
  1385  0032                     sprintf@width:	
  1386                           ; 1 bytes @ 0x12
  1387                           
  1388                           
  1389                           ; 2 bytes @ 0x12
  1390  0032                     	ds	1
  1391  0033                     ___flmul@bexp:
  1392                           
  1393                           ; 1 bytes @ 0x13
  1394  0033                     	ds	1
  1395  0034                     sprintf@c:
  1396  0034                     ___flmul@prod:	
  1397                           ; 1 bytes @ 0x14
  1398                           
  1399                           
  1400                           ; 4 bytes @ 0x14
  1401  0034                     	ds	1
  1402  0035                     ??_DisplayTemp:
  1403                           
  1404                           ; 1 bytes @ 0x15
  1405  0035                     	ds	3
  1406  0038                     ___flmul@temp:
  1407  0038                     DisplayTemp@buffer1:	
  1408                           ; 2 bytes @ 0x18
  1409                           
  1410                           
  1411                           ; 16 bytes @ 0x18
  1412  0038                     	ds	2
  1413  003A                     ?___fladd:
  1414  003A                     ___fladd@b:	
  1415                           ; 4 bytes @ 0x1A
  1416                           
  1417                           
  1418                           ; 4 bytes @ 0x1A
  1419  003A                     	ds	4
  1420  003E                     ___fladd@a:
  1421                           
  1422                           ; 4 bytes @ 0x1E
  1423  003E                     	ds	4
  1424  0042                     ??___fladd:
  1425                           
  1426                           ; 1 bytes @ 0x22
  1427  0042                     	ds	6
  1428  0048                     DisplayTemp@buffer2:
  1429                           
  1430                           ; 16 bytes @ 0x28
  1431  0048                     	ds	2
  1432  004A                     ___fladd@signs:
  1433                           
  1434                           ; 1 bytes @ 0x2A
  1435  004A                     	ds	1
  1436  004B                     ___fladd@aexp:
  1437                           
  1438                           ; 1 bytes @ 0x2B
  1439  004B                     	ds	1
  1440  004C                     ___fladd@bexp:
  1441                           
  1442                           ; 1 bytes @ 0x2C
  1443  004C                     	ds	1
  1444  004D                     ___fladd@grs:
  1445                           
  1446                           ; 1 bytes @ 0x2D
  1447  004D                     	ds	1
  1448  004E                     ?___fltol:
  1449  004E                     ___fltol@f1:	
  1450                           ; 4 bytes @ 0x2E
  1451                           
  1452                           
  1453                           ; 4 bytes @ 0x2E
  1454  004E                     	ds	4
  1455  0052                     ??___fltol:
  1456                           
  1457                           ; 1 bytes @ 0x32
  1458  0052                     	ds	5
  1459  0057                     ___fltol@sign1:
  1460                           
  1461                           ; 1 bytes @ 0x37
  1462  0057                     	ds	1
  1463  0058                     ___fltol@exp1:
  1464                           
  1465                           ; 1 bytes @ 0x38
  1466  0058                     	ds	1
  1467  0059                     ??_Update_Farenheit:
  1468  0059                     ??_Update_Celsius:	
  1469                           ; 1 bytes @ 0x39
  1470                           
  1471                           
  1472                           ; 1 bytes @ 0x39
  1473  0059                     	ds	2
  1474  005B                     ??_main:
  1475                           
  1476                           ; 1 bytes @ 0x3B
  1477  005B                     	ds	3
  1478                           
  1479                           	psect	maintext
  1480  03AF                     __pmaintext:	
  1481 ;;
  1482 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1483 ;;
  1484 ;; *************** function _main *****************
  1485 ;; Defined at:
  1486 ;;		line 38 in file "interface_main.c"
  1487 ;; Parameters:    Size  Location     Type
  1488 ;;		None
  1489 ;; Auto vars:     Size  Location     Type
  1490 ;;  buffer3        16   16[BANK1 ] unsigned char [16]
  1491 ;;  tmp             2   32[BANK1 ] unsigned int 
  1492 ;;  buffer3        16    0[BANK1 ] unsigned char [16]
  1493 ;;  displayMode     2   34[BANK1 ] short 
  1494 ;; Return value:  Size  Location     Type
  1495 ;;                  1    wreg      void 
  1496 ;; Registers used:
  1497 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1498 ;; Tracked objects:
  1499 ;;		On entry : B00/0
  1500 ;;		On exit  : 0/0
  1501 ;;		Unchanged: 0/0
  1502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1503 ;;      Params:         0       0       0       0       0
  1504 ;;      Locals:         0       0      36       0       0
  1505 ;;      Temps:          0       3       0       0       0
  1506 ;;      Totals:         0       3      36       0       0
  1507 ;;Total ram usage:       39 bytes
  1508 ;; Hardware stack levels required when called: 8
  1509 ;; This function calls:
  1510 ;;		_DisplayTemp
  1511 ;;		_I2C_Init
  1512 ;;		_I2C_Stop
  1513 ;;		_LCD_Clear
  1514 ;;		_LCD_Init
  1515 ;;		_LCD_String_xy
  1516 ;;		_LCD_Write_String
  1517 ;;		_RTC_Calendar_Write
  1518 ;;		_RTC_Clock_Write
  1519 ;;		_RTC_Read_Calendar
  1520 ;;		_RTC_Read_Clock
  1521 ;;		_Update_Celsius
  1522 ;;		_Update_Farenheit
  1523 ;;		___lwdiv
  1524 ;;		_sprintf
  1525 ;; This function is called by:
  1526 ;;		Startup code after reset
  1527 ;; This function uses a non-reentrant model
  1528 ;;
  1529                           
  1530  03AF                     _main:	
  1531                           ;psect for function _main
  1532                           
  1533  03AF                     l3289:	
  1534                           ;incstack = 0
  1535                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1536                           
  1537                           
  1538                           ;interface_main.c: 39:     TRISB = 0x0;
  1539  03AF  1683               	bsf	3,5	;RP0=1, select bank1
  1540  03B0  1303               	bcf	3,6	;RP1=0, select bank1
  1541  03B1  0186               	clrf	6	;volatile
  1542                           
  1543                           ;interface_main.c: 40:     TRISC = 0x0;
  1544  03B2  0187               	clrf	7	;volatile
  1545                           
  1546                           ;interface_main.c: 41:     ANSEL = 0x0;
  1547  03B3  1683               	bsf	3,5	;RP0=1, select bank3
  1548  03B4  1703               	bsf	3,6	;RP1=1, select bank3
  1549  03B5  0188               	clrf	8	;volatile
  1550                           
  1551                           ;interface_main.c: 42:     ANSELH = 0x00;
  1552  03B6  0189               	clrf	9	;volatile
  1553  03B7                     l3291:
  1554                           
  1555                           ;interface_main.c: 44:     TRISB = 0b00110000;
  1556  03B7  3030               	movlw	48
  1557  03B8  1683               	bsf	3,5	;RP0=1, select bank1
  1558  03B9  1303               	bcf	3,6	;RP1=0, select bank1
  1559  03BA  0086               	movwf	6	;volatile
  1560  03BB                     l3293:
  1561                           
  1562                           ;interface_main.c: 45:     PORTB = 0b00110000;
  1563  03BB  3030               	movlw	48
  1564  03BC  1283               	bcf	3,5	;RP0=0, select bank0
  1565  03BD  1303               	bcf	3,6	;RP1=0, select bank0
  1566  03BE  0086               	movwf	6	;volatile
  1567                           
  1568                           ;interface_main.c: 46:     TRISE = 0x0;
  1569  03BF  1683               	bsf	3,5	;RP0=1, select bank1
  1570  03C0  1303               	bcf	3,6	;RP1=0, select bank1
  1571  03C1  0189               	clrf	9	;volatile
  1572  03C2                     l3295:
  1573                           
  1574                           ;interface_main.c: 50:     CCP1CONbits.CCP1M3 = 1;
  1575  03C2  1283               	bcf	3,5	;RP0=0, select bank0
  1576  03C3  1303               	bcf	3,6	;RP1=0, select bank0
  1577  03C4  1597               	bsf	23,3	;volatile
  1578  03C5                     l3297:
  1579                           
  1580                           ;interface_main.c: 51:     CCP1CONbits.CCP1M2 = 1;
  1581  03C5  1517               	bsf	23,2	;volatile
  1582  03C6                     l3299:
  1583                           
  1584                           ;interface_main.c: 52:     CCP1CONbits.P1M = 0b00;
  1585  03C6  303F               	movlw	-193
  1586  03C7  0597               	andwf	23,f	;volatile
  1587  03C8                     l3301:
  1588                           
  1589                           ;interface_main.c: 55:     CCPR1L = 0;
  1590  03C8  0195               	clrf	21	;volatile
  1591  03C9                     l3303:
  1592                           
  1593                           ;interface_main.c: 58:     PR2 = 0x65;
  1594  03C9  3065               	movlw	101
  1595  03CA  1683               	bsf	3,5	;RP0=1, select bank1
  1596  03CB  1303               	bcf	3,6	;RP1=0, select bank1
  1597  03CC  0092               	movwf	18	;volatile
  1598  03CD                     l3305:
  1599                           
  1600                           ;interface_main.c: 61:     T2CONbits.TOUTPS = 0b0000;
  1601  03CD  3087               	movlw	-121
  1602  03CE  1283               	bcf	3,5	;RP0=0, select bank0
  1603  03CF  1303               	bcf	3,6	;RP1=0, select bank0
  1604  03D0  0592               	andwf	18,f	;volatile
  1605  03D1                     l3307:
  1606                           
  1607                           ;interface_main.c: 62:     T2CONbits.TMR2ON = 1;
  1608  03D1  1512               	bsf	18,2	;volatile
  1609  03D2                     l3309:
  1610                           
  1611                           ;interface_main.c: 63:     T2CONbits.T2CKPS = 0b0;
  1612  03D2  30FC               	movlw	-4
  1613  03D3  0592               	andwf	18,f	;volatile
  1614  03D4                     l3311:
  1615                           
  1616                           ;interface_main.c: 66:     INTCONbits.GIE = 1;
  1617  03D4  178B               	bsf	11,7	;volatile
  1618  03D5                     l3313:
  1619                           
  1620                           ;interface_main.c: 67:     INTCONbits.PEIE = 1;
  1621  03D5  170B               	bsf	11,6	;volatile
  1622  03D6                     l3315:
  1623                           
  1624                           ;interface_main.c: 70:     PSTRCONbits.STRC = 1;
  1625  03D6  1683               	bsf	3,5	;RP0=1, select bank1
  1626  03D7  1303               	bcf	3,6	;RP1=0, select bank1
  1627  03D8  151D               	bsf	29,2	;volatile
  1628  03D9                     l3317:
  1629                           
  1630                           ;interface_main.c: 72:     I2C_Init();
  1631  03D9  160A  118A  2421  120A  118A  	fcall	_I2C_Init
  1632  03DE                     l3319:
  1633                           
  1634                           ;interface_main.c: 73:     LCD_Init();
  1635  03DE  120A  158A  217C  120A  118A  	fcall	_LCD_Init
  1636  03E3                     l3321:
  1637                           
  1638                           ;interface_main.c: 74:     LCD_Clear();
  1639  03E3  160A  118A  23DC  120A  118A  	fcall	_LCD_Clear
  1640  03E8                     l3323:
  1641                           
  1642                           ;interface_main.c: 75:     _delay((unsigned long)((10)*(8000000/4000.0)));
  1643  03E8  301A               	movlw	26
  1644  03E9  1283               	bcf	3,5	;RP0=0, select bank0
  1645  03EA  1303               	bcf	3,6	;RP1=0, select bank0
  1646  03EB  00DC               	movwf	??_main+1
  1647  03EC  30F7               	movlw	247
  1648  03ED  00DB               	movwf	??_main
  1649  03EE                     u3957:
  1650  03EE  0BDB               	decfsz	??_main,f
  1651  03EF  2BEE               	goto	u3957
  1652  03F0  0BDC               	decfsz	??_main+1,f
  1653  03F1  2BEE               	goto	u3957
  1654  03F2  2BF3               	nop2
  1655  03F3                     l3325:
  1656                           
  1657                           ;interface_main.c: 77:     RTC_Clock_Write(0x00, 0x14, 0x10, 0x40);
  1658  03F3  3014               	movlw	20
  1659  03F4  1283               	bcf	3,5	;RP0=0, select bank0
  1660  03F5  1303               	bcf	3,6	;RP1=0, select bank0
  1661  03F6  00DB               	movwf	??_main
  1662  03F7  085B               	movf	??_main,w
  1663  03F8  00F2               	movwf	RTC_Clock_Write@min
  1664  03F9  3010               	movlw	16
  1665  03FA  00DC               	movwf	??_main+1
  1666  03FB  085C               	movf	??_main+1,w
  1667  03FC  00F3               	movwf	RTC_Clock_Write@hour
  1668  03FD  3040               	movlw	64
  1669  03FE  00DD               	movwf	??_main+2
  1670  03FF  085D               	movf	??_main+2,w
  1671  0400  00F4               	movwf	RTC_Clock_Write@AM_PM
  1672  0401  3000               	movlw	0
  1673  0402  160A  118A  2541  120A  118A  	fcall	_RTC_Clock_Write
  1674  0407                     l3327:
  1675                           
  1676                           ;interface_main.c: 78:     RTC_Calendar_Write(0x1, 0x22, 0x04, 0x18);
  1677  0407  3022               	movlw	34
  1678  0408  1283               	bcf	3,5	;RP0=0, select bank0
  1679  0409  1303               	bcf	3,6	;RP1=0, select bank0
  1680  040A  00DB               	movwf	??_main
  1681  040B  085B               	movf	??_main,w
  1682  040C  00F2               	movwf	RTC_Calendar_Write@date
  1683  040D  3004               	movlw	4
  1684  040E  00DC               	movwf	??_main+1
  1685  040F  085C               	movf	??_main+1,w
  1686  0410  00F3               	movwf	RTC_Calendar_Write@month
  1687  0411  3018               	movlw	24
  1688  0412  00DD               	movwf	??_main+2
  1689  0413  085D               	movf	??_main+2,w
  1690  0414  00F4               	movwf	RTC_Calendar_Write@year
  1691  0415  3001               	movlw	1
  1692  0416  160A  118A  256B  120A  118A  	fcall	_RTC_Calendar_Write
  1693  041B                     l3329:
  1694                           
  1695                           ;interface_main.c: 80:     short int displayMode = 0;
  1696  041B  1683               	bsf	3,5	;RP0=1, select bank1
  1697  041C  1303               	bcf	3,6	;RP1=0, select bank1
  1698  041D  01C2               	clrf	main@displayMode^(0+128)
  1699  041E  01C3               	clrf	(main@displayMode+1)^(0+128)
  1700  041F                     l3331:
  1701                           
  1702                           ;interface_main.c: 84:         LCD_Clear();
  1703  041F  160A  118A  23DC  120A  118A  	fcall	_LCD_Clear
  1704  0424                     l3333:
  1705                           
  1706                           ;interface_main.c: 87:         if (displayMode == 0)
  1707  0424  1683               	bsf	3,5	;RP0=1, select bank1
  1708  0425  1303               	bcf	3,6	;RP1=0, select bank1
  1709  0426  0842               	movf	main@displayMode^(0+128),w
  1710  0427  0443               	iorwf	(main@displayMode+1)^(0+128),w
  1711  0428  1D03               	btfss	3,2
  1712  0429  2C2B               	goto	u3711
  1713  042A  2C2C               	goto	u3710
  1714  042B                     u3711:
  1715  042B  2C78               	goto	l3349
  1716  042C                     u3710:
  1717  042C                     l3335:
  1718                           
  1719                           ;interface_main.c: 88:         {;interface_main.c: 89:             char buffer3[16];;int
      +                          erface_main.c: 90:             sprintf(buffer3, "%s", "Hello There");
  1720  042C  30A0               	movlw	(low (main@buffer3| 0))& (0+255)
  1721  042D  1283               	bcf	3,5	;RP0=0, select bank0
  1722  042E  1303               	bcf	3,6	;RP1=0, select bank0
  1723  042F  00A0               	movwf	sprintf@sp
  1724  0430  3000               	movlw	0
  1725  0431  00A1               	movwf	sprintf@sp+1
  1726  0432  3092               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1727  0433  00DB               	movwf	??_main
  1728  0434  085B               	movf	??_main,w
  1729  0435  00A2               	movwf	sprintf@f
  1730  0436  3024               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1731  0437  00A3               	movwf	low ((?_sprintf| 0+3))
  1732  0438  3080               	movlw	128
  1733  0439  00A4               	movwf	(low ((?_sprintf| 0+3))+1)
  1734  043A  120A  158A  2545  120A  118A  	fcall	_sprintf
  1735                           
  1736                           ;interface_main.c: 91:             LCD_String_xy(0,0,buffer3);
  1737  043F  1283               	bcf	3,5	;RP0=0, select bank0
  1738  0440  1303               	bcf	3,6	;RP1=0, select bank0
  1739  0441  01A0               	clrf	LCD_String_xy@pos
  1740  0442  30A0               	movlw	(low (main@buffer3| 0))& (0+255)
  1741  0443  00A1               	movwf	LCD_String_xy@msg
  1742  0444  3000               	movlw	0
  1743  0445  00A2               	movwf	LCD_String_xy@msg+1
  1744  0446  3000               	movlw	0
  1745  0447  160A  118A  2596  120A  118A  	fcall	_LCD_String_xy
  1746  044C                     l3337:
  1747                           
  1748                           ;interface_main.c: 92:             _delay((unsigned long)((100)*(8000000/4000.0)));
  1749  044C  3002               	movlw	2
  1750  044D  1283               	bcf	3,5	;RP0=0, select bank0
  1751  044E  1303               	bcf	3,6	;RP1=0, select bank0
  1752  044F  00DD               	movwf	??_main+2
  1753  0450  3004               	movlw	4
  1754  0451  00DC               	movwf	??_main+1
  1755  0452  30B9               	movlw	185
  1756  0453  00DB               	movwf	??_main
  1757  0454                     u3967:
  1758  0454  0BDB               	decfsz	??_main,f
  1759  0455  2C54               	goto	u3967
  1760  0456  0BDC               	decfsz	??_main+1,f
  1761  0457  2C54               	goto	u3967
  1762  0458  0BDD               	decfsz	??_main+2,f
  1763  0459  2C54               	goto	u3967
  1764  045A  2C5B               	nop2
  1765  045B                     l3339:
  1766                           
  1767                           ;interface_main.c: 94:             if(RE3 == 0 && RB5 == 0)
  1768  045B  1283               	bcf	3,5	;RP0=0, select bank0
  1769  045C  1303               	bcf	3,6	;RP1=0, select bank0
  1770  045D  1989               	btfsc	9,3	;volatile
  1771  045E  2C60               	goto	u3721
  1772  045F  2C61               	goto	u3720
  1773  0460                     u3721:
  1774  0460  2FB0               	goto	l3523
  1775  0461                     u3720:
  1776  0461                     l3341:
  1777  0461  1A86               	btfsc	6,5	;volatile
  1778  0462  2C64               	goto	u3731
  1779  0463  2C65               	goto	u3730
  1780  0464                     u3731:
  1781  0464  2FB0               	goto	l3523
  1782  0465                     u3730:
  1783  0465                     l333:
  1784  0465  1989               	btfsc	9,3	;volatile
  1785  0466  2C68               	goto	u3741
  1786  0467  2C69               	goto	u3740
  1787  0468                     u3741:
  1788  0468  2C6D               	goto	l3347
  1789  0469                     u3740:
  1790  0469                     l3345:
  1791  0469  1E86               	btfss	6,5	;volatile
  1792  046A  2C6C               	goto	u3751
  1793  046B  2C6D               	goto	u3750
  1794  046C                     u3751:
  1795  046C  2C65               	goto	l333
  1796  046D                     u3750:
  1797  046D                     l3347:
  1798                           
  1799                           ;interface_main.c: 97:                 displayMode = displayMode+1;
  1800  046D  1683               	bsf	3,5	;RP0=1, select bank1
  1801  046E  1303               	bcf	3,6	;RP1=0, select bank1
  1802  046F  0842               	movf	main@displayMode^(0+128),w
  1803  0470  3E01               	addlw	1
  1804  0471  00C2               	movwf	main@displayMode^(0+128)
  1805  0472  0843               	movf	(main@displayMode+1)^(0+128),w
  1806  0473  1803               	skipnc
  1807  0474  3E01               	addlw	1
  1808  0475  3E00               	addlw	0
  1809  0476  00C3               	movwf	(main@displayMode+1)^(0+128)
  1810  0477  2FB0               	goto	l3523
  1811  0478                     l3349:
  1812  0478  0342               	decf	main@displayMode^(0+128),w
  1813  0479  0443               	iorwf	(main@displayMode+1)^(0+128),w
  1814  047A  1D03               	btfss	3,2
  1815  047B  2C7D               	goto	u3761
  1816  047C  2C7E               	goto	u3760
  1817  047D                     u3761:
  1818  047D  2EA3               	goto	l3437
  1819  047E                     u3760:
  1820  047E                     l3351:
  1821                           
  1822                           ;interface_main.c: 102:         {;interface_main.c: 103:             RTC_Read_Clock(0);
  1823  047E  3000               	movlw	0
  1824  047F  160A  118A  2634  120A  118A  	fcall	_RTC_Read_Clock
  1825                           
  1826                           ;interface_main.c: 104:             I2C_Stop();
  1827  0484  160A  118A  23C1  120A  118A  	fcall	_I2C_Stop
  1828  0489                     l3353:
  1829                           
  1830                           ;interface_main.c: 105:             if(hour & (1<<Clock_type)){
  1831  0489  1683               	bsf	3,5	;RP0=1, select bank1
  1832  048A  1303               	bcf	3,6	;RP1=0, select bank1
  1833  048B  1F4C               	btfss	_hour^(0+128),6
  1834  048C  2C8E               	goto	u3771
  1835  048D  2C8F               	goto	u3770
  1836  048E                     u3771:
  1837  048E  2D2D               	goto	l3375
  1838  048F                     u3770:
  1839  048F                     l3355:
  1840                           
  1841                           ;interface_main.c: 107:                 if(hour & (1<<AM_PM)){
  1842  048F  1ECC               	btfss	_hour^(0+128),5
  1843  0490  2C92               	goto	u3781
  1844  0491  2C93               	goto	u3780
  1845  0492                     u3781:
  1846  0492  2CA4               	goto	l3359
  1847  0493                     u3780:
  1848  0493                     l3357:
  1849                           
  1850                           ;interface_main.c: 108:                     LCD_String_xy(1,13,"PM");
  1851  0493  300D               	movlw	13
  1852  0494  1283               	bcf	3,5	;RP0=0, select bank0
  1853  0495  1303               	bcf	3,6	;RP1=0, select bank0
  1854  0496  00DB               	movwf	??_main
  1855  0497  085B               	movf	??_main,w
  1856  0498  00A0               	movwf	LCD_String_xy@pos
  1857  0499  308F               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1858  049A  00A1               	movwf	LCD_String_xy@msg
  1859  049B  3080               	movlw	128
  1860  049C  00A2               	movwf	LCD_String_xy@msg+1
  1861  049D  3001               	movlw	1
  1862  049E  160A  118A  2596  120A  118A  	fcall	_LCD_String_xy
  1863                           
  1864                           ;interface_main.c: 109:                 }
  1865  04A3  2CB4               	goto	l3361
  1866  04A4                     l3359:
  1867                           
  1868                           ;interface_main.c: 111:                     LCD_String_xy(1,13,"AM");
  1869  04A4  300D               	movlw	13
  1870  04A5  1283               	bcf	3,5	;RP0=0, select bank0
  1871  04A6  1303               	bcf	3,6	;RP1=0, select bank0
  1872  04A7  00DB               	movwf	??_main
  1873  04A8  085B               	movf	??_main,w
  1874  04A9  00A0               	movwf	LCD_String_xy@pos
  1875  04AA  308C               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1876  04AB  00A1               	movwf	LCD_String_xy@msg
  1877  04AC  3080               	movlw	128
  1878  04AD  00A2               	movwf	LCD_String_xy@msg+1
  1879  04AE  3001               	movlw	1
  1880  04AF  160A  118A  2596  120A  118A  	fcall	_LCD_String_xy
  1881  04B4                     l3361:
  1882                           
  1883                           ;interface_main.c: 114:                 hour = hour & (0x1f);
  1884  04B4  301F               	movlw	31
  1885  04B5  1683               	bsf	3,5	;RP0=1, select bank1
  1886  04B6  1303               	bcf	3,6	;RP1=0, select bank1
  1887  04B7  054C               	andwf	_hour^(0+128),w
  1888  04B8  00CC               	movwf	_hour^(0+128)
  1889  04B9  3000               	movlw	0
  1890  04BA  054D               	andwf	(_hour+1)^(0+128),w
  1891  04BB  00CD               	movwf	(_hour+1)^(0+128)
  1892  04BC                     l3363:
  1893                           
  1894                           ;interface_main.c: 115:                 sprintf(secs,"%x ",sec);
  1895  04BC  30DC               	movlw	(low (_secs| 0))& (0+255)
  1896  04BD  1283               	bcf	3,5	;RP0=0, select bank0
  1897  04BE  1303               	bcf	3,6	;RP1=0, select bank0
  1898  04BF  00A0               	movwf	sprintf@sp
  1899  04C0  3000               	movlw	0
  1900  04C1  00A1               	movwf	sprintf@sp+1
  1901  04C2  3068               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1902  04C3  00DB               	movwf	??_main
  1903  04C4  085B               	movf	??_main,w
  1904  04C5  00A2               	movwf	sprintf@f
  1905  04C6  1683               	bsf	3,5	;RP0=1, select bank1
  1906  04C7  1303               	bcf	3,6	;RP1=0, select bank1
  1907  04C8  0851               	movf	(_sec+1)^(0+128),w
  1908  04C9  1283               	bcf	3,5	;RP0=0, select bank0
  1909  04CA  1303               	bcf	3,6	;RP1=0, select bank0
  1910  04CB  00A4               	movwf	?_sprintf+4
  1911  04CC  1683               	bsf	3,5	;RP0=1, select bank1
  1912  04CD  1303               	bcf	3,6	;RP1=0, select bank1
  1913  04CE  0850               	movf	_sec^(0+128),w
  1914  04CF  1283               	bcf	3,5	;RP0=0, select bank0
  1915  04D0  1303               	bcf	3,6	;RP1=0, select bank0
  1916  04D1  00A3               	movwf	?_sprintf+3
  1917  04D2  120A  158A  2545  120A  118A  	fcall	_sprintf
  1918  04D7                     l3365:
  1919                           
  1920                           ;interface_main.c: 116:                 sprintf(mins,"%x:",min);
  1921  04D7  30D2               	movlw	(low (_mins| 0))& (0+255)
  1922  04D8  1283               	bcf	3,5	;RP0=0, select bank0
  1923  04D9  1303               	bcf	3,6	;RP1=0, select bank0
  1924  04DA  00A0               	movwf	sprintf@sp
  1925  04DB  3000               	movlw	0
  1926  04DC  00A1               	movwf	sprintf@sp+1
  1927  04DD  305D               	movlw	(low (((STR_9+4)-__stringbase)| (0+32768)))& (0+255)
  1928  04DE  00DB               	movwf	??_main
  1929  04DF  085B               	movf	??_main,w
  1930  04E0  00A2               	movwf	sprintf@f
  1931  04E1  1683               	bsf	3,5	;RP0=1, select bank1
  1932  04E2  1303               	bcf	3,6	;RP1=0, select bank1
  1933  04E3  084F               	movf	(_min+1)^(0+128),w
  1934  04E4  1283               	bcf	3,5	;RP0=0, select bank0
  1935  04E5  1303               	bcf	3,6	;RP1=0, select bank0
  1936  04E6  00A4               	movwf	?_sprintf+4
  1937  04E7  1683               	bsf	3,5	;RP0=1, select bank1
  1938  04E8  1303               	bcf	3,6	;RP1=0, select bank1
  1939  04E9  084E               	movf	_min^(0+128),w
  1940  04EA  1283               	bcf	3,5	;RP0=0, select bank0
  1941  04EB  1303               	bcf	3,6	;RP1=0, select bank0
  1942  04EC  00A3               	movwf	?_sprintf+3
  1943  04ED  120A  158A  2545  120A  118A  	fcall	_sprintf
  1944  04F2                     l3367:
  1945                           
  1946                           ;interface_main.c: 117:                 sprintf(hours,"Tim:%x:",hour);
  1947  04F2  30AE               	movlw	(low (_hours| (0+256)))& (0+255)
  1948  04F3  1283               	bcf	3,5	;RP0=0, select bank0
  1949  04F4  1303               	bcf	3,6	;RP1=0, select bank0
  1950  04F5  00A0               	movwf	sprintf@sp
  1951  04F6  3001               	movlw	1
  1952  04F7  00A1               	movwf	sprintf@sp+1
  1953  04F8  3059               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1954  04F9  00DB               	movwf	??_main
  1955  04FA  085B               	movf	??_main,w
  1956  04FB  00A2               	movwf	sprintf@f
  1957  04FC  1683               	bsf	3,5	;RP0=1, select bank1
  1958  04FD  1303               	bcf	3,6	;RP1=0, select bank1
  1959  04FE  084D               	movf	(_hour+1)^(0+128),w
  1960  04FF  1283               	bcf	3,5	;RP0=0, select bank0
  1961  0500  1303               	bcf	3,6	;RP1=0, select bank0
  1962  0501  00A4               	movwf	?_sprintf+4
  1963  0502  1683               	bsf	3,5	;RP0=1, select bank1
  1964  0503  1303               	bcf	3,6	;RP1=0, select bank1
  1965  0504  084C               	movf	_hour^(0+128),w
  1966  0505  1283               	bcf	3,5	;RP0=0, select bank0
  1967  0506  1303               	bcf	3,6	;RP1=0, select bank0
  1968  0507  00A3               	movwf	?_sprintf+3
  1969  0508  120A  158A  2545  120A  118A  	fcall	_sprintf
  1970  050D                     l3369:
  1971                           
  1972                           ;interface_main.c: 118:                 LCD_String_xy(0,0,hours);
  1973  050D  1283               	bcf	3,5	;RP0=0, select bank0
  1974  050E  1303               	bcf	3,6	;RP1=0, select bank0
  1975  050F  01A0               	clrf	LCD_String_xy@pos
  1976  0510  30AE               	movlw	(low (_hours| (0+256)))& (0+255)
  1977  0511  00A1               	movwf	LCD_String_xy@msg
  1978  0512  3001               	movlw	1
  1979  0513  00A2               	movwf	LCD_String_xy@msg+1
  1980  0514  3000               	movlw	0
  1981  0515  160A  118A  2596  120A  118A  	fcall	_LCD_String_xy
  1982  051A                     l3371:
  1983                           
  1984                           ;interface_main.c: 119:                 LCD_Write_String(mins);
  1985  051A  30D2               	movlw	(low (_mins| 0))& (0+255)
  1986  051B  00F7               	movwf	LCD_Write_String@Str
  1987  051C  3000               	movlw	0
  1988  051D  00F8               	movwf	LCD_Write_String@Str+1
  1989  051E  160A  118A  2672  120A  118A  	fcall	_LCD_Write_String
  1990  0523                     l3373:
  1991                           
  1992                           ;interface_main.c: 120:                 LCD_Write_String(secs);
  1993  0523  30DC               	movlw	(low (_secs| 0))& (0+255)
  1994  0524  00F7               	movwf	LCD_Write_String@Str
  1995  0525  3000               	movlw	0
  1996  0526  00F8               	movwf	LCD_Write_String@Str+1
  1997  0527  160A  118A  2672  120A  118A  	fcall	_LCD_Write_String
  1998                           
  1999                           ;interface_main.c: 121:             }
  2000  052C  2D92               	goto	l3389
  2001  052D                     l3375:
  2002                           
  2003                           ;interface_main.c: 124:                 hour = hour & (0x3f);
  2004  052D  303F               	movlw	63
  2005  052E  054C               	andwf	_hour^(0+128),w
  2006  052F  00CC               	movwf	_hour^(0+128)
  2007  0530  3000               	movlw	0
  2008  0531  054D               	andwf	(_hour+1)^(0+128),w
  2009  0532  00CD               	movwf	(_hour+1)^(0+128)
  2010  0533                     l3377:
  2011                           
  2012                           ;interface_main.c: 125:                 sprintf(secs,"%x ",sec);
  2013  0533  30DC               	movlw	(low (_secs| 0))& (0+255)
  2014  0534  1283               	bcf	3,5	;RP0=0, select bank0
  2015  0535  1303               	bcf	3,6	;RP1=0, select bank0
  2016  0536  00A0               	movwf	sprintf@sp
  2017  0537  3000               	movlw	0
  2018  0538  00A1               	movwf	sprintf@sp+1
  2019  0539  3068               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2020  053A  00DB               	movwf	??_main
  2021  053B  085B               	movf	??_main,w
  2022  053C  00A2               	movwf	sprintf@f
  2023  053D  1683               	bsf	3,5	;RP0=1, select bank1
  2024  053E  1303               	bcf	3,6	;RP1=0, select bank1
  2025  053F  0851               	movf	(_sec+1)^(0+128),w
  2026  0540  1283               	bcf	3,5	;RP0=0, select bank0
  2027  0541  1303               	bcf	3,6	;RP1=0, select bank0
  2028  0542  00A4               	movwf	?_sprintf+4
  2029  0543  1683               	bsf	3,5	;RP0=1, select bank1
  2030  0544  1303               	bcf	3,6	;RP1=0, select bank1
  2031  0545  0850               	movf	_sec^(0+128),w
  2032  0546  1283               	bcf	3,5	;RP0=0, select bank0
  2033  0547  1303               	bcf	3,6	;RP1=0, select bank0
  2034  0548  00A3               	movwf	?_sprintf+3
  2035  0549  120A  158A  2545  120A  118A  	fcall	_sprintf
  2036  054E                     l3379:
  2037                           
  2038                           ;interface_main.c: 126:                 sprintf(mins,"%x:",min);
  2039  054E  30D2               	movlw	(low (_mins| 0))& (0+255)
  2040  054F  1283               	bcf	3,5	;RP0=0, select bank0
  2041  0550  1303               	bcf	3,6	;RP1=0, select bank0
  2042  0551  00A0               	movwf	sprintf@sp
  2043  0552  3000               	movlw	0
  2044  0553  00A1               	movwf	sprintf@sp+1
  2045  0554  305D               	movlw	(low (((STR_9+4)-__stringbase)| (0+32768)))& (0+255)
  2046  0555  00DB               	movwf	??_main
  2047  0556  085B               	movf	??_main,w
  2048  0557  00A2               	movwf	sprintf@f
  2049  0558  1683               	bsf	3,5	;RP0=1, select bank1
  2050  0559  1303               	bcf	3,6	;RP1=0, select bank1
  2051  055A  084F               	movf	(_min+1)^(0+128),w
  2052  055B  1283               	bcf	3,5	;RP0=0, select bank0
  2053  055C  1303               	bcf	3,6	;RP1=0, select bank0
  2054  055D  00A4               	movwf	?_sprintf+4
  2055  055E  1683               	bsf	3,5	;RP0=1, select bank1
  2056  055F  1303               	bcf	3,6	;RP1=0, select bank1
  2057  0560  084E               	movf	_min^(0+128),w
  2058  0561  1283               	bcf	3,5	;RP0=0, select bank0
  2059  0562  1303               	bcf	3,6	;RP1=0, select bank0
  2060  0563  00A3               	movwf	?_sprintf+3
  2061  0564  120A  158A  2545  120A  118A  	fcall	_sprintf
  2062  0569                     l3381:
  2063                           
  2064                           ;interface_main.c: 127:                 sprintf(hours,"Tim:%x:",hour);
  2065  0569  30AE               	movlw	(low (_hours| (0+256)))& (0+255)
  2066  056A  1283               	bcf	3,5	;RP0=0, select bank0
  2067  056B  1303               	bcf	3,6	;RP1=0, select bank0
  2068  056C  00A0               	movwf	sprintf@sp
  2069  056D  3001               	movlw	1
  2070  056E  00A1               	movwf	sprintf@sp+1
  2071  056F  3059               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  2072  0570  00DB               	movwf	??_main
  2073  0571  085B               	movf	??_main,w
  2074  0572  00A2               	movwf	sprintf@f
  2075  0573  1683               	bsf	3,5	;RP0=1, select bank1
  2076  0574  1303               	bcf	3,6	;RP1=0, select bank1
  2077  0575  084D               	movf	(_hour+1)^(0+128),w
  2078  0576  1283               	bcf	3,5	;RP0=0, select bank0
  2079  0577  1303               	bcf	3,6	;RP1=0, select bank0
  2080  0578  00A4               	movwf	?_sprintf+4
  2081  0579  1683               	bsf	3,5	;RP0=1, select bank1
  2082  057A  1303               	bcf	3,6	;RP1=0, select bank1
  2083  057B  084C               	movf	_hour^(0+128),w
  2084  057C  1283               	bcf	3,5	;RP0=0, select bank0
  2085  057D  1303               	bcf	3,6	;RP1=0, select bank0
  2086  057E  00A3               	movwf	?_sprintf+3
  2087  057F  120A  158A  2545  120A  118A  	fcall	_sprintf
  2088  0584                     l3383:
  2089                           
  2090                           ;interface_main.c: 128:                 LCD_String_xy(0,0,hours);
  2091  0584  1283               	bcf	3,5	;RP0=0, select bank0
  2092  0585  1303               	bcf	3,6	;RP1=0, select bank0
  2093  0586  01A0               	clrf	LCD_String_xy@pos
  2094  0587  30AE               	movlw	(low (_hours| (0+256)))& (0+255)
  2095  0588  00A1               	movwf	LCD_String_xy@msg
  2096  0589  3001               	movlw	1
  2097  058A  00A2               	movwf	LCD_String_xy@msg+1
  2098  058B  3000               	movlw	0
  2099  058C  160A  118A  2596  120A  118A  	fcall	_LCD_String_xy
  2100  0591  2D1A               	goto	l3371
  2101  0592                     l3389:
  2102                           
  2103                           ;interface_main.c: 133:             RTC_Read_Calendar(3);
  2104  0592  3003               	movlw	3
  2105  0593  120A  158A  20AF  120A  118A  	fcall	_RTC_Read_Calendar
  2106  0598                     l3391:
  2107                           
  2108                           ;interface_main.c: 134:             I2C_Stop();
  2109  0598  160A  118A  23C1  120A  118A  	fcall	_I2C_Stop
  2110  059D                     l3393:
  2111                           
  2112                           ;interface_main.c: 135:             sprintf(date,"Cal:%x-",Date);
  2113  059D  30A4               	movlw	(low (_date| (0+256)))& (0+255)
  2114  059E  1283               	bcf	3,5	;RP0=0, select bank0
  2115  059F  1303               	bcf	3,6	;RP1=0, select bank0
  2116  05A0  00A0               	movwf	sprintf@sp
  2117  05A1  3001               	movlw	1
  2118  05A2  00A1               	movwf	sprintf@sp+1
  2119  05A3  3051               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  2120  05A4  00DB               	movwf	??_main
  2121  05A5  085B               	movf	??_main,w
  2122  05A6  00A2               	movwf	sprintf@f
  2123  05A7  1683               	bsf	3,5	;RP0=1, select bank1
  2124  05A8  1303               	bcf	3,6	;RP1=0, select bank1
  2125  05A9  0849               	movf	(_Date+1)^(0+128),w
  2126  05AA  1283               	bcf	3,5	;RP0=0, select bank0
  2127  05AB  1303               	bcf	3,6	;RP1=0, select bank0
  2128  05AC  00A4               	movwf	?_sprintf+4
  2129  05AD  1683               	bsf	3,5	;RP0=1, select bank1
  2130  05AE  1303               	bcf	3,6	;RP1=0, select bank1
  2131  05AF  0848               	movf	_Date^(0+128),w
  2132  05B0  1283               	bcf	3,5	;RP0=0, select bank0
  2133  05B1  1303               	bcf	3,6	;RP1=0, select bank0
  2134  05B2  00A3               	movwf	?_sprintf+3
  2135  05B3  120A  158A  2545  120A  118A  	fcall	_sprintf
  2136  05B8                     l3395:
  2137                           
  2138                           ;interface_main.c: 136:             sprintf(month,"%x-",Month);
  2139  05B8  309A               	movlw	(low (_month| (0+256)))& (0+255)
  2140  05B9  1283               	bcf	3,5	;RP0=0, select bank0
  2141  05BA  1303               	bcf	3,6	;RP1=0, select bank0
  2142  05BB  00A0               	movwf	sprintf@sp
  2143  05BC  3001               	movlw	1
  2144  05BD  00A1               	movwf	sprintf@sp+1
  2145  05BE  3055               	movlw	(low (((STR_13+4)-__stringbase)| (0+32768)))& (0+255)
  2146  05BF  00DB               	movwf	??_main
  2147  05C0  085B               	movf	??_main,w
  2148  05C1  00A2               	movwf	sprintf@f
  2149  05C2  1683               	bsf	3,5	;RP0=1, select bank1
  2150  05C3  1303               	bcf	3,6	;RP1=0, select bank1
  2151  05C4  0847               	movf	(_Month+1)^(0+128),w
  2152  05C5  1283               	bcf	3,5	;RP0=0, select bank0
  2153  05C6  1303               	bcf	3,6	;RP1=0, select bank0
  2154  05C7  00A4               	movwf	?_sprintf+4
  2155  05C8  1683               	bsf	3,5	;RP0=1, select bank1
  2156  05C9  1303               	bcf	3,6	;RP1=0, select bank1
  2157  05CA  0846               	movf	_Month^(0+128),w
  2158  05CB  1283               	bcf	3,5	;RP0=0, select bank0
  2159  05CC  1303               	bcf	3,6	;RP1=0, select bank0
  2160  05CD  00A3               	movwf	?_sprintf+3
  2161  05CE  120A  158A  2545  120A  118A  	fcall	_sprintf
  2162  05D3                     l3397:
  2163                           
  2164                           ;interface_main.c: 137:             sprintf(year,"%x ",Year);
  2165  05D3  3090               	movlw	(low (_year| (0+256)))& (0+255)
  2166  05D4  1283               	bcf	3,5	;RP0=0, select bank0
  2167  05D5  1303               	bcf	3,6	;RP1=0, select bank0
  2168  05D6  00A0               	movwf	sprintf@sp
  2169  05D7  3001               	movlw	1
  2170  05D8  00A1               	movwf	sprintf@sp+1
  2171  05D9  3068               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2172  05DA  00DB               	movwf	??_main
  2173  05DB  085B               	movf	??_main,w
  2174  05DC  00A2               	movwf	sprintf@f
  2175  05DD  1683               	bsf	3,5	;RP0=1, select bank1
  2176  05DE  1303               	bcf	3,6	;RP1=0, select bank1
  2177  05DF  0845               	movf	(_Year+1)^(0+128),w
  2178  05E0  1283               	bcf	3,5	;RP0=0, select bank0
  2179  05E1  1303               	bcf	3,6	;RP1=0, select bank0
  2180  05E2  00A4               	movwf	?_sprintf+4
  2181  05E3  1683               	bsf	3,5	;RP0=1, select bank1
  2182  05E4  1303               	bcf	3,6	;RP1=0, select bank1
  2183  05E5  0844               	movf	_Year^(0+128),w
  2184  05E6  1283               	bcf	3,5	;RP0=0, select bank0
  2185  05E7  1303               	bcf	3,6	;RP1=0, select bank0
  2186  05E8  00A3               	movwf	?_sprintf+3
  2187  05E9  120A  158A  2545  120A  118A  	fcall	_sprintf
  2188  05EE                     l3399:
  2189                           
  2190                           ;interface_main.c: 138:             LCD_String_xy(2,0,date);
  2191  05EE  1283               	bcf	3,5	;RP0=0, select bank0
  2192  05EF  1303               	bcf	3,6	;RP1=0, select bank0
  2193  05F0  01A0               	clrf	LCD_String_xy@pos
  2194  05F1  30A4               	movlw	(low (_date| (0+256)))& (0+255)
  2195  05F2  00A1               	movwf	LCD_String_xy@msg
  2196  05F3  3001               	movlw	1
  2197  05F4  00A2               	movwf	LCD_String_xy@msg+1
  2198  05F5  3002               	movlw	2
  2199  05F6  160A  118A  2596  120A  118A  	fcall	_LCD_String_xy
  2200  05FB                     l3401:
  2201                           
  2202                           ;interface_main.c: 139:             LCD_Write_String(month);
  2203  05FB  309A               	movlw	(low (_month| (0+256)))& (0+255)
  2204  05FC  00F7               	movwf	LCD_Write_String@Str
  2205  05FD  3001               	movlw	1
  2206  05FE  00F8               	movwf	LCD_Write_String@Str+1
  2207  05FF  160A  118A  2672  120A  118A  	fcall	_LCD_Write_String
  2208  0604                     l3403:
  2209                           
  2210                           ;interface_main.c: 140:             LCD_Write_String(year);
  2211  0604  3090               	movlw	(low (_year| (0+256)))& (0+255)
  2212  0605  00F7               	movwf	LCD_Write_String@Str
  2213  0606  3001               	movlw	1
  2214  0607  00F8               	movwf	LCD_Write_String@Str+1
  2215  0608  160A  118A  2672  120A  118A  	fcall	_LCD_Write_String
  2216                           
  2217                           ;interface_main.c: 143:             switch(days[Day])
  2218  060D  2E5E               	goto	l3423
  2219  060E                     l3405:
  2220                           
  2221                           ;interface_main.c: 146:                         LCD_Write_String("Sun");
  2222  060E  307C               	movlw	(low ((STR_16-__stringbase)| (0+32768)))& (0+255)
  2223  060F  00F7               	movwf	LCD_Write_String@Str
  2224  0610  3080               	movlw	128
  2225  0611  00F8               	movwf	LCD_Write_String@Str+1
  2226  0612  160A  118A  2672  120A  118A  	fcall	_LCD_Write_String
  2227                           
  2228                           ;interface_main.c: 147:                         break;
  2229  0617  2E85               	goto	l3425
  2230  0618                     l3407:
  2231                           
  2232                           ;interface_main.c: 149:                         LCD_Write_String("Mon");
  2233  0618  3078               	movlw	(low ((STR_17-__stringbase)| (0+32768)))& (0+255)
  2234  0619  00F7               	movwf	LCD_Write_String@Str
  2235  061A  3080               	movlw	128
  2236  061B  00F8               	movwf	LCD_Write_String@Str+1
  2237  061C  160A  118A  2672  120A  118A  	fcall	_LCD_Write_String
  2238                           
  2239                           ;interface_main.c: 150:                         break;
  2240  0621  2E85               	goto	l3425
  2241  0622                     l3409:
  2242                           
  2243                           ;interface_main.c: 152:                         LCD_Write_String("Tue");
  2244  0622  3070               	movlw	(low ((STR_18-__stringbase)| (0+32768)))& (0+255)
  2245  0623  00F7               	movwf	LCD_Write_String@Str
  2246  0624  3080               	movlw	128
  2247  0625  00F8               	movwf	LCD_Write_String@Str+1
  2248  0626  160A  118A  2672  120A  118A  	fcall	_LCD_Write_String
  2249                           
  2250                           ;interface_main.c: 153:                         break;
  2251  062B  2E85               	goto	l3425
  2252  062C                     l3411:
  2253                           
  2254                           ;interface_main.c: 155:                         LCD_Write_String("Wed");
  2255  062C  306C               	movlw	(low ((STR_19-__stringbase)| (0+32768)))& (0+255)
  2256  062D  00F7               	movwf	LCD_Write_String@Str
  2257  062E  3080               	movlw	128
  2258  062F  00F8               	movwf	LCD_Write_String@Str+1
  2259  0630  160A  118A  2672  120A  118A  	fcall	_LCD_Write_String
  2260                           
  2261                           ;interface_main.c: 156:                         break;
  2262  0635  2E85               	goto	l3425
  2263  0636                     l3413:
  2264                           
  2265                           ;interface_main.c: 158:                         LCD_Write_String("Thu");
  2266  0636  3084               	movlw	(low ((STR_20-__stringbase)| (0+32768)))& (0+255)
  2267  0637  00F7               	movwf	LCD_Write_String@Str
  2268  0638  3080               	movlw	128
  2269  0639  00F8               	movwf	LCD_Write_String@Str+1
  2270  063A  160A  118A  2672  120A  118A  	fcall	_LCD_Write_String
  2271                           
  2272                           ;interface_main.c: 159:                         break;
  2273  063F  2E85               	goto	l3425
  2274  0640                     l3415:
  2275                           
  2276                           ;interface_main.c: 161:                         LCD_Write_String("Fri");
  2277  0640  3074               	movlw	(low ((STR_21-__stringbase)| (0+32768)))& (0+255)
  2278  0641  00F7               	movwf	LCD_Write_String@Str
  2279  0642  3080               	movlw	128
  2280  0643  00F8               	movwf	LCD_Write_String@Str+1
  2281  0644  160A  118A  2672  120A  118A  	fcall	_LCD_Write_String
  2282                           
  2283                           ;interface_main.c: 162:                         break;
  2284  0649  2E85               	goto	l3425
  2285  064A                     l3417:
  2286                           
  2287                           ;interface_main.c: 164:                         LCD_Write_String("Sat");
  2288  064A  3080               	movlw	(low ((STR_22-__stringbase)| (0+32768)))& (0+255)
  2289  064B  00F7               	movwf	LCD_Write_String@Str
  2290  064C  3080               	movlw	128
  2291  064D  00F8               	movwf	LCD_Write_String@Str+1
  2292  064E  160A  118A  2672  120A  118A  	fcall	_LCD_Write_String
  2293                           
  2294                           ;interface_main.c: 165:                         break;
  2295  0653  2E85               	goto	l3425
  2296  0654                     l3419:
  2297                           
  2298                           ;interface_main.c: 167:                         LCD_Write_String("Inv");
  2299  0654  3088               	movlw	(low ((STR_23-__stringbase)| (0+32768)))& (0+255)
  2300  0655  00F7               	movwf	LCD_Write_String@Str
  2301  0656  3080               	movlw	128
  2302  0657  00F8               	movwf	LCD_Write_String@Str+1
  2303  0658  160A  118A  2672  120A  118A  	fcall	_LCD_Write_String
  2304                           
  2305                           ;interface_main.c: 168:                         break;
  2306  065D  2E85               	goto	l3425
  2307  065E                     l3423:
  2308  065E  1683               	bsf	3,5	;RP0=1, select bank1
  2309  065F  1303               	bcf	3,6	;RP1=0, select bank1
  2310  0660  084A               	movf	_Day^(0+128),w
  2311  0661  3EE6               	addlw	(low (_days| 0))& (0+255)
  2312  0662  0084               	movwf	4
  2313  0663  1383               	bcf	3,7	;select IRP bank1
  2314  0664  0800               	movf	0,w
  2315  0665  1283               	bcf	3,5	;RP0=0, select bank0
  2316  0666  1303               	bcf	3,6	;RP1=0, select bank0
  2317  0667  00DB               	movwf	??_main
  2318  0668  01DC               	clrf	??_main+1
  2319                           
  2320                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2321                           ; Switch size 1, requested type "simple"
  2322                           ; Number of cases is 1, Range of values is 0 to 0
  2323                           ; switch strategies available:
  2324                           ; Name         Instructions Cycles
  2325                           ; simple_byte            4     3 (average)
  2326                           ; direct_byte           11     8 (fixed)
  2327                           ; jumptable            260     6 (fixed)
  2328                           ;	Chosen strategy is simple_byte
  2329  0669  085C               	movf	??_main+1,w
  2330  066A  3A00               	xorlw	0	; case 0
  2331  066B  1903               	skipnz
  2332  066C  2E6E               	goto	l3675
  2333  066D  2E54               	goto	l3419
  2334  066E                     l3675:
  2335                           
  2336                           ; Switch size 1, requested type "simple"
  2337                           ; Number of cases is 7, Range of values is 70 to 116
  2338                           ; switch strategies available:
  2339                           ; Name         Instructions Cycles
  2340                           ; simple_byte           22    12 (average)
  2341                           ; direct_byte          152    11 (fixed)
  2342                           ; jumptable            263     9 (fixed)
  2343                           ;	Chosen strategy is simple_byte
  2344  066E  085B               	movf	??_main,w
  2345  066F  3A46               	xorlw	70	; case 70
  2346  0670  1903               	skipnz
  2347  0671  2E40               	goto	l3415
  2348  0672  3A0B               	xorlw	11	; case 77
  2349  0673  1903               	skipnz
  2350  0674  2E18               	goto	l3407
  2351  0675  3A1E               	xorlw	30	; case 83
  2352  0676  1903               	skipnz
  2353  0677  2E0E               	goto	l3405
  2354  0678  3A07               	xorlw	7	; case 84
  2355  0679  1903               	skipnz
  2356  067A  2E22               	goto	l3409
  2357  067B  3A03               	xorlw	3	; case 87
  2358  067C  1903               	skipnz
  2359  067D  2E2C               	goto	l3411
  2360  067E  3A24               	xorlw	36	; case 115
  2361  067F  1903               	skipnz
  2362  0680  2E4A               	goto	l3417
  2363  0681  3A07               	xorlw	7	; case 116
  2364  0682  1903               	skipnz
  2365  0683  2E36               	goto	l3413
  2366  0684  2E54               	goto	l3419
  2367  0685                     l3425:
  2368                           
  2369                           ;interface_main.c: 172:             _delay((unsigned long)((10)*(8000000/4000.0)));
  2370  0685  301A               	movlw	26
  2371  0686  1283               	bcf	3,5	;RP0=0, select bank0
  2372  0687  1303               	bcf	3,6	;RP1=0, select bank0
  2373  0688  00DC               	movwf	??_main+1
  2374  0689  30F7               	movlw	247
  2375  068A  00DB               	movwf	??_main
  2376  068B                     u3977:
  2377  068B  0BDB               	decfsz	??_main,f
  2378  068C  2E8B               	goto	u3977
  2379  068D  0BDC               	decfsz	??_main+1,f
  2380  068E  2E8B               	goto	u3977
  2381  068F  2E90               	nop2
  2382  0690                     l3427:
  2383                           
  2384                           ;interface_main.c: 174:             if(RE3 == 0 && RB5 == 0)
  2385  0690  1283               	bcf	3,5	;RP0=0, select bank0
  2386  0691  1303               	bcf	3,6	;RP1=0, select bank0
  2387  0692  1989               	btfsc	9,3	;volatile
  2388  0693  2E95               	goto	u3791
  2389  0694  2E96               	goto	u3790
  2390  0695                     u3791:
  2391  0695  2FB0               	goto	l3523
  2392  0696                     u3790:
  2393  0696                     l3429:
  2394  0696  1A86               	btfsc	6,5	;volatile
  2395  0697  2E99               	goto	u3801
  2396  0698  2E9A               	goto	u3800
  2397  0699                     u3801:
  2398  0699  2FB0               	goto	l3523
  2399  069A                     u3800:
  2400  069A                     l355:
  2401  069A  1989               	btfsc	9,3	;volatile
  2402  069B  2E9D               	goto	u3811
  2403  069C  2E9E               	goto	u3810
  2404  069D                     u3811:
  2405  069D  2C6D               	goto	l3347
  2406  069E                     u3810:
  2407  069E                     l3433:
  2408  069E  1E86               	btfss	6,5	;volatile
  2409  069F  2EA1               	goto	u3821
  2410  06A0  2EA2               	goto	u3820
  2411  06A1                     u3821:
  2412  06A1  2E9A               	goto	l355
  2413  06A2                     u3820:
  2414  06A2  2C6D               	goto	l3347
  2415  06A3                     l3437:
  2416  06A3  3002               	movlw	2
  2417  06A4  0642               	xorwf	main@displayMode^(0+128),w
  2418  06A5  0443               	iorwf	(main@displayMode+1)^(0+128),w
  2419  06A6  1D03               	btfss	3,2
  2420  06A7  2EA9               	goto	u3831
  2421  06A8  2EAA               	goto	u3830
  2422  06A9                     u3831:
  2423  06A9  2EE5               	goto	l3471
  2424  06AA                     u3830:
  2425  06AA                     l3439:
  2426                           
  2427                           ;interface_main.c: 182:         {;interface_main.c: 184:             ANSELbits.ANS3 = 1;
  2428  06AA  1683               	bsf	3,5	;RP0=1, select bank3
  2429  06AB  1703               	bsf	3,6	;RP1=1, select bank3
  2430  06AC  1588               	bsf	8,3	;volatile
  2431  06AD                     l3441:
  2432                           
  2433                           ;interface_main.c: 187:             ADCON0bits.ADCS = 0b11;
  2434  06AD  30C0               	movlw	192
  2435  06AE  1283               	bcf	3,5	;RP0=0, select bank0
  2436  06AF  1303               	bcf	3,6	;RP1=0, select bank0
  2437  06B0  049F               	iorwf	31,f	;volatile
  2438                           
  2439                           ;interface_main.c: 188:             ADCON0bits.CHS = 0b0011;
  2440  06B1  081F               	movf	31,w	;volatile
  2441  06B2  39C3               	andlw	-61
  2442  06B3  380C               	iorlw	12
  2443  06B4  009F               	movwf	31	;volatile
  2444  06B5                     l3443:
  2445                           
  2446                           ;interface_main.c: 191:             ADCON1bits.VCFG1 = 0;
  2447  06B5  1683               	bsf	3,5	;RP0=1, select bank1
  2448  06B6  1303               	bcf	3,6	;RP1=0, select bank1
  2449  06B7  129F               	bcf	31,5	;volatile
  2450  06B8                     l3445:
  2451                           
  2452                           ;interface_main.c: 192:             ADCON1bits.VCFG0 = 0;
  2453  06B8  121F               	bcf	31,4	;volatile
  2454  06B9                     l3447:
  2455                           
  2456                           ;interface_main.c: 193:             ADCON1bits.ADFM = 1;
  2457  06B9  179F               	bsf	31,7	;volatile
  2458  06BA                     l3449:
  2459                           
  2460                           ;interface_main.c: 196:             PIR1bits.ADIF = 0;
  2461  06BA  1283               	bcf	3,5	;RP0=0, select bank0
  2462  06BB  1303               	bcf	3,6	;RP1=0, select bank0
  2463  06BC  130C               	bcf	12,6	;volatile
  2464  06BD                     l3451:
  2465                           
  2466                           ;interface_main.c: 199:             PIE1bits.ADIE = 1;
  2467  06BD  1683               	bsf	3,5	;RP0=1, select bank1
  2468  06BE  1303               	bcf	3,6	;RP1=0, select bank1
  2469  06BF  170C               	bsf	12,6	;volatile
  2470  06C0                     l3453:
  2471                           
  2472                           ;interface_main.c: 201:             ADCON0bits.ADON = 1;
  2473  06C0  1283               	bcf	3,5	;RP0=0, select bank0
  2474  06C1  1303               	bcf	3,6	;RP1=0, select bank0
  2475  06C2  141F               	bsf	31,0	;volatile
  2476  06C3                     l3455:
  2477                           
  2478                           ;interface_main.c: 204:             Update_Celsius();
  2479  06C3  160A  118A  2787  120A  118A  	fcall	_Update_Celsius
  2480  06C8                     l3457:
  2481                           
  2482                           ;interface_main.c: 205:             Update_Farenheit();
  2483  06C8  160A  118A  2712  120A  118A  	fcall	_Update_Farenheit
  2484  06CD                     l3459:
  2485                           
  2486                           ;interface_main.c: 206:             DisplayTemp();
  2487  06CD  160A  118A  26B4  120A  118A  	fcall	_DisplayTemp
  2488  06D2                     l3461:
  2489                           
  2490                           ;interface_main.c: 208:             if(RE3 == 0 && RB5 == 0)
  2491  06D2  1283               	bcf	3,5	;RP0=0, select bank0
  2492  06D3  1303               	bcf	3,6	;RP1=0, select bank0
  2493  06D4  1989               	btfsc	9,3	;volatile
  2494  06D5  2ED7               	goto	u3841
  2495  06D6  2ED8               	goto	u3840
  2496  06D7                     u3841:
  2497  06D7  2FB0               	goto	l3523
  2498  06D8                     u3840:
  2499  06D8                     l3463:
  2500  06D8  1A86               	btfsc	6,5	;volatile
  2501  06D9  2EDB               	goto	u3851
  2502  06DA  2EDC               	goto	u3850
  2503  06DB                     u3851:
  2504  06DB  2FB0               	goto	l3523
  2505  06DC                     u3850:
  2506  06DC                     l363:
  2507  06DC  1989               	btfsc	9,3	;volatile
  2508  06DD  2EDF               	goto	u3861
  2509  06DE  2EE0               	goto	u3860
  2510  06DF                     u3861:
  2511  06DF  2C6D               	goto	l3347
  2512  06E0                     u3860:
  2513  06E0                     l3467:
  2514  06E0  1E86               	btfss	6,5	;volatile
  2515  06E1  2EE3               	goto	u3871
  2516  06E2  2EE4               	goto	u3870
  2517  06E3                     u3871:
  2518  06E3  2EDC               	goto	l363
  2519  06E4                     u3870:
  2520  06E4  2C6D               	goto	l3347
  2521  06E5                     l3471:
  2522  06E5  3003               	movlw	3
  2523  06E6  0642               	xorwf	main@displayMode^(0+128),w
  2524  06E7  0443               	iorwf	(main@displayMode+1)^(0+128),w
  2525  06E8  1D03               	btfss	3,2
  2526  06E9  2EEB               	goto	u3881
  2527  06EA  2EEC               	goto	u3880
  2528  06EB                     u3881:
  2529  06EB  2FB0               	goto	l3523
  2530  06EC                     u3880:
  2531  06EC                     l3473:
  2532                           
  2533                           ;interface_main.c: 216:             ANSELbits.ANS4 = 1;
  2534  06EC  1683               	bsf	3,5	;RP0=1, select bank3
  2535  06ED  1703               	bsf	3,6	;RP1=1, select bank3
  2536  06EE  1608               	bsf	8,4	;volatile
  2537  06EF                     l3475:
  2538                           
  2539                           ;interface_main.c: 219:             ADCON0bits.ADCS = 0b11;
  2540  06EF  30C0               	movlw	192
  2541  06F0  1283               	bcf	3,5	;RP0=0, select bank0
  2542  06F1  1303               	bcf	3,6	;RP1=0, select bank0
  2543  06F2  049F               	iorwf	31,f	;volatile
  2544                           
  2545                           ;interface_main.c: 220:             ADCON0bits.CHS = 0b0100;
  2546  06F3  081F               	movf	31,w	;volatile
  2547  06F4  39C3               	andlw	-61
  2548  06F5  3810               	iorlw	16
  2549  06F6  009F               	movwf	31	;volatile
  2550  06F7                     l3477:
  2551                           
  2552                           ;interface_main.c: 223:             ADCON1bits.VCFG1 = 0;
  2553  06F7  1683               	bsf	3,5	;RP0=1, select bank1
  2554  06F8  1303               	bcf	3,6	;RP1=0, select bank1
  2555  06F9  129F               	bcf	31,5	;volatile
  2556  06FA                     l3479:
  2557                           
  2558                           ;interface_main.c: 224:             ADCON1bits.VCFG0 = 0;
  2559  06FA  121F               	bcf	31,4	;volatile
  2560  06FB                     l3481:
  2561                           
  2562                           ;interface_main.c: 225:             ADCON1bits.ADFM = 1;
  2563  06FB  179F               	bsf	31,7	;volatile
  2564  06FC                     l3483:
  2565                           
  2566                           ;interface_main.c: 228:             PIR1bits.ADIF = 0;
  2567  06FC  1283               	bcf	3,5	;RP0=0, select bank0
  2568  06FD  1303               	bcf	3,6	;RP1=0, select bank0
  2569  06FE  130C               	bcf	12,6	;volatile
  2570  06FF                     l3485:
  2571                           
  2572                           ;interface_main.c: 231:             PIE1bits.ADIE = 1;
  2573  06FF  1683               	bsf	3,5	;RP0=1, select bank1
  2574  0700  1303               	bcf	3,6	;RP1=0, select bank1
  2575  0701  170C               	bsf	12,6	;volatile
  2576  0702                     l3487:
  2577                           
  2578                           ;interface_main.c: 233:             ADCON0bits.ADON = 1;
  2579  0702  1283               	bcf	3,5	;RP0=0, select bank0
  2580  0703  1303               	bcf	3,6	;RP1=0, select bank0
  2581  0704  141F               	bsf	31,0	;volatile
  2582  0705                     l3489:
  2583                           
  2584                           ;interface_main.c: 235:             ADCON0bits.GO = 1;
  2585  0705  149F               	bsf	31,1	;volatile
  2586  0706                     l3491:
  2587                           
  2588                           ;interface_main.c: 237:             unsigned tmp = 0;
  2589  0706  1683               	bsf	3,5	;RP0=1, select bank1
  2590  0707  1303               	bcf	3,6	;RP1=0, select bank1
  2591  0708  01C0               	clrf	main@tmp^(0+128)
  2592  0709  01C1               	clrf	(main@tmp+1)^(0+128)
  2593  070A                     l370:	
  2594                           ;interface_main.c: 239:             while(ADCON0bits.GO == 1);
  2595                           
  2596  070A  1283               	bcf	3,5	;RP0=0, select bank0
  2597  070B  189F               	btfsc	31,1	;volatile
  2598  070C  2F0E               	goto	u3891
  2599  070D  2F0F               	goto	u3890
  2600  070E                     u3891:
  2601  070E  2F0A               	goto	l370
  2602  070F                     u3890:
  2603  070F                     l3493:
  2604                           
  2605                           ;interface_main.c: 242:             tmp = 0x0000;
  2606  070F  1683               	bsf	3,5	;RP0=1, select bank1
  2607  0710  1303               	bcf	3,6	;RP1=0, select bank1
  2608  0711  01C0               	clrf	main@tmp^(0+128)
  2609  0712  01C1               	clrf	(main@tmp+1)^(0+128)
  2610  0713                     l3495:
  2611                           
  2612                           ;interface_main.c: 243:             tmp = ADRESH;
  2613  0713  1283               	bcf	3,5	;RP0=0, select bank0
  2614  0714  1303               	bcf	3,6	;RP1=0, select bank0
  2615  0715  081E               	movf	30,w	;volatile
  2616  0716  00DB               	movwf	??_main
  2617  0717  01DC               	clrf	??_main+1
  2618  0718  085B               	movf	??_main,w
  2619  0719  1683               	bsf	3,5	;RP0=1, select bank1
  2620  071A  1303               	bcf	3,6	;RP1=0, select bank1
  2621  071B  00C0               	movwf	main@tmp^(0+128)
  2622  071C  1283               	bcf	3,5	;RP0=0, select bank0
  2623  071D  1303               	bcf	3,6	;RP1=0, select bank0
  2624  071E  085C               	movf	??_main+1,w
  2625  071F  1683               	bsf	3,5	;RP0=1, select bank1
  2626  0720  1303               	bcf	3,6	;RP1=0, select bank1
  2627  0721  00C1               	movwf	(main@tmp+1)^(0+128)
  2628  0722                     l3497:
  2629                           
  2630                           ;interface_main.c: 244:             tmp = tmp << 8;
  2631  0722  0840               	movf	main@tmp^(0+128),w
  2632  0723  1283               	bcf	3,5	;RP0=0, select bank0
  2633  0724  1303               	bcf	3,6	;RP1=0, select bank0
  2634  0725  00DC               	movwf	??_main+1
  2635  0726  01DB               	clrf	??_main
  2636  0727  085B               	movf	??_main,w
  2637  0728  1683               	bsf	3,5	;RP0=1, select bank1
  2638  0729  1303               	bcf	3,6	;RP1=0, select bank1
  2639  072A  00C0               	movwf	main@tmp^(0+128)
  2640  072B  1283               	bcf	3,5	;RP0=0, select bank0
  2641  072C  1303               	bcf	3,6	;RP1=0, select bank0
  2642  072D  085C               	movf	??_main+1,w
  2643  072E  1683               	bsf	3,5	;RP0=1, select bank1
  2644  072F  1303               	bcf	3,6	;RP1=0, select bank1
  2645  0730  00C1               	movwf	(main@tmp+1)^(0+128)
  2646  0731                     l3499:
  2647                           
  2648                           ;interface_main.c: 245:             tmp = tmp | ADRESL;
  2649  0731  0840               	movf	main@tmp^(0+128),w
  2650  0732  041E               	iorwf	30,w	;volatile
  2651  0733  1283               	bcf	3,5	;RP0=0, select bank0
  2652  0734  1303               	bcf	3,6	;RP1=0, select bank0
  2653  0735  00DB               	movwf	??_main
  2654  0736  1683               	bsf	3,5	;RP0=1, select bank1
  2655  0737  1303               	bcf	3,6	;RP1=0, select bank1
  2656  0738  0841               	movf	(main@tmp+1)^(0+128),w
  2657  0739  1283               	bcf	3,5	;RP0=0, select bank0
  2658  073A  1303               	bcf	3,6	;RP1=0, select bank0
  2659  073B  00DC               	movwf	??_main+1
  2660  073C  085B               	movf	??_main,w
  2661  073D  1683               	bsf	3,5	;RP0=1, select bank1
  2662  073E  1303               	bcf	3,6	;RP1=0, select bank1
  2663  073F  00C0               	movwf	main@tmp^(0+128)
  2664  0740  1283               	bcf	3,5	;RP0=0, select bank0
  2665  0741  1303               	bcf	3,6	;RP1=0, select bank0
  2666  0742  085C               	movf	??_main+1,w
  2667  0743  1683               	bsf	3,5	;RP0=1, select bank1
  2668  0744  1303               	bcf	3,6	;RP1=0, select bank1
  2669  0745  00C1               	movwf	(main@tmp+1)^(0+128)
  2670  0746                     l3501:
  2671                           
  2672                           ;interface_main.c: 247:             PIR1bits.ADIF = 0;
  2673  0746  1283               	bcf	3,5	;RP0=0, select bank0
  2674  0747  1303               	bcf	3,6	;RP1=0, select bank0
  2675  0748  130C               	bcf	12,6	;volatile
  2676  0749                     l3503:
  2677                           
  2678                           ;interface_main.c: 249:             CCPR1L = (tmp / 10);
  2679  0749  300A               	movlw	10
  2680  074A  00F0               	movwf	___lwdiv@divisor
  2681  074B  3000               	movlw	0
  2682  074C  00F1               	movwf	___lwdiv@divisor+1
  2683  074D  1683               	bsf	3,5	;RP0=1, select bank1
  2684  074E  1303               	bcf	3,6	;RP1=0, select bank1
  2685  074F  0841               	movf	(main@tmp+1)^(0+128),w
  2686  0750  00F3               	movwf	___lwdiv@dividend+1
  2687  0751  0840               	movf	main@tmp^(0+128),w
  2688  0752  00F2               	movwf	___lwdiv@dividend
  2689  0753  120A  118A  200A  120A  118A  	fcall	___lwdiv
  2690  0758  0870               	movf	?___lwdiv,w
  2691  0759  1283               	bcf	3,5	;RP0=0, select bank0
  2692  075A  1303               	bcf	3,6	;RP1=0, select bank0
  2693  075B  0095               	movwf	21	;volatile
  2694  075C                     l3505:
  2695                           
  2696                           ;interface_main.c: 251:             char buffer3[16];;interface_main.c: 252:            
      +                           sprintf(buffer3, "Speaker:%d", tmp);
  2697  075C  30B0               	movlw	(low (main@buffer3_737| 0))& (0+255)
  2698  075D  00A0               	movwf	sprintf@sp
  2699  075E  3000               	movlw	0
  2700  075F  00A1               	movwf	sprintf@sp+1
  2701  0760  3030               	movlw	(low ((STR_24-__stringbase)| (0+32768)))& (0+255)
  2702  0761  00DB               	movwf	??_main
  2703  0762  085B               	movf	??_main,w
  2704  0763  00A2               	movwf	sprintf@f
  2705  0764  1683               	bsf	3,5	;RP0=1, select bank1
  2706  0765  1303               	bcf	3,6	;RP1=0, select bank1
  2707  0766  0841               	movf	(main@tmp+1)^(0+128),w
  2708  0767  1283               	bcf	3,5	;RP0=0, select bank0
  2709  0768  1303               	bcf	3,6	;RP1=0, select bank0
  2710  0769  00A4               	movwf	?_sprintf+4
  2711  076A  1683               	bsf	3,5	;RP0=1, select bank1
  2712  076B  1303               	bcf	3,6	;RP1=0, select bank1
  2713  076C  0840               	movf	main@tmp^(0+128),w
  2714  076D  1283               	bcf	3,5	;RP0=0, select bank0
  2715  076E  1303               	bcf	3,6	;RP1=0, select bank0
  2716  076F  00A3               	movwf	?_sprintf+3
  2717  0770  120A  158A  2545  120A  118A  	fcall	_sprintf
  2718  0775                     l3507:
  2719                           
  2720                           ;interface_main.c: 253:             LCD_String_xy(0,0,buffer3);
  2721  0775  1283               	bcf	3,5	;RP0=0, select bank0
  2722  0776  1303               	bcf	3,6	;RP1=0, select bank0
  2723  0777  01A0               	clrf	LCD_String_xy@pos
  2724  0778  30B0               	movlw	(low (main@buffer3_737| 0))& (0+255)
  2725  0779  00A1               	movwf	LCD_String_xy@msg
  2726  077A  3000               	movlw	0
  2727  077B  00A2               	movwf	LCD_String_xy@msg+1
  2728  077C  3000               	movlw	0
  2729  077D  160A  118A  2596  120A  118A  	fcall	_LCD_String_xy
  2730  0782                     l3509:
  2731                           
  2732                           ;interface_main.c: 254:             _delay((unsigned long)((100)*(8000000/4000.0)));
  2733  0782  3002               	movlw	2
  2734  0783  1283               	bcf	3,5	;RP0=0, select bank0
  2735  0784  1303               	bcf	3,6	;RP1=0, select bank0
  2736  0785  00DD               	movwf	??_main+2
  2737  0786  3004               	movlw	4
  2738  0787  00DC               	movwf	??_main+1
  2739  0788  30B9               	movlw	185
  2740  0789  00DB               	movwf	??_main
  2741  078A                     u3987:
  2742  078A  0BDB               	decfsz	??_main,f
  2743  078B  2F8A               	goto	u3987
  2744  078C  0BDC               	decfsz	??_main+1,f
  2745  078D  2F8A               	goto	u3987
  2746  078E  0BDD               	decfsz	??_main+2,f
  2747  078F  2F8A               	goto	u3987
  2748  0790  2F91               	nop2
  2749  0791                     l3511:
  2750                           
  2751                           ;interface_main.c: 256:             if(RE3 == 0 && RB5 == 0)
  2752  0791  1283               	bcf	3,5	;RP0=0, select bank0
  2753  0792  1303               	bcf	3,6	;RP1=0, select bank0
  2754  0793  1989               	btfsc	9,3	;volatile
  2755  0794  2F96               	goto	u3901
  2756  0795  2F97               	goto	u3900
  2757  0796                     u3901:
  2758  0796  2FB0               	goto	l3523
  2759  0797                     u3900:
  2760  0797                     l3513:
  2761  0797  1A86               	btfsc	6,5	;volatile
  2762  0798  2F9A               	goto	u3911
  2763  0799  2F9B               	goto	u3910
  2764  079A                     u3911:
  2765  079A  2FB0               	goto	l3523
  2766  079B                     u3910:
  2767  079B                     l374:
  2768  079B  1989               	btfsc	9,3	;volatile
  2769  079C  2F9E               	goto	u3921
  2770  079D  2F9F               	goto	u3920
  2771  079E                     u3921:
  2772  079E  2FA3               	goto	l3519
  2773  079F                     u3920:
  2774  079F                     l3517:
  2775  079F  1E86               	btfss	6,5	;volatile
  2776  07A0  2FA2               	goto	u3931
  2777  07A1  2FA3               	goto	u3930
  2778  07A2                     u3931:
  2779  07A2  2F9B               	goto	l374
  2780  07A3                     u3930:
  2781  07A3                     l3519:
  2782                           
  2783                           ;interface_main.c: 259:                 displayMode = displayMode+1;
  2784  07A3  1683               	bsf	3,5	;RP0=1, select bank1
  2785  07A4  1303               	bcf	3,6	;RP1=0, select bank1
  2786  07A5  0842               	movf	main@displayMode^(0+128),w
  2787  07A6  3E01               	addlw	1
  2788  07A7  00C2               	movwf	main@displayMode^(0+128)
  2789  07A8  0843               	movf	(main@displayMode+1)^(0+128),w
  2790  07A9  1803               	skipnc
  2791  07AA  3E01               	addlw	1
  2792  07AB  3E00               	addlw	0
  2793  07AC  00C3               	movwf	(main@displayMode+1)^(0+128)
  2794  07AD                     l3521:
  2795                           
  2796                           ;interface_main.c: 260:                 CCPR1L = 0;
  2797  07AD  1283               	bcf	3,5	;RP0=0, select bank0
  2798  07AE  1303               	bcf	3,6	;RP1=0, select bank0
  2799  07AF  0195               	clrf	21	;volatile
  2800  07B0                     l3523:
  2801                           
  2802                           ;interface_main.c: 265:        _delay((unsigned long)((10)*(8000000/4000.0)));
  2803  07B0  301A               	movlw	26
  2804  07B1  1283               	bcf	3,5	;RP0=0, select bank0
  2805  07B2  1303               	bcf	3,6	;RP1=0, select bank0
  2806  07B3  00DC               	movwf	??_main+1
  2807  07B4  30F7               	movlw	247
  2808  07B5  00DB               	movwf	??_main
  2809  07B6                     u3997:
  2810  07B6  0BDB               	decfsz	??_main,f
  2811  07B7  2FB6               	goto	u3997
  2812  07B8  0BDC               	decfsz	??_main+1,f
  2813  07B9  2FB6               	goto	u3997
  2814  07BA  2FBB               	nop2
  2815  07BB                     l3525:
  2816                           
  2817                           ;interface_main.c: 266:        if(displayMode >= 4)
  2818  07BB  1683               	bsf	3,5	;RP0=1, select bank1
  2819  07BC  1303               	bcf	3,6	;RP1=0, select bank1
  2820  07BD  0843               	movf	(main@displayMode+1)^(0+128),w
  2821  07BE  3A80               	xorlw	128
  2822  07BF  00FF               	movwf	btemp+1
  2823  07C0  3080               	movlw	128
  2824  07C1  027F               	subwf	btemp+1,w
  2825  07C2  1D03               	skipz
  2826  07C3  2FC6               	goto	u3945
  2827  07C4  3004               	movlw	4
  2828  07C5  0242               	subwf	main@displayMode^(0+128),w
  2829  07C6                     u3945:
  2830  07C6  1C03               	skipc
  2831  07C7  2FC9               	goto	u3941
  2832  07C8  2FCA               	goto	u3940
  2833  07C9                     u3941:
  2834  07C9  2C1F               	goto	l3331
  2835  07CA                     u3940:
  2836  07CA  2C1B               	goto	l3329
  2837  07CB  120A  118A  2800   	ljmp	start
  2838  07CE                     __end_of_main:
  2839                           
  2840                           	psect	text1
  2841  1712                     __ptext1:	
  2842 ;; *************** function _Update_Farenheit *****************
  2843 ;; Defined at:
  2844 ;;		line 8 in file "Temp.c"
  2845 ;; Parameters:    Size  Location     Type
  2846 ;;		None
  2847 ;; Auto vars:     Size  Location     Type
  2848 ;;		None
  2849 ;; Return value:  Size  Location     Type
  2850 ;;                  1    wreg      void 
  2851 ;; Registers used:
  2852 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2853 ;; Tracked objects:
  2854 ;;		On entry : 0/0
  2855 ;;		On exit  : 0/0
  2856 ;;		Unchanged: 0/0
  2857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2858 ;;      Params:         0       0       0       0       0
  2859 ;;      Locals:         0       0       0       0       0
  2860 ;;      Temps:          0       2       0       0       0
  2861 ;;      Totals:         0       2       0       0       0
  2862 ;;Total ram usage:        2 bytes
  2863 ;; Hardware stack levels used: 1
  2864 ;; Hardware stack levels required when called: 2
  2865 ;; This function calls:
  2866 ;;		___fladd
  2867 ;;		___flmul
  2868 ;;		___fltol
  2869 ;;		___xxtofl
  2870 ;; This function is called by:
  2871 ;;		_main
  2872 ;; This function uses a non-reentrant model
  2873 ;;
  2874                           
  2875  1712                     _Update_Farenheit:	
  2876                           ;psect for function _Update_Farenheit
  2877                           
  2878  1712                     l3201:	
  2879                           ;incstack = 0
  2880                           ; Regs used in _Update_Farenheit: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2881                           
  2882                           
  2883                           ;Temp.c: 20:     ADCON0bits.GO = 1;
  2884  1712  1283               	bcf	3,5	;RP0=0, select bank0
  2885  1713  1303               	bcf	3,6	;RP1=0, select bank0
  2886  1714  149F               	bsf	31,1	;volatile
  2887  1715                     l205:	
  2888                           ;Temp.c: 22:     while(ADCON0bits.GO == 1);
  2889                           
  2890  1715  189F               	btfsc	31,1	;volatile
  2891  1716  2F18               	goto	u3661
  2892  1717  2F19               	goto	u3660
  2893  1718                     u3661:
  2894  1718  2F15               	goto	l205
  2895  1719                     u3660:
  2896  1719                     l3203:
  2897                           
  2898                           ;Temp.c: 25:     result = 0x0000;
  2899  1719  01E7               	clrf	_result
  2900  171A  01E8               	clrf	_result+1
  2901  171B                     l3205:
  2902                           
  2903                           ;Temp.c: 26:     result = ADRESH;
  2904  171B  081E               	movf	30,w	;volatile
  2905  171C  00D9               	movwf	??_Update_Farenheit
  2906  171D  01DA               	clrf	??_Update_Farenheit+1
  2907  171E  0859               	movf	??_Update_Farenheit,w
  2908  171F  00E7               	movwf	_result
  2909  1720  085A               	movf	??_Update_Farenheit+1,w
  2910  1721  00E8               	movwf	_result+1
  2911  1722                     l3207:
  2912                           
  2913                           ;Temp.c: 27:     result = result << 8;
  2914  1722  0867               	movf	_result,w
  2915  1723  00DA               	movwf	??_Update_Farenheit+1
  2916  1724  01D9               	clrf	??_Update_Farenheit
  2917  1725  0859               	movf	??_Update_Farenheit,w
  2918  1726  00E7               	movwf	_result
  2919  1727  085A               	movf	??_Update_Farenheit+1,w
  2920  1728  00E8               	movwf	_result+1
  2921  1729                     l3209:
  2922                           
  2923                           ;Temp.c: 28:     result = result | ADRESL;
  2924  1729  0867               	movf	_result,w
  2925  172A  1683               	bsf	3,5	;RP0=1, select bank1
  2926  172B  1303               	bcf	3,6	;RP1=0, select bank1
  2927  172C  041E               	iorwf	30,w	;volatile
  2928  172D  1283               	bcf	3,5	;RP0=0, select bank0
  2929  172E  1303               	bcf	3,6	;RP1=0, select bank0
  2930  172F  00D9               	movwf	??_Update_Farenheit
  2931  1730  0868               	movf	_result+1,w
  2932  1731  00DA               	movwf	??_Update_Farenheit+1
  2933  1732  0859               	movf	??_Update_Farenheit,w
  2934  1733  00E7               	movwf	_result
  2935  1734  085A               	movf	??_Update_Farenheit+1,w
  2936  1735  00E8               	movwf	_result+1
  2937  1736                     l3211:
  2938                           
  2939                           ;Temp.c: 29:     temperature_f = 1.265625*result -67;
  2940  1736  0867               	movf	_result,w
  2941  1737  00F0               	movwf	___xxtofl@val
  2942  1738  0868               	movf	_result+1,w
  2943  1739  00F1               	movwf	___xxtofl@val+1
  2944  173A  01F2               	clrf	___xxtofl@val+2
  2945  173B  01F3               	clrf	___xxtofl@val+3
  2946  173C  3000               	movlw	0
  2947  173D  120A  158A  2203  160A  118A  	fcall	___xxtofl
  2948  1742  0873               	movf	?___xxtofl+3,w
  2949  1743  1283               	bcf	3,5	;RP0=0, select bank0
  2950  1744  1303               	bcf	3,6	;RP1=0, select bank0
  2951  1745  00A7               	movwf	___flmul@a+3
  2952  1746  0872               	movf	?___xxtofl+2,w
  2953  1747  00A6               	movwf	___flmul@a+2
  2954  1748  0871               	movf	?___xxtofl+1,w
  2955  1749  00A5               	movwf	___flmul@a+1
  2956  174A  0870               	movf	?___xxtofl,w
  2957  174B  00A4               	movwf	___flmul@a
  2958  174C  303F               	movlw	63
  2959  174D  00A3               	movwf	___flmul@b+3
  2960  174E  30A2               	movlw	162
  2961  174F  00A2               	movwf	___flmul@b+2
  2962  1750  3000               	movlw	0
  2963  1751  00A1               	movwf	___flmul@b+1
  2964  1752  3000               	movlw	0
  2965  1753  00A0               	movwf	___flmul@b
  2966  1754  120A  118A  204E  160A  118A  	fcall	___flmul
  2967  1759  1283               	bcf	3,5	;RP0=0, select bank0
  2968  175A  1303               	bcf	3,6	;RP1=0, select bank0
  2969  175B  0823               	movf	?___flmul+3,w
  2970  175C  00C1               	movwf	___fladd@a+3
  2971  175D  0822               	movf	?___flmul+2,w
  2972  175E  00C0               	movwf	___fladd@a+2
  2973  175F  0821               	movf	?___flmul+1,w
  2974  1760  00BF               	movwf	___fladd@a+1
  2975  1761  0820               	movf	?___flmul,w
  2976  1762  00BE               	movwf	___fladd@a
  2977  1763  30C2               	movlw	194
  2978  1764  00BD               	movwf	___fladd@b+3
  2979  1765  3086               	movlw	134
  2980  1766  00BC               	movwf	___fladd@b+2
  2981  1767  3000               	movlw	0
  2982  1768  00BB               	movwf	___fladd@b+1
  2983  1769  3000               	movlw	0
  2984  176A  00BA               	movwf	___fladd@b
  2985  176B  120A  158A  22BD  160A  118A  	fcall	___fladd
  2986  1770  1283               	bcf	3,5	;RP0=0, select bank0
  2987  1771  1303               	bcf	3,6	;RP1=0, select bank0
  2988  1772  083D               	movf	?___fladd+3,w
  2989  1773  00D1               	movwf	___fltol@f1+3
  2990  1774  083C               	movf	?___fladd+2,w
  2991  1775  00D0               	movwf	___fltol@f1+2
  2992  1776  083B               	movf	?___fladd+1,w
  2993  1777  00CF               	movwf	___fltol@f1+1
  2994  1778  083A               	movf	?___fladd,w
  2995  1779  00CE               	movwf	___fltol@f1
  2996  177A  120A  158A  2100  160A  118A  	fcall	___fltol
  2997  177F  1283               	bcf	3,5	;RP0=0, select bank0
  2998  1780  1303               	bcf	3,6	;RP1=0, select bank0
  2999  1781  084F               	movf	?___fltol+1,w
  3000  1782  00E3               	movwf	_temperature_f+1
  3001  1783  084E               	movf	?___fltol,w
  3002  1784  00E2               	movwf	_temperature_f
  3003  1785                     l3213:
  3004                           
  3005                           ;Temp.c: 31:     PIR1bits.ADIF = 0;
  3006  1785  130C               	bcf	12,6	;volatile
  3007  1786                     l208:
  3008  1786  0008               	return
  3009  1787                     __end_of_Update_Farenheit:
  3010                           
  3011                           	psect	text2
  3012  1787                     __ptext2:	
  3013 ;; *************** function _Update_Celsius *****************
  3014 ;; Defined at:
  3015 ;;		line 37 in file "Temp.c"
  3016 ;; Parameters:    Size  Location     Type
  3017 ;;		None
  3018 ;; Auto vars:     Size  Location     Type
  3019 ;;		None
  3020 ;; Return value:  Size  Location     Type
  3021 ;;                  1    wreg      void 
  3022 ;; Registers used:
  3023 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3024 ;; Tracked objects:
  3025 ;;		On entry : 0/0
  3026 ;;		On exit  : 0/0
  3027 ;;		Unchanged: 0/0
  3028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3029 ;;      Params:         0       0       0       0       0
  3030 ;;      Locals:         0       0       0       0       0
  3031 ;;      Temps:          0       2       0       0       0
  3032 ;;      Totals:         0       2       0       0       0
  3033 ;;Total ram usage:        2 bytes
  3034 ;; Hardware stack levels used: 1
  3035 ;; Hardware stack levels required when called: 2
  3036 ;; This function calls:
  3037 ;;		___fladd
  3038 ;;		___flmul
  3039 ;;		___fltol
  3040 ;;		___xxtofl
  3041 ;; This function is called by:
  3042 ;;		_main
  3043 ;; This function uses a non-reentrant model
  3044 ;;
  3045                           
  3046  1787                     _Update_Celsius:	
  3047                           ;psect for function _Update_Celsius
  3048                           
  3049  1787                     l3215:	
  3050                           ;incstack = 0
  3051                           ; Regs used in _Update_Celsius: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3052                           
  3053                           
  3054                           ;Temp.c: 40:     ADCON0bits.GO = 1;
  3055  1787  1283               	bcf	3,5	;RP0=0, select bank0
  3056  1788  1303               	bcf	3,6	;RP1=0, select bank0
  3057  1789  149F               	bsf	31,1	;volatile
  3058  178A                     l211:	
  3059                           ;Temp.c: 42:     while(ADCON0bits.GO == 1);
  3060                           
  3061  178A  189F               	btfsc	31,1	;volatile
  3062  178B  2F8D               	goto	u3671
  3063  178C  2F8E               	goto	u3670
  3064  178D                     u3671:
  3065  178D  2F8A               	goto	l211
  3066  178E                     u3670:
  3067  178E                     l3217:
  3068                           
  3069                           ;Temp.c: 45:     result = 0x0000;
  3070  178E  01E7               	clrf	_result
  3071  178F  01E8               	clrf	_result+1
  3072  1790                     l3219:
  3073                           
  3074                           ;Temp.c: 46:     result = ADRESH;
  3075  1790  081E               	movf	30,w	;volatile
  3076  1791  00D9               	movwf	??_Update_Celsius
  3077  1792  01DA               	clrf	??_Update_Celsius+1
  3078  1793  0859               	movf	??_Update_Celsius,w
  3079  1794  00E7               	movwf	_result
  3080  1795  085A               	movf	??_Update_Celsius+1,w
  3081  1796  00E8               	movwf	_result+1
  3082  1797                     l3221:
  3083                           
  3084                           ;Temp.c: 47:     result = result << 8;
  3085  1797  0867               	movf	_result,w
  3086  1798  00DA               	movwf	??_Update_Celsius+1
  3087  1799  01D9               	clrf	??_Update_Celsius
  3088  179A  0859               	movf	??_Update_Celsius,w
  3089  179B  00E7               	movwf	_result
  3090  179C  085A               	movf	??_Update_Celsius+1,w
  3091  179D  00E8               	movwf	_result+1
  3092  179E                     l3223:
  3093                           
  3094                           ;Temp.c: 48:     result = result | ADRESL;
  3095  179E  0867               	movf	_result,w
  3096  179F  1683               	bsf	3,5	;RP0=1, select bank1
  3097  17A0  1303               	bcf	3,6	;RP1=0, select bank1
  3098  17A1  041E               	iorwf	30,w	;volatile
  3099  17A2  1283               	bcf	3,5	;RP0=0, select bank0
  3100  17A3  1303               	bcf	3,6	;RP1=0, select bank0
  3101  17A4  00D9               	movwf	??_Update_Celsius
  3102  17A5  0868               	movf	_result+1,w
  3103  17A6  00DA               	movwf	??_Update_Celsius+1
  3104  17A7  0859               	movf	??_Update_Celsius,w
  3105  17A8  00E7               	movwf	_result
  3106  17A9  085A               	movf	??_Update_Celsius+1,w
  3107  17AA  00E8               	movwf	_result+1
  3108  17AB                     l3225:
  3109                           
  3110                           ;Temp.c: 50:     PIR1bits.ADIF = 0;
  3111  17AB  130C               	bcf	12,6	;volatile
  3112  17AC                     l3227:
  3113                           
  3114                           ;Temp.c: 51:     temperature_c = .7*result - 55;
  3115  17AC  0867               	movf	_result,w
  3116  17AD  00F0               	movwf	___xxtofl@val
  3117  17AE  0868               	movf	_result+1,w
  3118  17AF  00F1               	movwf	___xxtofl@val+1
  3119  17B0  01F2               	clrf	___xxtofl@val+2
  3120  17B1  01F3               	clrf	___xxtofl@val+3
  3121  17B2  3000               	movlw	0
  3122  17B3  120A  158A  2203  160A  118A  	fcall	___xxtofl
  3123  17B8  0873               	movf	?___xxtofl+3,w
  3124  17B9  1283               	bcf	3,5	;RP0=0, select bank0
  3125  17BA  1303               	bcf	3,6	;RP1=0, select bank0
  3126  17BB  00A7               	movwf	___flmul@a+3
  3127  17BC  0872               	movf	?___xxtofl+2,w
  3128  17BD  00A6               	movwf	___flmul@a+2
  3129  17BE  0871               	movf	?___xxtofl+1,w
  3130  17BF  00A5               	movwf	___flmul@a+1
  3131  17C0  0870               	movf	?___xxtofl,w
  3132  17C1  00A4               	movwf	___flmul@a
  3133  17C2  303F               	movlw	63
  3134  17C3  00A3               	movwf	___flmul@b+3
  3135  17C4  3033               	movlw	51
  3136  17C5  00A2               	movwf	___flmul@b+2
  3137  17C6  3033               	movlw	51
  3138  17C7  00A1               	movwf	___flmul@b+1
  3139  17C8  3033               	movlw	51
  3140  17C9  00A0               	movwf	___flmul@b
  3141  17CA  120A  118A  204E  160A  118A  	fcall	___flmul
  3142  17CF  1283               	bcf	3,5	;RP0=0, select bank0
  3143  17D0  1303               	bcf	3,6	;RP1=0, select bank0
  3144  17D1  0823               	movf	?___flmul+3,w
  3145  17D2  00C1               	movwf	___fladd@a+3
  3146  17D3  0822               	movf	?___flmul+2,w
  3147  17D4  00C0               	movwf	___fladd@a+2
  3148  17D5  0821               	movf	?___flmul+1,w
  3149  17D6  00BF               	movwf	___fladd@a+1
  3150  17D7  0820               	movf	?___flmul,w
  3151  17D8  00BE               	movwf	___fladd@a
  3152  17D9  30C2               	movlw	194
  3153  17DA  00BD               	movwf	___fladd@b+3
  3154  17DB  305C               	movlw	92
  3155  17DC  00BC               	movwf	___fladd@b+2
  3156  17DD  3000               	movlw	0
  3157  17DE  00BB               	movwf	___fladd@b+1
  3158  17DF  3000               	movlw	0
  3159  17E0  00BA               	movwf	___fladd@b
  3160  17E1  120A  158A  22BD  160A  118A  	fcall	___fladd
  3161  17E6  1283               	bcf	3,5	;RP0=0, select bank0
  3162  17E7  1303               	bcf	3,6	;RP1=0, select bank0
  3163  17E8  083D               	movf	?___fladd+3,w
  3164  17E9  00D1               	movwf	___fltol@f1+3
  3165  17EA  083C               	movf	?___fladd+2,w
  3166  17EB  00D0               	movwf	___fltol@f1+2
  3167  17EC  083B               	movf	?___fladd+1,w
  3168  17ED  00CF               	movwf	___fltol@f1+1
  3169  17EE  083A               	movf	?___fladd,w
  3170  17EF  00CE               	movwf	___fltol@f1
  3171  17F0  120A  158A  2100  160A  118A  	fcall	___fltol
  3172  17F5  1283               	bcf	3,5	;RP0=0, select bank0
  3173  17F6  1303               	bcf	3,6	;RP1=0, select bank0
  3174  17F7  084F               	movf	?___fltol+1,w
  3175  17F8  00E5               	movwf	_temperature_c+1
  3176  17F9  084E               	movf	?___fltol,w
  3177  17FA  00E4               	movwf	_temperature_c
  3178  17FB                     l3229:
  3179                           
  3180                           ;Temp.c: 53:     Temp_Mode = 1;
  3181  17FB  3001               	movlw	1
  3182  17FC  00E0               	movwf	_Temp_Mode
  3183  17FD  3000               	movlw	0
  3184  17FE  00E1               	movwf	_Temp_Mode+1
  3185  17FF                     l214:
  3186  17FF  0008               	return
  3187  1800                     __end_of_Update_Celsius:
  3188                           
  3189                           	psect	text3
  3190  0A03                     __ptext3:	
  3191 ;; *************** function ___xxtofl *****************
  3192 ;; Defined at:
  3193 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\xxtofl.c"
  3194 ;; Parameters:    Size  Location     Type
  3195 ;;  sign            1    wreg     unsigned char 
  3196 ;;  val             4    0[COMMON] long 
  3197 ;; Auto vars:     Size  Location     Type
  3198 ;;  sign            1    8[COMMON] unsigned char 
  3199 ;;  arg             4   10[COMMON] unsigned long 
  3200 ;;  exp             1    9[COMMON] unsigned char 
  3201 ;; Return value:  Size  Location     Type
  3202 ;;                  4    0[COMMON] unsigned char 
  3203 ;; Registers used:
  3204 ;;		wreg, status,2, status,0
  3205 ;; Tracked objects:
  3206 ;;		On entry : 0/0
  3207 ;;		On exit  : 0/0
  3208 ;;		Unchanged: 0/0
  3209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3210 ;;      Params:         4       0       0       0       0
  3211 ;;      Locals:         6       0       0       0       0
  3212 ;;      Temps:          4       0       0       0       0
  3213 ;;      Totals:        14       0       0       0       0
  3214 ;;Total ram usage:       14 bytes
  3215 ;; Hardware stack levels used: 1
  3216 ;; This function calls:
  3217 ;;		Nothing
  3218 ;; This function is called by:
  3219 ;;		_Update_Farenheit
  3220 ;;		_Update_Celsius
  3221 ;; This function uses a non-reentrant model
  3222 ;;
  3223                           
  3224  0A03                     ___xxtofl:	
  3225                           ;psect for function ___xxtofl
  3226                           
  3227                           
  3228                           ;incstack = 0
  3229                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  3230                           ;___xxtofl@sign stored from wreg
  3231  0A03  00F8               	movwf	___xxtofl@sign
  3232  0A04                     l3101:
  3233  0A04  0878               	movf	___xxtofl@sign,w
  3234  0A05  1903               	btfsc	3,2
  3235  0A06  2A08               	goto	u3511
  3236  0A07  2A09               	goto	u3510
  3237  0A08                     u3511:
  3238  0A08  2A1D               	goto	l3107
  3239  0A09                     u3510:
  3240  0A09                     l3103:
  3241  0A09  1FF3               	btfss	___xxtofl@val+3,7
  3242  0A0A  2A0C               	goto	u3521
  3243  0A0B  2A0D               	goto	u3520
  3244  0A0C                     u3521:
  3245  0A0C  2A1D               	goto	l3107
  3246  0A0D                     u3520:
  3247  0A0D                     l3105:
  3248  0A0D  0970               	comf	___xxtofl@val,w
  3249  0A0E  00FA               	movwf	___xxtofl@arg
  3250  0A0F  0971               	comf	___xxtofl@val+1,w
  3251  0A10  00FB               	movwf	___xxtofl@arg+1
  3252  0A11  0972               	comf	___xxtofl@val+2,w
  3253  0A12  00FC               	movwf	___xxtofl@arg+2
  3254  0A13  0973               	comf	___xxtofl@val+3,w
  3255  0A14  00FD               	movwf	___xxtofl@arg+3
  3256  0A15  0AFA               	incf	___xxtofl@arg,f
  3257  0A16  1903               	skipnz
  3258  0A17  0AFB               	incf	___xxtofl@arg+1,f
  3259  0A18  1903               	skipnz
  3260  0A19  0AFC               	incf	___xxtofl@arg+2,f
  3261  0A1A  1903               	skipnz
  3262  0A1B  0AFD               	incf	___xxtofl@arg+3,f
  3263  0A1C  2A25               	goto	l1005
  3264  0A1D                     l3107:
  3265  0A1D  0873               	movf	___xxtofl@val+3,w
  3266  0A1E  00FD               	movwf	___xxtofl@arg+3
  3267  0A1F  0872               	movf	___xxtofl@val+2,w
  3268  0A20  00FC               	movwf	___xxtofl@arg+2
  3269  0A21  0871               	movf	___xxtofl@val+1,w
  3270  0A22  00FB               	movwf	___xxtofl@arg+1
  3271  0A23  0870               	movf	___xxtofl@val,w
  3272  0A24  00FA               	movwf	___xxtofl@arg
  3273  0A25                     l1005:
  3274  0A25  0873               	movf	___xxtofl@val+3,w
  3275  0A26  0472               	iorwf	___xxtofl@val+2,w
  3276  0A27  0471               	iorwf	___xxtofl@val+1,w
  3277  0A28  0470               	iorwf	___xxtofl@val,w
  3278  0A29  1D03               	skipz
  3279  0A2A  2A2C               	goto	u3531
  3280  0A2B  2A2D               	goto	u3530
  3281  0A2C                     u3531:
  3282  0A2C  2A36               	goto	l3113
  3283  0A2D                     u3530:
  3284  0A2D                     l3109:
  3285  0A2D  3000               	movlw	0
  3286  0A2E  00F3               	movwf	?___xxtofl+3
  3287  0A2F  3000               	movlw	0
  3288  0A30  00F2               	movwf	?___xxtofl+2
  3289  0A31  3000               	movlw	0
  3290  0A32  00F1               	movwf	?___xxtofl+1
  3291  0A33  3000               	movlw	0
  3292  0A34  00F0               	movwf	?___xxtofl
  3293  0A35  2ABC               	goto	l1007
  3294  0A36                     l3113:
  3295  0A36  3096               	movlw	150
  3296  0A37  00F4               	movwf	??___xxtofl
  3297  0A38  0874               	movf	??___xxtofl,w
  3298  0A39  00F9               	movwf	___xxtofl@exp
  3299  0A3A  2A48               	goto	l3117
  3300  0A3B                     l3115:
  3301  0A3B  3001               	movlw	1
  3302  0A3C  00F4               	movwf	??___xxtofl
  3303  0A3D  0874               	movf	??___xxtofl,w
  3304  0A3E  07F9               	addwf	___xxtofl@exp,f
  3305  0A3F  3001               	movlw	1
  3306  0A40                     u3545:
  3307  0A40  1003               	clrc
  3308  0A41  0CFD               	rrf	___xxtofl@arg+3,f
  3309  0A42  0CFC               	rrf	___xxtofl@arg+2,f
  3310  0A43  0CFB               	rrf	___xxtofl@arg+1,f
  3311  0A44  0CFA               	rrf	___xxtofl@arg,f
  3312  0A45  3EFF               	addlw	-1
  3313  0A46  1D03               	skipz
  3314  0A47  2A40               	goto	u3545
  3315  0A48                     l3117:
  3316  0A48  30FE               	movlw	254
  3317  0A49  057D               	andwf	___xxtofl@arg+3,w
  3318  0A4A  1D03               	btfss	3,2
  3319  0A4B  2A4D               	goto	u3551
  3320  0A4C  2A4E               	goto	u3550
  3321  0A4D                     u3551:
  3322  0A4D  2A3B               	goto	l3115
  3323  0A4E                     u3550:
  3324  0A4E  2A6A               	goto	l1011
  3325  0A4F                     l3119:
  3326  0A4F  3001               	movlw	1
  3327  0A50  00F4               	movwf	??___xxtofl
  3328  0A51  0874               	movf	??___xxtofl,w
  3329  0A52  07F9               	addwf	___xxtofl@exp,f
  3330  0A53                     l3121:
  3331  0A53  3001               	movlw	1
  3332  0A54  07FA               	addwf	___xxtofl@arg,f
  3333  0A55  3000               	movlw	0
  3334  0A56  1803               	skipnc
  3335  0A57  3001               	movlw	1
  3336  0A58  07FB               	addwf	___xxtofl@arg+1,f
  3337  0A59  3000               	movlw	0
  3338  0A5A  1803               	skipnc
  3339  0A5B  3001               	movlw	1
  3340  0A5C  07FC               	addwf	___xxtofl@arg+2,f
  3341  0A5D  3000               	movlw	0
  3342  0A5E  1803               	skipnc
  3343  0A5F  3001               	movlw	1
  3344  0A60  07FD               	addwf	___xxtofl@arg+3,f
  3345  0A61                     l3123:
  3346  0A61  3001               	movlw	1
  3347  0A62                     u3565:
  3348  0A62  1003               	clrc
  3349  0A63  0CFD               	rrf	___xxtofl@arg+3,f
  3350  0A64  0CFC               	rrf	___xxtofl@arg+2,f
  3351  0A65  0CFB               	rrf	___xxtofl@arg+1,f
  3352  0A66  0CFA               	rrf	___xxtofl@arg,f
  3353  0A67  3EFF               	addlw	-1
  3354  0A68  1D03               	skipz
  3355  0A69  2A62               	goto	u3565
  3356  0A6A                     l1011:
  3357  0A6A  30FF               	movlw	255
  3358  0A6B  057D               	andwf	___xxtofl@arg+3,w
  3359  0A6C  1D03               	btfss	3,2
  3360  0A6D  2A6F               	goto	u3571
  3361  0A6E  2A70               	goto	u3570
  3362  0A6F                     u3571:
  3363  0A6F  2A4F               	goto	l3119
  3364  0A70                     u3570:
  3365  0A70  2A7C               	goto	l3127
  3366  0A71                     l3125:
  3367  0A71  3001               	movlw	1
  3368  0A72  02F9               	subwf	___xxtofl@exp,f
  3369  0A73  3001               	movlw	1
  3370  0A74  00F4               	movwf	??___xxtofl
  3371  0A75                     u3585:
  3372  0A75  1003               	clrc
  3373  0A76  0DFA               	rlf	___xxtofl@arg,f
  3374  0A77  0DFB               	rlf	___xxtofl@arg+1,f
  3375  0A78  0DFC               	rlf	___xxtofl@arg+2,f
  3376  0A79  0DFD               	rlf	___xxtofl@arg+3,f
  3377  0A7A  0BF4               	decfsz	??___xxtofl,f
  3378  0A7B  2A75               	goto	u3585
  3379  0A7C                     l3127:
  3380  0A7C  1BFC               	btfsc	___xxtofl@arg+2,7
  3381  0A7D  2A7F               	goto	u3591
  3382  0A7E  2A80               	goto	u3590
  3383  0A7F                     u3591:
  3384  0A7F  2A86               	goto	l1018
  3385  0A80                     u3590:
  3386  0A80                     l3129:
  3387  0A80  3002               	movlw	2
  3388  0A81  0279               	subwf	___xxtofl@exp,w
  3389  0A82  1803               	skipnc
  3390  0A83  2A85               	goto	u3601
  3391  0A84  2A86               	goto	u3600
  3392  0A85                     u3601:
  3393  0A85  2A71               	goto	l3125
  3394  0A86                     u3600:
  3395  0A86                     l1018:
  3396  0A86  1879               	btfsc	___xxtofl@exp,0
  3397  0A87  2A89               	goto	u3611
  3398  0A88  2A8A               	goto	u3610
  3399  0A89                     u3611:
  3400  0A89  2A92               	goto	l1019
  3401  0A8A                     u3610:
  3402  0A8A                     l3131:
  3403  0A8A  30FF               	movlw	255
  3404  0A8B  05FA               	andwf	___xxtofl@arg,f
  3405  0A8C  30FF               	movlw	255
  3406  0A8D  05FB               	andwf	___xxtofl@arg+1,f
  3407  0A8E  307F               	movlw	127
  3408  0A8F  05FC               	andwf	___xxtofl@arg+2,f
  3409  0A90  30FF               	movlw	255
  3410  0A91  05FD               	andwf	___xxtofl@arg+3,f
  3411  0A92                     l1019:
  3412  0A92  1003               	clrc
  3413  0A93  0CF9               	rrf	___xxtofl@exp,f
  3414  0A94                     l3133:
  3415  0A94  0879               	movf	___xxtofl@exp,w
  3416  0A95  00F4               	movwf	??___xxtofl
  3417  0A96  01F5               	clrf	??___xxtofl+1
  3418  0A97  01F6               	clrf	??___xxtofl+2
  3419  0A98  01F7               	clrf	??___xxtofl+3
  3420  0A99  3018               	movlw	24
  3421  0A9A                     u3625:
  3422  0A9A  1003               	clrc
  3423  0A9B  0DF4               	rlf	??___xxtofl,f
  3424  0A9C  0DF5               	rlf	??___xxtofl+1,f
  3425  0A9D  0DF6               	rlf	??___xxtofl+2,f
  3426  0A9E  0DF7               	rlf	??___xxtofl+3,f
  3427  0A9F                     u3620:
  3428  0A9F  3EFF               	addlw	-1
  3429  0AA0  1D03               	skipz
  3430  0AA1  2A9A               	goto	u3625
  3431  0AA2  0874               	movf	??___xxtofl,w
  3432  0AA3  04FA               	iorwf	___xxtofl@arg,f
  3433  0AA4  0875               	movf	??___xxtofl+1,w
  3434  0AA5  04FB               	iorwf	___xxtofl@arg+1,f
  3435  0AA6  0876               	movf	??___xxtofl+2,w
  3436  0AA7  04FC               	iorwf	___xxtofl@arg+2,f
  3437  0AA8  0877               	movf	??___xxtofl+3,w
  3438  0AA9  04FD               	iorwf	___xxtofl@arg+3,f
  3439  0AAA                     l3135:
  3440  0AAA  0878               	movf	___xxtofl@sign,w
  3441  0AAB  1903               	btfsc	3,2
  3442  0AAC  2AAE               	goto	u3631
  3443  0AAD  2AAF               	goto	u3630
  3444  0AAE                     u3631:
  3445  0AAE  2AB4               	goto	l3141
  3446  0AAF                     u3630:
  3447  0AAF                     l3137:
  3448  0AAF  1FF3               	btfss	___xxtofl@val+3,7
  3449  0AB0  2AB2               	goto	u3641
  3450  0AB1  2AB3               	goto	u3640
  3451  0AB2                     u3641:
  3452  0AB2  2AB4               	goto	l3141
  3453  0AB3                     u3640:
  3454  0AB3                     l3139:
  3455  0AB3  17FD               	bsf	___xxtofl@arg+3,7
  3456  0AB4                     l3141:
  3457  0AB4  087D               	movf	___xxtofl@arg+3,w
  3458  0AB5  00F3               	movwf	?___xxtofl+3
  3459  0AB6  087C               	movf	___xxtofl@arg+2,w
  3460  0AB7  00F2               	movwf	?___xxtofl+2
  3461  0AB8  087B               	movf	___xxtofl@arg+1,w
  3462  0AB9  00F1               	movwf	?___xxtofl+1
  3463  0ABA  087A               	movf	___xxtofl@arg,w
  3464  0ABB  00F0               	movwf	?___xxtofl
  3465  0ABC                     l1007:
  3466  0ABC  0008               	return
  3467  0ABD                     __end_of___xxtofl:
  3468                           
  3469                           	psect	text4
  3470  0900                     __ptext4:	
  3471 ;; *************** function ___fltol *****************
  3472 ;; Defined at:
  3473 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\fltol.c"
  3474 ;; Parameters:    Size  Location     Type
  3475 ;;  f1              4   46[BANK0 ] unsigned char 
  3476 ;; Auto vars:     Size  Location     Type
  3477 ;;  exp1            1   56[BANK0 ] unsigned char 
  3478 ;;  sign1           1   55[BANK0 ] unsigned char 
  3479 ;; Return value:  Size  Location     Type
  3480 ;;                  4   46[BANK0 ] long 
  3481 ;; Registers used:
  3482 ;;		wreg, status,2, status,0
  3483 ;; Tracked objects:
  3484 ;;		On entry : 0/0
  3485 ;;		On exit  : 0/0
  3486 ;;		Unchanged: 0/0
  3487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3488 ;;      Params:         0       4       0       0       0
  3489 ;;      Locals:         0       2       0       0       0
  3490 ;;      Temps:          0       5       0       0       0
  3491 ;;      Totals:         0      11       0       0       0
  3492 ;;Total ram usage:       11 bytes
  3493 ;; Hardware stack levels used: 1
  3494 ;; This function calls:
  3495 ;;		Nothing
  3496 ;; This function is called by:
  3497 ;;		_Update_Farenheit
  3498 ;;		_Update_Celsius
  3499 ;; This function uses a non-reentrant model
  3500 ;;
  3501                           
  3502  0900                     ___fltol:	
  3503                           ;psect for function ___fltol
  3504                           
  3505  0900                     l2731:	
  3506                           ;incstack = 0
  3507                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  3508                           
  3509  0900  1003               	clrc
  3510  0901  1283               	bcf	3,5	;RP0=0, select bank0
  3511  0902  1303               	bcf	3,6	;RP1=0, select bank0
  3512  0903  0D50               	rlf	___fltol@f1+2,w
  3513  0904  0D51               	rlf	___fltol@f1+3,w
  3514  0905  00D2               	movwf	??___fltol
  3515  0906  0852               	movf	??___fltol,w
  3516  0907  00D8               	movwf	___fltol@exp1
  3517  0908  0858               	movf	___fltol@exp1,w
  3518  0909  1D03               	btfss	3,2
  3519  090A  290C               	goto	u2581
  3520  090B  290D               	goto	u2580
  3521  090C                     u2581:
  3522  090C  2916               	goto	l2737
  3523  090D                     u2580:
  3524  090D                     l2733:
  3525  090D  3000               	movlw	0
  3526  090E  00D1               	movwf	?___fltol+3
  3527  090F  3000               	movlw	0
  3528  0910  00D0               	movwf	?___fltol+2
  3529  0911  3000               	movlw	0
  3530  0912  00CF               	movwf	?___fltol+1
  3531  0913  3000               	movlw	0
  3532  0914  00CE               	movwf	?___fltol
  3533  0915  297B               	goto	l758
  3534  0916                     l2737:
  3535  0916  084E               	movf	___fltol@f1,w
  3536  0917  00D2               	movwf	??___fltol
  3537  0918  084F               	movf	___fltol@f1+1,w
  3538  0919  00D3               	movwf	??___fltol+1
  3539  091A  0850               	movf	___fltol@f1+2,w
  3540  091B  00D4               	movwf	??___fltol+2
  3541  091C  0851               	movf	___fltol@f1+3,w
  3542  091D  00D5               	movwf	??___fltol+3
  3543  091E  301F               	movlw	31
  3544  091F                     u2595:
  3545  091F  1003               	clrc
  3546  0920  0CD5               	rrf	??___fltol+3,f
  3547  0921  0CD4               	rrf	??___fltol+2,f
  3548  0922  0CD3               	rrf	??___fltol+1,f
  3549  0923  0CD2               	rrf	??___fltol,f
  3550  0924                     u2590:
  3551  0924  3EFF               	addlw	-1
  3552  0925  1D03               	skipz
  3553  0926  291F               	goto	u2595
  3554  0927  0852               	movf	??___fltol,w
  3555  0928  00D6               	movwf	??___fltol+4
  3556  0929  0856               	movf	??___fltol+4,w
  3557  092A  00D7               	movwf	___fltol@sign1
  3558  092B                     l2739:
  3559  092B  17D0               	bsf	___fltol@f1+2,7
  3560  092C                     l2741:
  3561  092C  30FF               	movlw	255
  3562  092D  05CE               	andwf	___fltol@f1,f
  3563  092E  30FF               	movlw	255
  3564  092F  05CF               	andwf	___fltol@f1+1,f
  3565  0930  30FF               	movlw	255
  3566  0931  05D0               	andwf	___fltol@f1+2,f
  3567  0932  3000               	movlw	0
  3568  0933  05D1               	andwf	___fltol@f1+3,f
  3569  0934                     l2743:
  3570  0934  3096               	movlw	150
  3571  0935  02D8               	subwf	___fltol@exp1,f
  3572  0936                     l2745:
  3573  0936  1FD8               	btfss	___fltol@exp1,7
  3574  0937  2939               	goto	u2601
  3575  0938  293A               	goto	u2600
  3576  0939                     u2601:
  3577  0939  2954               	goto	l2755
  3578  093A                     u2600:
  3579  093A                     l2747:
  3580  093A  0858               	movf	___fltol@exp1,w
  3581  093B  3A80               	xorlw	128
  3582  093C  3E97               	addlw	151
  3583  093D  1803               	skipnc
  3584  093E  2940               	goto	u2611
  3585  093F  2941               	goto	u2610
  3586  0940                     u2611:
  3587  0940  2942               	goto	l2753
  3588  0941                     u2610:
  3589  0941  290D               	goto	l2733
  3590  0942                     l2753:
  3591  0942  3001               	movlw	1
  3592  0943                     u2625:
  3593  0943  1003               	clrc
  3594  0944  0CD1               	rrf	___fltol@f1+3,f
  3595  0945  0CD0               	rrf	___fltol@f1+2,f
  3596  0946  0CCF               	rrf	___fltol@f1+1,f
  3597  0947  0CCE               	rrf	___fltol@f1,f
  3598  0948  3EFF               	addlw	-1
  3599  0949  1D03               	skipz
  3600  094A  2943               	goto	u2625
  3601  094B  3001               	movlw	1
  3602  094C  00D2               	movwf	??___fltol
  3603  094D  0852               	movf	??___fltol,w
  3604  094E  07D8               	addwf	___fltol@exp1,f
  3605  094F  1D03               	btfss	3,2
  3606  0950  2952               	goto	u2631
  3607  0951  2953               	goto	u2630
  3608  0952                     u2631:
  3609  0952  2942               	goto	l2753
  3610  0953                     u2630:
  3611  0953  296B               	goto	l2763
  3612  0954                     l2755:
  3613  0954  3020               	movlw	32
  3614  0955  0258               	subwf	___fltol@exp1,w
  3615  0956  1C03               	skipc
  3616  0957  2959               	goto	u2641
  3617  0958  295A               	goto	u2640
  3618  0959                     u2641:
  3619  0959  2966               	goto	l765
  3620  095A                     u2640:
  3621  095A  290D               	goto	l2733
  3622  095B                     l2761:
  3623  095B  3001               	movlw	1
  3624  095C  00D2               	movwf	??___fltol
  3625  095D                     u2655:
  3626  095D  1003               	clrc
  3627  095E  0DCE               	rlf	___fltol@f1,f
  3628  095F  0DCF               	rlf	___fltol@f1+1,f
  3629  0960  0DD0               	rlf	___fltol@f1+2,f
  3630  0961  0DD1               	rlf	___fltol@f1+3,f
  3631  0962  0BD2               	decfsz	??___fltol,f
  3632  0963  295D               	goto	u2655
  3633  0964  3001               	movlw	1
  3634  0965  02D8               	subwf	___fltol@exp1,f
  3635  0966                     l765:
  3636  0966  0858               	movf	___fltol@exp1,w
  3637  0967  1D03               	btfss	3,2
  3638  0968  296A               	goto	u2661
  3639  0969  296B               	goto	u2660
  3640  096A                     u2661:
  3641  096A  295B               	goto	l2761
  3642  096B                     u2660:
  3643  096B                     l2763:
  3644  096B  0857               	movf	___fltol@sign1,w
  3645  096C  1903               	btfsc	3,2
  3646  096D  296F               	goto	u2671
  3647  096E  2970               	goto	u2670
  3648  096F                     u2671:
  3649  096F  297B               	goto	l768
  3650  0970                     u2670:
  3651  0970                     l2765:
  3652  0970  09CE               	comf	___fltol@f1,f
  3653  0971  09CF               	comf	___fltol@f1+1,f
  3654  0972  09D0               	comf	___fltol@f1+2,f
  3655  0973  09D1               	comf	___fltol@f1+3,f
  3656  0974  0ACE               	incf	___fltol@f1,f
  3657  0975  1903               	skipnz
  3658  0976  0ACF               	incf	___fltol@f1+1,f
  3659  0977  1903               	skipnz
  3660  0978  0AD0               	incf	___fltol@f1+2,f
  3661  0979  1903               	skipnz
  3662  097A  0AD1               	incf	___fltol@f1+3,f
  3663  097B                     l768:
  3664  097B                     l758:
  3665  097B  0008               	return
  3666  097C                     __end_of___fltol:
  3667                           
  3668                           	psect	text5
  3669  004E                     __ptext5:	
  3670 ;; *************** function ___flmul *****************
  3671 ;; Defined at:
  3672 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\sprcmul.c"
  3673 ;; Parameters:    Size  Location     Type
  3674 ;;  b               4    0[BANK0 ] long 
  3675 ;;  a               4    4[BANK0 ] long 
  3676 ;; Auto vars:     Size  Location     Type
  3677 ;;  prod            4   20[BANK0 ] struct .
  3678 ;;  grs             4   14[BANK0 ] unsigned long 
  3679 ;;  temp            2   24[BANK0 ] struct .
  3680 ;;  bexp            1   19[BANK0 ] unsigned char 
  3681 ;;  aexp            1   18[BANK0 ] unsigned char 
  3682 ;;  sign            1   13[BANK0 ] unsigned char 
  3683 ;; Return value:  Size  Location     Type
  3684 ;;                  4    0[BANK0 ] unsigned char 
  3685 ;; Registers used:
  3686 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3687 ;; Tracked objects:
  3688 ;;		On entry : 0/0
  3689 ;;		On exit  : 0/0
  3690 ;;		Unchanged: 0/0
  3691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3692 ;;      Params:         0       8       0       0       0
  3693 ;;      Locals:         0      13       0       0       0
  3694 ;;      Temps:          0       5       0       0       0
  3695 ;;      Totals:         0      26       0       0       0
  3696 ;;Total ram usage:       26 bytes
  3697 ;; Hardware stack levels used: 1
  3698 ;; Hardware stack levels required when called: 1
  3699 ;; This function calls:
  3700 ;;		__Umul8_16
  3701 ;; This function is called by:
  3702 ;;		_Update_Farenheit
  3703 ;;		_Update_Celsius
  3704 ;; This function uses a non-reentrant model
  3705 ;;
  3706                           
  3707  004E                     ___flmul:	
  3708                           ;psect for function ___flmul
  3709                           
  3710  004E                     l2961:	
  3711                           ;incstack = 0
  3712                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3713                           
  3714  004E  1283               	bcf	3,5	;RP0=0, select bank0
  3715  004F  1303               	bcf	3,6	;RP1=0, select bank0
  3716  0050  0823               	movf	___flmul@b+3,w
  3717  0051  3980               	andlw	128
  3718  0052  00A8               	movwf	??___flmul
  3719  0053  0828               	movf	??___flmul,w
  3720  0054  00AD               	movwf	___flmul@sign
  3721  0055                     l2963:
  3722  0055  0823               	movf	___flmul@b+3,w
  3723  0056  00A8               	movwf	??___flmul
  3724  0057  0728               	addwf	??___flmul,w
  3725  0058  00A9               	movwf	??___flmul+1
  3726  0059  0829               	movf	??___flmul+1,w
  3727  005A  00B3               	movwf	___flmul@bexp
  3728  005B                     l2965:
  3729  005B  1FA2               	btfss	___flmul@b+2,7
  3730  005C  285E               	goto	u3141
  3731  005D  285F               	goto	u3140
  3732  005E                     u3141:
  3733  005E  2860               	goto	l2969
  3734  005F                     u3140:
  3735  005F                     l2967:
  3736  005F  1433               	bsf	___flmul@bexp,0
  3737  0060                     l2969:
  3738  0060  0833               	movf	___flmul@bexp,w
  3739  0061  1903               	btfsc	3,2
  3740  0062  2864               	goto	u3151
  3741  0063  2865               	goto	u3150
  3742  0064                     u3151:
  3743  0064  2874               	goto	l2977
  3744  0065                     u3150:
  3745  0065                     l2971:
  3746  0065  0A33               	incf	___flmul@bexp,w
  3747  0066  1D03               	btfss	3,2
  3748  0067  2869               	goto	u3161
  3749  0068  286A               	goto	u3160
  3750  0069                     u3161:
  3751  0069  2872               	goto	l2975
  3752  006A                     u3160:
  3753  006A                     l2973:
  3754  006A  3000               	movlw	0
  3755  006B  00A3               	movwf	___flmul@b+3
  3756  006C  3000               	movlw	0
  3757  006D  00A2               	movwf	___flmul@b+2
  3758  006E  3000               	movlw	0
  3759  006F  00A1               	movwf	___flmul@b+1
  3760  0070  3000               	movlw	0
  3761  0071  00A0               	movwf	___flmul@b
  3762  0072                     l2975:
  3763  0072  17A2               	bsf	___flmul@b+2,7
  3764  0073  287C               	goto	l2979
  3765  0074                     l2977:
  3766  0074  3000               	movlw	0
  3767  0075  00A3               	movwf	___flmul@b+3
  3768  0076  3000               	movlw	0
  3769  0077  00A2               	movwf	___flmul@b+2
  3770  0078  3000               	movlw	0
  3771  0079  00A1               	movwf	___flmul@b+1
  3772  007A  3000               	movlw	0
  3773  007B  00A0               	movwf	___flmul@b
  3774  007C                     l2979:
  3775  007C  0827               	movf	___flmul@a+3,w
  3776  007D  3980               	andlw	128
  3777  007E  00A8               	movwf	??___flmul
  3778  007F  0828               	movf	??___flmul,w
  3779  0080  06AD               	xorwf	___flmul@sign,f
  3780  0081                     l2981:
  3781  0081  0827               	movf	___flmul@a+3,w
  3782  0082  00A8               	movwf	??___flmul
  3783  0083  0728               	addwf	??___flmul,w
  3784  0084  00A9               	movwf	??___flmul+1
  3785  0085  0829               	movf	??___flmul+1,w
  3786  0086  00B2               	movwf	___flmul@aexp
  3787  0087                     l2983:
  3788  0087  1FA6               	btfss	___flmul@a+2,7
  3789  0088  288A               	goto	u3171
  3790  0089  288B               	goto	u3170
  3791  008A                     u3171:
  3792  008A  288C               	goto	l2987
  3793  008B                     u3170:
  3794  008B                     l2985:
  3795  008B  1432               	bsf	___flmul@aexp,0
  3796  008C                     l2987:
  3797  008C  0832               	movf	___flmul@aexp,w
  3798  008D  1903               	btfsc	3,2
  3799  008E  2890               	goto	u3181
  3800  008F  2891               	goto	u3180
  3801  0090                     u3181:
  3802  0090  28A0               	goto	l2995
  3803  0091                     u3180:
  3804  0091                     l2989:
  3805  0091  0A32               	incf	___flmul@aexp,w
  3806  0092  1D03               	btfss	3,2
  3807  0093  2895               	goto	u3191
  3808  0094  2896               	goto	u3190
  3809  0095                     u3191:
  3810  0095  289E               	goto	l2993
  3811  0096                     u3190:
  3812  0096                     l2991:
  3813  0096  3000               	movlw	0
  3814  0097  00A7               	movwf	___flmul@a+3
  3815  0098  3000               	movlw	0
  3816  0099  00A6               	movwf	___flmul@a+2
  3817  009A  3000               	movlw	0
  3818  009B  00A5               	movwf	___flmul@a+1
  3819  009C  3000               	movlw	0
  3820  009D  00A4               	movwf	___flmul@a
  3821  009E                     l2993:
  3822  009E  17A6               	bsf	___flmul@a+2,7
  3823  009F  28A8               	goto	l2997
  3824  00A0                     l2995:
  3825  00A0  3000               	movlw	0
  3826  00A1  00A7               	movwf	___flmul@a+3
  3827  00A2  3000               	movlw	0
  3828  00A3  00A6               	movwf	___flmul@a+2
  3829  00A4  3000               	movlw	0
  3830  00A5  00A5               	movwf	___flmul@a+1
  3831  00A6  3000               	movlw	0
  3832  00A7  00A4               	movwf	___flmul@a
  3833  00A8                     l2997:
  3834  00A8  0832               	movf	___flmul@aexp,w
  3835  00A9  1903               	btfsc	3,2
  3836  00AA  28AC               	goto	u3201
  3837  00AB  28AD               	goto	u3200
  3838  00AC                     u3201:
  3839  00AC  28B2               	goto	l3001
  3840  00AD                     u3200:
  3841  00AD                     l2999:
  3842  00AD  0833               	movf	___flmul@bexp,w
  3843  00AE  1D03               	btfss	3,2
  3844  00AF  28B1               	goto	u3211
  3845  00B0  28B2               	goto	u3210
  3846  00B1                     u3211:
  3847  00B1  28BB               	goto	l3005
  3848  00B2                     u3210:
  3849  00B2                     l3001:
  3850  00B2  3000               	movlw	0
  3851  00B3  00A3               	movwf	?___flmul+3
  3852  00B4  3000               	movlw	0
  3853  00B5  00A2               	movwf	?___flmul+2
  3854  00B6  3000               	movlw	0
  3855  00B7  00A1               	movwf	?___flmul+1
  3856  00B8  3000               	movlw	0
  3857  00B9  00A0               	movwf	?___flmul
  3858  00BA  2BAE               	goto	l961
  3859  00BB                     l3005:
  3860  00BB  0820               	movf	___flmul@b,w
  3861  00BC  00A8               	movwf	??___flmul
  3862  00BD  0828               	movf	??___flmul,w
  3863  00BE  00F0               	movwf	__Umul8_16@multiplicand
  3864  00BF  0826               	movf	___flmul@a+2,w
  3865  00C0  160A  118A  251A  120A  118A  	fcall	__Umul8_16
  3866  00C5  0871               	movf	?__Umul8_16+1,w
  3867  00C6  1283               	bcf	3,5	;RP0=0, select bank0
  3868  00C7  1303               	bcf	3,6	;RP1=0, select bank0
  3869  00C8  00B9               	movwf	___flmul@temp+1
  3870  00C9  0870               	movf	?__Umul8_16,w
  3871  00CA  00B8               	movwf	___flmul@temp
  3872  00CB                     l3007:
  3873  00CB  0838               	movf	___flmul@temp,w
  3874  00CC  00A8               	movwf	??___flmul
  3875  00CD  01A9               	clrf	??___flmul+1
  3876  00CE  01AA               	clrf	??___flmul+2
  3877  00CF  01AB               	clrf	??___flmul+3
  3878  00D0  082B               	movf	??___flmul+3,w
  3879  00D1  00B1               	movwf	___flmul@grs+3
  3880  00D2  082A               	movf	??___flmul+2,w
  3881  00D3  00B0               	movwf	___flmul@grs+2
  3882  00D4  0829               	movf	??___flmul+1,w
  3883  00D5  00AF               	movwf	___flmul@grs+1
  3884  00D6  0828               	movf	??___flmul,w
  3885  00D7  00AE               	movwf	___flmul@grs
  3886  00D8                     l3009:
  3887  00D8  0839               	movf	___flmul@temp+1,w
  3888  00D9  00A8               	movwf	??___flmul
  3889  00DA  01A9               	clrf	??___flmul+1
  3890  00DB  01AA               	clrf	??___flmul+2
  3891  00DC  01AB               	clrf	??___flmul+3
  3892  00DD  082B               	movf	??___flmul+3,w
  3893  00DE  00B7               	movwf	___flmul@prod+3
  3894  00DF  082A               	movf	??___flmul+2,w
  3895  00E0  00B6               	movwf	___flmul@prod+2
  3896  00E1  0829               	movf	??___flmul+1,w
  3897  00E2  00B5               	movwf	___flmul@prod+1
  3898  00E3  0828               	movf	??___flmul,w
  3899  00E4  00B4               	movwf	___flmul@prod
  3900  00E5  0821               	movf	___flmul@b+1,w
  3901  00E6  00A8               	movwf	??___flmul
  3902  00E7  0828               	movf	??___flmul,w
  3903  00E8  00F0               	movwf	__Umul8_16@multiplicand
  3904  00E9  0825               	movf	___flmul@a+1,w
  3905  00EA  160A  118A  251A  120A  118A  	fcall	__Umul8_16
  3906  00EF  0871               	movf	?__Umul8_16+1,w
  3907  00F0  1283               	bcf	3,5	;RP0=0, select bank0
  3908  00F1  1303               	bcf	3,6	;RP1=0, select bank0
  3909  00F2  00B9               	movwf	___flmul@temp+1
  3910  00F3  0870               	movf	?__Umul8_16,w
  3911  00F4  00B8               	movwf	___flmul@temp
  3912  00F5                     l3011:
  3913  00F5  0838               	movf	___flmul@temp,w
  3914  00F6  00A8               	movwf	??___flmul
  3915  00F7  01A9               	clrf	??___flmul+1
  3916  00F8  01AA               	clrf	??___flmul+2
  3917  00F9  01AB               	clrf	??___flmul+3
  3918  00FA  0828               	movf	??___flmul,w
  3919  00FB  07AE               	addwf	___flmul@grs,f
  3920  00FC  0829               	movf	??___flmul+1,w
  3921  00FD  1103               	clrz
  3922  00FE  1803               	skipnc
  3923  00FF  3E01               	addlw	1
  3924  0100  1903               	skipnz
  3925  0101  2903               	goto	u3221
  3926  0102  07AF               	addwf	___flmul@grs+1,f
  3927  0103                     u3221:
  3928  0103  082A               	movf	??___flmul+2,w
  3929  0104  1103               	clrz
  3930  0105  1803               	skipnc
  3931  0106  3E01               	addlw	1
  3932  0107  1903               	skipnz
  3933  0108  290A               	goto	u3222
  3934  0109  07B0               	addwf	___flmul@grs+2,f
  3935  010A                     u3222:
  3936  010A  082B               	movf	??___flmul+3,w
  3937  010B  1103               	clrz
  3938  010C  1803               	skipnc
  3939  010D  3E01               	addlw	1
  3940  010E  1903               	skipnz
  3941  010F  2911               	goto	u3223
  3942  0110  07B1               	addwf	___flmul@grs+3,f
  3943  0111                     u3223:
  3944  0111                     l3013:
  3945  0111  0839               	movf	___flmul@temp+1,w
  3946  0112  00A8               	movwf	??___flmul
  3947  0113  01A9               	clrf	??___flmul+1
  3948  0114  01AA               	clrf	??___flmul+2
  3949  0115  01AB               	clrf	??___flmul+3
  3950  0116  0828               	movf	??___flmul,w
  3951  0117  07B4               	addwf	___flmul@prod,f
  3952  0118  0829               	movf	??___flmul+1,w
  3953  0119  1103               	clrz
  3954  011A  1803               	skipnc
  3955  011B  3E01               	addlw	1
  3956  011C  1903               	skipnz
  3957  011D  291F               	goto	u3231
  3958  011E  07B5               	addwf	___flmul@prod+1,f
  3959  011F                     u3231:
  3960  011F  082A               	movf	??___flmul+2,w
  3961  0120  1103               	clrz
  3962  0121  1803               	skipnc
  3963  0122  3E01               	addlw	1
  3964  0123  1903               	skipnz
  3965  0124  2926               	goto	u3232
  3966  0125  07B6               	addwf	___flmul@prod+2,f
  3967  0126                     u3232:
  3968  0126  082B               	movf	??___flmul+3,w
  3969  0127  1103               	clrz
  3970  0128  1803               	skipnc
  3971  0129  3E01               	addlw	1
  3972  012A  1903               	skipnz
  3973  012B  292D               	goto	u3233
  3974  012C  07B7               	addwf	___flmul@prod+3,f
  3975  012D                     u3233:
  3976  012D  0822               	movf	___flmul@b+2,w
  3977  012E  00A8               	movwf	??___flmul
  3978  012F  0828               	movf	??___flmul,w
  3979  0130  00F0               	movwf	__Umul8_16@multiplicand
  3980  0131  0824               	movf	___flmul@a,w
  3981  0132  160A  118A  251A  120A  118A  	fcall	__Umul8_16
  3982  0137  0871               	movf	?__Umul8_16+1,w
  3983  0138  1283               	bcf	3,5	;RP0=0, select bank0
  3984  0139  1303               	bcf	3,6	;RP1=0, select bank0
  3985  013A  00B9               	movwf	___flmul@temp+1
  3986  013B  0870               	movf	?__Umul8_16,w
  3987  013C  00B8               	movwf	___flmul@temp
  3988  013D                     l3015:
  3989  013D  0838               	movf	___flmul@temp,w
  3990  013E  00A8               	movwf	??___flmul
  3991  013F  01A9               	clrf	??___flmul+1
  3992  0140  01AA               	clrf	??___flmul+2
  3993  0141  01AB               	clrf	??___flmul+3
  3994  0142  0828               	movf	??___flmul,w
  3995  0143  07AE               	addwf	___flmul@grs,f
  3996  0144  0829               	movf	??___flmul+1,w
  3997  0145  1103               	clrz
  3998  0146  1803               	skipnc
  3999  0147  3E01               	addlw	1
  4000  0148  1903               	skipnz
  4001  0149  294B               	goto	u3241
  4002  014A  07AF               	addwf	___flmul@grs+1,f
  4003  014B                     u3241:
  4004  014B  082A               	movf	??___flmul+2,w
  4005  014C  1103               	clrz
  4006  014D  1803               	skipnc
  4007  014E  3E01               	addlw	1
  4008  014F  1903               	skipnz
  4009  0150  2952               	goto	u3242
  4010  0151  07B0               	addwf	___flmul@grs+2,f
  4011  0152                     u3242:
  4012  0152  082B               	movf	??___flmul+3,w
  4013  0153  1103               	clrz
  4014  0154  1803               	skipnc
  4015  0155  3E01               	addlw	1
  4016  0156  1903               	skipnz
  4017  0157  2959               	goto	u3243
  4018  0158  07B1               	addwf	___flmul@grs+3,f
  4019  0159                     u3243:
  4020  0159                     l3017:
  4021  0159  0839               	movf	___flmul@temp+1,w
  4022  015A  00A8               	movwf	??___flmul
  4023  015B  01A9               	clrf	??___flmul+1
  4024  015C  01AA               	clrf	??___flmul+2
  4025  015D  01AB               	clrf	??___flmul+3
  4026  015E  0828               	movf	??___flmul,w
  4027  015F  07B4               	addwf	___flmul@prod,f
  4028  0160  0829               	movf	??___flmul+1,w
  4029  0161  1103               	clrz
  4030  0162  1803               	skipnc
  4031  0163  3E01               	addlw	1
  4032  0164  1903               	skipnz
  4033  0165  2967               	goto	u3251
  4034  0166  07B5               	addwf	___flmul@prod+1,f
  4035  0167                     u3251:
  4036  0167  082A               	movf	??___flmul+2,w
  4037  0168  1103               	clrz
  4038  0169  1803               	skipnc
  4039  016A  3E01               	addlw	1
  4040  016B  1903               	skipnz
  4041  016C  296E               	goto	u3252
  4042  016D  07B6               	addwf	___flmul@prod+2,f
  4043  016E                     u3252:
  4044  016E  082B               	movf	??___flmul+3,w
  4045  016F  1103               	clrz
  4046  0170  1803               	skipnc
  4047  0171  3E01               	addlw	1
  4048  0172  1903               	skipnz
  4049  0173  2975               	goto	u3253
  4050  0174  07B7               	addwf	___flmul@prod+3,f
  4051  0175                     u3253:
  4052  0175                     l3019:
  4053  0175  3008               	movlw	8
  4054  0176  00A8               	movwf	??___flmul
  4055  0177                     u3265:
  4056  0177  1003               	clrc
  4057  0178  0DAE               	rlf	___flmul@grs,f
  4058  0179  0DAF               	rlf	___flmul@grs+1,f
  4059  017A  0DB0               	rlf	___flmul@grs+2,f
  4060  017B  0DB1               	rlf	___flmul@grs+3,f
  4061  017C  0BA8               	decfsz	??___flmul,f
  4062  017D  2977               	goto	u3265
  4063  017E                     l3021:
  4064  017E  0821               	movf	___flmul@b+1,w
  4065  017F  00A8               	movwf	??___flmul
  4066  0180  0828               	movf	??___flmul,w
  4067  0181  00F0               	movwf	__Umul8_16@multiplicand
  4068  0182  0824               	movf	___flmul@a,w
  4069  0183  160A  118A  251A  120A  118A  	fcall	__Umul8_16
  4070  0188  0871               	movf	?__Umul8_16+1,w
  4071  0189  1283               	bcf	3,5	;RP0=0, select bank0
  4072  018A  1303               	bcf	3,6	;RP1=0, select bank0
  4073  018B  00B9               	movwf	___flmul@temp+1
  4074  018C  0870               	movf	?__Umul8_16,w
  4075  018D  00B8               	movwf	___flmul@temp
  4076  018E                     l3023:
  4077  018E  0838               	movf	___flmul@temp,w
  4078  018F  00A8               	movwf	??___flmul
  4079  0190  0839               	movf	___flmul@temp+1,w
  4080  0191  00A9               	movwf	??___flmul+1
  4081  0192  01AA               	clrf	??___flmul+2
  4082  0193  01AB               	clrf	??___flmul+3
  4083  0194  0828               	movf	??___flmul,w
  4084  0195  07AE               	addwf	___flmul@grs,f
  4085  0196  0829               	movf	??___flmul+1,w
  4086  0197  1103               	clrz
  4087  0198  1803               	skipnc
  4088  0199  3E01               	addlw	1
  4089  019A  1903               	skipnz
  4090  019B  299D               	goto	u3271
  4091  019C  07AF               	addwf	___flmul@grs+1,f
  4092  019D                     u3271:
  4093  019D  082A               	movf	??___flmul+2,w
  4094  019E  1103               	clrz
  4095  019F  1803               	skipnc
  4096  01A0  3E01               	addlw	1
  4097  01A1  1903               	skipnz
  4098  01A2  29A4               	goto	u3272
  4099  01A3  07B0               	addwf	___flmul@grs+2,f
  4100  01A4                     u3272:
  4101  01A4  082B               	movf	??___flmul+3,w
  4102  01A5  1103               	clrz
  4103  01A6  1803               	skipnc
  4104  01A7  3E01               	addlw	1
  4105  01A8  1903               	skipnz
  4106  01A9  29AB               	goto	u3273
  4107  01AA  07B1               	addwf	___flmul@grs+3,f
  4108  01AB                     u3273:
  4109  01AB                     l3025:
  4110  01AB  0820               	movf	___flmul@b,w
  4111  01AC  00A8               	movwf	??___flmul
  4112  01AD  0828               	movf	??___flmul,w
  4113  01AE  00F0               	movwf	__Umul8_16@multiplicand
  4114  01AF  0825               	movf	___flmul@a+1,w
  4115  01B0  160A  118A  251A  120A  118A  	fcall	__Umul8_16
  4116  01B5  0871               	movf	?__Umul8_16+1,w
  4117  01B6  1283               	bcf	3,5	;RP0=0, select bank0
  4118  01B7  1303               	bcf	3,6	;RP1=0, select bank0
  4119  01B8  00B9               	movwf	___flmul@temp+1
  4120  01B9  0870               	movf	?__Umul8_16,w
  4121  01BA  00B8               	movwf	___flmul@temp
  4122  01BB                     l3027:
  4123  01BB  0838               	movf	___flmul@temp,w
  4124  01BC  00A8               	movwf	??___flmul
  4125  01BD  0839               	movf	___flmul@temp+1,w
  4126  01BE  00A9               	movwf	??___flmul+1
  4127  01BF  01AA               	clrf	??___flmul+2
  4128  01C0  01AB               	clrf	??___flmul+3
  4129  01C1  0828               	movf	??___flmul,w
  4130  01C2  07AE               	addwf	___flmul@grs,f
  4131  01C3  0829               	movf	??___flmul+1,w
  4132  01C4  1103               	clrz
  4133  01C5  1803               	skipnc
  4134  01C6  3E01               	addlw	1
  4135  01C7  1903               	skipnz
  4136  01C8  29CA               	goto	u3281
  4137  01C9  07AF               	addwf	___flmul@grs+1,f
  4138  01CA                     u3281:
  4139  01CA  082A               	movf	??___flmul+2,w
  4140  01CB  1103               	clrz
  4141  01CC  1803               	skipnc
  4142  01CD  3E01               	addlw	1
  4143  01CE  1903               	skipnz
  4144  01CF  29D1               	goto	u3282
  4145  01D0  07B0               	addwf	___flmul@grs+2,f
  4146  01D1                     u3282:
  4147  01D1  082B               	movf	??___flmul+3,w
  4148  01D2  1103               	clrz
  4149  01D3  1803               	skipnc
  4150  01D4  3E01               	addlw	1
  4151  01D5  1903               	skipnz
  4152  01D6  29D8               	goto	u3283
  4153  01D7  07B1               	addwf	___flmul@grs+3,f
  4154  01D8                     u3283:
  4155  01D8                     l3029:
  4156  01D8  3008               	movlw	8
  4157  01D9  00A8               	movwf	??___flmul
  4158  01DA                     u3295:
  4159  01DA  1003               	clrc
  4160  01DB  0DAE               	rlf	___flmul@grs,f
  4161  01DC  0DAF               	rlf	___flmul@grs+1,f
  4162  01DD  0DB0               	rlf	___flmul@grs+2,f
  4163  01DE  0DB1               	rlf	___flmul@grs+3,f
  4164  01DF  0BA8               	decfsz	??___flmul,f
  4165  01E0  29DA               	goto	u3295
  4166  01E1  0820               	movf	___flmul@b,w
  4167  01E2  00A8               	movwf	??___flmul
  4168  01E3  0828               	movf	??___flmul,w
  4169  01E4  00F0               	movwf	__Umul8_16@multiplicand
  4170  01E5  0824               	movf	___flmul@a,w
  4171  01E6  160A  118A  251A  120A  118A  	fcall	__Umul8_16
  4172  01EB  0871               	movf	?__Umul8_16+1,w
  4173  01EC  1283               	bcf	3,5	;RP0=0, select bank0
  4174  01ED  1303               	bcf	3,6	;RP1=0, select bank0
  4175  01EE  00B9               	movwf	___flmul@temp+1
  4176  01EF  0870               	movf	?__Umul8_16,w
  4177  01F0  00B8               	movwf	___flmul@temp
  4178  01F1                     l3031:
  4179  01F1  0838               	movf	___flmul@temp,w
  4180  01F2  00A8               	movwf	??___flmul
  4181  01F3  0839               	movf	___flmul@temp+1,w
  4182  01F4  00A9               	movwf	??___flmul+1
  4183  01F5  01AA               	clrf	??___flmul+2
  4184  01F6  01AB               	clrf	??___flmul+3
  4185  01F7  0828               	movf	??___flmul,w
  4186  01F8  07AE               	addwf	___flmul@grs,f
  4187  01F9  0829               	movf	??___flmul+1,w
  4188  01FA  1103               	clrz
  4189  01FB  1803               	skipnc
  4190  01FC  3E01               	addlw	1
  4191  01FD  1903               	skipnz
  4192  01FE  2A00               	goto	u3301
  4193  01FF  07AF               	addwf	___flmul@grs+1,f
  4194  0200                     u3301:
  4195  0200  082A               	movf	??___flmul+2,w
  4196  0201  1103               	clrz
  4197  0202  1803               	skipnc
  4198  0203  3E01               	addlw	1
  4199  0204  1903               	skipnz
  4200  0205  2A07               	goto	u3302
  4201  0206  07B0               	addwf	___flmul@grs+2,f
  4202  0207                     u3302:
  4203  0207  082B               	movf	??___flmul+3,w
  4204  0208  1103               	clrz
  4205  0209  1803               	skipnc
  4206  020A  3E01               	addlw	1
  4207  020B  1903               	skipnz
  4208  020C  2A0E               	goto	u3303
  4209  020D  07B1               	addwf	___flmul@grs+3,f
  4210  020E                     u3303:
  4211  020E                     l3033:
  4212  020E  0821               	movf	___flmul@b+1,w
  4213  020F  00A8               	movwf	??___flmul
  4214  0210  0828               	movf	??___flmul,w
  4215  0211  00F0               	movwf	__Umul8_16@multiplicand
  4216  0212  0826               	movf	___flmul@a+2,w
  4217  0213  160A  118A  251A  120A  118A  	fcall	__Umul8_16
  4218  0218  0871               	movf	?__Umul8_16+1,w
  4219  0219  1283               	bcf	3,5	;RP0=0, select bank0
  4220  021A  1303               	bcf	3,6	;RP1=0, select bank0
  4221  021B  00B9               	movwf	___flmul@temp+1
  4222  021C  0870               	movf	?__Umul8_16,w
  4223  021D  00B8               	movwf	___flmul@temp
  4224  021E  0838               	movf	___flmul@temp,w
  4225  021F  00A8               	movwf	??___flmul
  4226  0220  0839               	movf	___flmul@temp+1,w
  4227  0221  00A9               	movwf	??___flmul+1
  4228  0222  01AA               	clrf	??___flmul+2
  4229  0223  01AB               	clrf	??___flmul+3
  4230  0224  0828               	movf	??___flmul,w
  4231  0225  07B4               	addwf	___flmul@prod,f
  4232  0226  0829               	movf	??___flmul+1,w
  4233  0227  1103               	clrz
  4234  0228  1803               	skipnc
  4235  0229  3E01               	addlw	1
  4236  022A  1903               	skipnz
  4237  022B  2A2D               	goto	u3311
  4238  022C  07B5               	addwf	___flmul@prod+1,f
  4239  022D                     u3311:
  4240  022D  082A               	movf	??___flmul+2,w
  4241  022E  1103               	clrz
  4242  022F  1803               	skipnc
  4243  0230  3E01               	addlw	1
  4244  0231  1903               	skipnz
  4245  0232  2A34               	goto	u3312
  4246  0233  07B6               	addwf	___flmul@prod+2,f
  4247  0234                     u3312:
  4248  0234  082B               	movf	??___flmul+3,w
  4249  0235  1103               	clrz
  4250  0236  1803               	skipnc
  4251  0237  3E01               	addlw	1
  4252  0238  1903               	skipnz
  4253  0239  2A3B               	goto	u3313
  4254  023A  07B7               	addwf	___flmul@prod+3,f
  4255  023B                     u3313:
  4256  023B                     l3035:
  4257  023B  0822               	movf	___flmul@b+2,w
  4258  023C  00A8               	movwf	??___flmul
  4259  023D  0828               	movf	??___flmul,w
  4260  023E  00F0               	movwf	__Umul8_16@multiplicand
  4261  023F  0825               	movf	___flmul@a+1,w
  4262  0240  160A  118A  251A  120A  118A  	fcall	__Umul8_16
  4263  0245  0871               	movf	?__Umul8_16+1,w
  4264  0246  1283               	bcf	3,5	;RP0=0, select bank0
  4265  0247  1303               	bcf	3,6	;RP1=0, select bank0
  4266  0248  00B9               	movwf	___flmul@temp+1
  4267  0249  0870               	movf	?__Umul8_16,w
  4268  024A  00B8               	movwf	___flmul@temp
  4269  024B                     l3037:
  4270  024B  0838               	movf	___flmul@temp,w
  4271  024C  00A8               	movwf	??___flmul
  4272  024D  0839               	movf	___flmul@temp+1,w
  4273  024E  00A9               	movwf	??___flmul+1
  4274  024F  01AA               	clrf	??___flmul+2
  4275  0250  01AB               	clrf	??___flmul+3
  4276  0251  0828               	movf	??___flmul,w
  4277  0252  07B4               	addwf	___flmul@prod,f
  4278  0253  0829               	movf	??___flmul+1,w
  4279  0254  1103               	clrz
  4280  0255  1803               	skipnc
  4281  0256  3E01               	addlw	1
  4282  0257  1903               	skipnz
  4283  0258  2A5A               	goto	u3321
  4284  0259  07B5               	addwf	___flmul@prod+1,f
  4285  025A                     u3321:
  4286  025A  082A               	movf	??___flmul+2,w
  4287  025B  1103               	clrz
  4288  025C  1803               	skipnc
  4289  025D  3E01               	addlw	1
  4290  025E  1903               	skipnz
  4291  025F  2A61               	goto	u3322
  4292  0260  07B6               	addwf	___flmul@prod+2,f
  4293  0261                     u3322:
  4294  0261  082B               	movf	??___flmul+3,w
  4295  0262  1103               	clrz
  4296  0263  1803               	skipnc
  4297  0264  3E01               	addlw	1
  4298  0265  1903               	skipnz
  4299  0266  2A68               	goto	u3323
  4300  0267  07B7               	addwf	___flmul@prod+3,f
  4301  0268                     u3323:
  4302  0268  0822               	movf	___flmul@b+2,w
  4303  0269  00A8               	movwf	??___flmul
  4304  026A  0828               	movf	??___flmul,w
  4305  026B  00F0               	movwf	__Umul8_16@multiplicand
  4306  026C  0826               	movf	___flmul@a+2,w
  4307  026D  160A  118A  251A  120A  118A  	fcall	__Umul8_16
  4308  0272  0871               	movf	?__Umul8_16+1,w
  4309  0273  1283               	bcf	3,5	;RP0=0, select bank0
  4310  0274  1303               	bcf	3,6	;RP1=0, select bank0
  4311  0275  00B9               	movwf	___flmul@temp+1
  4312  0276  0870               	movf	?__Umul8_16,w
  4313  0277  00B8               	movwf	___flmul@temp
  4314  0278                     l3039:
  4315  0278  0838               	movf	___flmul@temp,w
  4316  0279  00A8               	movwf	??___flmul
  4317  027A  0839               	movf	___flmul@temp+1,w
  4318  027B  00A9               	movwf	??___flmul+1
  4319  027C  01AA               	clrf	??___flmul+2
  4320  027D  01AB               	clrf	??___flmul+3
  4321  027E  3008               	movlw	8
  4322  027F                     u3335:
  4323  027F  1003               	clrc
  4324  0280  0DA8               	rlf	??___flmul,f
  4325  0281  0DA9               	rlf	??___flmul+1,f
  4326  0282  0DAA               	rlf	??___flmul+2,f
  4327  0283  0DAB               	rlf	??___flmul+3,f
  4328  0284                     u3330:
  4329  0284  3EFF               	addlw	-1
  4330  0285  1D03               	skipz
  4331  0286  2A7F               	goto	u3335
  4332  0287  0828               	movf	??___flmul,w
  4333  0288  07B4               	addwf	___flmul@prod,f
  4334  0289  0829               	movf	??___flmul+1,w
  4335  028A  1103               	clrz
  4336  028B  1803               	skipnc
  4337  028C  3E01               	addlw	1
  4338  028D  1903               	skipnz
  4339  028E  2A90               	goto	u3341
  4340  028F  07B5               	addwf	___flmul@prod+1,f
  4341  0290                     u3341:
  4342  0290  082A               	movf	??___flmul+2,w
  4343  0291  1103               	clrz
  4344  0292  1803               	skipnc
  4345  0293  3E01               	addlw	1
  4346  0294  1903               	skipnz
  4347  0295  2A97               	goto	u3342
  4348  0296  07B6               	addwf	___flmul@prod+2,f
  4349  0297                     u3342:
  4350  0297  082B               	movf	??___flmul+3,w
  4351  0298  1103               	clrz
  4352  0299  1803               	skipnc
  4353  029A  3E01               	addlw	1
  4354  029B  1903               	skipnz
  4355  029C  2A9E               	goto	u3343
  4356  029D  07B7               	addwf	___flmul@prod+3,f
  4357  029E                     u3343:
  4358  029E                     l3041:
  4359  029E  082E               	movf	___flmul@grs,w
  4360  029F  00A8               	movwf	??___flmul
  4361  02A0  082F               	movf	___flmul@grs+1,w
  4362  02A1  00A9               	movwf	??___flmul+1
  4363  02A2  0830               	movf	___flmul@grs+2,w
  4364  02A3  00AA               	movwf	??___flmul+2
  4365  02A4  0831               	movf	___flmul@grs+3,w
  4366  02A5  00AB               	movwf	??___flmul+3
  4367  02A6  3018               	movlw	24
  4368  02A7                     u3355:
  4369  02A7  1003               	clrc
  4370  02A8  0CAB               	rrf	??___flmul+3,f
  4371  02A9  0CAA               	rrf	??___flmul+2,f
  4372  02AA  0CA9               	rrf	??___flmul+1,f
  4373  02AB  0CA8               	rrf	??___flmul,f
  4374  02AC                     u3350:
  4375  02AC  3EFF               	addlw	-1
  4376  02AD  1D03               	skipz
  4377  02AE  2AA7               	goto	u3355
  4378  02AF  0828               	movf	??___flmul,w
  4379  02B0  07B4               	addwf	___flmul@prod,f
  4380  02B1  0829               	movf	??___flmul+1,w
  4381  02B2  1103               	clrz
  4382  02B3  1803               	skipnc
  4383  02B4  3E01               	addlw	1
  4384  02B5  1903               	skipnz
  4385  02B6  2AB8               	goto	u3361
  4386  02B7  07B5               	addwf	___flmul@prod+1,f
  4387  02B8                     u3361:
  4388  02B8  082A               	movf	??___flmul+2,w
  4389  02B9  1103               	clrz
  4390  02BA  1803               	skipnc
  4391  02BB  3E01               	addlw	1
  4392  02BC  1903               	skipnz
  4393  02BD  2ABF               	goto	u3362
  4394  02BE  07B6               	addwf	___flmul@prod+2,f
  4395  02BF                     u3362:
  4396  02BF  082B               	movf	??___flmul+3,w
  4397  02C0  1103               	clrz
  4398  02C1  1803               	skipnc
  4399  02C2  3E01               	addlw	1
  4400  02C3  1903               	skipnz
  4401  02C4  2AC6               	goto	u3363
  4402  02C5  07B7               	addwf	___flmul@prod+3,f
  4403  02C6                     u3363:
  4404  02C6                     l3043:
  4405  02C6  3008               	movlw	8
  4406  02C7  00A8               	movwf	??___flmul
  4407  02C8                     u3375:
  4408  02C8  1003               	clrc
  4409  02C9  0DAE               	rlf	___flmul@grs,f
  4410  02CA  0DAF               	rlf	___flmul@grs+1,f
  4411  02CB  0DB0               	rlf	___flmul@grs+2,f
  4412  02CC  0DB1               	rlf	___flmul@grs+3,f
  4413  02CD  0BA8               	decfsz	??___flmul,f
  4414  02CE  2AC8               	goto	u3375
  4415  02CF                     l3045:
  4416  02CF  0833               	movf	___flmul@bexp,w
  4417  02D0  0732               	addwf	___flmul@aexp,w
  4418  02D1  00A8               	movwf	??___flmul
  4419  02D2  01A9               	clrf	??___flmul+1
  4420  02D3  0DA9               	rlf	??___flmul+1,f
  4421  02D4  0828               	movf	??___flmul,w
  4422  02D5  3E82               	addlw	130
  4423  02D6  00B8               	movwf	___flmul@temp
  4424  02D7  0829               	movf	??___flmul+1,w
  4425  02D8  1803               	skipnc
  4426  02D9  3E01               	addlw	1
  4427  02DA  3EFF               	addlw	255
  4428  02DB  00B9               	movwf	___flmul@temp+1
  4429  02DC  2AFA               	goto	l3057
  4430  02DD                     l3047:
  4431  02DD  3001               	movlw	1
  4432  02DE  00A8               	movwf	??___flmul
  4433  02DF                     u3385:
  4434  02DF  1003               	clrc
  4435  02E0  0DB4               	rlf	___flmul@prod,f
  4436  02E1  0DB5               	rlf	___flmul@prod+1,f
  4437  02E2  0DB6               	rlf	___flmul@prod+2,f
  4438  02E3  0DB7               	rlf	___flmul@prod+3,f
  4439  02E4  0BA8               	decfsz	??___flmul,f
  4440  02E5  2ADF               	goto	u3385
  4441  02E6                     l3049:
  4442  02E6  1FB1               	btfss	___flmul@grs+3,7
  4443  02E7  2AE9               	goto	u3391
  4444  02E8  2AEA               	goto	u3390
  4445  02E9                     u3391:
  4446  02E9  2AEB               	goto	l3053
  4447  02EA                     u3390:
  4448  02EA                     l3051:
  4449  02EA  1434               	bsf	___flmul@prod,0
  4450  02EB                     l3053:
  4451  02EB  3001               	movlw	1
  4452  02EC  00A8               	movwf	??___flmul
  4453  02ED                     u3405:
  4454  02ED  1003               	clrc
  4455  02EE  0DAE               	rlf	___flmul@grs,f
  4456  02EF  0DAF               	rlf	___flmul@grs+1,f
  4457  02F0  0DB0               	rlf	___flmul@grs+2,f
  4458  02F1  0DB1               	rlf	___flmul@grs+3,f
  4459  02F2  0BA8               	decfsz	??___flmul,f
  4460  02F3  2AED               	goto	u3405
  4461  02F4                     l3055:
  4462  02F4  30FF               	movlw	255
  4463  02F5  07B8               	addwf	___flmul@temp,f
  4464  02F6  1803               	skipnc
  4465  02F7  0AB9               	incf	___flmul@temp+1,f
  4466  02F8  30FF               	movlw	255
  4467  02F9  07B9               	addwf	___flmul@temp+1,f
  4468  02FA                     l3057:
  4469  02FA  1FB6               	btfss	___flmul@prod+2,7
  4470  02FB  2AFD               	goto	u3411
  4471  02FC  2AFE               	goto	u3410
  4472  02FD                     u3411:
  4473  02FD  2ADD               	goto	l3047
  4474  02FE                     u3410:
  4475  02FE                     l3059:
  4476  02FE  01B2               	clrf	___flmul@aexp
  4477  02FF                     l3061:
  4478  02FF  1FB1               	btfss	___flmul@grs+3,7
  4479  0300  2B02               	goto	u3421
  4480  0301  2B03               	goto	u3420
  4481  0302                     u3421:
  4482  0302  2B1F               	goto	l3069
  4483  0303                     u3420:
  4484  0303                     l3063:
  4485  0303  30FF               	movlw	255
  4486  0304  052E               	andwf	___flmul@grs,w
  4487  0305  00A8               	movwf	??___flmul
  4488  0306  30FF               	movlw	255
  4489  0307  052F               	andwf	___flmul@grs+1,w
  4490  0308  00A9               	movwf	??___flmul+1
  4491  0309  30FF               	movlw	255
  4492  030A  0530               	andwf	___flmul@grs+2,w
  4493  030B  00AA               	movwf	??___flmul+2
  4494  030C  307F               	movlw	127
  4495  030D  0531               	andwf	___flmul@grs+3,w
  4496  030E  00AB               	movwf	??___flmul+3
  4497  030F  082B               	movf	??___flmul+3,w
  4498  0310  042A               	iorwf	??___flmul+2,w
  4499  0311  0429               	iorwf	??___flmul+1,w
  4500  0312  0428               	iorwf	??___flmul,w
  4501  0313  1903               	skipnz
  4502  0314  2B16               	goto	u3431
  4503  0315  2B17               	goto	u3430
  4504  0316                     u3431:
  4505  0316  2B1A               	goto	l967
  4506  0317                     u3430:
  4507  0317                     l3065:
  4508  0317  01B2               	clrf	___flmul@aexp
  4509  0318  0AB2               	incf	___flmul@aexp,f
  4510  0319  2B1F               	goto	l3069
  4511  031A                     l967:
  4512  031A  1C34               	btfss	___flmul@prod,0
  4513  031B  2B1D               	goto	u3441
  4514  031C  2B1E               	goto	u3440
  4515  031D                     u3441:
  4516  031D  2B1F               	goto	l3069
  4517  031E                     u3440:
  4518  031E  2B17               	goto	l3065
  4519  031F                     l3069:
  4520  031F  0832               	movf	___flmul@aexp,w
  4521  0320  1903               	btfsc	3,2
  4522  0321  2B23               	goto	u3451
  4523  0322  2B24               	goto	u3450
  4524  0323                     u3451:
  4525  0323  2B55               	goto	l3079
  4526  0324                     u3450:
  4527  0324                     l3071:
  4528  0324  3001               	movlw	1
  4529  0325  07B4               	addwf	___flmul@prod,f
  4530  0326  3000               	movlw	0
  4531  0327  1803               	skipnc
  4532  0328  3001               	movlw	1
  4533  0329  07B5               	addwf	___flmul@prod+1,f
  4534  032A  3000               	movlw	0
  4535  032B  1803               	skipnc
  4536  032C  3001               	movlw	1
  4537  032D  07B6               	addwf	___flmul@prod+2,f
  4538  032E  3000               	movlw	0
  4539  032F  1803               	skipnc
  4540  0330  3001               	movlw	1
  4541  0331  07B7               	addwf	___flmul@prod+3,f
  4542  0332                     l3073:
  4543  0332  1C37               	btfss	___flmul@prod+3,0
  4544  0333  2B35               	goto	u3461
  4545  0334  2B36               	goto	u3460
  4546  0335                     u3461:
  4547  0335  2B55               	goto	l3079
  4548  0336                     u3460:
  4549  0336                     l3075:
  4550  0336  0834               	movf	___flmul@prod,w
  4551  0337  00A8               	movwf	??___flmul
  4552  0338  0835               	movf	___flmul@prod+1,w
  4553  0339  00A9               	movwf	??___flmul+1
  4554  033A  0836               	movf	___flmul@prod+2,w
  4555  033B  00AA               	movwf	??___flmul+2
  4556  033C  0837               	movf	___flmul@prod+3,w
  4557  033D  00AB               	movwf	??___flmul+3
  4558  033E  3001               	movlw	1
  4559  033F  00AC               	movwf	??___flmul+4
  4560  0340                     u3475:
  4561  0340  0D2B               	rlf	??___flmul+3,w
  4562  0341  0CAB               	rrf	??___flmul+3,f
  4563  0342  0CAA               	rrf	??___flmul+2,f
  4564  0343  0CA9               	rrf	??___flmul+1,f
  4565  0344  0CA8               	rrf	??___flmul,f
  4566  0345                     u3470:
  4567  0345  0BAC               	decfsz	??___flmul+4,f
  4568  0346  2B40               	goto	u3475
  4569  0347  082B               	movf	??___flmul+3,w
  4570  0348  00B7               	movwf	___flmul@prod+3
  4571  0349  082A               	movf	??___flmul+2,w
  4572  034A  00B6               	movwf	___flmul@prod+2
  4573  034B  0829               	movf	??___flmul+1,w
  4574  034C  00B5               	movwf	___flmul@prod+1
  4575  034D  0828               	movf	??___flmul,w
  4576  034E  00B4               	movwf	___flmul@prod
  4577  034F                     l3077:
  4578  034F  3001               	movlw	1
  4579  0350  07B8               	addwf	___flmul@temp,f
  4580  0351  1803               	skipnc
  4581  0352  0AB9               	incf	___flmul@temp+1,f
  4582  0353  3000               	movlw	0
  4583  0354  07B9               	addwf	___flmul@temp+1,f
  4584  0355                     l3079:
  4585  0355  0839               	movf	___flmul@temp+1,w
  4586  0356  3A80               	xorlw	128
  4587  0357  00FF               	movwf	btemp+1
  4588  0358  3080               	movlw	128
  4589  0359  027F               	subwf	btemp+1,w
  4590  035A  1D03               	skipz
  4591  035B  2B5E               	goto	u3485
  4592  035C  30FF               	movlw	255
  4593  035D  0238               	subwf	___flmul@temp,w
  4594  035E                     u3485:
  4595  035E  1C03               	skipc
  4596  035F  2B61               	goto	u3481
  4597  0360  2B62               	goto	u3480
  4598  0361                     u3481:
  4599  0361  2B6D               	goto	l3083
  4600  0362                     u3480:
  4601  0362                     l3081:
  4602  0362  307F               	movlw	127
  4603  0363  1283               	bcf	3,5	;RP0=0, select bank0
  4604  0364  1303               	bcf	3,6	;RP1=0, select bank0
  4605  0365  00B7               	movwf	___flmul@prod+3
  4606  0366  3080               	movlw	128
  4607  0367  00B6               	movwf	___flmul@prod+2
  4608  0368  3000               	movlw	0
  4609  0369  00B5               	movwf	___flmul@prod+1
  4610  036A  3000               	movlw	0
  4611  036B  00B4               	movwf	___flmul@prod
  4612  036C  2BA2               	goto	l973
  4613  036D                     l3083:
  4614  036D  1283               	bcf	3,5	;RP0=0, select bank0
  4615  036E  1303               	bcf	3,6	;RP1=0, select bank0
  4616  036F  0839               	movf	___flmul@temp+1,w
  4617  0370  3A80               	xorlw	128
  4618  0371  00FF               	movwf	btemp+1
  4619  0372  3080               	movlw	128
  4620  0373  027F               	subwf	btemp+1,w
  4621  0374  1D03               	skipz
  4622  0375  2B78               	goto	u3495
  4623  0376  3001               	movlw	1
  4624  0377  0238               	subwf	___flmul@temp,w
  4625  0378                     u3495:
  4626  0378  1803               	skipnc
  4627  0379  2B7B               	goto	u3491
  4628  037A  2B7C               	goto	u3490
  4629  037B                     u3491:
  4630  037B  2B88               	goto	l3089
  4631  037C                     u3490:
  4632  037C                     l3085:
  4633  037C  3000               	movlw	0
  4634  037D  1283               	bcf	3,5	;RP0=0, select bank0
  4635  037E  1303               	bcf	3,6	;RP1=0, select bank0
  4636  037F  00B7               	movwf	___flmul@prod+3
  4637  0380  3000               	movlw	0
  4638  0381  00B6               	movwf	___flmul@prod+2
  4639  0382  3000               	movlw	0
  4640  0383  00B5               	movwf	___flmul@prod+1
  4641  0384  3000               	movlw	0
  4642  0385  00B4               	movwf	___flmul@prod
  4643  0386                     l3087:
  4644  0386  01AD               	clrf	___flmul@sign
  4645  0387  2BA2               	goto	l973
  4646  0388                     l3089:
  4647  0388  1283               	bcf	3,5	;RP0=0, select bank0
  4648  0389  1303               	bcf	3,6	;RP1=0, select bank0
  4649  038A  0838               	movf	___flmul@temp,w
  4650  038B  00A8               	movwf	??___flmul
  4651  038C  0828               	movf	??___flmul,w
  4652  038D  00B3               	movwf	___flmul@bexp
  4653  038E  30FF               	movlw	255
  4654  038F  05B4               	andwf	___flmul@prod,f
  4655  0390  30FF               	movlw	255
  4656  0391  05B5               	andwf	___flmul@prod+1,f
  4657  0392  307F               	movlw	127
  4658  0393  05B6               	andwf	___flmul@prod+2,f
  4659  0394  3000               	movlw	0
  4660  0395  05B7               	andwf	___flmul@prod+3,f
  4661  0396                     l3091:
  4662  0396  1C33               	btfss	___flmul@bexp,0
  4663  0397  2B99               	goto	u3501
  4664  0398  2B9A               	goto	u3500
  4665  0399                     u3501:
  4666  0399  2B9B               	goto	l3095
  4667  039A                     u3500:
  4668  039A                     l3093:
  4669  039A  17B6               	bsf	___flmul@prod+2,7
  4670  039B                     l3095:
  4671  039B  0833               	movf	___flmul@bexp,w
  4672  039C  00A8               	movwf	??___flmul
  4673  039D  1003               	clrc
  4674  039E  0C28               	rrf	??___flmul,w
  4675  039F  00A9               	movwf	??___flmul+1
  4676  03A0  0829               	movf	??___flmul+1,w
  4677  03A1  00B7               	movwf	___flmul@prod+3
  4678  03A2                     l973:
  4679  03A2  082D               	movf	___flmul@sign,w
  4680  03A3  00A8               	movwf	??___flmul
  4681  03A4  0828               	movf	??___flmul,w
  4682  03A5  04B7               	iorwf	___flmul@prod+3,f
  4683  03A6                     l3097:
  4684  03A6  0837               	movf	___flmul@prod+3,w
  4685  03A7  00A3               	movwf	?___flmul+3
  4686  03A8  0836               	movf	___flmul@prod+2,w
  4687  03A9  00A2               	movwf	?___flmul+2
  4688  03AA  0835               	movf	___flmul@prod+1,w
  4689  03AB  00A1               	movwf	?___flmul+1
  4690  03AC  0834               	movf	___flmul@prod,w
  4691  03AD  00A0               	movwf	?___flmul
  4692  03AE                     l961:
  4693  03AE  0008               	return
  4694  03AF                     __end_of___flmul:
  4695                           
  4696                           	psect	text6
  4697  151A                     __ptext6:	
  4698 ;; *************** function __Umul8_16 *****************
  4699 ;; Defined at:
  4700 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\Umul8_16.c"
  4701 ;; Parameters:    Size  Location     Type
  4702 ;;  multiplier      1    wreg     unsigned char 
  4703 ;;  multiplicand    1    0[COMMON] unsigned char 
  4704 ;; Auto vars:     Size  Location     Type
  4705 ;;  multiplier      1    8[COMMON] unsigned char 
  4706 ;;  word_mpld       2    6[COMMON] unsigned int 
  4707 ;;  product         2    4[COMMON] unsigned int 
  4708 ;; Return value:  Size  Location     Type
  4709 ;;                  2    0[COMMON] unsigned int 
  4710 ;; Registers used:
  4711 ;;		wreg, status,2, status,0
  4712 ;; Tracked objects:
  4713 ;;		On entry : 0/0
  4714 ;;		On exit  : 0/0
  4715 ;;		Unchanged: 0/0
  4716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4717 ;;      Params:         2       0       0       0       0
  4718 ;;      Locals:         5       0       0       0       0
  4719 ;;      Temps:          2       0       0       0       0
  4720 ;;      Totals:         9       0       0       0       0
  4721 ;;Total ram usage:        9 bytes
  4722 ;; Hardware stack levels used: 1
  4723 ;; This function calls:
  4724 ;;		Nothing
  4725 ;; This function is called by:
  4726 ;;		___flmul
  4727 ;; This function uses a non-reentrant model
  4728 ;;
  4729                           
  4730  151A                     __Umul8_16:	
  4731                           ;psect for function __Umul8_16
  4732                           
  4733                           
  4734                           ;incstack = 0
  4735                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  4736                           ;__Umul8_16@multiplier stored from wreg
  4737  151A  00F8               	movwf	__Umul8_16@multiplier
  4738  151B                     l2503:
  4739  151B  01F4               	clrf	__Umul8_16@product
  4740  151C  01F5               	clrf	__Umul8_16@product+1
  4741  151D                     l2505:
  4742  151D  0870               	movf	__Umul8_16@multiplicand,w
  4743  151E  00F2               	movwf	??__Umul8_16
  4744  151F  01F3               	clrf	??__Umul8_16+1
  4745  1520  0872               	movf	??__Umul8_16,w
  4746  1521  00F6               	movwf	__Umul8_16@word_mpld
  4747  1522  0873               	movf	??__Umul8_16+1,w
  4748  1523  00F7               	movwf	__Umul8_16@word_mpld+1
  4749  1524                     l2507:
  4750  1524  1C78               	btfss	__Umul8_16@multiplier,0
  4751  1525  2D27               	goto	u2261
  4752  1526  2D28               	goto	u2260
  4753  1527                     u2261:
  4754  1527  2D2E               	goto	l980
  4755  1528                     u2260:
  4756  1528                     l2509:
  4757  1528  0876               	movf	__Umul8_16@word_mpld,w
  4758  1529  07F4               	addwf	__Umul8_16@product,f
  4759  152A  1803               	skipnc
  4760  152B  0AF5               	incf	__Umul8_16@product+1,f
  4761  152C  0877               	movf	__Umul8_16@word_mpld+1,w
  4762  152D  07F5               	addwf	__Umul8_16@product+1,f
  4763  152E                     l980:
  4764  152E  3001               	movlw	1
  4765  152F                     u2275:
  4766  152F  1003               	clrc
  4767  1530  0DF6               	rlf	__Umul8_16@word_mpld,f
  4768  1531  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  4769  1532  3EFF               	addlw	-1
  4770  1533  1D03               	skipz
  4771  1534  2D2F               	goto	u2275
  4772  1535  1003               	clrc
  4773  1536  0CF8               	rrf	__Umul8_16@multiplier,f
  4774  1537                     l2511:
  4775  1537  0878               	movf	__Umul8_16@multiplier,w
  4776  1538  1D03               	btfss	3,2
  4777  1539  2D3B               	goto	u2281
  4778  153A  2D3C               	goto	u2280
  4779  153B                     u2281:
  4780  153B  2D24               	goto	l2507
  4781  153C                     u2280:
  4782  153C                     l2513:
  4783  153C  0875               	movf	__Umul8_16@product+1,w
  4784  153D  00F1               	movwf	?__Umul8_16+1
  4785  153E  0874               	movf	__Umul8_16@product,w
  4786  153F  00F0               	movwf	?__Umul8_16
  4787  1540                     l982:
  4788  1540  0008               	return
  4789  1541                     __end_of__Umul8_16:
  4790                           
  4791                           	psect	text7
  4792  0ABD                     __ptext7:	
  4793 ;; *************** function ___fladd *****************
  4794 ;; Defined at:
  4795 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\sprcadd.c"
  4796 ;; Parameters:    Size  Location     Type
  4797 ;;  b               4   26[BANK0 ] unsigned int 
  4798 ;;  a               4   30[BANK0 ] unsigned int 
  4799 ;; Auto vars:     Size  Location     Type
  4800 ;;  grs             1   45[BANK0 ] unsigned char 
  4801 ;;  bexp            1   44[BANK0 ] unsigned char 
  4802 ;;  aexp            1   43[BANK0 ] unsigned char 
  4803 ;;  signs           1   42[BANK0 ] unsigned char 
  4804 ;; Return value:  Size  Location     Type
  4805 ;;                  4   26[BANK0 ] unsigned char 
  4806 ;; Registers used:
  4807 ;;		wreg, status,2, status,0, btemp+1
  4808 ;; Tracked objects:
  4809 ;;		On entry : 0/0
  4810 ;;		On exit  : 0/0
  4811 ;;		Unchanged: 0/0
  4812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4813 ;;      Params:         0       8       0       0       0
  4814 ;;      Locals:         0       4       0       0       0
  4815 ;;      Temps:          0       8       0       0       0
  4816 ;;      Totals:         0      20       0       0       0
  4817 ;;Total ram usage:       20 bytes
  4818 ;; Hardware stack levels used: 1
  4819 ;; This function calls:
  4820 ;;		Nothing
  4821 ;; This function is called by:
  4822 ;;		_Update_Farenheit
  4823 ;;		_Update_Celsius
  4824 ;; This function uses a non-reentrant model
  4825 ;;
  4826                           
  4827  0ABD                     ___fladd:	
  4828                           ;psect for function ___fladd
  4829                           
  4830  0ABD                     l2767:	
  4831                           ;incstack = 0
  4832                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  4833                           
  4834  0ABD  1283               	bcf	3,5	;RP0=0, select bank0
  4835  0ABE  1303               	bcf	3,6	;RP1=0, select bank0
  4836  0ABF  083D               	movf	___fladd@b+3,w
  4837  0AC0  3980               	andlw	128
  4838  0AC1  00C2               	movwf	??___fladd
  4839  0AC2  0842               	movf	??___fladd,w
  4840  0AC3  00CA               	movwf	___fladd@signs
  4841  0AC4                     l2769:
  4842  0AC4  083D               	movf	___fladd@b+3,w
  4843  0AC5  00C2               	movwf	??___fladd
  4844  0AC6  0742               	addwf	??___fladd,w
  4845  0AC7  00C3               	movwf	??___fladd+1
  4846  0AC8  0843               	movf	??___fladd+1,w
  4847  0AC9  00CC               	movwf	___fladd@bexp
  4848  0ACA                     l2771:
  4849  0ACA  1FBC               	btfss	___fladd@b+2,7
  4850  0ACB  2ACD               	goto	u2681
  4851  0ACC  2ACE               	goto	u2680
  4852  0ACD                     u2681:
  4853  0ACD  2ACF               	goto	l2775
  4854  0ACE                     u2680:
  4855  0ACE                     l2773:
  4856  0ACE  144C               	bsf	___fladd@bexp,0
  4857  0ACF                     l2775:
  4858  0ACF  084C               	movf	___fladd@bexp,w
  4859  0AD0  1903               	btfsc	3,2
  4860  0AD1  2AD3               	goto	u2691
  4861  0AD2  2AD4               	goto	u2690
  4862  0AD3                     u2691:
  4863  0AD3  2AE4               	goto	l2785
  4864  0AD4                     u2690:
  4865  0AD4                     l2777:
  4866  0AD4  0A4C               	incf	___fladd@bexp,w
  4867  0AD5  1D03               	btfss	3,2
  4868  0AD6  2AD8               	goto	u2701
  4869  0AD7  2AD9               	goto	u2700
  4870  0AD8                     u2701:
  4871  0AD8  2AE1               	goto	l2781
  4872  0AD9                     u2700:
  4873  0AD9                     l2779:
  4874  0AD9  3000               	movlw	0
  4875  0ADA  00BD               	movwf	___fladd@b+3
  4876  0ADB  3000               	movlw	0
  4877  0ADC  00BC               	movwf	___fladd@b+2
  4878  0ADD  3000               	movlw	0
  4879  0ADE  00BB               	movwf	___fladd@b+1
  4880  0ADF  3000               	movlw	0
  4881  0AE0  00BA               	movwf	___fladd@b
  4882  0AE1                     l2781:
  4883  0AE1  17BC               	bsf	___fladd@b+2,7
  4884  0AE2                     l2783:
  4885  0AE2  01BD               	clrf	___fladd@b+3
  4886  0AE3  2AEC               	goto	l2787
  4887  0AE4                     l2785:
  4888  0AE4  3000               	movlw	0
  4889  0AE5  00BD               	movwf	___fladd@b+3
  4890  0AE6  3000               	movlw	0
  4891  0AE7  00BC               	movwf	___fladd@b+2
  4892  0AE8  3000               	movlw	0
  4893  0AE9  00BB               	movwf	___fladd@b+1
  4894  0AEA  3000               	movlw	0
  4895  0AEB  00BA               	movwf	___fladd@b
  4896  0AEC                     l2787:
  4897  0AEC  0841               	movf	___fladd@a+3,w
  4898  0AED  3980               	andlw	128
  4899  0AEE  00C2               	movwf	??___fladd
  4900  0AEF  0842               	movf	??___fladd,w
  4901  0AF0  00CB               	movwf	___fladd@aexp
  4902  0AF1                     l2789:
  4903  0AF1  084B               	movf	___fladd@aexp,w
  4904  0AF2  064A               	xorwf	___fladd@signs,w
  4905  0AF3  1903               	skipnz
  4906  0AF4  2AF6               	goto	u2711
  4907  0AF5  2AF7               	goto	u2710
  4908  0AF6                     u2711:
  4909  0AF6  2AF8               	goto	l2793
  4910  0AF7                     u2710:
  4911  0AF7                     l2791:
  4912  0AF7  174A               	bsf	___fladd@signs,6
  4913  0AF8                     l2793:
  4914  0AF8  0841               	movf	___fladd@a+3,w
  4915  0AF9  00C2               	movwf	??___fladd
  4916  0AFA  0742               	addwf	??___fladd,w
  4917  0AFB  00C3               	movwf	??___fladd+1
  4918  0AFC  0843               	movf	??___fladd+1,w
  4919  0AFD  00CB               	movwf	___fladd@aexp
  4920  0AFE                     l2795:
  4921  0AFE  1FC0               	btfss	___fladd@a+2,7
  4922  0AFF  2B01               	goto	u2721
  4923  0B00  2B02               	goto	u2720
  4924  0B01                     u2721:
  4925  0B01  2B03               	goto	l2799
  4926  0B02                     u2720:
  4927  0B02                     l2797:
  4928  0B02  144B               	bsf	___fladd@aexp,0
  4929  0B03                     l2799:
  4930  0B03  084B               	movf	___fladd@aexp,w
  4931  0B04  1903               	btfsc	3,2
  4932  0B05  2B07               	goto	u2731
  4933  0B06  2B08               	goto	u2730
  4934  0B07                     u2731:
  4935  0B07  2B18               	goto	l2809
  4936  0B08                     u2730:
  4937  0B08                     l2801:
  4938  0B08  0A4B               	incf	___fladd@aexp,w
  4939  0B09  1D03               	btfss	3,2
  4940  0B0A  2B0C               	goto	u2741
  4941  0B0B  2B0D               	goto	u2740
  4942  0B0C                     u2741:
  4943  0B0C  2B15               	goto	l2805
  4944  0B0D                     u2740:
  4945  0B0D                     l2803:
  4946  0B0D  3000               	movlw	0
  4947  0B0E  00C1               	movwf	___fladd@a+3
  4948  0B0F  3000               	movlw	0
  4949  0B10  00C0               	movwf	___fladd@a+2
  4950  0B11  3000               	movlw	0
  4951  0B12  00BF               	movwf	___fladd@a+1
  4952  0B13  3000               	movlw	0
  4953  0B14  00BE               	movwf	___fladd@a
  4954  0B15                     l2805:
  4955  0B15  17C0               	bsf	___fladd@a+2,7
  4956  0B16                     l2807:
  4957  0B16  01C1               	clrf	___fladd@a+3
  4958  0B17  2B20               	goto	l865
  4959  0B18                     l2809:
  4960  0B18  3000               	movlw	0
  4961  0B19  00C1               	movwf	___fladd@a+3
  4962  0B1A  3000               	movlw	0
  4963  0B1B  00C0               	movwf	___fladd@a+2
  4964  0B1C  3000               	movlw	0
  4965  0B1D  00BF               	movwf	___fladd@a+1
  4966  0B1E  3000               	movlw	0
  4967  0B1F  00BE               	movwf	___fladd@a
  4968  0B20                     l865:
  4969  0B20  084C               	movf	___fladd@bexp,w
  4970  0B21  024B               	subwf	___fladd@aexp,w
  4971  0B22  1803               	skipnc
  4972  0B23  2B25               	goto	u2751
  4973  0B24  2B26               	goto	u2750
  4974  0B25                     u2751:
  4975  0B25  2B6A               	goto	l2845
  4976  0B26                     u2750:
  4977  0B26                     l2811:
  4978  0B26  1F4A               	btfss	___fladd@signs,6
  4979  0B27  2B29               	goto	u2761
  4980  0B28  2B2A               	goto	u2760
  4981  0B29                     u2761:
  4982  0B29  2B2E               	goto	l2815
  4983  0B2A                     u2760:
  4984  0B2A                     l2813:
  4985  0B2A  3080               	movlw	128
  4986  0B2B  00C2               	movwf	??___fladd
  4987  0B2C  0842               	movf	??___fladd,w
  4988  0B2D  06CA               	xorwf	___fladd@signs,f
  4989  0B2E                     l2815:
  4990  0B2E  084C               	movf	___fladd@bexp,w
  4991  0B2F  00C2               	movwf	??___fladd
  4992  0B30  0842               	movf	??___fladd,w
  4993  0B31  00CD               	movwf	___fladd@grs
  4994  0B32                     l2817:
  4995  0B32  084B               	movf	___fladd@aexp,w
  4996  0B33  00C2               	movwf	??___fladd
  4997  0B34  0842               	movf	??___fladd,w
  4998  0B35  00CC               	movwf	___fladd@bexp
  4999  0B36                     l2819:
  5000  0B36  084D               	movf	___fladd@grs,w
  5001  0B37  00C2               	movwf	??___fladd
  5002  0B38  0842               	movf	??___fladd,w
  5003  0B39  00CB               	movwf	___fladd@aexp
  5004  0B3A                     l2821:
  5005  0B3A  083A               	movf	___fladd@b,w
  5006  0B3B  00C2               	movwf	??___fladd
  5007  0B3C  0842               	movf	??___fladd,w
  5008  0B3D  00CD               	movwf	___fladd@grs
  5009  0B3E                     l2823:
  5010  0B3E  083E               	movf	___fladd@a,w
  5011  0B3F  00C2               	movwf	??___fladd
  5012  0B40  0842               	movf	??___fladd,w
  5013  0B41  00BA               	movwf	___fladd@b
  5014  0B42                     l2825:
  5015  0B42  084D               	movf	___fladd@grs,w
  5016  0B43  00C2               	movwf	??___fladd
  5017  0B44  0842               	movf	??___fladd,w
  5018  0B45  00BE               	movwf	___fladd@a
  5019  0B46                     l2827:
  5020  0B46  083B               	movf	___fladd@b+1,w
  5021  0B47  00C2               	movwf	??___fladd
  5022  0B48  0842               	movf	??___fladd,w
  5023  0B49  00CD               	movwf	___fladd@grs
  5024  0B4A                     l2829:
  5025  0B4A  083F               	movf	___fladd@a+1,w
  5026  0B4B  00C2               	movwf	??___fladd
  5027  0B4C  0842               	movf	??___fladd,w
  5028  0B4D  00BB               	movwf	___fladd@b+1
  5029  0B4E                     l2831:
  5030  0B4E  084D               	movf	___fladd@grs,w
  5031  0B4F  00C2               	movwf	??___fladd
  5032  0B50  0842               	movf	??___fladd,w
  5033  0B51  00BF               	movwf	___fladd@a+1
  5034  0B52                     l2833:
  5035  0B52  083C               	movf	___fladd@b+2,w
  5036  0B53  00C2               	movwf	??___fladd
  5037  0B54  0842               	movf	??___fladd,w
  5038  0B55  00CD               	movwf	___fladd@grs
  5039  0B56                     l2835:
  5040  0B56  0840               	movf	___fladd@a+2,w
  5041  0B57  00C2               	movwf	??___fladd
  5042  0B58  0842               	movf	??___fladd,w
  5043  0B59  00BC               	movwf	___fladd@b+2
  5044  0B5A                     l2837:
  5045  0B5A  084D               	movf	___fladd@grs,w
  5046  0B5B  00C2               	movwf	??___fladd
  5047  0B5C  0842               	movf	??___fladd,w
  5048  0B5D  00C0               	movwf	___fladd@a+2
  5049  0B5E                     l2839:
  5050  0B5E  083D               	movf	___fladd@b+3,w
  5051  0B5F  00C2               	movwf	??___fladd
  5052  0B60  0842               	movf	??___fladd,w
  5053  0B61  00CD               	movwf	___fladd@grs
  5054  0B62                     l2841:
  5055  0B62  0841               	movf	___fladd@a+3,w
  5056  0B63  00C2               	movwf	??___fladd
  5057  0B64  0842               	movf	??___fladd,w
  5058  0B65  00BD               	movwf	___fladd@b+3
  5059  0B66                     l2843:
  5060  0B66  084D               	movf	___fladd@grs,w
  5061  0B67  00C2               	movwf	??___fladd
  5062  0B68  0842               	movf	??___fladd,w
  5063  0B69  00C1               	movwf	___fladd@a+3
  5064  0B6A                     l2845:
  5065  0B6A  01CD               	clrf	___fladd@grs
  5066  0B6B                     l2847:
  5067  0B6B  084B               	movf	___fladd@aexp,w
  5068  0B6C  00C2               	movwf	??___fladd
  5069  0B6D  01C3               	clrf	??___fladd+1
  5070  0B6E  0843               	movf	??___fladd+1,w
  5071  0B6F  00C5               	movwf	??___fladd+3
  5072  0B70  084C               	movf	___fladd@bexp,w
  5073  0B71  0242               	subwf	??___fladd,w
  5074  0B72  00C4               	movwf	??___fladd+2
  5075  0B73  1C03               	skipc
  5076  0B74  03C5               	decf	??___fladd+3,f
  5077  0B75  0845               	movf	??___fladd+3,w
  5078  0B76  3A80               	xorlw	128
  5079  0B77  00FF               	movwf	btemp+1
  5080  0B78  3080               	movlw	128
  5081  0B79  027F               	subwf	btemp+1,w
  5082  0B7A  1D03               	skipz
  5083  0B7B  2B7E               	goto	u2775
  5084  0B7C  301A               	movlw	26
  5085  0B7D  0244               	subwf	??___fladd+2,w
  5086  0B7E                     u2775:
  5087  0B7E  1C03               	skipc
  5088  0B7F  2B81               	goto	u2771
  5089  0B80  2B82               	goto	u2770
  5090  0B81                     u2771:
  5091  0B81  2BBF               	goto	l2863
  5092  0B82                     u2770:
  5093  0B82                     l2849:
  5094  0B82  1283               	bcf	3,5	;RP0=0, select bank0
  5095  0B83  1303               	bcf	3,6	;RP1=0, select bank0
  5096  0B84  083D               	movf	___fladd@b+3,w
  5097  0B85  043C               	iorwf	___fladd@b+2,w
  5098  0B86  043B               	iorwf	___fladd@b+1,w
  5099  0B87  043A               	iorwf	___fladd@b,w
  5100  0B88  1D03               	skipz
  5101  0B89  2B8B               	goto	u2781
  5102  0B8A  2B8D               	goto	u2780
  5103  0B8B                     u2781:
  5104  0B8B  3001               	movlw	1
  5105  0B8C  2B8E               	goto	u2790
  5106  0B8D                     u2780:
  5107  0B8D  3000               	movlw	0
  5108  0B8E                     u2790:
  5109  0B8E  00C2               	movwf	??___fladd
  5110  0B8F  0842               	movf	??___fladd,w
  5111  0B90  00CD               	movwf	___fladd@grs
  5112  0B91  3000               	movlw	0
  5113  0B92  00BD               	movwf	___fladd@b+3
  5114  0B93  3000               	movlw	0
  5115  0B94  00BC               	movwf	___fladd@b+2
  5116  0B95  3000               	movlw	0
  5117  0B96  00BB               	movwf	___fladd@b+1
  5118  0B97  3000               	movlw	0
  5119  0B98  00BA               	movwf	___fladd@b
  5120  0B99  084B               	movf	___fladd@aexp,w
  5121  0B9A  00C2               	movwf	??___fladd
  5122  0B9B  0842               	movf	??___fladd,w
  5123  0B9C  00CC               	movwf	___fladd@bexp
  5124  0B9D  2BC7               	goto	l869
  5125  0B9E                     l871:
  5126  0B9E  1C4D               	btfss	___fladd@grs,0
  5127  0B9F  2BA1               	goto	u2801
  5128  0BA0  2BA2               	goto	u2800
  5129  0BA1                     u2801:
  5130  0BA1  2BAB               	goto	l2853
  5131  0BA2                     u2800:
  5132  0BA2                     l2851:
  5133  0BA2  084D               	movf	___fladd@grs,w
  5134  0BA3  00C2               	movwf	??___fladd
  5135  0BA4  1003               	clrc
  5136  0BA5  0C42               	rrf	??___fladd,w
  5137  0BA6  3801               	iorlw	1
  5138  0BA7  00C3               	movwf	??___fladd+1
  5139  0BA8  0843               	movf	??___fladd+1,w
  5140  0BA9  00CD               	movwf	___fladd@grs
  5141  0BAA  2BAD               	goto	l2855
  5142  0BAB                     l2853:
  5143  0BAB  1003               	clrc
  5144  0BAC  0CCD               	rrf	___fladd@grs,f
  5145  0BAD                     l2855:
  5146  0BAD  1C3A               	btfss	___fladd@b,0
  5147  0BAE  2BB0               	goto	u2811
  5148  0BAF  2BB1               	goto	u2810
  5149  0BB0                     u2811:
  5150  0BB0  2BB2               	goto	l2859
  5151  0BB1                     u2810:
  5152  0BB1                     l2857:
  5153  0BB1  17CD               	bsf	___fladd@grs,7
  5154  0BB2                     l2859:
  5155  0BB2  3001               	movlw	1
  5156  0BB3  00C2               	movwf	??___fladd
  5157  0BB4                     u2825:
  5158  0BB4  0D3D               	rlf	___fladd@b+3,w
  5159  0BB5  0CBD               	rrf	___fladd@b+3,f
  5160  0BB6  0CBC               	rrf	___fladd@b+2,f
  5161  0BB7  0CBB               	rrf	___fladd@b+1,f
  5162  0BB8  0CBA               	rrf	___fladd@b,f
  5163  0BB9  0BC2               	decfsz	??___fladd& (0+127),f
  5164  0BBA  2BB4               	goto	u2825
  5165  0BBB                     l2861:
  5166  0BBB  3001               	movlw	1
  5167  0BBC  00C2               	movwf	??___fladd
  5168  0BBD  0842               	movf	??___fladd,w
  5169  0BBE  07CC               	addwf	___fladd@bexp,f
  5170  0BBF                     l2863:
  5171  0BBF  1283               	bcf	3,5	;RP0=0, select bank0
  5172  0BC0  1303               	bcf	3,6	;RP1=0, select bank0
  5173  0BC1  084B               	movf	___fladd@aexp,w
  5174  0BC2  024C               	subwf	___fladd@bexp,w
  5175  0BC3  1C03               	skipc
  5176  0BC4  2BC6               	goto	u2831
  5177  0BC5  2BC7               	goto	u2830
  5178  0BC6                     u2831:
  5179  0BC6  2B9E               	goto	l871
  5180  0BC7                     u2830:
  5181  0BC7                     l869:
  5182  0BC7  1B4A               	btfsc	___fladd@signs,6
  5183  0BC8  2BCA               	goto	u2841
  5184  0BC9  2BCB               	goto	u2840
  5185  0BCA                     u2841:
  5186  0BCA  2C16               	goto	l2889
  5187  0BCB                     u2840:
  5188  0BCB                     l2865:
  5189  0BCB  084C               	movf	___fladd@bexp,w
  5190  0BCC  1D03               	btfss	3,2
  5191  0BCD  2BCF               	goto	u2851
  5192  0BCE  2BD0               	goto	u2850
  5193  0BCF                     u2851:
  5194  0BCF  2BD9               	goto	l2871
  5195  0BD0                     u2850:
  5196  0BD0                     l2867:
  5197  0BD0  3000               	movlw	0
  5198  0BD1  00BD               	movwf	?___fladd+3
  5199  0BD2  3000               	movlw	0
  5200  0BD3  00BC               	movwf	?___fladd+2
  5201  0BD4  3000               	movlw	0
  5202  0BD5  00BB               	movwf	?___fladd+1
  5203  0BD6  3000               	movlw	0
  5204  0BD7  00BA               	movwf	?___fladd
  5205  0BD8  2D44               	goto	l878
  5206  0BD9                     l2871:
  5207  0BD9  083E               	movf	___fladd@a,w
  5208  0BDA  07BA               	addwf	___fladd@b,f
  5209  0BDB  083F               	movf	___fladd@a+1,w
  5210  0BDC  1103               	clrz
  5211  0BDD  1803               	skipnc
  5212  0BDE  3E01               	addlw	1
  5213  0BDF  1903               	skipnz
  5214  0BE0  2BE2               	goto	u2861
  5215  0BE1  07BB               	addwf	___fladd@b+1,f
  5216  0BE2                     u2861:
  5217  0BE2  0840               	movf	___fladd@a+2,w
  5218  0BE3  1103               	clrz
  5219  0BE4  1803               	skipnc
  5220  0BE5  3E01               	addlw	1
  5221  0BE6  1903               	skipnz
  5222  0BE7  2BE9               	goto	u2862
  5223  0BE8  07BC               	addwf	___fladd@b+2,f
  5224  0BE9                     u2862:
  5225  0BE9  0841               	movf	___fladd@a+3,w
  5226  0BEA  1103               	clrz
  5227  0BEB  1803               	skipnc
  5228  0BEC  3E01               	addlw	1
  5229  0BED  1903               	skipnz
  5230  0BEE  2BF0               	goto	u2863
  5231  0BEF  07BD               	addwf	___fladd@b+3,f
  5232  0BF0                     u2863:
  5233  0BF0                     l2873:
  5234  0BF0  1C3D               	btfss	___fladd@b+3,0
  5235  0BF1  2BF3               	goto	u2871
  5236  0BF2  2BF4               	goto	u2870
  5237  0BF3                     u2871:
  5238  0BF3  2CCA               	goto	l2923
  5239  0BF4                     u2870:
  5240  0BF4                     l2875:
  5241  0BF4  1C4D               	btfss	___fladd@grs,0
  5242  0BF5  2BF7               	goto	u2881
  5243  0BF6  2BF8               	goto	u2880
  5244  0BF7                     u2881:
  5245  0BF7  2C01               	goto	l2879
  5246  0BF8                     u2880:
  5247  0BF8                     l2877:
  5248  0BF8  084D               	movf	___fladd@grs,w
  5249  0BF9  00C2               	movwf	??___fladd
  5250  0BFA  1003               	clrc
  5251  0BFB  0C42               	rrf	??___fladd,w
  5252  0BFC  3801               	iorlw	1
  5253  0BFD  00C3               	movwf	??___fladd+1
  5254  0BFE  0843               	movf	??___fladd+1,w
  5255  0BFF  00CD               	movwf	___fladd@grs
  5256  0C00  2C03               	goto	l2881
  5257  0C01                     l2879:
  5258  0C01  1003               	clrc
  5259  0C02  0CCD               	rrf	___fladd@grs,f
  5260  0C03                     l2881:
  5261  0C03  1C3A               	btfss	___fladd@b,0
  5262  0C04  2C06               	goto	u2891
  5263  0C05  2C07               	goto	u2890
  5264  0C06                     u2891:
  5265  0C06  2C08               	goto	l2885
  5266  0C07                     u2890:
  5267  0C07                     l2883:
  5268  0C07  17CD               	bsf	___fladd@grs,7
  5269  0C08                     l2885:
  5270  0C08  3001               	movlw	1
  5271  0C09  00C2               	movwf	??___fladd
  5272  0C0A                     u2905:
  5273  0C0A  0D3D               	rlf	___fladd@b+3,w
  5274  0C0B  0CBD               	rrf	___fladd@b+3,f
  5275  0C0C  0CBC               	rrf	___fladd@b+2,f
  5276  0C0D  0CBB               	rrf	___fladd@b+1,f
  5277  0C0E  0CBA               	rrf	___fladd@b,f
  5278  0C0F  0BC2               	decfsz	??___fladd& (0+127),f
  5279  0C10  2C0A               	goto	u2905
  5280  0C11                     l2887:
  5281  0C11  3001               	movlw	1
  5282  0C12  00C2               	movwf	??___fladd
  5283  0C13  0842               	movf	??___fladd,w
  5284  0C14  07CC               	addwf	___fladd@bexp,f
  5285  0C15  2CCA               	goto	l2923
  5286  0C16                     l2889:
  5287  0C16  083D               	movf	___fladd@b+3,w
  5288  0C17  3A80               	xorlw	128
  5289  0C18  00FF               	movwf	btemp+1
  5290  0C19  0841               	movf	___fladd@a+3,w
  5291  0C1A  3A80               	xorlw	128
  5292  0C1B  027F               	subwf	btemp+1,w
  5293  0C1C  1D03               	skipz
  5294  0C1D  2C28               	goto	u2913
  5295  0C1E  0840               	movf	___fladd@a+2,w
  5296  0C1F  023C               	subwf	___fladd@b+2,w
  5297  0C20  1D03               	skipz
  5298  0C21  2C28               	goto	u2913
  5299  0C22  083F               	movf	___fladd@a+1,w
  5300  0C23  023B               	subwf	___fladd@b+1,w
  5301  0C24  1D03               	skipz
  5302  0C25  2C28               	goto	u2913
  5303  0C26  083E               	movf	___fladd@a,w
  5304  0C27  023A               	subwf	___fladd@b,w
  5305  0C28                     u2913:
  5306  0C28  1803               	skipnc
  5307  0C29  2C2B               	goto	u2911
  5308  0C2A  2C2C               	goto	u2910
  5309  0C2B                     u2911:
  5310  0C2B  2C84               	goto	l2899
  5311  0C2C                     u2910:
  5312  0C2C                     l2891:
  5313  0C2C  30FF               	movlw	255
  5314  0C2D  00C2               	movwf	??___fladd
  5315  0C2E  30FF               	movlw	255
  5316  0C2F  00C3               	movwf	??___fladd+1
  5317  0C30  30FF               	movlw	255
  5318  0C31  00C4               	movwf	??___fladd+2
  5319  0C32  30FF               	movlw	255
  5320  0C33  00C5               	movwf	??___fladd+3
  5321  0C34  083E               	movf	___fladd@a,w
  5322  0C35  00C6               	movwf	??___fladd+4
  5323  0C36  083F               	movf	___fladd@a+1,w
  5324  0C37  00C7               	movwf	??___fladd+5
  5325  0C38  0840               	movf	___fladd@a+2,w
  5326  0C39  00C8               	movwf	??___fladd+6
  5327  0C3A  0841               	movf	___fladd@a+3,w
  5328  0C3B  00C9               	movwf	??___fladd+7
  5329  0C3C  083A               	movf	___fladd@b,w
  5330  0C3D  02C6               	subwf	??___fladd+4,f
  5331  0C3E  083B               	movf	___fladd@b+1,w
  5332  0C3F  1C03               	skipc
  5333  0C40  0F3B               	incfsz	___fladd@b+1,w
  5334  0C41  2C43               	goto	u2921
  5335  0C42  2C44               	goto	u2922
  5336  0C43                     u2921:
  5337  0C43  02C7               	subwf	??___fladd+5,f
  5338  0C44                     u2922:
  5339  0C44  083C               	movf	___fladd@b+2,w
  5340  0C45  1C03               	skipc
  5341  0C46  0F3C               	incfsz	___fladd@b+2,w
  5342  0C47  2C49               	goto	u2923
  5343  0C48  2C4A               	goto	u2924
  5344  0C49                     u2923:
  5345  0C49  02C8               	subwf	??___fladd+6,f
  5346  0C4A                     u2924:
  5347  0C4A  083D               	movf	___fladd@b+3,w
  5348  0C4B  1C03               	skipc
  5349  0C4C  0F3D               	incfsz	___fladd@b+3,w
  5350  0C4D  2C4F               	goto	u2925
  5351  0C4E  2C50               	goto	u2926
  5352  0C4F                     u2925:
  5353  0C4F  02C9               	subwf	??___fladd+7,f
  5354  0C50                     u2926:
  5355  0C50  0846               	movf	??___fladd+4,w
  5356  0C51  07C2               	addwf	??___fladd,f
  5357  0C52  0847               	movf	??___fladd+5,w
  5358  0C53  1803               	skipnc
  5359  0C54  0F47               	incfsz	??___fladd+5,w
  5360  0C55  2C57               	goto	u2930
  5361  0C56  2C58               	goto	u2931
  5362  0C57                     u2930:
  5363  0C57  07C3               	addwf	??___fladd+1,f
  5364  0C58                     u2931:
  5365  0C58  0848               	movf	??___fladd+6,w
  5366  0C59  1803               	skipnc
  5367  0C5A  0F48               	incfsz	??___fladd+6,w
  5368  0C5B  2C5D               	goto	u2932
  5369  0C5C  2C5E               	goto	u2933
  5370  0C5D                     u2932:
  5371  0C5D  07C4               	addwf	??___fladd+2,f
  5372  0C5E                     u2933:
  5373  0C5E  0849               	movf	??___fladd+7,w
  5374  0C5F  1803               	skipnc
  5375  0C60  0A49               	incf	??___fladd+7,w
  5376  0C61  07C5               	addwf	??___fladd+3,f
  5377  0C62  0845               	movf	??___fladd+3,w
  5378  0C63  00BD               	movwf	___fladd@b+3
  5379  0C64  0844               	movf	??___fladd+2,w
  5380  0C65  00BC               	movwf	___fladd@b+2
  5381  0C66  0843               	movf	??___fladd+1,w
  5382  0C67  00BB               	movwf	___fladd@b+1
  5383  0C68  0842               	movf	??___fladd,w
  5384  0C69  00BA               	movwf	___fladd@b
  5385  0C6A                     l2893:
  5386  0C6A  3080               	movlw	128
  5387  0C6B  00C2               	movwf	??___fladd
  5388  0C6C  0842               	movf	??___fladd,w
  5389  0C6D  06CA               	xorwf	___fladd@signs,f
  5390  0C6E  09CD               	comf	___fladd@grs,f
  5391  0C6F  0ACD               	incf	___fladd@grs,f
  5392  0C70                     l2895:
  5393  0C70  084D               	movf	___fladd@grs,w
  5394  0C71  1D03               	btfss	3,2
  5395  0C72  2C74               	goto	u2941
  5396  0C73  2C75               	goto	u2940
  5397  0C74                     u2941:
  5398  0C74  2C92               	goto	l886
  5399  0C75                     u2940:
  5400  0C75                     l2897:
  5401  0C75  3001               	movlw	1
  5402  0C76  07BA               	addwf	___fladd@b,f
  5403  0C77  3000               	movlw	0
  5404  0C78  1803               	skipnc
  5405  0C79  3001               	movlw	1
  5406  0C7A  07BB               	addwf	___fladd@b+1,f
  5407  0C7B  3000               	movlw	0
  5408  0C7C  1803               	skipnc
  5409  0C7D  3001               	movlw	1
  5410  0C7E  07BC               	addwf	___fladd@b+2,f
  5411  0C7F  3000               	movlw	0
  5412  0C80  1803               	skipnc
  5413  0C81  3001               	movlw	1
  5414  0C82  07BD               	addwf	___fladd@b+3,f
  5415  0C83  2C92               	goto	l886
  5416  0C84                     l2899:
  5417  0C84  083E               	movf	___fladd@a,w
  5418  0C85  02BA               	subwf	___fladd@b,f
  5419  0C86  083F               	movf	___fladd@a+1,w
  5420  0C87  1C03               	skipc
  5421  0C88  0F3F               	incfsz	___fladd@a+1,w
  5422  0C89  02BB               	subwf	___fladd@b+1,f
  5423  0C8A  0840               	movf	___fladd@a+2,w
  5424  0C8B  1C03               	skipc
  5425  0C8C  0F40               	incfsz	___fladd@a+2,w
  5426  0C8D  02BC               	subwf	___fladd@b+2,f
  5427  0C8E  0841               	movf	___fladd@a+3,w
  5428  0C8F  1C03               	skipc
  5429  0C90  0F41               	incfsz	___fladd@a+3,w
  5430  0C91  02BD               	subwf	___fladd@b+3,f
  5431  0C92                     l886:
  5432  0C92  083D               	movf	___fladd@b+3,w
  5433  0C93  043C               	iorwf	___fladd@b+2,w
  5434  0C94  043B               	iorwf	___fladd@b+1,w
  5435  0C95  043A               	iorwf	___fladd@b,w
  5436  0C96  1D03               	skipz
  5437  0C97  2C99               	goto	u2951
  5438  0C98  2C9A               	goto	u2950
  5439  0C99                     u2951:
  5440  0C99  2CC6               	goto	l2921
  5441  0C9A                     u2950:
  5442  0C9A                     l2901:
  5443  0C9A  084D               	movf	___fladd@grs,w
  5444  0C9B  1D03               	btfss	3,2
  5445  0C9C  2C9E               	goto	u2961
  5446  0C9D  2C9F               	goto	u2960
  5447  0C9E                     u2961:
  5448  0C9E  2CC6               	goto	l2921
  5449  0C9F                     u2960:
  5450  0C9F                     l2903:
  5451  0C9F  3000               	movlw	0
  5452  0CA0  00BD               	movwf	?___fladd+3
  5453  0CA1  3000               	movlw	0
  5454  0CA2  00BC               	movwf	?___fladd+2
  5455  0CA3  3000               	movlw	0
  5456  0CA4  00BB               	movwf	?___fladd+1
  5457  0CA5  3000               	movlw	0
  5458  0CA6  00BA               	movwf	?___fladd
  5459  0CA7  2D44               	goto	l878
  5460  0CA8                     l2907:
  5461  0CA8  3001               	movlw	1
  5462  0CA9  00C2               	movwf	??___fladd
  5463  0CAA                     u2975:
  5464  0CAA  1003               	clrc
  5465  0CAB  0DBA               	rlf	___fladd@b,f
  5466  0CAC  0DBB               	rlf	___fladd@b+1,f
  5467  0CAD  0DBC               	rlf	___fladd@b+2,f
  5468  0CAE  0DBD               	rlf	___fladd@b+3,f
  5469  0CAF  0BC2               	decfsz	??___fladd,f
  5470  0CB0  2CAA               	goto	u2975
  5471  0CB1                     l2909:
  5472  0CB1  1FCD               	btfss	___fladd@grs,7
  5473  0CB2  2CB4               	goto	u2981
  5474  0CB3  2CB5               	goto	u2980
  5475  0CB4                     u2981:
  5476  0CB4  2CB6               	goto	l890
  5477  0CB5                     u2980:
  5478  0CB5                     l2911:
  5479  0CB5  143A               	bsf	___fladd@b,0
  5480  0CB6                     l890:
  5481  0CB6  1C4D               	btfss	___fladd@grs,0
  5482  0CB7  2CB9               	goto	u2991
  5483  0CB8  2CBA               	goto	u2990
  5484  0CB9                     u2991:
  5485  0CB9  2CBD               	goto	l2915
  5486  0CBA                     u2990:
  5487  0CBA                     l2913:
  5488  0CBA  1403               	setc
  5489  0CBB  0DCD               	rlf	___fladd@grs,f
  5490  0CBC  2CBF               	goto	l2917
  5491  0CBD                     l2915:
  5492  0CBD  1003               	clrc
  5493  0CBE  0DCD               	rlf	___fladd@grs,f
  5494  0CBF                     l2917:
  5495  0CBF  084C               	movf	___fladd@bexp,w
  5496  0CC0  1903               	btfsc	3,2
  5497  0CC1  2CC3               	goto	u3001
  5498  0CC2  2CC4               	goto	u3000
  5499  0CC3                     u3001:
  5500  0CC3  2CC6               	goto	l2921
  5501  0CC4                     u3000:
  5502  0CC4                     l2919:
  5503  0CC4  3001               	movlw	1
  5504  0CC5  02CC               	subwf	___fladd@bexp,f
  5505  0CC6                     l2921:
  5506  0CC6  1FBC               	btfss	___fladd@b+2,7
  5507  0CC7  2CC9               	goto	u3011
  5508  0CC8  2CCA               	goto	u3010
  5509  0CC9                     u3011:
  5510  0CC9  2CA8               	goto	l2907
  5511  0CCA                     u3010:
  5512  0CCA                     l2923:
  5513  0CCA  01CB               	clrf	___fladd@aexp
  5514  0CCB                     l2925:
  5515  0CCB  1FCD               	btfss	___fladd@grs,7
  5516  0CCC  2CCE               	goto	u3021
  5517  0CCD  2CCF               	goto	u3020
  5518  0CCE                     u3021:
  5519  0CCE  2CDD               	goto	l2933
  5520  0CCF                     u3020:
  5521  0CCF                     l2927:
  5522  0CCF  084D               	movf	___fladd@grs,w
  5523  0CD0  397F               	andlw	127
  5524  0CD1  1903               	btfsc	3,2
  5525  0CD2  2CD4               	goto	u3031
  5526  0CD3  2CD5               	goto	u3030
  5527  0CD4                     u3031:
  5528  0CD4  2CD8               	goto	l896
  5529  0CD5                     u3030:
  5530  0CD5                     l2929:
  5531  0CD5  01CB               	clrf	___fladd@aexp
  5532  0CD6  0ACB               	incf	___fladd@aexp,f
  5533  0CD7  2CDD               	goto	l2933
  5534  0CD8                     l896:
  5535  0CD8  1C3A               	btfss	___fladd@b,0
  5536  0CD9  2CDB               	goto	u3041
  5537  0CDA  2CDC               	goto	u3040
  5538  0CDB                     u3041:
  5539  0CDB  2CDD               	goto	l2933
  5540  0CDC                     u3040:
  5541  0CDC  2CD5               	goto	l2929
  5542  0CDD                     l2933:
  5543  0CDD  084B               	movf	___fladd@aexp,w
  5544  0CDE  1903               	btfsc	3,2
  5545  0CDF  2CE1               	goto	u3051
  5546  0CE0  2CE2               	goto	u3050
  5547  0CE1                     u3051:
  5548  0CE1  2D16               	goto	l899
  5549  0CE2                     u3050:
  5550  0CE2                     l2935:
  5551  0CE2  3001               	movlw	1
  5552  0CE3  07BA               	addwf	___fladd@b,f
  5553  0CE4  3000               	movlw	0
  5554  0CE5  1803               	skipnc
  5555  0CE6  3001               	movlw	1
  5556  0CE7  07BB               	addwf	___fladd@b+1,f
  5557  0CE8  3000               	movlw	0
  5558  0CE9  1803               	skipnc
  5559  0CEA  3001               	movlw	1
  5560  0CEB  07BC               	addwf	___fladd@b+2,f
  5561  0CEC  3000               	movlw	0
  5562  0CED  1803               	skipnc
  5563  0CEE  3001               	movlw	1
  5564  0CEF  07BD               	addwf	___fladd@b+3,f
  5565  0CF0                     l2937:
  5566  0CF0  1C3D               	btfss	___fladd@b+3,0
  5567  0CF1  2CF3               	goto	u3061
  5568  0CF2  2CF4               	goto	u3060
  5569  0CF3                     u3061:
  5570  0CF3  2D16               	goto	l899
  5571  0CF4                     u3060:
  5572  0CF4                     l2939:
  5573  0CF4  083A               	movf	___fladd@b,w
  5574  0CF5  00C2               	movwf	??___fladd
  5575  0CF6  083B               	movf	___fladd@b+1,w
  5576  0CF7  00C3               	movwf	??___fladd+1
  5577  0CF8  083C               	movf	___fladd@b+2,w
  5578  0CF9  00C4               	movwf	??___fladd+2
  5579  0CFA  083D               	movf	___fladd@b+3,w
  5580  0CFB  00C5               	movwf	??___fladd+3
  5581  0CFC  3001               	movlw	1
  5582  0CFD  00C6               	movwf	??___fladd+4
  5583  0CFE                     u3075:
  5584  0CFE  0D45               	rlf	??___fladd+3,w
  5585  0CFF  0CC5               	rrf	??___fladd+3,f
  5586  0D00  0CC4               	rrf	??___fladd+2,f
  5587  0D01  0CC3               	rrf	??___fladd+1,f
  5588  0D02  0CC2               	rrf	??___fladd,f
  5589  0D03                     u3070:
  5590  0D03  0BC6               	decfsz	??___fladd+4,f
  5591  0D04  2CFE               	goto	u3075
  5592  0D05  0845               	movf	??___fladd+3,w
  5593  0D06  00BD               	movwf	___fladd@b+3
  5594  0D07  0844               	movf	??___fladd+2,w
  5595  0D08  00BC               	movwf	___fladd@b+2
  5596  0D09  0843               	movf	??___fladd+1,w
  5597  0D0A  00BB               	movwf	___fladd@b+1
  5598  0D0B  0842               	movf	??___fladd,w
  5599  0D0C  00BA               	movwf	___fladd@b
  5600  0D0D  0A4C               	incf	___fladd@bexp,w
  5601  0D0E  1903               	btfsc	3,2
  5602  0D0F  2D11               	goto	u3081
  5603  0D10  2D12               	goto	u3080
  5604  0D11                     u3081:
  5605  0D11  2D16               	goto	l899
  5606  0D12                     u3080:
  5607  0D12                     l2941:
  5608  0D12  3001               	movlw	1
  5609  0D13  00C2               	movwf	??___fladd
  5610  0D14  0842               	movf	??___fladd,w
  5611  0D15  07CC               	addwf	___fladd@bexp,f
  5612  0D16                     l899:
  5613  0D16  0A4C               	incf	___fladd@bexp,w
  5614  0D17  1903               	btfsc	3,2
  5615  0D18  2D1A               	goto	u3091
  5616  0D19  2D1B               	goto	u3090
  5617  0D1A                     u3091:
  5618  0D1A  2D20               	goto	l2945
  5619  0D1B                     u3090:
  5620  0D1B                     l2943:
  5621  0D1B  084C               	movf	___fladd@bexp,w
  5622  0D1C  1D03               	btfss	3,2
  5623  0D1D  2D1F               	goto	u3101
  5624  0D1E  2D20               	goto	u3100
  5625  0D1F                     u3101:
  5626  0D1F  2D2E               	goto	l2951
  5627  0D20                     u3100:
  5628  0D20                     l2945:
  5629  0D20  3000               	movlw	0
  5630  0D21  00BD               	movwf	___fladd@b+3
  5631  0D22  3000               	movlw	0
  5632  0D23  00BC               	movwf	___fladd@b+2
  5633  0D24  3000               	movlw	0
  5634  0D25  00BB               	movwf	___fladd@b+1
  5635  0D26  3000               	movlw	0
  5636  0D27  00BA               	movwf	___fladd@b
  5637  0D28                     l2947:
  5638  0D28  084C               	movf	___fladd@bexp,w
  5639  0D29  1D03               	btfss	3,2
  5640  0D2A  2D2C               	goto	u3111
  5641  0D2B  2D2D               	goto	u3110
  5642  0D2C                     u3111:
  5643  0D2C  2D2E               	goto	l2951
  5644  0D2D                     u3110:
  5645  0D2D                     l2949:
  5646  0D2D  01CA               	clrf	___fladd@signs
  5647  0D2E                     l2951:
  5648  0D2E  1C4C               	btfss	___fladd@bexp,0
  5649  0D2F  2D31               	goto	u3121
  5650  0D30  2D32               	goto	u3120
  5651  0D31                     u3121:
  5652  0D31  2D34               	goto	l2955
  5653  0D32                     u3120:
  5654  0D32                     l2953:
  5655  0D32  17BC               	bsf	___fladd@b+2,7
  5656  0D33  2D38               	goto	l907
  5657  0D34                     l2955:
  5658  0D34  307F               	movlw	127
  5659  0D35  00C2               	movwf	??___fladd
  5660  0D36  0842               	movf	??___fladd,w
  5661  0D37  05BC               	andwf	___fladd@b+2,f
  5662  0D38                     l907:
  5663  0D38  084C               	movf	___fladd@bexp,w
  5664  0D39  00C2               	movwf	??___fladd
  5665  0D3A  1003               	clrc
  5666  0D3B  0C42               	rrf	??___fladd,w
  5667  0D3C  00C3               	movwf	??___fladd+1
  5668  0D3D  0843               	movf	??___fladd+1,w
  5669  0D3E  00BD               	movwf	___fladd@b+3
  5670  0D3F                     l2957:
  5671  0D3F  1FCA               	btfss	___fladd@signs,7
  5672  0D40  2D42               	goto	u3131
  5673  0D41  2D43               	goto	u3130
  5674  0D42                     u3131:
  5675  0D42  2D44               	goto	l908
  5676  0D43                     u3130:
  5677  0D43                     l2959:
  5678  0D43  17BD               	bsf	___fladd@b+3,7
  5679  0D44                     l908:
  5680  0D44                     l878:
  5681  0D44  0008               	return
  5682  0D45                     __end_of___fladd:
  5683                           
  5684                           	psect	text8
  5685  1634                     __ptext8:	
  5686 ;; *************** function _RTC_Read_Clock *****************
  5687 ;; Defined at:
  5688 ;;		line 16 in file "RTC.c"
  5689 ;; Parameters:    Size  Location     Type
  5690 ;;  read_clock_a    1    wreg     unsigned char 
  5691 ;; Auto vars:     Size  Location     Type
  5692 ;;  read_clock_a    1    5[COMMON] unsigned char 
  5693 ;; Return value:  Size  Location     Type
  5694 ;;                  1    wreg      void 
  5695 ;; Registers used:
  5696 ;;		wreg, status,2, status,0, pclath, cstack
  5697 ;; Tracked objects:
  5698 ;;		On entry : 0/0
  5699 ;;		On exit  : 0/0
  5700 ;;		Unchanged: 0/0
  5701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5702 ;;      Params:         0       0       0       0       0
  5703 ;;      Locals:         1       0       0       0       0
  5704 ;;      Temps:          2       0       0       0       0
  5705 ;;      Totals:         3       0       0       0       0
  5706 ;;Total ram usage:        3 bytes
  5707 ;; Hardware stack levels used: 1
  5708 ;; Hardware stack levels required when called: 3
  5709 ;; This function calls:
  5710 ;;		_I2C_Read
  5711 ;;		_I2C_Repeated_Start
  5712 ;;		_I2C_Start
  5713 ;;		_I2C_Write
  5714 ;; This function is called by:
  5715 ;;		_main
  5716 ;; This function uses a non-reentrant model
  5717 ;;
  5718                           
  5719  1634                     _RTC_Read_Clock:	
  5720                           ;psect for function _RTC_Read_Clock
  5721                           
  5722                           
  5723                           ;incstack = 0
  5724                           ; Regs used in _RTC_Read_Clock: [wreg+status,2+status,0+pclath+cstack]
  5725                           ;RTC_Read_Clock@read_clock_address stored from wreg
  5726  1634  00F5               	movwf	RTC_Read_Clock@read_clock_address
  5727  1635                     l3261:
  5728                           
  5729                           ;RTC.c: 16: void RTC_Read_Clock(char read_clock_address);RTC.c: 17: {;RTC.c: 18:     I2C
      +                          _Start(0xD0);
  5730  1635  30D0               	movlw	208
  5731  1636  160A  118A  244B  160A  118A  	fcall	_I2C_Start
  5732                           
  5733                           ;RTC.c: 19:     I2C_Write(read_clock_address);
  5734  163B  0875               	movf	RTC_Read_Clock@read_clock_address,w
  5735  163C  160A  118A  240D  160A  118A  	fcall	_I2C_Write
  5736                           
  5737                           ;RTC.c: 20:     I2C_Repeated_Start(0xD1);
  5738  1641  30D1               	movlw	209
  5739  1642  160A  118A  2464  160A  118A  	fcall	_I2C_Repeated_Start
  5740                           
  5741                           ;RTC.c: 21:     sec = I2C_Read(0);
  5742  1647  3000               	movlw	0
  5743  1648  160A  118A  24F5  160A  118A  	fcall	_I2C_Read
  5744  164D  00F3               	movwf	??_RTC_Read_Clock
  5745  164E  01F4               	clrf	??_RTC_Read_Clock+1
  5746  164F  0873               	movf	??_RTC_Read_Clock,w
  5747  1650  1683               	bsf	3,5	;RP0=1, select bank1
  5748  1651  1303               	bcf	3,6	;RP1=0, select bank1
  5749  1652  00D0               	movwf	_sec^(0+128)
  5750  1653  0874               	movf	??_RTC_Read_Clock+1,w
  5751  1654  00D1               	movwf	(_sec+1)^(0+128)
  5752                           
  5753                           ;RTC.c: 22:     min = I2C_Read(0);
  5754  1655  3000               	movlw	0
  5755  1656  160A  118A  24F5  160A  118A  	fcall	_I2C_Read
  5756  165B  00F3               	movwf	??_RTC_Read_Clock
  5757  165C  01F4               	clrf	??_RTC_Read_Clock+1
  5758  165D  0873               	movf	??_RTC_Read_Clock,w
  5759  165E  1683               	bsf	3,5	;RP0=1, select bank1
  5760  165F  1303               	bcf	3,6	;RP1=0, select bank1
  5761  1660  00CE               	movwf	_min^(0+128)
  5762  1661  0874               	movf	??_RTC_Read_Clock+1,w
  5763  1662  00CF               	movwf	(_min+1)^(0+128)
  5764                           
  5765                           ;RTC.c: 23:     hour= I2C_Read(1);
  5766  1663  3001               	movlw	1
  5767  1664  160A  118A  24F5  160A  118A  	fcall	_I2C_Read
  5768  1669  00F3               	movwf	??_RTC_Read_Clock
  5769  166A  01F4               	clrf	??_RTC_Read_Clock+1
  5770  166B  0873               	movf	??_RTC_Read_Clock,w
  5771  166C  1683               	bsf	3,5	;RP0=1, select bank1
  5772  166D  1303               	bcf	3,6	;RP1=0, select bank1
  5773  166E  00CC               	movwf	_hour^(0+128)
  5774  166F  0874               	movf	??_RTC_Read_Clock+1,w
  5775  1670  00CD               	movwf	(_hour+1)^(0+128)
  5776  1671                     l409:
  5777  1671  0008               	return
  5778  1672                     __end_of_RTC_Read_Clock:
  5779                           
  5780                           	psect	text9
  5781  08AF                     __ptext9:	
  5782 ;; *************** function _RTC_Read_Calendar *****************
  5783 ;; Defined at:
  5784 ;;		line 27 in file "RTC.c"
  5785 ;; Parameters:    Size  Location     Type
  5786 ;;  read_calenda    1    wreg     unsigned char 
  5787 ;; Auto vars:     Size  Location     Type
  5788 ;;  read_calenda    1    5[COMMON] unsigned char 
  5789 ;; Return value:  Size  Location     Type
  5790 ;;                  1    wreg      void 
  5791 ;; Registers used:
  5792 ;;		wreg, status,2, status,0, pclath, cstack
  5793 ;; Tracked objects:
  5794 ;;		On entry : 0/0
  5795 ;;		On exit  : 0/0
  5796 ;;		Unchanged: 0/0
  5797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5798 ;;      Params:         0       0       0       0       0
  5799 ;;      Locals:         1       0       0       0       0
  5800 ;;      Temps:          2       0       0       0       0
  5801 ;;      Totals:         3       0       0       0       0
  5802 ;;Total ram usage:        3 bytes
  5803 ;; Hardware stack levels used: 1
  5804 ;; Hardware stack levels required when called: 3
  5805 ;; This function calls:
  5806 ;;		_I2C_Read
  5807 ;;		_I2C_Repeated_Start
  5808 ;;		_I2C_Start
  5809 ;;		_I2C_Stop
  5810 ;;		_I2C_Write
  5811 ;; This function is called by:
  5812 ;;		_main
  5813 ;; This function uses a non-reentrant model
  5814 ;;
  5815                           
  5816  08AF                     _RTC_Read_Calendar:	
  5817                           ;psect for function _RTC_Read_Calendar
  5818                           
  5819                           
  5820                           ;incstack = 0
  5821                           ; Regs used in _RTC_Read_Calendar: [wreg+status,2+status,0+pclath+cstack]
  5822                           ;RTC_Read_Calendar@read_calendar_address stored from wreg
  5823  08AF  00F5               	movwf	RTC_Read_Calendar@read_calendar_address
  5824  08B0                     l3263:
  5825                           
  5826                           ;RTC.c: 27: void RTC_Read_Calendar(char read_calendar_address);RTC.c: 28: {;RTC.c: 29:  
      +                             I2C_Start(0xD0);
  5827  08B0  30D0               	movlw	208
  5828  08B1  160A  118A  244B  120A  158A  	fcall	_I2C_Start
  5829                           
  5830                           ;RTC.c: 30:     I2C_Write(read_calendar_address);
  5831  08B6  0875               	movf	RTC_Read_Calendar@read_calendar_address,w
  5832  08B7  160A  118A  240D  120A  158A  	fcall	_I2C_Write
  5833                           
  5834                           ;RTC.c: 31:     I2C_Repeated_Start(0xD1);
  5835  08BC  30D1               	movlw	209
  5836  08BD  160A  118A  2464  120A  158A  	fcall	_I2C_Repeated_Start
  5837                           
  5838                           ;RTC.c: 32:     Day = I2C_Read(0);
  5839  08C2  3000               	movlw	0
  5840  08C3  160A  118A  24F5  120A  158A  	fcall	_I2C_Read
  5841  08C8  00F3               	movwf	??_RTC_Read_Calendar
  5842  08C9  01F4               	clrf	??_RTC_Read_Calendar+1
  5843  08CA  0873               	movf	??_RTC_Read_Calendar,w
  5844  08CB  1683               	bsf	3,5	;RP0=1, select bank1
  5845  08CC  1303               	bcf	3,6	;RP1=0, select bank1
  5846  08CD  00CA               	movwf	_Day^(0+128)
  5847  08CE  0874               	movf	??_RTC_Read_Calendar+1,w
  5848  08CF  00CB               	movwf	(_Day+1)^(0+128)
  5849                           
  5850                           ;RTC.c: 33:     Date = I2C_Read(0);
  5851  08D0  3000               	movlw	0
  5852  08D1  160A  118A  24F5  120A  158A  	fcall	_I2C_Read
  5853  08D6  00F3               	movwf	??_RTC_Read_Calendar
  5854  08D7  01F4               	clrf	??_RTC_Read_Calendar+1
  5855  08D8  0873               	movf	??_RTC_Read_Calendar,w
  5856  08D9  1683               	bsf	3,5	;RP0=1, select bank1
  5857  08DA  1303               	bcf	3,6	;RP1=0, select bank1
  5858  08DB  00C8               	movwf	_Date^(0+128)
  5859  08DC  0874               	movf	??_RTC_Read_Calendar+1,w
  5860  08DD  00C9               	movwf	(_Date+1)^(0+128)
  5861                           
  5862                           ;RTC.c: 34:     Month = I2C_Read(0);
  5863  08DE  3000               	movlw	0
  5864  08DF  160A  118A  24F5  120A  158A  	fcall	_I2C_Read
  5865  08E4  00F3               	movwf	??_RTC_Read_Calendar
  5866  08E5  01F4               	clrf	??_RTC_Read_Calendar+1
  5867  08E6  0873               	movf	??_RTC_Read_Calendar,w
  5868  08E7  1683               	bsf	3,5	;RP0=1, select bank1
  5869  08E8  1303               	bcf	3,6	;RP1=0, select bank1
  5870  08E9  00C6               	movwf	_Month^(0+128)
  5871  08EA  0874               	movf	??_RTC_Read_Calendar+1,w
  5872  08EB  00C7               	movwf	(_Month+1)^(0+128)
  5873                           
  5874                           ;RTC.c: 35:     Year = I2C_Read(1);
  5875  08EC  3001               	movlw	1
  5876  08ED  160A  118A  24F5  120A  158A  	fcall	_I2C_Read
  5877  08F2  00F3               	movwf	??_RTC_Read_Calendar
  5878  08F3  01F4               	clrf	??_RTC_Read_Calendar+1
  5879  08F4  0873               	movf	??_RTC_Read_Calendar,w
  5880  08F5  1683               	bsf	3,5	;RP0=1, select bank1
  5881  08F6  1303               	bcf	3,6	;RP1=0, select bank1
  5882  08F7  00C4               	movwf	_Year^(0+128)
  5883  08F8  0874               	movf	??_RTC_Read_Calendar+1,w
  5884  08F9  00C5               	movwf	(_Year+1)^(0+128)
  5885                           
  5886                           ;RTC.c: 36:     I2C_Stop();
  5887  08FA  160A  118A  23C1  120A  158A  	fcall	_I2C_Stop
  5888  08FF                     l412:
  5889  08FF  0008               	return
  5890  0900                     __end_of_RTC_Read_Calendar:
  5891                           
  5892                           	psect	text10
  5893  1464                     __ptext10:	
  5894 ;; *************** function _I2C_Repeated_Start *****************
  5895 ;; Defined at:
  5896 ;;		line 77 in file "I2C_Master.c"
  5897 ;; Parameters:    Size  Location     Type
  5898 ;;  slave_read_a    1    wreg     unsigned char 
  5899 ;; Auto vars:     Size  Location     Type
  5900 ;;  slave_read_a    1    1[COMMON] unsigned char 
  5901 ;; Return value:  Size  Location     Type
  5902 ;;                  1    wreg      unsigned char 
  5903 ;; Registers used:
  5904 ;;		wreg, status,2, status,0, pclath, cstack
  5905 ;; Tracked objects:
  5906 ;;		On entry : 0/0
  5907 ;;		On exit  : 0/0
  5908 ;;		Unchanged: 0/0
  5909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5910 ;;      Params:         0       0       0       0       0
  5911 ;;      Locals:         1       0       0       0       0
  5912 ;;      Temps:          0       0       0       0       0
  5913 ;;      Totals:         1       0       0       0       0
  5914 ;;Total ram usage:        1 bytes
  5915 ;; Hardware stack levels used: 1
  5916 ;; Hardware stack levels required when called: 2
  5917 ;; This function calls:
  5918 ;;		_I2C_Write
  5919 ;; This function is called by:
  5920 ;;		_RTC_Read_Clock
  5921 ;;		_RTC_Read_Calendar
  5922 ;; This function uses a non-reentrant model
  5923 ;;
  5924                           
  5925  1464                     _I2C_Repeated_Start:	
  5926                           ;psect for function _I2C_Repeated_Start
  5927                           
  5928                           
  5929                           ;incstack = 0
  5930                           ; Regs used in _I2C_Repeated_Start: [wreg+status,2+status,0+pclath+cstack]
  5931                           ;I2C_Repeated_Start@slave_read_address stored from wreg
  5932  1464  00F1               	movwf	I2C_Repeated_Start@slave_read_address
  5933  1465                     l2531:
  5934                           
  5935                           ;I2C_Master.c: 77: char I2C_Repeated_Start(char slave_read_address);I2C_Master.c: 78: {;
      +                          I2C_Master.c: 79:     RSEN = 1;
  5936  1465  1683               	bsf	3,5	;RP0=1, select bank1
  5937  1466  1303               	bcf	3,6	;RP1=0, select bank1
  5938  1467  1491               	bsf	17,1	;volatile
  5939  1468                     l80:	
  5940                           ;I2C_Master.c: 80:     while(RSEN);
  5941                           
  5942  1468  1891               	btfsc	17,1	;volatile
  5943  1469  2C6B               	goto	u2311
  5944  146A  2C6C               	goto	u2310
  5945  146B                     u2311:
  5946  146B  2C68               	goto	l80
  5947  146C                     u2310:
  5948  146C                     l82:
  5949                           
  5950                           ;I2C_Master.c: 81:     SSPIF = 0;
  5951  146C  1283               	bcf	3,5	;RP0=0, select bank0
  5952  146D  1303               	bcf	3,6	;RP1=0, select bank0
  5953  146E  118C               	bcf	12,3	;volatile
  5954                           
  5955                           ;I2C_Master.c: 82:  if(!SSPSTATbits.S)
  5956  146F  1683               	bsf	3,5	;RP0=1, select bank1
  5957  1470  1303               	bcf	3,6	;RP1=0, select bank1
  5958  1471  1994               	btfsc	20,3	;volatile
  5959  1472  2C74               	goto	u2321
  5960  1473  2C75               	goto	u2320
  5961  1474                     u2321:
  5962  1474  2C76               	goto	l2535
  5963  1475                     u2320:
  5964  1475  2C7C               	goto	l84
  5965  1476                     l2535:
  5966                           
  5967                           ;I2C_Master.c: 84:     I2C_Write(slave_read_address);
  5968  1476  0871               	movf	I2C_Repeated_Start@slave_read_address,w
  5969  1477  160A  118A  240D  160A  118A  	fcall	_I2C_Write
  5970  147C                     l2537:
  5971  147C                     l84:	
  5972                           ;I2C_Master.c: 85:     if (ACKSTAT)
  5973                           
  5974  147C  0008               	return
  5975  147D                     __end_of_I2C_Repeated_Start:
  5976                           
  5977                           	psect	text11
  5978  14F5                     __ptext11:	
  5979 ;; *************** function _I2C_Read *****************
  5980 ;; Defined at:
  5981 ;;		line 10 in file "I2C_Master.c"
  5982 ;; Parameters:    Size  Location     Type
  5983 ;;  flag            1    wreg     unsigned char 
  5984 ;; Auto vars:     Size  Location     Type
  5985 ;;  flag            1    1[COMMON] unsigned char 
  5986 ;;  buffer          1    2[COMMON] unsigned char 
  5987 ;; Return value:  Size  Location     Type
  5988 ;;                  1    wreg      unsigned char 
  5989 ;; Registers used:
  5990 ;;		wreg, status,2, status,0, pclath, cstack
  5991 ;; Tracked objects:
  5992 ;;		On entry : 0/0
  5993 ;;		On exit  : 0/0
  5994 ;;		Unchanged: 0/0
  5995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5996 ;;      Params:         0       0       0       0       0
  5997 ;;      Locals:         2       0       0       0       0
  5998 ;;      Temps:          1       0       0       0       0
  5999 ;;      Totals:         3       0       0       0       0
  6000 ;;Total ram usage:        3 bytes
  6001 ;; Hardware stack levels used: 1
  6002 ;; Hardware stack levels required when called: 1
  6003 ;; This function calls:
  6004 ;;		_I2C_Ack
  6005 ;;		_I2C_Nack
  6006 ;;		_I2C_Ready
  6007 ;; This function is called by:
  6008 ;;		_RTC_Read_Clock
  6009 ;;		_RTC_Read_Calendar
  6010 ;; This function uses a non-reentrant model
  6011 ;;
  6012                           
  6013  14F5                     _I2C_Read:	
  6014                           ;psect for function _I2C_Read
  6015                           
  6016                           
  6017                           ;incstack = 0
  6018                           ; Regs used in _I2C_Read: [wreg+status,2+status,0+pclath+cstack]
  6019                           ;I2C_Read@flag stored from wreg
  6020  14F5  00F1               	movwf	I2C_Read@flag
  6021  14F6                     l2517:
  6022                           
  6023                           ;I2C_Master.c: 10: char I2C_Read(char flag);I2C_Master.c: 12: {;I2C_Master.c: 13:       
      +                            char buffer;;I2C_Master.c: 14:         RCEN = 1;
  6024  14F6  1683               	bsf	3,5	;RP0=1, select bank1
  6025  14F7  1303               	bcf	3,6	;RP1=0, select bank1
  6026  14F8  1591               	bsf	17,3	;volatile
  6027  14F9                     l45:	
  6028                           ;I2C_Master.c: 15:         while(!SSPSTATbits.BF);
  6029                           
  6030  14F9  1C14               	btfss	20,0	;volatile
  6031  14FA  2CFC               	goto	u2291
  6032  14FB  2CFD               	goto	u2290
  6033  14FC                     u2291:
  6034  14FC  2CF9               	goto	l45
  6035  14FD                     u2290:
  6036  14FD                     l2519:
  6037                           
  6038                           ;I2C_Master.c: 17:         buffer = SSPBUF;
  6039  14FD  1283               	bcf	3,5	;RP0=0, select bank0
  6040  14FE  1303               	bcf	3,6	;RP1=0, select bank0
  6041  14FF  0813               	movf	19,w	;volatile
  6042  1500  00F0               	movwf	??_I2C_Read
  6043  1501  0870               	movf	??_I2C_Read,w
  6044  1502  00F2               	movwf	I2C_Read@buffer
  6045  1503                     l2521:
  6046                           
  6047                           ;I2C_Master.c: 19:         if(flag==0)
  6048  1503  0871               	movf	I2C_Read@flag,w
  6049  1504  1D03               	btfss	3,2
  6050  1505  2D07               	goto	u2301
  6051  1506  2D08               	goto	u2300
  6052  1507                     u2301:
  6053  1507  2D0E               	goto	l2525
  6054  1508                     u2300:
  6055  1508                     l2523:
  6056                           
  6057                           ;I2C_Master.c: 20:             I2C_Ack();
  6058  1508  160A  118A  23CA  160A  118A  	fcall	_I2C_Ack
  6059  150D  2D13               	goto	l49
  6060  150E                     l2525:
  6061                           
  6062                           ;I2C_Master.c: 22:             I2C_Nack();
  6063  150E  160A  118A  23D3  160A  118A  	fcall	_I2C_Nack
  6064  1513                     l49:
  6065                           
  6066                           ;I2C_Master.c: 23:         I2C_Ready();
  6067  1513  160A  118A  23B1  160A  118A  	fcall	_I2C_Ready
  6068  1518                     l2527:
  6069                           
  6070                           ;I2C_Master.c: 24:         return(buffer);
  6071  1518  0872               	movf	I2C_Read@buffer,w
  6072  1519                     l50:
  6073  1519  0008               	return
  6074  151A                     __end_of_I2C_Read:
  6075                           
  6076                           	psect	text12
  6077  13D3                     __ptext12:	
  6078 ;; *************** function _I2C_Nack *****************
  6079 ;; Defined at:
  6080 ;;		line 117 in file "I2C_Master.c"
  6081 ;; Parameters:    Size  Location     Type
  6082 ;;		None
  6083 ;; Auto vars:     Size  Location     Type
  6084 ;;		None
  6085 ;; Return value:  Size  Location     Type
  6086 ;;                  1    wreg      void 
  6087 ;; Registers used:
  6088 ;;		None
  6089 ;; Tracked objects:
  6090 ;;		On entry : 0/0
  6091 ;;		On exit  : 0/0
  6092 ;;		Unchanged: 0/0
  6093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6094 ;;      Params:         0       0       0       0       0
  6095 ;;      Locals:         0       0       0       0       0
  6096 ;;      Temps:          0       0       0       0       0
  6097 ;;      Totals:         0       0       0       0       0
  6098 ;;Total ram usage:        0 bytes
  6099 ;; Hardware stack levels used: 1
  6100 ;; This function calls:
  6101 ;;		Nothing
  6102 ;; This function is called by:
  6103 ;;		_I2C_Read
  6104 ;; This function uses a non-reentrant model
  6105 ;;
  6106                           
  6107  13D3                     _I2C_Nack:	
  6108                           ;psect for function _I2C_Nack
  6109                           
  6110  13D3                     l2417:	
  6111                           ;incstack = 0
  6112                           ; Regs used in _I2C_Nack: []
  6113                           
  6114                           
  6115                           ;I2C_Master.c: 119:     ACKDT=1;
  6116  13D3  1683               	bsf	3,5	;RP0=1, select bank1
  6117  13D4  1303               	bcf	3,6	;RP1=0, select bank1
  6118  13D5  1691               	bsf	17,5	;volatile
  6119                           
  6120                           ;I2C_Master.c: 120:  ACKEN=1;
  6121  13D6  1611               	bsf	17,4	;volatile
  6122  13D7                     l107:	
  6123                           ;I2C_Master.c: 121:     while(ACKEN);
  6124                           
  6125  13D7  1A11               	btfsc	17,4	;volatile
  6126  13D8  2BDA               	goto	u2041
  6127  13D9  2BDB               	goto	u2040
  6128  13DA                     u2041:
  6129  13DA  2BD7               	goto	l107
  6130  13DB                     u2040:
  6131  13DB                     l110:
  6132  13DB  0008               	return
  6133  13DC                     __end_of_I2C_Nack:
  6134                           
  6135                           	psect	text13
  6136  13CA                     __ptext13:	
  6137 ;; *************** function _I2C_Ack *****************
  6138 ;; Defined at:
  6139 ;;		line 110 in file "I2C_Master.c"
  6140 ;; Parameters:    Size  Location     Type
  6141 ;;		None
  6142 ;; Auto vars:     Size  Location     Type
  6143 ;;		None
  6144 ;; Return value:  Size  Location     Type
  6145 ;;                  1    wreg      void 
  6146 ;; Registers used:
  6147 ;;		None
  6148 ;; Tracked objects:
  6149 ;;		On entry : 0/0
  6150 ;;		On exit  : 0/0
  6151 ;;		Unchanged: 0/0
  6152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6153 ;;      Params:         0       0       0       0       0
  6154 ;;      Locals:         0       0       0       0       0
  6155 ;;      Temps:          0       0       0       0       0
  6156 ;;      Totals:         0       0       0       0       0
  6157 ;;Total ram usage:        0 bytes
  6158 ;; Hardware stack levels used: 1
  6159 ;; This function calls:
  6160 ;;		Nothing
  6161 ;; This function is called by:
  6162 ;;		_I2C_Read
  6163 ;; This function uses a non-reentrant model
  6164 ;;
  6165                           
  6166  13CA                     _I2C_Ack:	
  6167                           ;psect for function _I2C_Ack
  6168                           
  6169  13CA                     l2415:	
  6170                           ;incstack = 0
  6171                           ; Regs used in _I2C_Ack: []
  6172                           
  6173                           
  6174                           ;I2C_Master.c: 112:     ACKDT=0;
  6175  13CA  1683               	bsf	3,5	;RP0=1, select bank1
  6176  13CB  1303               	bcf	3,6	;RP1=0, select bank1
  6177  13CC  1291               	bcf	17,5	;volatile
  6178                           
  6179                           ;I2C_Master.c: 113:  ACKEN=1;
  6180  13CD  1611               	bsf	17,4	;volatile
  6181  13CE                     l101:	
  6182                           ;I2C_Master.c: 114:     while(ACKEN);
  6183                           
  6184  13CE  1A11               	btfsc	17,4	;volatile
  6185  13CF  2BD1               	goto	u2031
  6186  13D0  2BD2               	goto	u2030
  6187  13D1                     u2031:
  6188  13D1  2BCE               	goto	l101
  6189  13D2                     u2030:
  6190  13D2                     l104:
  6191  13D2  0008               	return
  6192  13D3                     __end_of_I2C_Ack:
  6193                           
  6194                           	psect	text14
  6195  1541                     __ptext14:	
  6196 ;; *************** function _RTC_Clock_Write *****************
  6197 ;; Defined at:
  6198 ;;		line 39 in file "RTC.c"
  6199 ;; Parameters:    Size  Location     Type
  6200 ;;  sec             1    wreg     unsigned char 
  6201 ;;  min             1    2[COMMON] unsigned char 
  6202 ;;  hour            1    3[COMMON] unsigned char 
  6203 ;;  AM_PM           1    4[COMMON] unsigned char 
  6204 ;; Auto vars:     Size  Location     Type
  6205 ;;  sec             1    6[COMMON] unsigned char 
  6206 ;; Return value:  Size  Location     Type
  6207 ;;                  1    wreg      void 
  6208 ;; Registers used:
  6209 ;;		wreg, status,2, status,0, pclath, cstack
  6210 ;; Tracked objects:
  6211 ;;		On entry : 0/0
  6212 ;;		On exit  : 0/0
  6213 ;;		Unchanged: 0/0
  6214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6215 ;;      Params:         3       0       0       0       0
  6216 ;;      Locals:         1       0       0       0       0
  6217 ;;      Temps:          1       0       0       0       0
  6218 ;;      Totals:         5       0       0       0       0
  6219 ;;Total ram usage:        5 bytes
  6220 ;; Hardware stack levels used: 1
  6221 ;; Hardware stack levels required when called: 3
  6222 ;; This function calls:
  6223 ;;		_I2C_Start
  6224 ;;		_I2C_Stop
  6225 ;;		_I2C_Write
  6226 ;; This function is called by:
  6227 ;;		_main
  6228 ;; This function uses a non-reentrant model
  6229 ;;
  6230                           
  6231  1541                     _RTC_Clock_Write:	
  6232                           ;psect for function _RTC_Clock_Write
  6233                           
  6234                           
  6235                           ;incstack = 0
  6236                           ; Regs used in _RTC_Clock_Write: [wreg+status,2+status,0+pclath+cstack]
  6237                           ;RTC_Clock_Write@sec stored from wreg
  6238  1541  00F6               	movwf	RTC_Clock_Write@sec
  6239  1542                     l3245:
  6240                           
  6241                           ;RTC.c: 39: void RTC_Clock_Write(char sec, char min, char hour, char AM_PM);RTC.c: 40: {
      +                          ;RTC.c: 41:     hour = (hour | AM_PM);
  6242  1542  0873               	movf	RTC_Clock_Write@hour,w
  6243  1543  0474               	iorwf	RTC_Clock_Write@AM_PM,w
  6244  1544  00F5               	movwf	??_RTC_Clock_Write
  6245  1545  0875               	movf	??_RTC_Clock_Write,w
  6246  1546  00F3               	movwf	RTC_Clock_Write@hour
  6247  1547                     l3247:
  6248                           
  6249                           ;RTC.c: 42:  I2C_Start(0xD0);
  6250  1547  30D0               	movlw	208
  6251  1548  160A  118A  244B  160A  118A  	fcall	_I2C_Start
  6252  154D                     l3249:
  6253                           
  6254                           ;RTC.c: 43:  I2C_Write(0);
  6255  154D  3000               	movlw	0
  6256  154E  160A  118A  240D  160A  118A  	fcall	_I2C_Write
  6257  1553                     l3251:
  6258                           
  6259                           ;RTC.c: 44:  I2C_Write(sec);
  6260  1553  0876               	movf	RTC_Clock_Write@sec,w
  6261  1554  160A  118A  240D  160A  118A  	fcall	_I2C_Write
  6262  1559                     l3253:
  6263                           
  6264                           ;RTC.c: 45:  I2C_Write(min);
  6265  1559  0872               	movf	RTC_Clock_Write@min,w
  6266  155A  160A  118A  240D  160A  118A  	fcall	_I2C_Write
  6267  155F                     l3255:
  6268                           
  6269                           ;RTC.c: 46:  I2C_Write(hour);
  6270  155F  0873               	movf	RTC_Clock_Write@hour,w
  6271  1560  160A  118A  240D  160A  118A  	fcall	_I2C_Write
  6272  1565                     l3257:
  6273                           
  6274                           ;RTC.c: 47:  I2C_Stop();
  6275  1565  160A  118A  23C1  160A  118A  	fcall	_I2C_Stop
  6276  156A                     l415:
  6277  156A  0008               	return
  6278  156B                     __end_of_RTC_Clock_Write:
  6279                           
  6280                           	psect	text15
  6281  156B                     __ptext15:	
  6282 ;; *************** function _RTC_Calendar_Write *****************
  6283 ;; Defined at:
  6284 ;;		line 50 in file "RTC.c"
  6285 ;; Parameters:    Size  Location     Type
  6286 ;;  day             1    wreg     unsigned char 
  6287 ;;  date            1    2[COMMON] unsigned char 
  6288 ;;  month           1    3[COMMON] unsigned char 
  6289 ;;  year            1    4[COMMON] unsigned char 
  6290 ;; Auto vars:     Size  Location     Type
  6291 ;;  day             1    5[COMMON] unsigned char 
  6292 ;; Return value:  Size  Location     Type
  6293 ;;                  1    wreg      void 
  6294 ;; Registers used:
  6295 ;;		wreg, status,2, status,0, pclath, cstack
  6296 ;; Tracked objects:
  6297 ;;		On entry : 0/0
  6298 ;;		On exit  : 0/0
  6299 ;;		Unchanged: 0/0
  6300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6301 ;;      Params:         3       0       0       0       0
  6302 ;;      Locals:         1       0       0       0       0
  6303 ;;      Temps:          0       0       0       0       0
  6304 ;;      Totals:         4       0       0       0       0
  6305 ;;Total ram usage:        4 bytes
  6306 ;; Hardware stack levels used: 1
  6307 ;; Hardware stack levels required when called: 3
  6308 ;; This function calls:
  6309 ;;		_I2C_Start
  6310 ;;		_I2C_Stop
  6311 ;;		_I2C_Write
  6312 ;; This function is called by:
  6313 ;;		_main
  6314 ;; This function uses a non-reentrant model
  6315 ;;
  6316                           
  6317  156B                     _RTC_Calendar_Write:	
  6318                           ;psect for function _RTC_Calendar_Write
  6319                           
  6320                           
  6321                           ;incstack = 0
  6322                           ; Regs used in _RTC_Calendar_Write: [wreg+status,2+status,0+pclath+cstack]
  6323                           ;RTC_Calendar_Write@day stored from wreg
  6324  156B  00F5               	movwf	RTC_Calendar_Write@day
  6325  156C                     l3259:
  6326                           
  6327                           ;RTC.c: 50: void RTC_Calendar_Write(char day, char date, char month, char year);RTC.c: 5
      +                          1: {;RTC.c: 52:  I2C_Start(0xD0);
  6328  156C  30D0               	movlw	208
  6329  156D  160A  118A  244B  160A  118A  	fcall	_I2C_Start
  6330                           
  6331                           ;RTC.c: 53:  I2C_Write(3);
  6332  1572  3003               	movlw	3
  6333  1573  160A  118A  240D  160A  118A  	fcall	_I2C_Write
  6334                           
  6335                           ;RTC.c: 54:  I2C_Write(day);
  6336  1578  0875               	movf	RTC_Calendar_Write@day,w
  6337  1579  160A  118A  240D  160A  118A  	fcall	_I2C_Write
  6338                           
  6339                           ;RTC.c: 55:  I2C_Write(date);
  6340  157E  0872               	movf	RTC_Calendar_Write@date,w
  6341  157F  160A  118A  240D  160A  118A  	fcall	_I2C_Write
  6342                           
  6343                           ;RTC.c: 56:  I2C_Write(month);
  6344  1584  0873               	movf	RTC_Calendar_Write@month,w
  6345  1585  160A  118A  240D  160A  118A  	fcall	_I2C_Write
  6346                           
  6347                           ;RTC.c: 57:  I2C_Write(year);
  6348  158A  0874               	movf	RTC_Calendar_Write@year,w
  6349  158B  160A  118A  240D  160A  118A  	fcall	_I2C_Write
  6350                           
  6351                           ;RTC.c: 58:  I2C_Stop();
  6352  1590  160A  118A  23C1  160A  118A  	fcall	_I2C_Stop
  6353  1595                     l418:
  6354  1595  0008               	return
  6355  1596                     __end_of_RTC_Calendar_Write:
  6356                           
  6357                           	psect	text16
  6358  1596                     __ptext16:	
  6359 ;; *************** function _LCD_String_xy *****************
  6360 ;; Defined at:
  6361 ;;		line 8 in file "LCD.c"
  6362 ;; Parameters:    Size  Location     Type
  6363 ;;  row             1    wreg     unsigned char 
  6364 ;;  pos             1    0[BANK0 ] unsigned char 
  6365 ;;  msg             2    1[BANK0 ] PTR const unsigned char 
  6366 ;;		 -> main@buffer3_737(16), date(10), hours(10), STR_6(3), 
  6367 ;;		 -> STR_5(3), main@buffer3(16), 
  6368 ;; Auto vars:     Size  Location     Type
  6369 ;;  row             1    4[BANK0 ] unsigned char 
  6370 ;;  location        1    5[BANK0 ] unsigned char 
  6371 ;; Return value:  Size  Location     Type
  6372 ;;                  1    wreg      void 
  6373 ;; Registers used:
  6374 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6375 ;; Tracked objects:
  6376 ;;		On entry : 0/0
  6377 ;;		On exit  : 0/0
  6378 ;;		Unchanged: 0/0
  6379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6380 ;;      Params:         0       3       0       0       0
  6381 ;;      Locals:         0       2       0       0       0
  6382 ;;      Temps:          0       1       0       0       0
  6383 ;;      Totals:         0       6       0       0       0
  6384 ;;Total ram usage:        6 bytes
  6385 ;; Hardware stack levels used: 1
  6386 ;; Hardware stack levels required when called: 7
  6387 ;; This function calls:
  6388 ;;		_LCD_CMD
  6389 ;;		_LCD_Write_String
  6390 ;; This function is called by:
  6391 ;;		_main
  6392 ;; This function uses a non-reentrant model
  6393 ;;
  6394                           
  6395  1596                     _LCD_String_xy:	
  6396                           ;psect for function _LCD_String_xy
  6397                           
  6398                           
  6399                           ;incstack = 0
  6400                           ; Regs used in _LCD_String_xy: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6401                           ;LCD_String_xy@row stored from wreg
  6402  1596  1283               	bcf	3,5	;RP0=0, select bank0
  6403  1597  1303               	bcf	3,6	;RP1=0, select bank0
  6404  1598  00A4               	movwf	LCD_String_xy@row
  6405  1599                     l3157:
  6406  1599                     l3159:
  6407                           
  6408                           ;LCD.c: 11:     if(row<=1)
  6409  1599  3002               	movlw	2
  6410  159A  0224               	subwf	LCD_String_xy@row,w
  6411  159B  1803               	skipnc
  6412  159C  2D9E               	goto	u3651
  6413  159D  2D9F               	goto	u3650
  6414  159E                     u3651:
  6415  159E  2DAC               	goto	l3165
  6416  159F                     u3650:
  6417  159F                     l3161:
  6418                           
  6419                           ;LCD.c: 12:     {;LCD.c: 13:         location = (0x80) | ((pos) & 0x0f);
  6420  159F  0820               	movf	LCD_String_xy@pos,w
  6421  15A0  390F               	andlw	15
  6422  15A1  3880               	iorlw	128
  6423  15A2  00A3               	movwf	??_LCD_String_xy
  6424  15A3  0823               	movf	??_LCD_String_xy,w
  6425  15A4  00A5               	movwf	LCD_String_xy@location
  6426  15A5                     l3163:
  6427                           
  6428                           ;LCD.c: 14:         LCD_CMD(location);
  6429  15A5  0825               	movf	LCD_String_xy@location,w
  6430  15A6  160A  118A  2497  160A  118A  	fcall	_LCD_CMD
  6431                           
  6432                           ;LCD.c: 15:     }
  6433  15AB  2DB8               	goto	l3169
  6434  15AC                     l3165:
  6435                           
  6436                           ;LCD.c: 17:     {;LCD.c: 18:         location = (0xC0) | ((pos) & 0x0f);
  6437  15AC  0820               	movf	LCD_String_xy@pos,w
  6438  15AD  390F               	andlw	15
  6439  15AE  38C0               	iorlw	192
  6440  15AF  00A3               	movwf	??_LCD_String_xy
  6441  15B0  0823               	movf	??_LCD_String_xy,w
  6442  15B1  00A5               	movwf	LCD_String_xy@location
  6443  15B2                     l3167:
  6444                           
  6445                           ;LCD.c: 19:         LCD_CMD(location);
  6446  15B2  0825               	movf	LCD_String_xy@location,w
  6447  15B3  160A  118A  2497  160A  118A  	fcall	_LCD_CMD
  6448  15B8                     l3169:
  6449                           
  6450                           ;LCD.c: 23:     LCD_Write_String(msg);
  6451  15B8  1283               	bcf	3,5	;RP0=0, select bank0
  6452  15B9  1303               	bcf	3,6	;RP1=0, select bank0
  6453  15BA  0821               	movf	LCD_String_xy@msg,w
  6454  15BB  00F7               	movwf	LCD_Write_String@Str
  6455  15BC  0822               	movf	LCD_String_xy@msg+1,w
  6456  15BD  00F8               	movwf	LCD_Write_String@Str+1
  6457  15BE  160A  118A  2672  160A  118A  	fcall	_LCD_Write_String
  6458  15C3                     l133:
  6459  15C3  0008               	return
  6460  15C4                     __end_of_LCD_String_xy:
  6461                           
  6462                           	psect	text17
  6463  097C                     __ptext17:	
  6464 ;; *************** function _LCD_Init *****************
  6465 ;; Defined at:
  6466 ;;		line 27 in file "LCD.c"
  6467 ;; Parameters:    Size  Location     Type
  6468 ;;		None
  6469 ;; Auto vars:     Size  Location     Type
  6470 ;;		None
  6471 ;; Return value:  Size  Location     Type
  6472 ;;                  1    wreg      void 
  6473 ;; Registers used:
  6474 ;;		wreg, status,2, status,0, pclath, cstack
  6475 ;; Tracked objects:
  6476 ;;		On entry : 0/0
  6477 ;;		On exit  : 0/0
  6478 ;;		Unchanged: 0/0
  6479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6480 ;;      Params:         0       0       0       0       0
  6481 ;;      Locals:         0       0       0       0       0
  6482 ;;      Temps:          2       0       0       0       0
  6483 ;;      Totals:         2       0       0       0       0
  6484 ;;Total ram usage:        2 bytes
  6485 ;; Hardware stack levels used: 1
  6486 ;; Hardware stack levels required when called: 6
  6487 ;; This function calls:
  6488 ;;		_IO_Expander_Write
  6489 ;;		_LCD_CMD
  6490 ;; This function is called by:
  6491 ;;		_main
  6492 ;; This function uses a non-reentrant model
  6493 ;;
  6494                           
  6495  097C                     _LCD_Init:	
  6496                           ;psect for function _LCD_Init
  6497                           
  6498  097C                     l3171:	
  6499                           ;incstack = 0
  6500                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  6501                           
  6502                           
  6503                           ;LCD.c: 29:   IO_Expander_Write(0x00);
  6504  097C  3000               	movlw	0
  6505  097D  160A  118A  2435  120A  158A  	fcall	_IO_Expander_Write
  6506  0982                     l3173:
  6507                           
  6508                           ;LCD.c: 30:   _delay((unsigned long)((30)*(8000000/4000.0)));
  6509  0982  304E               	movlw	78
  6510  0983  00F8               	movwf	??_LCD_Init+1
  6511  0984  30EB               	movlw	235
  6512  0985  00F7               	movwf	??_LCD_Init
  6513  0986                     u4007:
  6514  0986  0BF7               	decfsz	??_LCD_Init,f
  6515  0987  2986               	goto	u4007
  6516  0988  0BF8               	decfsz	??_LCD_Init+1,f
  6517  0989  2986               	goto	u4007
  6518  098A                     l3175:
  6519                           
  6520                           ;LCD.c: 31:   LCD_CMD(0x03);
  6521  098A  3003               	movlw	3
  6522  098B  160A  118A  2497  120A  158A  	fcall	_LCD_CMD
  6523                           
  6524                           ;LCD.c: 32:   _delay((unsigned long)((5)*(8000000/4000.0)));
  6525  0990  300D               	movlw	13
  6526  0991  00F8               	movwf	??_LCD_Init+1
  6527  0992  30FB               	movlw	251
  6528  0993  00F7               	movwf	??_LCD_Init
  6529  0994                     u4017:
  6530  0994  0BF7               	decfsz	??_LCD_Init,f
  6531  0995  2994               	goto	u4017
  6532  0996  0BF8               	decfsz	??_LCD_Init+1,f
  6533  0997  2994               	goto	u4017
  6534  0998  2999               	nop2
  6535  0999                     l3177:
  6536                           
  6537                           ;LCD.c: 33:   LCD_CMD(0x03);
  6538  0999  3003               	movlw	3
  6539  099A  160A  118A  2497  120A  158A  	fcall	_LCD_CMD
  6540  099F                     l3179:
  6541                           
  6542                           ;LCD.c: 34:   _delay((unsigned long)((5)*(8000000/4000.0)));
  6543  099F  300D               	movlw	13
  6544  09A0  00F8               	movwf	??_LCD_Init+1
  6545  09A1  30FB               	movlw	251
  6546  09A2  00F7               	movwf	??_LCD_Init
  6547  09A3                     u4027:
  6548  09A3  0BF7               	decfsz	??_LCD_Init,f
  6549  09A4  29A3               	goto	u4027
  6550  09A5  0BF8               	decfsz	??_LCD_Init+1,f
  6551  09A6  29A3               	goto	u4027
  6552  09A7  29A8               	nop2
  6553                           
  6554                           ;LCD.c: 35:   LCD_CMD(0x03);
  6555  09A8  3003               	movlw	3
  6556  09A9  160A  118A  2497  120A  158A  	fcall	_LCD_CMD
  6557  09AE                     l3181:
  6558                           
  6559                           ;LCD.c: 36:   _delay((unsigned long)((5)*(8000000/4000.0)));
  6560  09AE  300D               	movlw	13
  6561  09AF  00F8               	movwf	??_LCD_Init+1
  6562  09B0  30FB               	movlw	251
  6563  09B1  00F7               	movwf	??_LCD_Init
  6564  09B2                     u4037:
  6565  09B2  0BF7               	decfsz	??_LCD_Init,f
  6566  09B3  29B2               	goto	u4037
  6567  09B4  0BF8               	decfsz	??_LCD_Init+1,f
  6568  09B5  29B2               	goto	u4037
  6569  09B6  29B7               	nop2
  6570  09B7                     l3183:
  6571                           
  6572                           ;LCD.c: 37:   LCD_CMD(0x02);
  6573  09B7  3002               	movlw	2
  6574  09B8  160A  118A  2497  120A  158A  	fcall	_LCD_CMD
  6575                           
  6576                           ;LCD.c: 38:   _delay((unsigned long)((5)*(8000000/4000.0)));
  6577  09BD  300D               	movlw	13
  6578  09BE  00F8               	movwf	??_LCD_Init+1
  6579  09BF  30FB               	movlw	251
  6580  09C0  00F7               	movwf	??_LCD_Init
  6581  09C1                     u4047:
  6582  09C1  0BF7               	decfsz	??_LCD_Init,f
  6583  09C2  29C1               	goto	u4047
  6584  09C3  0BF8               	decfsz	??_LCD_Init+1,f
  6585  09C4  29C1               	goto	u4047
  6586  09C5  29C6               	nop2
  6587  09C6                     l3185:
  6588                           
  6589                           ;LCD.c: 39:   LCD_CMD(0x20 | (2 << 2));
  6590  09C6  3028               	movlw	40
  6591  09C7  160A  118A  2497  120A  158A  	fcall	_LCD_CMD
  6592  09CC                     l3187:
  6593                           
  6594                           ;LCD.c: 40:   _delay((unsigned long)((50)*(8000000/4000.0)));
  6595  09CC  3082               	movlw	130
  6596  09CD  00F8               	movwf	??_LCD_Init+1
  6597  09CE  30DD               	movlw	221
  6598  09CF  00F7               	movwf	??_LCD_Init
  6599  09D0                     u4057:
  6600  09D0  0BF7               	decfsz	??_LCD_Init,f
  6601  09D1  29D0               	goto	u4057
  6602  09D2  0BF8               	decfsz	??_LCD_Init+1,f
  6603  09D3  29D0               	goto	u4057
  6604  09D4  29D5               	nop2
  6605                           
  6606                           ;LCD.c: 41:   LCD_CMD(0x0C);
  6607  09D5  300C               	movlw	12
  6608  09D6  160A  118A  2497  120A  158A  	fcall	_LCD_CMD
  6609  09DB                     l3189:
  6610                           
  6611                           ;LCD.c: 42:   _delay((unsigned long)((50)*(8000000/4000.0)));
  6612  09DB  3082               	movlw	130
  6613  09DC  00F8               	movwf	??_LCD_Init+1
  6614  09DD  30DD               	movlw	221
  6615  09DE  00F7               	movwf	??_LCD_Init
  6616  09DF                     u4067:
  6617  09DF  0BF7               	decfsz	??_LCD_Init,f
  6618  09E0  29DF               	goto	u4067
  6619  09E1  0BF8               	decfsz	??_LCD_Init+1,f
  6620  09E2  29DF               	goto	u4067
  6621  09E3  29E4               	nop2
  6622  09E4                     l3191:
  6623                           
  6624                           ;LCD.c: 43:   LCD_CMD(0x01);
  6625  09E4  3001               	movlw	1
  6626  09E5  160A  118A  2497  120A  158A  	fcall	_LCD_CMD
  6627                           
  6628                           ;LCD.c: 44:   _delay((unsigned long)((50)*(8000000/4000.0)));
  6629  09EA  3082               	movlw	130
  6630  09EB  00F8               	movwf	??_LCD_Init+1
  6631  09EC  30DD               	movlw	221
  6632  09ED  00F7               	movwf	??_LCD_Init
  6633  09EE                     u4077:
  6634  09EE  0BF7               	decfsz	??_LCD_Init,f
  6635  09EF  29EE               	goto	u4077
  6636  09F0  0BF8               	decfsz	??_LCD_Init+1,f
  6637  09F1  29EE               	goto	u4077
  6638  09F2  29F3               	nop2
  6639  09F3                     l3193:
  6640                           
  6641                           ;LCD.c: 45:   LCD_CMD(0x04 | 0x02);
  6642  09F3  3006               	movlw	6
  6643  09F4  160A  118A  2497  120A  158A  	fcall	_LCD_CMD
  6644  09F9                     l3195:
  6645                           
  6646                           ;LCD.c: 46:   _delay((unsigned long)((50)*(8000000/4000.0)));
  6647  09F9  3082               	movlw	130
  6648  09FA  00F8               	movwf	??_LCD_Init+1
  6649  09FB  30DD               	movlw	221
  6650  09FC  00F7               	movwf	??_LCD_Init
  6651  09FD                     u4087:
  6652  09FD  0BF7               	decfsz	??_LCD_Init,f
  6653  09FE  29FD               	goto	u4087
  6654  09FF  0BF8               	decfsz	??_LCD_Init+1,f
  6655  0A00  29FD               	goto	u4087
  6656  0A01  2A02               	nop2
  6657  0A02                     l136:
  6658  0A02  0008               	return
  6659  0A03                     __end_of_LCD_Init:
  6660                           
  6661                           	psect	text18
  6662  13DC                     __ptext18:	
  6663 ;; *************** function _LCD_Clear *****************
  6664 ;; Defined at:
  6665 ;;		line 128 in file "LCD.c"
  6666 ;; Parameters:    Size  Location     Type
  6667 ;;		None
  6668 ;; Auto vars:     Size  Location     Type
  6669 ;;		None
  6670 ;; Return value:  Size  Location     Type
  6671 ;;                  1    wreg      void 
  6672 ;; Registers used:
  6673 ;;		wreg, status,2, status,0, pclath, cstack
  6674 ;; Tracked objects:
  6675 ;;		On entry : 0/0
  6676 ;;		On exit  : 0/0
  6677 ;;		Unchanged: 0/0
  6678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6679 ;;      Params:         0       0       0       0       0
  6680 ;;      Locals:         0       0       0       0       0
  6681 ;;      Temps:          1       0       0       0       0
  6682 ;;      Totals:         1       0       0       0       0
  6683 ;;Total ram usage:        1 bytes
  6684 ;; Hardware stack levels used: 1
  6685 ;; Hardware stack levels required when called: 6
  6686 ;; This function calls:
  6687 ;;		_LCD_CMD
  6688 ;; This function is called by:
  6689 ;;		_main
  6690 ;; This function uses a non-reentrant model
  6691 ;;
  6692                           
  6693  13DC                     _LCD_Clear:	
  6694                           ;psect for function _LCD_Clear
  6695                           
  6696  13DC                     l3197:	
  6697                           ;incstack = 0
  6698                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  6699                           
  6700                           
  6701                           ;LCD.c: 130:   LCD_CMD(0x01);
  6702  13DC  3001               	movlw	1
  6703  13DD  160A  118A  2497  160A  118A  	fcall	_LCD_CMD
  6704  13E2                     l3199:
  6705                           
  6706                           ;LCD.c: 131:   _delay((unsigned long)((40)*(8000000/4000000.0)));
  6707  13E2  301A               	movlw	26
  6708  13E3  00F7               	movwf	??_LCD_Clear
  6709  13E4                     u4097:
  6710  13E4  0BF7               	decfsz	??_LCD_Clear,f
  6711  13E5  2BE4               	goto	u4097
  6712  13E6  0000               	nop
  6713  13E7                     l178:
  6714  13E7  0008               	return
  6715  13E8                     __end_of_LCD_Clear:
  6716                           
  6717                           	psect	text19
  6718  1421                     __ptext19:	
  6719 ;; *************** function _I2C_Init *****************
  6720 ;; Defined at:
  6721 ;;		line 27 in file "I2C_Master.c"
  6722 ;; Parameters:    Size  Location     Type
  6723 ;;		None
  6724 ;; Auto vars:     Size  Location     Type
  6725 ;;		None
  6726 ;; Return value:  Size  Location     Type
  6727 ;;                  1    wreg      void 
  6728 ;; Registers used:
  6729 ;;		wreg, status,2
  6730 ;; Tracked objects:
  6731 ;;		On entry : 0/0
  6732 ;;		On exit  : 0/0
  6733 ;;		Unchanged: 0/0
  6734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6735 ;;      Params:         0       0       0       0       0
  6736 ;;      Locals:         0       0       0       0       0
  6737 ;;      Temps:          0       0       0       0       0
  6738 ;;      Totals:         0       0       0       0       0
  6739 ;;Total ram usage:        0 bytes
  6740 ;; Hardware stack levels used: 1
  6741 ;; This function calls:
  6742 ;;		Nothing
  6743 ;; This function is called by:
  6744 ;;		_main
  6745 ;; This function uses a non-reentrant model
  6746 ;;
  6747                           
  6748  1421                     _I2C_Init:	
  6749                           ;psect for function _I2C_Init
  6750                           
  6751  1421                     l3145:	
  6752                           ;incstack = 0
  6753                           ; Regs used in _I2C_Init: [wreg+status,2]
  6754                           
  6755                           
  6756                           ;I2C_Master.c: 29:     TRISCbits.TRISC3 = 1;
  6757  1421  1683               	bsf	3,5	;RP0=1, select bank1
  6758  1422  1303               	bcf	3,6	;RP1=0, select bank1
  6759  1423  1587               	bsf	7,3	;volatile
  6760                           
  6761                           ;I2C_Master.c: 30:  TRISCbits.TRISC4 = 1;
  6762  1424  1607               	bsf	7,4	;volatile
  6763  1425                     l3147:
  6764                           
  6765                           ;I2C_Master.c: 31:  SSPSTAT=80;
  6766  1425  3050               	movlw	80
  6767  1426  0094               	movwf	20	;volatile
  6768                           
  6769                           ;I2C_Master.c: 32:     SSPCON=0x28;
  6770  1427  3028               	movlw	40
  6771  1428  1283               	bcf	3,5	;RP0=0, select bank0
  6772  1429  1303               	bcf	3,6	;RP1=0, select bank0
  6773  142A  0094               	movwf	20	;volatile
  6774  142B                     l3149:
  6775                           
  6776                           ;I2C_Master.c: 34:  SSPCON2=0;
  6777  142B  1683               	bsf	3,5	;RP0=1, select bank1
  6778  142C  1303               	bcf	3,6	;RP1=0, select bank1
  6779  142D  0191               	clrf	17	;volatile
  6780  142E                     l3151:
  6781                           
  6782                           ;I2C_Master.c: 35:     SSPADD=((8000000/(4*100000))-1);
  6783  142E  3013               	movlw	19
  6784  142F  0093               	movwf	19	;volatile
  6785  1430                     l3153:
  6786                           
  6787                           ;I2C_Master.c: 36:     SSPIE=1;
  6788  1430  158C               	bsf	12,3	;volatile
  6789  1431                     l3155:
  6790                           
  6791                           ;I2C_Master.c: 37:     SSPIF=0;
  6792  1431  1283               	bcf	3,5	;RP0=0, select bank0
  6793  1432  1303               	bcf	3,6	;RP1=0, select bank0
  6794  1433  118C               	bcf	12,3	;volatile
  6795  1434                     l53:
  6796  1434  0008               	return
  6797  1435                     __end_of_I2C_Init:
  6798                           
  6799                           	psect	text20
  6800  16B4                     __ptext20:	
  6801 ;; *************** function _DisplayTemp *****************
  6802 ;; Defined at:
  6803 ;;		line 57 in file "Temp.c"
  6804 ;; Parameters:    Size  Location     Type
  6805 ;;		None
  6806 ;; Auto vars:     Size  Location     Type
  6807 ;;  buffer2        16   40[BANK0 ] unsigned char [16]
  6808 ;;  buffer1        16   24[BANK0 ] unsigned char [16]
  6809 ;; Return value:  Size  Location     Type
  6810 ;;                  1    wreg      void 
  6811 ;; Registers used:
  6812 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6813 ;; Tracked objects:
  6814 ;;		On entry : 0/0
  6815 ;;		On exit  : 0/0
  6816 ;;		Unchanged: 0/0
  6817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6818 ;;      Params:         0       0       0       0       0
  6819 ;;      Locals:         0      32       0       0       0
  6820 ;;      Temps:          0       3       0       0       0
  6821 ;;      Totals:         0      35       0       0       0
  6822 ;;Total ram usage:       35 bytes
  6823 ;; Hardware stack levels used: 1
  6824 ;; Hardware stack levels required when called: 7
  6825 ;; This function calls:
  6826 ;;		_LCD_Set_Cursor
  6827 ;;		_LCD_Write_String
  6828 ;;		_sprintf
  6829 ;; This function is called by:
  6830 ;;		_main
  6831 ;; This function uses a non-reentrant model
  6832 ;;
  6833                           
  6834  16B4                     _DisplayTemp:	
  6835                           ;psect for function _DisplayTemp
  6836                           
  6837  16B4                     l3231:	
  6838                           ;incstack = 0
  6839                           ; Regs used in _DisplayTemp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6840                           
  6841                           
  6842                           ;Temp.c: 59:     char buffer1[16], buffer2[16];;Temp.c: 60:     sprintf(buffer1, "Temp:%
      +                          3d*C", temperature_c);
  6843  16B4  3038               	movlw	(low (DisplayTemp@buffer1| 0))& (0+255)
  6844  16B5  1283               	bcf	3,5	;RP0=0, select bank0
  6845  16B6  1303               	bcf	3,6	;RP1=0, select bank0
  6846  16B7  00A0               	movwf	sprintf@sp
  6847  16B8  3000               	movlw	0
  6848  16B9  00A1               	movwf	sprintf@sp+1
  6849  16BA  303B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  6850  16BB  00B5               	movwf	??_DisplayTemp
  6851  16BC  0835               	movf	??_DisplayTemp,w
  6852  16BD  00A2               	movwf	sprintf@f
  6853  16BE  0865               	movf	_temperature_c+1,w
  6854  16BF  00A4               	movwf	?_sprintf+4
  6855  16C0  0864               	movf	_temperature_c,w
  6856  16C1  00A3               	movwf	?_sprintf+3
  6857  16C2  120A  158A  2545  160A  118A  	fcall	_sprintf
  6858  16C7                     l3233:
  6859                           
  6860                           ;Temp.c: 61:     _delay((unsigned long)((1)*(8000000/4000.0)));
  6861  16C7  3003               	movlw	3
  6862  16C8  1283               	bcf	3,5	;RP0=0, select bank0
  6863  16C9  1303               	bcf	3,6	;RP1=0, select bank0
  6864  16CA  00B6               	movwf	??_DisplayTemp+1
  6865  16CB  3097               	movlw	151
  6866  16CC  00B5               	movwf	??_DisplayTemp
  6867  16CD                     u4107:
  6868  16CD  0BB5               	decfsz	??_DisplayTemp,f
  6869  16CE  2ECD               	goto	u4107
  6870  16CF  0BB6               	decfsz	??_DisplayTemp+1,f
  6871  16D0  2ECD               	goto	u4107
  6872  16D1                     l3235:
  6873                           
  6874                           ;Temp.c: 62:     LCD_Write_String(buffer1);
  6875  16D1  3038               	movlw	(low (DisplayTemp@buffer1| 0))& (0+255)
  6876  16D2  00F7               	movwf	LCD_Write_String@Str
  6877  16D3  3000               	movlw	0
  6878  16D4  00F8               	movwf	LCD_Write_String@Str+1
  6879  16D5  160A  118A  2672  160A  118A  	fcall	_LCD_Write_String
  6880  16DA                     l3237:
  6881                           
  6882                           ;Temp.c: 63:     LCD_Set_Cursor('2','0');
  6883  16DA  3030               	movlw	48
  6884  16DB  1283               	bcf	3,5	;RP0=0, select bank0
  6885  16DC  1303               	bcf	3,6	;RP1=0, select bank0
  6886  16DD  00B5               	movwf	??_DisplayTemp
  6887  16DE  0835               	movf	??_DisplayTemp,w
  6888  16DF  00F7               	movwf	LCD_Set_Cursor@COL
  6889  16E0  3032               	movlw	50
  6890  16E1  160A  118A  25C4  160A  118A  	fcall	_LCD_Set_Cursor
  6891  16E6                     l3239:
  6892                           
  6893                           ;Temp.c: 64:     sprintf(buffer2, "Temp:%3d*F", temperature_f);
  6894  16E6  3048               	movlw	(low (DisplayTemp@buffer2| 0))& (0+255)
  6895  16E7  1283               	bcf	3,5	;RP0=0, select bank0
  6896  16E8  1303               	bcf	3,6	;RP1=0, select bank0
  6897  16E9  00A0               	movwf	sprintf@sp
  6898  16EA  3000               	movlw	0
  6899  16EB  00A1               	movwf	sprintf@sp+1
  6900  16EC  3046               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  6901  16ED  00B5               	movwf	??_DisplayTemp
  6902  16EE  0835               	movf	??_DisplayTemp,w
  6903  16EF  00A2               	movwf	sprintf@f
  6904  16F0  0863               	movf	_temperature_f+1,w
  6905  16F1  00A4               	movwf	?_sprintf+4
  6906  16F2  0862               	movf	_temperature_f,w
  6907  16F3  00A3               	movwf	?_sprintf+3
  6908  16F4  120A  158A  2545  160A  118A  	fcall	_sprintf
  6909  16F9                     l3241:
  6910                           
  6911                           ;Temp.c: 65:     LCD_Write_String(buffer2);
  6912  16F9  3048               	movlw	(low (DisplayTemp@buffer2| 0))& (0+255)
  6913  16FA  00F7               	movwf	LCD_Write_String@Str
  6914  16FB  3000               	movlw	0
  6915  16FC  00F8               	movwf	LCD_Write_String@Str+1
  6916  16FD  160A  118A  2672  160A  118A  	fcall	_LCD_Write_String
  6917  1702                     l3243:
  6918                           
  6919                           ;Temp.c: 66:     _delay((unsigned long)((200)*(8000000/4000.0)));
  6920  1702  3003               	movlw	3
  6921  1703  1283               	bcf	3,5	;RP0=0, select bank0
  6922  1704  1303               	bcf	3,6	;RP1=0, select bank0
  6923  1705  00B7               	movwf	??_DisplayTemp+2
  6924  1706  3008               	movlw	8
  6925  1707  00B6               	movwf	??_DisplayTemp+1
  6926  1708  3076               	movlw	118
  6927  1709  00B5               	movwf	??_DisplayTemp
  6928  170A                     u4117:
  6929  170A  0BB5               	decfsz	??_DisplayTemp,f
  6930  170B  2F0A               	goto	u4117
  6931  170C  0BB6               	decfsz	??_DisplayTemp+1,f
  6932  170D  2F0A               	goto	u4117
  6933  170E  0BB7               	decfsz	??_DisplayTemp+2,f
  6934  170F  2F0A               	goto	u4117
  6935  1710  0000               	nop
  6936  1711                     l217:
  6937  1711  0008               	return
  6938  1712                     __end_of_DisplayTemp:
  6939                           
  6940                           	psect	text21
  6941  0D45                     __ptext21:	
  6942 ;; *************** function _sprintf *****************
  6943 ;; Defined at:
  6944 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c"
  6945 ;; Parameters:    Size  Location     Type
  6946 ;;  sp              2    0[BANK0 ] PTR unsigned char 
  6947 ;;		 -> main@buffer3_737(16), year(10), month(10), date(10), 
  6948 ;;		 -> hours(10), mins(10), secs(10), main@buffer3(16), 
  6949 ;;		 -> DisplayTemp@buffer2(16), DisplayTemp@buffer1(16), 
  6950 ;;  f               1    2[BANK0 ] PTR const unsigned char 
  6951 ;;		 -> STR_24(11), STR_15(4), STR_14(4), STR_13(8), 
  6952 ;;		 -> STR_12(8), STR_11(4), STR_10(4), STR_9(8), 
  6953 ;;		 -> STR_8(4), STR_7(4), STR_3(3), STR_2(11), 
  6954 ;;		 -> STR_1(11), 
  6955 ;; Auto vars:     Size  Location     Type
  6956 ;;  idx             1    8[BANK0 ] unsigned char 
  6957 ;;  tmpval          4    0        struct .
  6958 ;;  width           2   18[BANK0 ] int 
  6959 ;;  val             2   16[BANK0 ] unsigned int 
  6960 ;;  len             2   13[BANK0 ] unsigned int 
  6961 ;;  cp              2   10[BANK0 ] PTR const unsigned char 
  6962 ;;		 -> STR_25(7), ?_sprintf(2), STR_4(12), result(2), 
  6963 ;;  c               1   20[BANK0 ] unsigned char 
  6964 ;;  flag            1   15[BANK0 ] unsigned char 
  6965 ;;  ap              1   12[BANK0 ] PTR void [1]
  6966 ;;		 -> ?_sprintf(2), 
  6967 ;;  prec            1    9[BANK0 ] char 
  6968 ;; Return value:  Size  Location     Type
  6969 ;;                  2    0[BANK0 ] int 
  6970 ;; Registers used:
  6971 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6972 ;; Tracked objects:
  6973 ;;		On entry : 0/0
  6974 ;;		On exit  : 0/0
  6975 ;;		Unchanged: 0/0
  6976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6977 ;;      Params:         0       5       0       0       0
  6978 ;;      Locals:         0      13       0       0       0
  6979 ;;      Temps:          0       3       0       0       0
  6980 ;;      Totals:         0      21       0       0       0
  6981 ;;Total ram usage:       21 bytes
  6982 ;; Hardware stack levels used: 1
  6983 ;; Hardware stack levels required when called: 1
  6984 ;; This function calls:
  6985 ;;		___lwdiv
  6986 ;;		___lwmod
  6987 ;;		___wmul
  6988 ;;		_isdigit
  6989 ;; This function is called by:
  6990 ;;		_DisplayTemp
  6991 ;;		_main
  6992 ;; This function uses a non-reentrant model
  6993 ;;
  6994                           
  6995  0D45                     _sprintf:	
  6996                           ;psect for function _sprintf
  6997                           
  6998  0D45                     l2567:	
  6999                           ;incstack = 0
  7000                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7001                           
  7002                           
  7003                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 521:  
      +                          signed char prec;
  7004  0D45  3023               	movlw	(low ((?_sprintf| 0+3)))& (0+255)
  7005  0D46  1283               	bcf	3,5	;RP0=0, select bank0
  7006  0D47  1303               	bcf	3,6	;RP1=0, select bank0
  7007  0D48  00A5               	movwf	??_sprintf
  7008  0D49  0825               	movf	??_sprintf,w
  7009  0D4A  00AC               	movwf	sprintf@ap
  7010                           
  7011                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  7012  0D4B  2FE7               	goto	l2707
  7013  0D4C                     l2569:
  7014                           
  7015                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  7016  0D4C  3025               	movlw	37
  7017  0D4D  0634               	xorwf	sprintf@c,w
  7018  0D4E  1903               	btfsc	3,2
  7019  0D4F  2D51               	goto	u2361
  7020  0D50  2D52               	goto	u2360
  7021  0D51                     u2361:
  7022  0D51  2D62               	goto	l2575
  7023  0D52                     u2360:
  7024  0D52                     l2571:
  7025                           
  7026                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  7027  0D52  0834               	movf	sprintf@c,w
  7028  0D53  00A5               	movwf	??_sprintf
  7029  0D54  0820               	movf	sprintf@sp,w
  7030  0D55  0084               	movwf	4
  7031  0D56  1783               	bsf	3,7
  7032  0D57  1C21               	btfss	sprintf@sp+1,0
  7033  0D58  1383               	bcf	3,7
  7034  0D59  0825               	movf	??_sprintf,w
  7035  0D5A  0080               	movwf	0
  7036  0D5B                     l2573:
  7037  0D5B  3001               	movlw	1
  7038  0D5C  07A0               	addwf	sprintf@sp,f
  7039  0D5D  1803               	skipnc
  7040  0D5E  0AA1               	incf	sprintf@sp+1,f
  7041  0D5F  3000               	movlw	0
  7042  0D60  07A1               	addwf	sprintf@sp+1,f
  7043                           
  7044                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 559:    continue;
  7045  0D61  2FE7               	goto	l2707
  7046  0D62                     l2575:
  7047                           
  7048                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  7049  0D62  01B2               	clrf	sprintf@width
  7050  0D63  01B3               	clrf	sprintf@width+1
  7051                           
  7052                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  7053  0D64  01AF               	clrf	sprintf@flag
  7054  0D65                     l2577:
  7055                           
  7056                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  7057  0D65  0822               	movf	sprintf@f,w
  7058  0D66  0084               	movwf	4
  7059  0D67  120A  158A  200A  120A  158A  	fcall	stringdir
  7060  0D6C  160A  118A  23E8  120A  158A  	fcall	_isdigit
  7061  0D71  1C03               	btfss	3,0
  7062  0D72  2D74               	goto	u2371
  7063  0D73  2D75               	goto	u2370
  7064  0D74                     u2371:
  7065  0D74  2E47               	goto	l2625
  7066  0D75                     u2370:
  7067  0D75                     l2579:
  7068                           
  7069                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  7070  0D75  1283               	bcf	3,5	;RP0=0, select bank0
  7071  0D76  1303               	bcf	3,6	;RP1=0, select bank0
  7072  0D77  01B2               	clrf	sprintf@width
  7073  0D78  01B3               	clrf	sprintf@width+1
  7074  0D79                     l2581:
  7075                           
  7076                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  7077  0D79  300A               	movlw	10
  7078  0D7A  00F0               	movwf	___wmul@multiplier
  7079  0D7B  3000               	movlw	0
  7080  0D7C  00F1               	movwf	___wmul@multiplier+1
  7081  0D7D  1283               	bcf	3,5	;RP0=0, select bank0
  7082  0D7E  1303               	bcf	3,6	;RP1=0, select bank0
  7083  0D7F  0833               	movf	sprintf@width+1,w
  7084  0D80  00F3               	movwf	___wmul@multiplicand+1
  7085  0D81  0832               	movf	sprintf@width,w
  7086  0D82  00F2               	movwf	___wmul@multiplicand
  7087  0D83  160A  118A  24D0  120A  158A  	fcall	___wmul
  7088  0D88  0871               	movf	?___wmul+1,w
  7089  0D89  1283               	bcf	3,5	;RP0=0, select bank0
  7090  0D8A  1303               	bcf	3,6	;RP1=0, select bank0
  7091  0D8B  00B3               	movwf	sprintf@width+1
  7092  0D8C  0870               	movf	?___wmul,w
  7093  0D8D  00B2               	movwf	sprintf@width
  7094  0D8E                     l2583:
  7095                           
  7096                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  7097  0D8E  0822               	movf	sprintf@f,w
  7098  0D8F  0084               	movwf	4
  7099  0D90  120A  158A  200A  120A  158A  	fcall	stringdir
  7100  0D95  3ED0               	addlw	208
  7101  0D96  00A5               	movwf	??_sprintf
  7102  0D97  30FF               	movlw	255
  7103  0D98  1803               	skipnc
  7104  0D99  3000               	movlw	0
  7105  0D9A  00A6               	movwf	??_sprintf+1
  7106  0D9B  0825               	movf	??_sprintf,w
  7107  0D9C  07B2               	addwf	sprintf@width,f
  7108  0D9D  1803               	skipnc
  7109  0D9E  0AB3               	incf	sprintf@width+1,f
  7110  0D9F  0826               	movf	??_sprintf+1,w
  7111  0DA0  07B3               	addwf	sprintf@width+1,f
  7112  0DA1                     l2585:
  7113  0DA1  3001               	movlw	1
  7114  0DA2  00A5               	movwf	??_sprintf
  7115  0DA3  0825               	movf	??_sprintf,w
  7116  0DA4  07A2               	addwf	sprintf@f,f
  7117  0DA5                     l2587:
  7118                           
  7119                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  7120  0DA5  0822               	movf	sprintf@f,w
  7121  0DA6  0084               	movwf	4
  7122  0DA7  120A  158A  200A  120A  158A  	fcall	stringdir
  7123  0DAC  160A  118A  23E8  120A  158A  	fcall	_isdigit
  7124  0DB1  1803               	btfsc	3,0
  7125  0DB2  2DB4               	goto	u2381
  7126  0DB3  2DB5               	goto	u2380
  7127  0DB4                     u2381:
  7128  0DB4  2D79               	goto	l2581
  7129  0DB5                     u2380:
  7130  0DB5  2E47               	goto	l2625
  7131  0DB6                     l525:	
  7132                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 744:   case 'x':
  7133                           
  7134                           
  7135                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 747:    flag |= 0
      +                          x80;
  7136  0DB6  17AF               	bsf	sprintf@flag,7
  7137                           
  7138                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 749:    break;
  7139  0DB7  2E6C               	goto	l524
  7140  0DB8                     l2589:
  7141                           
  7142                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 760:     cp = (*(
      +                          const char * *)__va_arg((*(const char * **)ap), (const char *)0));
  7143  0DB8  082C               	movf	sprintf@ap,w
  7144  0DB9  0084               	movwf	4
  7145  0DBA  1383               	bcf	3,7	;select IRP bank0
  7146  0DBB  0800               	movf	0,w
  7147  0DBC  00AA               	movwf	sprintf@cp
  7148  0DBD  0A84               	incf	4,f
  7149  0DBE  0800               	movf	0,w
  7150  0DBF  0384               	decf	4,f
  7151  0DC0  00AB               	movwf	sprintf@cp+1
  7152  0DC1                     l2591:
  7153  0DC1  3002               	movlw	2
  7154  0DC2  00A5               	movwf	??_sprintf
  7155  0DC3  0825               	movf	??_sprintf,w
  7156  0DC4  07AC               	addwf	sprintf@ap,f
  7157  0DC5                     l2593:
  7158                           
  7159                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 766:    if(!cp)
  7160  0DC5  082A               	movf	sprintf@cp,w
  7161  0DC6  042B               	iorwf	sprintf@cp+1,w
  7162  0DC7  1D03               	btfss	3,2
  7163  0DC8  2DCA               	goto	u2391
  7164  0DC9  2DCB               	goto	u2390
  7165  0DCA                     u2391:
  7166  0DCA  2DCF               	goto	l2597
  7167  0DCB                     u2390:
  7168  0DCB                     l2595:
  7169                           
  7170                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 767:     cp = "(n
      +                          ull)";
  7171  0DCB  3061               	movlw	(low ((STR_25-__stringbase)| (0+32768)))& (0+255)
  7172  0DCC  00AA               	movwf	sprintf@cp
  7173  0DCD  3080               	movlw	128
  7174  0DCE  00AB               	movwf	sprintf@cp+1
  7175  0DCF                     l2597:
  7176                           
  7177                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 771:    len = 0;
  7178  0DCF  01AD               	clrf	sprintf@len
  7179  0DD0  01AE               	clrf	sprintf@len+1
  7180                           
  7181                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 772:    while(cp[
      +                          len])
  7182  0DD1  2DD8               	goto	l2601
  7183  0DD2                     l2599:
  7184                           
  7185                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 773:     len++;
  7186  0DD2  3001               	movlw	1
  7187  0DD3  07AD               	addwf	sprintf@len,f
  7188  0DD4  1803               	skipnc
  7189  0DD5  0AAE               	incf	sprintf@len+1,f
  7190  0DD6  3000               	movlw	0
  7191  0DD7  07AE               	addwf	sprintf@len+1,f
  7192  0DD8                     l2601:
  7193                           
  7194                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 772:    while(cp[
      +                          len])
  7195  0DD8  082D               	movf	sprintf@len,w
  7196  0DD9  072A               	addwf	sprintf@cp,w
  7197  0DDA  0084               	movwf	4
  7198  0DDB  082B               	movf	sprintf@cp+1,w
  7199  0DDC  1803               	skipnc
  7200  0DDD  0A2B               	incf	sprintf@cp+1,w
  7201  0DDE  00FF               	movwf	btemp+1
  7202  0DDF  120A  158A  2000  120A  158A  	fcall	stringtab
  7203  0DE4  3A00               	xorlw	0
  7204  0DE5  1D03               	skipz
  7205  0DE6  2DE8               	goto	u2401
  7206  0DE7  2DE9               	goto	u2400
  7207  0DE8                     u2401:
  7208  0DE8  2DD2               	goto	l2599
  7209  0DE9                     u2400:
  7210  0DE9                     l2603:
  7211                           
  7212                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 783:    if(((unsi
      +                          gned)width) > len)
  7213  0DE9  0833               	movf	sprintf@width+1,w
  7214  0DEA  022E               	subwf	sprintf@len+1,w
  7215  0DEB  1D03               	skipz
  7216  0DEC  2DEF               	goto	u2415
  7217  0DED  0832               	movf	sprintf@width,w
  7218  0DEE  022D               	subwf	sprintf@len,w
  7219  0DEF                     u2415:
  7220  0DEF  1803               	skipnc
  7221  0DF0  2DF2               	goto	u2411
  7222  0DF1  2DF3               	goto	u2410
  7223  0DF2                     u2411:
  7224  0DF2  2DFA               	goto	l2607
  7225  0DF3                     u2410:
  7226  0DF3                     l2605:
  7227                           
  7228                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 784:     width -=
      +                           len;
  7229  0DF3  082D               	movf	sprintf@len,w
  7230  0DF4  02B2               	subwf	sprintf@width,f
  7231  0DF5  082E               	movf	sprintf@len+1,w
  7232  0DF6  1C03               	skipc
  7233  0DF7  03B3               	decf	sprintf@width+1,f
  7234  0DF8  02B3               	subwf	sprintf@width+1,f
  7235  0DF9  2E0C               	goto	l2613
  7236  0DFA                     l2607:
  7237                           
  7238                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 786:     width = 
      +                          0;
  7239  0DFA  01B2               	clrf	sprintf@width
  7240  0DFB  01B3               	clrf	sprintf@width+1
  7241  0DFC  2E0C               	goto	l2613
  7242  0DFD                     l2609:
  7243                           
  7244                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 791:      ((*sp++
      +                           = (' ')));
  7245  0DFD  3020               	movlw	32
  7246  0DFE  00A5               	movwf	??_sprintf
  7247  0DFF  0820               	movf	sprintf@sp,w
  7248  0E00  0084               	movwf	4
  7249  0E01  1783               	bsf	3,7
  7250  0E02  1C21               	btfss	sprintf@sp+1,0
  7251  0E03  1383               	bcf	3,7
  7252  0E04  0825               	movf	??_sprintf,w
  7253  0E05  0080               	movwf	0
  7254  0E06                     l2611:
  7255  0E06  3001               	movlw	1
  7256  0E07  07A0               	addwf	sprintf@sp,f
  7257  0E08  1803               	skipnc
  7258  0E09  0AA1               	incf	sprintf@sp+1,f
  7259  0E0A  3000               	movlw	0
  7260  0E0B  07A1               	addwf	sprintf@sp+1,f
  7261  0E0C                     l2613:
  7262                           
  7263                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 790:     while(wi
      +                          dth--)
  7264  0E0C  30FF               	movlw	255
  7265  0E0D  07B2               	addwf	sprintf@width,f
  7266  0E0E  1803               	skipnc
  7267  0E0F  0AB3               	incf	sprintf@width+1,f
  7268  0E10  30FF               	movlw	255
  7269  0E11  07B3               	addwf	sprintf@width+1,f
  7270  0E12  0A32               	incf	sprintf@width,w
  7271  0E13  1D03               	skipz
  7272  0E14  2E19               	goto	u2421
  7273  0E15  0A33               	incf	sprintf@width+1,w
  7274  0E16  1D03               	btfss	3,2
  7275  0E17  2E19               	goto	u2421
  7276  0E18  2E1A               	goto	u2420
  7277  0E19                     u2421:
  7278  0E19  2DFD               	goto	l2609
  7279  0E1A                     u2420:
  7280  0E1A  2E38               	goto	l2621
  7281  0E1B                     l2615:
  7282                           
  7283                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 794:     ((*sp++ 
      +                          = (*cp++)));
  7284  0E1B  082B               	movf	sprintf@cp+1,w
  7285  0E1C  00FF               	movwf	btemp+1
  7286  0E1D  082A               	movf	sprintf@cp,w
  7287  0E1E  0084               	movwf	4
  7288  0E1F  120A  158A  2000  120A  158A  	fcall	stringtab
  7289  0E24  00A5               	movwf	??_sprintf
  7290  0E25  0820               	movf	sprintf@sp,w
  7291  0E26  0084               	movwf	4
  7292  0E27  1783               	bsf	3,7
  7293  0E28  1C21               	btfss	sprintf@sp+1,0
  7294  0E29  1383               	bcf	3,7
  7295  0E2A  0825               	movf	??_sprintf,w
  7296  0E2B  0080               	movwf	0
  7297  0E2C                     l2617:
  7298  0E2C  3001               	movlw	1
  7299  0E2D  07AA               	addwf	sprintf@cp,f
  7300  0E2E  1803               	skipnc
  7301  0E2F  0AAB               	incf	sprintf@cp+1,f
  7302  0E30  3000               	movlw	0
  7303  0E31  07AB               	addwf	sprintf@cp+1,f
  7304  0E32                     l2619:
  7305  0E32  3001               	movlw	1
  7306  0E33  07A0               	addwf	sprintf@sp,f
  7307  0E34  1803               	skipnc
  7308  0E35  0AA1               	incf	sprintf@sp+1,f
  7309  0E36  3000               	movlw	0
  7310  0E37  07A1               	addwf	sprintf@sp+1,f
  7311  0E38                     l2621:
  7312                           
  7313                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 793:    while(len
      +                          --)
  7314  0E38  3001               	movlw	1
  7315  0E39  02AD               	subwf	sprintf@len,f
  7316  0E3A  3000               	movlw	0
  7317  0E3B  1C03               	skipc
  7318  0E3C  03AE               	decf	sprintf@len+1,f
  7319  0E3D  02AE               	subwf	sprintf@len+1,f
  7320  0E3E  0A2D               	incf	sprintf@len,w
  7321  0E3F  1D03               	skipz
  7322  0E40  2E45               	goto	u2431
  7323  0E41  0A2E               	incf	sprintf@len+1,w
  7324  0E42  1D03               	btfss	3,2
  7325  0E43  2E45               	goto	u2431
  7326  0E44  2E46               	goto	u2430
  7327  0E45                     u2431:
  7328  0E45  2E1B               	goto	l2615
  7329  0E46                     u2430:
  7330  0E46  2FE7               	goto	l2707
  7331  0E47                     l2625:
  7332  0E47  3001               	movlw	1
  7333  0E48  1283               	bcf	3,5	;RP0=0, select bank0
  7334  0E49  1303               	bcf	3,6	;RP1=0, select bank0
  7335  0E4A  07A2               	addwf	sprintf@f,f
  7336  0E4B  30FF               	movlw	-1
  7337  0E4C  0722               	addwf	sprintf@f,w
  7338  0E4D  0084               	movwf	4
  7339  0E4E  120A  158A  200A  120A  158A  	fcall	stringdir
  7340  0E53  00B4               	movwf	sprintf@c
  7341  0E54  00A5               	movwf	??_sprintf
  7342  0E55  01A6               	clrf	??_sprintf+1
  7343                           
  7344                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7345                           ; Switch size 1, requested type "simple"
  7346                           ; Number of cases is 1, Range of values is 0 to 0
  7347                           ; switch strategies available:
  7348                           ; Name         Instructions Cycles
  7349                           ; simple_byte            4     3 (average)
  7350                           ; direct_byte           11     8 (fixed)
  7351                           ; jumptable            260     6 (fixed)
  7352                           ;	Chosen strategy is simple_byte
  7353  0E56  0826               	movf	??_sprintf+1,w
  7354  0E57  3A00               	xorlw	0	; case 0
  7355  0E58  1903               	skipnz
  7356  0E59  2E5B               	goto	l3677
  7357  0E5A  2FE7               	goto	l2707
  7358  0E5B                     l3677:
  7359                           
  7360                           ; Switch size 1, requested type "simple"
  7361                           ; Number of cases is 5, Range of values is 0 to 120
  7362                           ; switch strategies available:
  7363                           ; Name         Instructions Cycles
  7364                           ; simple_byte           16     9 (average)
  7365                           ; jumptable            260     6 (fixed)
  7366                           ;	Chosen strategy is simple_byte
  7367  0E5B  0825               	movf	??_sprintf,w
  7368  0E5C  3A00               	xorlw	0	; case 0
  7369  0E5D  1903               	skipnz
  7370  0E5E  2FF9               	goto	l2709
  7371  0E5F  3A64               	xorlw	100	; case 100
  7372  0E60  1903               	skipnz
  7373  0E61  2E6C               	goto	l524
  7374  0E62  3A0D               	xorlw	13	; case 105
  7375  0E63  1903               	skipnz
  7376  0E64  2E6C               	goto	l524
  7377  0E65  3A1A               	xorlw	26	; case 115
  7378  0E66  1903               	skipnz
  7379  0E67  2DB8               	goto	l2589
  7380  0E68  3A0B               	xorlw	11	; case 120
  7381  0E69  1903               	skipnz
  7382  0E6A  2DB6               	goto	l525
  7383  0E6B  2FE7               	goto	l2707
  7384  0E6C                     l524:
  7385                           
  7386                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1277:   if((flag 
      +                          & 0x80) == 0x00)
  7387  0E6C  1BAF               	btfsc	sprintf@flag,7
  7388  0E6D  2E6F               	goto	u2441
  7389  0E6E  2E70               	goto	u2440
  7390  0E6F                     u2441:
  7391  0E6F  2E8A               	goto	l2637
  7392  0E70                     u2440:
  7393  0E70                     l2627:
  7394                           
  7395                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  7396  0E70  082C               	movf	sprintf@ap,w
  7397  0E71  0084               	movwf	4
  7398  0E72  1383               	bcf	3,7	;select IRP bank0
  7399  0E73  0800               	movf	0,w
  7400  0E74  00B0               	movwf	sprintf@val
  7401  0E75  0A84               	incf	4,f
  7402  0E76  0800               	movf	0,w
  7403  0E77  00B1               	movwf	sprintf@val+1
  7404  0E78                     l2629:
  7405  0E78  3002               	movlw	2
  7406  0E79  00A5               	movwf	??_sprintf
  7407  0E7A  0825               	movf	??_sprintf,w
  7408  0E7B  07AC               	addwf	sprintf@ap,f
  7409  0E7C                     l2631:
  7410                           
  7411                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  7412  0E7C  1FB1               	btfss	sprintf@val+1,7
  7413  0E7D  2E7F               	goto	u2451
  7414  0E7E  2E80               	goto	u2450
  7415  0E7F                     u2451:
  7416  0E7F  2EE9               	goto	l2663
  7417  0E80                     u2450:
  7418  0E80                     l2633:
  7419                           
  7420                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  7421  0E80  3003               	movlw	3
  7422  0E81  00A5               	movwf	??_sprintf
  7423  0E82  0825               	movf	??_sprintf,w
  7424  0E83  04AF               	iorwf	sprintf@flag,f
  7425  0E84                     l2635:
  7426                           
  7427                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  7428  0E84  09B0               	comf	sprintf@val,f
  7429  0E85  09B1               	comf	sprintf@val+1,f
  7430  0E86  0AB0               	incf	sprintf@val,f
  7431  0E87  1903               	skipnz
  7432  0E88  0AB1               	incf	sprintf@val+1,f
  7433  0E89  2EE9               	goto	l2663
  7434  0E8A                     l2637:
  7435                           
  7436                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  7437  0E8A  082C               	movf	sprintf@ap,w
  7438  0E8B  0084               	movwf	4
  7439  0E8C  1383               	bcf	3,7	;select IRP bank0
  7440  0E8D  0800               	movf	0,w
  7441  0E8E  00B0               	movwf	sprintf@val
  7442  0E8F  0A84               	incf	4,f
  7443  0E90  0800               	movf	0,w
  7444  0E91  00B1               	movwf	sprintf@val+1
  7445  0E92                     l2639:
  7446  0E92  3002               	movlw	2
  7447  0E93  00A5               	movwf	??_sprintf
  7448  0E94  0825               	movf	??_sprintf,w
  7449  0E95  07AC               	addwf	sprintf@ap,f
  7450  0E96  2EE9               	goto	l2663
  7451  0E97                     l544:	
  7452                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1325:   case 0x00
      +                          :
  7453                           
  7454                           
  7455                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  7456  0E97  01B4               	clrf	sprintf@c
  7457  0E98  0AB4               	incf	sprintf@c,f
  7458  0E99                     l2645:
  7459                           
  7460                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  7461  0E99  0834               	movf	sprintf@c,w
  7462  0E9A  00A5               	movwf	??_sprintf
  7463  0E9B  0725               	addwf	??_sprintf,w
  7464  0E9C  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  7465  0E9D  0084               	movwf	4
  7466  0E9E  120A  158A  200A  120A  158A  	fcall	stringdir
  7467  0EA3  00A6               	movwf	??_sprintf+1
  7468  0EA4  120A  158A  200A  120A  158A  	fcall	stringdir
  7469  0EA9  00A7               	movwf	??_sprintf+2
  7470  0EAA  0827               	movf	??_sprintf+2,w
  7471  0EAB  0231               	subwf	sprintf@val+1,w
  7472  0EAC  1D03               	skipz
  7473  0EAD  2EB0               	goto	u2465
  7474  0EAE  0826               	movf	??_sprintf+1,w
  7475  0EAF  0230               	subwf	sprintf@val,w
  7476  0EB0                     u2465:
  7477  0EB0  1803               	skipnc
  7478  0EB1  2EB3               	goto	u2461
  7479  0EB2  2EB4               	goto	u2460
  7480  0EB3                     u2461:
  7481  0EB3  2EB5               	goto	l2649
  7482  0EB4                     u2460:
  7483  0EB4  2EFA               	goto	l2665
  7484  0EB5                     l2649:
  7485  0EB5  3001               	movlw	1
  7486  0EB6  00A5               	movwf	??_sprintf
  7487  0EB7  0825               	movf	??_sprintf,w
  7488  0EB8  07B4               	addwf	sprintf@c,f
  7489  0EB9  3005               	movlw	5
  7490  0EBA  0634               	xorwf	sprintf@c,w
  7491  0EBB  1D03               	btfss	3,2
  7492  0EBC  2EBE               	goto	u2471
  7493  0EBD  2EBF               	goto	u2470
  7494  0EBE                     u2471:
  7495  0EBE  2E99               	goto	l2645
  7496  0EBF                     u2470:
  7497  0EBF  2EFA               	goto	l2665
  7498  0EC0                     l549:	
  7499                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1340:   case 0x80
      +                          :
  7500                           
  7501                           
  7502                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1342:    for(c = 
      +                          1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  7503  0EC0  01B4               	clrf	sprintf@c
  7504  0EC1  0AB4               	incf	sprintf@c,f
  7505  0EC2                     l2655:
  7506                           
  7507                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1343:     if(val 
      +                          < hexpowers[c])
  7508  0EC2  0834               	movf	sprintf@c,w
  7509  0EC3  00A5               	movwf	??_sprintf
  7510  0EC4  0725               	addwf	??_sprintf,w
  7511  0EC5  3E0B               	addlw	low ((_hexpowers-__stringbase)| (0+32768))
  7512  0EC6  0084               	movwf	4
  7513  0EC7  120A  158A  200A  120A  158A  	fcall	stringdir
  7514  0ECC  00A6               	movwf	??_sprintf+1
  7515  0ECD  120A  158A  200A  120A  158A  	fcall	stringdir
  7516  0ED2  00A7               	movwf	??_sprintf+2
  7517  0ED3  0827               	movf	??_sprintf+2,w
  7518  0ED4  0231               	subwf	sprintf@val+1,w
  7519  0ED5  1D03               	skipz
  7520  0ED6  2ED9               	goto	u2485
  7521  0ED7  0826               	movf	??_sprintf+1,w
  7522  0ED8  0230               	subwf	sprintf@val,w
  7523  0ED9                     u2485:
  7524  0ED9  1803               	skipnc
  7525  0EDA  2EDC               	goto	u2481
  7526  0EDB  2EDD               	goto	u2480
  7527  0EDC                     u2481:
  7528  0EDC  2EDE               	goto	l2659
  7529  0EDD                     u2480:
  7530  0EDD  2EFA               	goto	l2665
  7531  0EDE                     l2659:
  7532  0EDE  3001               	movlw	1
  7533  0EDF  00A5               	movwf	??_sprintf
  7534  0EE0  0825               	movf	??_sprintf,w
  7535  0EE1  07B4               	addwf	sprintf@c,f
  7536  0EE2  3004               	movlw	4
  7537  0EE3  0634               	xorwf	sprintf@c,w
  7538  0EE4  1D03               	btfss	3,2
  7539  0EE5  2EE7               	goto	u2491
  7540  0EE6  2EE8               	goto	u2490
  7541  0EE7                     u2491:
  7542  0EE7  2EC2               	goto	l2655
  7543  0EE8                     u2490:
  7544  0EE8  2EFA               	goto	l2665
  7545  0EE9                     l2663:
  7546  0EE9  082F               	movf	sprintf@flag,w
  7547  0EEA  3980               	andlw	128
  7548  0EEB  00A5               	movwf	??_sprintf
  7549  0EEC  01A6               	clrf	??_sprintf+1
  7550                           
  7551                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7552                           ; Switch size 1, requested type "simple"
  7553                           ; Number of cases is 1, Range of values is 0 to 0
  7554                           ; switch strategies available:
  7555                           ; Name         Instructions Cycles
  7556                           ; simple_byte            4     3 (average)
  7557                           ; direct_byte           11     8 (fixed)
  7558                           ; jumptable            260     6 (fixed)
  7559                           ;	Chosen strategy is simple_byte
  7560  0EED  0826               	movf	??_sprintf+1,w
  7561  0EEE  3A00               	xorlw	0	; case 0
  7562  0EEF  1903               	skipnz
  7563  0EF0  2EF2               	goto	l3679
  7564  0EF1  2EFA               	goto	l2665
  7565  0EF2                     l3679:
  7566                           
  7567                           ; Switch size 1, requested type "simple"
  7568                           ; Number of cases is 2, Range of values is 0 to 128
  7569                           ; switch strategies available:
  7570                           ; Name         Instructions Cycles
  7571                           ; simple_byte            7     4 (average)
  7572                           ; jumptable            260     6 (fixed)
  7573                           ;	Chosen strategy is simple_byte
  7574  0EF2  0825               	movf	??_sprintf,w
  7575  0EF3  3A00               	xorlw	0	; case 0
  7576  0EF4  1903               	skipnz
  7577  0EF5  2E97               	goto	l544
  7578  0EF6  3A80               	xorlw	128	; case 128
  7579  0EF7  1903               	skipnz
  7580  0EF8  2EC0               	goto	l549
  7581  0EF9  2EFA               	goto	l2665
  7582  0EFA                     l2665:
  7583                           
  7584                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
  7585  0EFA  0832               	movf	sprintf@width,w
  7586  0EFB  0433               	iorwf	sprintf@width+1,w
  7587  0EFC  1903               	btfsc	3,2
  7588  0EFD  2EFF               	goto	u2501
  7589  0EFE  2F00               	goto	u2500
  7590  0EFF                     u2501:
  7591  0EFF  2F0C               	goto	l553
  7592  0F00                     u2500:
  7593  0F00                     l2667:
  7594  0F00  082F               	movf	sprintf@flag,w
  7595  0F01  3903               	andlw	3
  7596  0F02  1903               	btfsc	3,2
  7597  0F03  2F05               	goto	u2511
  7598  0F04  2F06               	goto	u2510
  7599  0F05                     u2511:
  7600  0F05  2F0C               	goto	l553
  7601  0F06                     u2510:
  7602  0F06                     l2669:
  7603                           
  7604                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1372:    width--;
  7605  0F06  30FF               	movlw	255
  7606  0F07  07B2               	addwf	sprintf@width,f
  7607  0F08  1803               	skipnc
  7608  0F09  0AB3               	incf	sprintf@width+1,f
  7609  0F0A  30FF               	movlw	255
  7610  0F0B  07B3               	addwf	sprintf@width+1,f
  7611  0F0C                     l553:
  7612                           
  7613                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  7614  0F0C  0833               	movf	sprintf@width+1,w
  7615  0F0D  3A80               	xorlw	128
  7616  0F0E  3C80               	sublw	128
  7617  0F0F  1D03               	skipz
  7618  0F10  2F13               	goto	u2525
  7619  0F11  0832               	movf	sprintf@width,w
  7620  0F12  0234               	subwf	sprintf@c,w
  7621  0F13                     u2525:
  7622  0F13  1803               	skipnc
  7623  0F14  2F16               	goto	u2521
  7624  0F15  2F17               	goto	u2520
  7625  0F16                     u2521:
  7626  0F16  2F23               	goto	l2673
  7627  0F17                     u2520:
  7628  0F17                     l2671:
  7629                           
  7630                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  7631  0F17  1283               	bcf	3,5	;RP0=0, select bank0
  7632  0F18  1303               	bcf	3,6	;RP1=0, select bank0
  7633  0F19  0834               	movf	sprintf@c,w
  7634  0F1A  00A5               	movwf	??_sprintf
  7635  0F1B  01A6               	clrf	??_sprintf+1
  7636  0F1C  0825               	movf	??_sprintf,w
  7637  0F1D  02B2               	subwf	sprintf@width,f
  7638  0F1E  0826               	movf	??_sprintf+1,w
  7639  0F1F  1C03               	skipc
  7640  0F20  03B3               	decf	sprintf@width+1,f
  7641  0F21  02B3               	subwf	sprintf@width+1,f
  7642  0F22  2F27               	goto	l2675
  7643  0F23                     l2673:
  7644                           
  7645                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  7646  0F23  1283               	bcf	3,5	;RP0=0, select bank0
  7647  0F24  1303               	bcf	3,6	;RP1=0, select bank0
  7648  0F25  01B2               	clrf	sprintf@width
  7649  0F26  01B3               	clrf	sprintf@width+1
  7650  0F27                     l2675:
  7651                           
  7652                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1450:    if(width
  7653  0F27  0832               	movf	sprintf@width,w
  7654  0F28  0433               	iorwf	sprintf@width+1,w
  7655  0F29  1903               	btfsc	3,2
  7656  0F2A  2F2C               	goto	u2531
  7657  0F2B  2F2D               	goto	u2530
  7658  0F2C                     u2531:
  7659  0F2C  2F48               	goto	l2683
  7660  0F2D                     u2530:
  7661  0F2D                     l2677:
  7662                           
  7663                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  7664  0F2D  3020               	movlw	32
  7665  0F2E  00A5               	movwf	??_sprintf
  7666  0F2F  0820               	movf	sprintf@sp,w
  7667  0F30  0084               	movwf	4
  7668  0F31  1783               	bsf	3,7
  7669  0F32  1C21               	btfss	sprintf@sp+1,0
  7670  0F33  1383               	bcf	3,7
  7671  0F34  0825               	movf	??_sprintf,w
  7672  0F35  0080               	movwf	0
  7673  0F36                     l2679:
  7674  0F36  3001               	movlw	1
  7675  0F37  07A0               	addwf	sprintf@sp,f
  7676  0F38  1803               	skipnc
  7677  0F39  0AA1               	incf	sprintf@sp+1,f
  7678  0F3A  3000               	movlw	0
  7679  0F3B  07A1               	addwf	sprintf@sp+1,f
  7680  0F3C                     l2681:
  7681  0F3C  30FF               	movlw	255
  7682  0F3D  07B2               	addwf	sprintf@width,f
  7683  0F3E  1803               	skipnc
  7684  0F3F  0AB3               	incf	sprintf@width+1,f
  7685  0F40  30FF               	movlw	255
  7686  0F41  07B3               	addwf	sprintf@width+1,f
  7687  0F42  0832               	movf	sprintf@width,w
  7688  0F43  0433               	iorwf	sprintf@width+1,w
  7689  0F44  1D03               	btfss	3,2
  7690  0F45  2F47               	goto	u2541
  7691  0F46  2F48               	goto	u2540
  7692  0F47                     u2541:
  7693  0F47  2F2D               	goto	l2677
  7694  0F48                     u2540:
  7695  0F48                     l2683:
  7696                           
  7697                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
  7698  0F48  082F               	movf	sprintf@flag,w
  7699  0F49  3903               	andlw	3
  7700  0F4A  1903               	btfsc	3,2
  7701  0F4B  2F4D               	goto	u2551
  7702  0F4C  2F4E               	goto	u2550
  7703  0F4D                     u2551:
  7704  0F4D  2F5D               	goto	l2689
  7705  0F4E                     u2550:
  7706  0F4E                     l2685:
  7707                           
  7708                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  7709  0F4E  302D               	movlw	45
  7710  0F4F  00A5               	movwf	??_sprintf
  7711  0F50  0820               	movf	sprintf@sp,w
  7712  0F51  0084               	movwf	4
  7713  0F52  1783               	bsf	3,7
  7714  0F53  1C21               	btfss	sprintf@sp+1,0
  7715  0F54  1383               	bcf	3,7
  7716  0F55  0825               	movf	??_sprintf,w
  7717  0F56  0080               	movwf	0
  7718  0F57                     l2687:
  7719  0F57  3001               	movlw	1
  7720  0F58  07A0               	addwf	sprintf@sp,f
  7721  0F59  1803               	skipnc
  7722  0F5A  0AA1               	incf	sprintf@sp+1,f
  7723  0F5B  3000               	movlw	0
  7724  0F5C  07A1               	addwf	sprintf@sp+1,f
  7725  0F5D                     l2689:
  7726                           
  7727                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  7728  0F5D  0834               	movf	sprintf@c,w
  7729  0F5E  00A5               	movwf	??_sprintf
  7730  0F5F  0825               	movf	??_sprintf,w
  7731  0F60  00A9               	movwf	sprintf@prec
  7732                           
  7733                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  7734  0F61  2FDE               	goto	l2705
  7735  0F62                     l2691:
  7736                           
  7737                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1515:     c = (va
      +                          l / dpowers[(unsigned char)prec]) % 10 + '0';
  7738  0F62  300A               	movlw	10
  7739  0F63  00F8               	movwf	___lwmod@divisor
  7740  0F64  3000               	movlw	0
  7741  0F65  00F9               	movwf	___lwmod@divisor+1
  7742  0F66  0829               	movf	sprintf@prec,w
  7743  0F67  00A5               	movwf	??_sprintf
  7744  0F68  0725               	addwf	??_sprintf,w
  7745  0F69  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  7746  0F6A  0084               	movwf	4
  7747  0F6B  120A  158A  200A  120A  158A  	fcall	stringdir
  7748  0F70  00F0               	movwf	___lwdiv@divisor
  7749  0F71  120A  158A  200A  120A  158A  	fcall	stringdir
  7750  0F76  00F1               	movwf	___lwdiv@divisor+1
  7751  0F77  0831               	movf	sprintf@val+1,w
  7752  0F78  00F3               	movwf	___lwdiv@dividend+1
  7753  0F79  0830               	movf	sprintf@val,w
  7754  0F7A  00F2               	movwf	___lwdiv@dividend
  7755  0F7B  120A  118A  200A  120A  158A  	fcall	___lwdiv
  7756  0F80  0871               	movf	?___lwdiv+1,w
  7757  0F81  00FB               	movwf	___lwmod@dividend+1
  7758  0F82  0870               	movf	?___lwdiv,w
  7759  0F83  00FA               	movwf	___lwmod@dividend
  7760  0F84  160A  118A  25FA  120A  158A  	fcall	___lwmod
  7761  0F89  0878               	movf	?___lwmod,w
  7762  0F8A  3E30               	addlw	48
  7763  0F8B  1283               	bcf	3,5	;RP0=0, select bank0
  7764  0F8C  1303               	bcf	3,6	;RP1=0, select bank0
  7765  0F8D  00A6               	movwf	??_sprintf+1
  7766  0F8E  0826               	movf	??_sprintf+1,w
  7767  0F8F  00B4               	movwf	sprintf@c
  7768                           
  7769                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1517:     break;
  7770  0F90  2FCF               	goto	l2701
  7771  0F91                     l2693:
  7772                           
  7773                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1525:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1526:     unsigned char 
      +                          idx = (val / hexpowers[(unsigned char)prec]) & 0xF;
  7774  0F91  0829               	movf	sprintf@prec,w
  7775  0F92  00A5               	movwf	??_sprintf
  7776  0F93  0725               	addwf	??_sprintf,w
  7777  0F94  3E0B               	addlw	low ((_hexpowers-__stringbase)| (0+32768))
  7778  0F95  0084               	movwf	4
  7779  0F96  120A  158A  200A  120A  158A  	fcall	stringdir
  7780  0F9B  00F0               	movwf	___lwdiv@divisor
  7781  0F9C  120A  158A  200A  120A  158A  	fcall	stringdir
  7782  0FA1  00F1               	movwf	___lwdiv@divisor+1
  7783  0FA2  0831               	movf	sprintf@val+1,w
  7784  0FA3  00F3               	movwf	___lwdiv@dividend+1
  7785  0FA4  0830               	movf	sprintf@val,w
  7786  0FA5  00F2               	movwf	___lwdiv@dividend
  7787  0FA6  120A  118A  200A  120A  158A  	fcall	___lwdiv
  7788  0FAB  0870               	movf	?___lwdiv,w
  7789  0FAC  390F               	andlw	15
  7790  0FAD  1283               	bcf	3,5	;RP0=0, select bank0
  7791  0FAE  1303               	bcf	3,6	;RP1=0, select bank0
  7792  0FAF  00A6               	movwf	??_sprintf+1
  7793  0FB0  0826               	movf	??_sprintf+1,w
  7794  0FB1  00A8               	movwf	sprintf@idx
  7795  0FB2                     l2695:
  7796                           
  7797                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1532:     c = "01
      +                          23456789abcdef"[idx];
  7798  0FB2  0828               	movf	sprintf@idx,w
  7799  0FB3  3E13               	addlw	low ((STR_26-__stringbase)| (0+32768))
  7800  0FB4  0084               	movwf	4
  7801  0FB5  120A  158A  200A  120A  158A  	fcall	stringdir
  7802  0FBA  00A5               	movwf	??_sprintf
  7803  0FBB  0825               	movf	??_sprintf,w
  7804  0FBC  00B4               	movwf	sprintf@c
  7805                           
  7806                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1534:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1536:     break;
  7807  0FBD  2FCF               	goto	l2701
  7808  0FBE                     l2699:
  7809  0FBE  082F               	movf	sprintf@flag,w
  7810  0FBF  3980               	andlw	128
  7811  0FC0  00A5               	movwf	??_sprintf
  7812  0FC1  01A6               	clrf	??_sprintf+1
  7813                           
  7814                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7815                           ; Switch size 1, requested type "simple"
  7816                           ; Number of cases is 1, Range of values is 0 to 0
  7817                           ; switch strategies available:
  7818                           ; Name         Instructions Cycles
  7819                           ; simple_byte            4     3 (average)
  7820                           ; direct_byte           11     8 (fixed)
  7821                           ; jumptable            260     6 (fixed)
  7822                           ;	Chosen strategy is simple_byte
  7823  0FC2  0826               	movf	??_sprintf+1,w
  7824  0FC3  3A00               	xorlw	0	; case 0
  7825  0FC4  1903               	skipnz
  7826  0FC5  2FC7               	goto	l3681
  7827  0FC6  2FCF               	goto	l2701
  7828  0FC7                     l3681:
  7829                           
  7830                           ; Switch size 1, requested type "simple"
  7831                           ; Number of cases is 2, Range of values is 0 to 128
  7832                           ; switch strategies available:
  7833                           ; Name         Instructions Cycles
  7834                           ; simple_byte            7     4 (average)
  7835                           ; jumptable            260     6 (fixed)
  7836                           ;	Chosen strategy is simple_byte
  7837  0FC7  0825               	movf	??_sprintf,w
  7838  0FC8  3A00               	xorlw	0	; case 0
  7839  0FC9  1903               	skipnz
  7840  0FCA  2F62               	goto	l2691
  7841  0FCB  3A80               	xorlw	128	; case 128
  7842  0FCC  1903               	skipnz
  7843  0FCD  2F91               	goto	l2693
  7844  0FCE  2FCF               	goto	l2701
  7845  0FCF                     l2701:
  7846                           
  7847                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ 
      +                          = (c)));
  7848  0FCF  0834               	movf	sprintf@c,w
  7849  0FD0  00A5               	movwf	??_sprintf
  7850  0FD1  0820               	movf	sprintf@sp,w
  7851  0FD2  0084               	movwf	4
  7852  0FD3  1783               	bsf	3,7
  7853  0FD4  1C21               	btfss	sprintf@sp+1,0
  7854  0FD5  1383               	bcf	3,7
  7855  0FD6  0825               	movf	??_sprintf,w
  7856  0FD7  0080               	movwf	0
  7857  0FD8                     l2703:
  7858  0FD8  3001               	movlw	1
  7859  0FD9  07A0               	addwf	sprintf@sp,f
  7860  0FDA  1803               	skipnc
  7861  0FDB  0AA1               	incf	sprintf@sp+1,f
  7862  0FDC  3000               	movlw	0
  7863  0FDD  07A1               	addwf	sprintf@sp+1,f
  7864  0FDE                     l2705:
  7865                           
  7866                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  7867  0FDE  30FF               	movlw	255
  7868  0FDF  00A5               	movwf	??_sprintf
  7869  0FE0  0825               	movf	??_sprintf,w
  7870  0FE1  07A9               	addwf	sprintf@prec,f
  7871  0FE2  0A29               	incf	sprintf@prec,w
  7872  0FE3  1D03               	btfss	3,2
  7873  0FE4  2FE6               	goto	u2561
  7874  0FE5  2FE7               	goto	u2560
  7875  0FE6                     u2561:
  7876  0FE6  2FBE               	goto	l2699
  7877  0FE7                     u2560:
  7878  0FE7                     l2707:
  7879                           
  7880                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  7881  0FE7  3001               	movlw	1
  7882  0FE8  07A2               	addwf	sprintf@f,f
  7883  0FE9  30FF               	movlw	-1
  7884  0FEA  0722               	addwf	sprintf@f,w
  7885  0FEB  0084               	movwf	4
  7886  0FEC  120A  158A  200A  120A  158A  	fcall	stringdir
  7887  0FF1  00A5               	movwf	??_sprintf
  7888  0FF2  0825               	movf	??_sprintf,w
  7889  0FF3  00B4               	movwf	sprintf@c
  7890  0FF4  0834               	movf	sprintf@c,w
  7891  0FF5  1D03               	btfss	3,2
  7892  0FF6  2FF8               	goto	u2571
  7893  0FF7  2FF9               	goto	u2570
  7894  0FF8                     u2571:
  7895  0FF8  2D4C               	goto	l2569
  7896  0FF9                     u2570:
  7897  0FF9                     l2709:
  7898                           
  7899                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  7900  0FF9  0820               	movf	sprintf@sp,w
  7901  0FFA  0084               	movwf	4
  7902  0FFB  1783               	bsf	3,7
  7903  0FFC  1C21               	btfss	sprintf@sp+1,0
  7904  0FFD  1383               	bcf	3,7
  7905  0FFE  0180               	clrf	0
  7906  0FFF                     l568:
  7907  0FFF  0008               	return
  7908  1000                     __end_of_sprintf:
  7909                           
  7910                           	psect	text22
  7911  13E8                     __ptext22:	
  7912 ;; *************** function _isdigit *****************
  7913 ;; Defined at:
  7914 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\isdigit.c"
  7915 ;; Parameters:    Size  Location     Type
  7916 ;;  c               1    wreg     unsigned char 
  7917 ;; Auto vars:     Size  Location     Type
  7918 ;;  c               1    1[COMMON] unsigned char 
  7919 ;; Return value:  Size  Location     Type
  7920 ;;		None               void
  7921 ;; Registers used:
  7922 ;;		wreg, status,2, status,0
  7923 ;; Tracked objects:
  7924 ;;		On entry : 0/0
  7925 ;;		On exit  : 0/0
  7926 ;;		Unchanged: 0/0
  7927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7928 ;;      Params:         0       0       0       0       0
  7929 ;;      Locals:         2       0       0       0       0
  7930 ;;      Temps:          0       0       0       0       0
  7931 ;;      Totals:         2       0       0       0       0
  7932 ;;Total ram usage:        2 bytes
  7933 ;; Hardware stack levels used: 1
  7934 ;; This function calls:
  7935 ;;		Nothing
  7936 ;; This function is called by:
  7937 ;;		_sprintf
  7938 ;; This function uses a non-reentrant model
  7939 ;;
  7940                           
  7941  13E8                     _isdigit:	
  7942                           ;psect for function _isdigit
  7943                           
  7944                           
  7945                           ;incstack = 0
  7946                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  7947                           ;isdigit@c stored from wreg
  7948  13E8  00F1               	movwf	isdigit@c
  7949  13E9                     l2429:
  7950  13E9  01F0               	clrf	_isdigit$1225
  7951  13EA                     l2431:
  7952  13EA  303A               	movlw	58
  7953  13EB  0271               	subwf	isdigit@c,w
  7954  13EC  1803               	skipnc
  7955  13ED  2BEF               	goto	u2071
  7956  13EE  2BF0               	goto	u2070
  7957  13EF                     u2071:
  7958  13EF  2BF8               	goto	l2437
  7959  13F0                     u2070:
  7960  13F0                     l2433:
  7961  13F0  3030               	movlw	48
  7962  13F1  0271               	subwf	isdigit@c,w
  7963  13F2  1C03               	skipc
  7964  13F3  2BF5               	goto	u2081
  7965  13F4  2BF6               	goto	u2080
  7966  13F5                     u2081:
  7967  13F5  2BF8               	goto	l2437
  7968  13F6                     u2080:
  7969  13F6                     l2435:
  7970  13F6  01F0               	clrf	_isdigit$1225
  7971  13F7  0AF0               	incf	_isdigit$1225,f
  7972  13F8                     l2437:
  7973  13F8  0C70               	rrf	_isdigit$1225,w
  7974  13F9                     l1025:
  7975  13F9  0008               	return
  7976  13FA                     __end_of_isdigit:
  7977                           
  7978                           	psect	text23
  7979  14D0                     __ptext23:	
  7980 ;; *************** function ___wmul *****************
  7981 ;; Defined at:
  7982 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\Umul16.c"
  7983 ;; Parameters:    Size  Location     Type
  7984 ;;  multiplier      2    0[COMMON] unsigned int 
  7985 ;;  multiplicand    2    2[COMMON] unsigned int 
  7986 ;; Auto vars:     Size  Location     Type
  7987 ;;  product         2    4[COMMON] unsigned int 
  7988 ;; Return value:  Size  Location     Type
  7989 ;;                  2    0[COMMON] unsigned int 
  7990 ;; Registers used:
  7991 ;;		wreg, status,2, status,0
  7992 ;; Tracked objects:
  7993 ;;		On entry : 0/0
  7994 ;;		On exit  : 0/0
  7995 ;;		Unchanged: 0/0
  7996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7997 ;;      Params:         4       0       0       0       0
  7998 ;;      Locals:         2       0       0       0       0
  7999 ;;      Temps:          0       0       0       0       0
  8000 ;;      Totals:         6       0       0       0       0
  8001 ;;Total ram usage:        6 bytes
  8002 ;; Hardware stack levels used: 1
  8003 ;; This function calls:
  8004 ;;		Nothing
  8005 ;; This function is called by:
  8006 ;;		_sprintf
  8007 ;; This function uses a non-reentrant model
  8008 ;;
  8009                           
  8010  14D0                     ___wmul:	
  8011                           ;psect for function ___wmul
  8012                           
  8013  14D0                     l2441:	
  8014                           ;incstack = 0
  8015                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  8016                           
  8017  14D0  01F4               	clrf	___wmul@product
  8018  14D1  01F5               	clrf	___wmul@product+1
  8019  14D2                     l2443:
  8020  14D2  1C70               	btfss	___wmul@multiplier,0
  8021  14D3  2CD5               	goto	u2091
  8022  14D4  2CD6               	goto	u2090
  8023  14D5                     u2091:
  8024  14D5  2CDC               	goto	l572
  8025  14D6                     u2090:
  8026  14D6                     l2445:
  8027  14D6  0872               	movf	___wmul@multiplicand,w
  8028  14D7  07F4               	addwf	___wmul@product,f
  8029  14D8  1803               	skipnc
  8030  14D9  0AF5               	incf	___wmul@product+1,f
  8031  14DA  0873               	movf	___wmul@multiplicand+1,w
  8032  14DB  07F5               	addwf	___wmul@product+1,f
  8033  14DC                     l572:
  8034  14DC  3001               	movlw	1
  8035  14DD                     u2105:
  8036  14DD  1003               	clrc
  8037  14DE  0DF2               	rlf	___wmul@multiplicand,f
  8038  14DF  0DF3               	rlf	___wmul@multiplicand+1,f
  8039  14E0  3EFF               	addlw	-1
  8040  14E1  1D03               	skipz
  8041  14E2  2CDD               	goto	u2105
  8042  14E3                     l2447:
  8043  14E3  3001               	movlw	1
  8044  14E4                     u2115:
  8045  14E4  1003               	clrc
  8046  14E5  0CF1               	rrf	___wmul@multiplier+1,f
  8047  14E6  0CF0               	rrf	___wmul@multiplier,f
  8048  14E7  3EFF               	addlw	-1
  8049  14E8  1D03               	skipz
  8050  14E9  2CE4               	goto	u2115
  8051  14EA                     l2449:
  8052  14EA  0870               	movf	___wmul@multiplier,w
  8053  14EB  0471               	iorwf	___wmul@multiplier+1,w
  8054  14EC  1D03               	btfss	3,2
  8055  14ED  2CEF               	goto	u2121
  8056  14EE  2CF0               	goto	u2120
  8057  14EF                     u2121:
  8058  14EF  2CD2               	goto	l2443
  8059  14F0                     u2120:
  8060  14F0                     l2451:
  8061  14F0  0875               	movf	___wmul@product+1,w
  8062  14F1  00F1               	movwf	?___wmul+1
  8063  14F2  0874               	movf	___wmul@product,w
  8064  14F3  00F0               	movwf	?___wmul
  8065  14F4                     l574:
  8066  14F4  0008               	return
  8067  14F5                     __end_of___wmul:
  8068                           
  8069                           	psect	text24
  8070  15FA                     __ptext24:	
  8071 ;; *************** function ___lwmod *****************
  8072 ;; Defined at:
  8073 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\lwmod.c"
  8074 ;; Parameters:    Size  Location     Type
  8075 ;;  divisor         2    8[COMMON] unsigned int 
  8076 ;;  dividend        2   10[COMMON] unsigned int 
  8077 ;; Auto vars:     Size  Location     Type
  8078 ;;  counter         1   13[COMMON] unsigned char 
  8079 ;; Return value:  Size  Location     Type
  8080 ;;                  2    8[COMMON] unsigned int 
  8081 ;; Registers used:
  8082 ;;		wreg, status,2, status,0
  8083 ;; Tracked objects:
  8084 ;;		On entry : 0/0
  8085 ;;		On exit  : 0/0
  8086 ;;		Unchanged: 0/0
  8087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8088 ;;      Params:         4       0       0       0       0
  8089 ;;      Locals:         1       0       0       0       0
  8090 ;;      Temps:          1       0       0       0       0
  8091 ;;      Totals:         6       0       0       0       0
  8092 ;;Total ram usage:        6 bytes
  8093 ;; Hardware stack levels used: 1
  8094 ;; This function calls:
  8095 ;;		Nothing
  8096 ;; This function is called by:
  8097 ;;		_sprintf
  8098 ;; This function uses a non-reentrant model
  8099 ;;
  8100                           
  8101  15FA                     ___lwmod:	
  8102                           ;psect for function ___lwmod
  8103                           
  8104  15FA                     l2481:	
  8105                           ;incstack = 0
  8106                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  8107                           
  8108  15FA  0878               	movf	___lwmod@divisor,w
  8109  15FB  0479               	iorwf	___lwmod@divisor+1,w
  8110  15FC  1903               	btfsc	3,2
  8111  15FD  2DFF               	goto	u2201
  8112  15FE  2E00               	goto	u2200
  8113  15FF                     u2201:
  8114  15FF  2E2F               	goto	l2499
  8115  1600                     u2200:
  8116  1600                     l2483:
  8117  1600  01FD               	clrf	___lwmod@counter
  8118  1601  0AFD               	incf	___lwmod@counter,f
  8119  1602  2E0E               	goto	l2489
  8120  1603                     l2485:
  8121  1603  3001               	movlw	1
  8122  1604                     u2215:
  8123  1604  1003               	clrc
  8124  1605  0DF8               	rlf	___lwmod@divisor,f
  8125  1606  0DF9               	rlf	___lwmod@divisor+1,f
  8126  1607  3EFF               	addlw	-1
  8127  1608  1D03               	skipz
  8128  1609  2E04               	goto	u2215
  8129  160A                     l2487:
  8130  160A  3001               	movlw	1
  8131  160B  00FC               	movwf	??___lwmod
  8132  160C  087C               	movf	??___lwmod,w
  8133  160D  07FD               	addwf	___lwmod@counter,f
  8134  160E                     l2489:
  8135  160E  1FF9               	btfss	___lwmod@divisor+1,7
  8136  160F  2E11               	goto	u2221
  8137  1610  2E12               	goto	u2220
  8138  1611                     u2221:
  8139  1611  2E03               	goto	l2485
  8140  1612                     u2220:
  8141  1612                     l2491:
  8142  1612  0879               	movf	___lwmod@divisor+1,w
  8143  1613  027B               	subwf	___lwmod@dividend+1,w
  8144  1614  1D03               	skipz
  8145  1615  2E18               	goto	u2235
  8146  1616  0878               	movf	___lwmod@divisor,w
  8147  1617  027A               	subwf	___lwmod@dividend,w
  8148  1618                     u2235:
  8149  1618  1C03               	skipc
  8150  1619  2E1B               	goto	u2231
  8151  161A  2E1C               	goto	u2230
  8152  161B                     u2231:
  8153  161B  2E22               	goto	l2495
  8154  161C                     u2230:
  8155  161C                     l2493:
  8156  161C  0878               	movf	___lwmod@divisor,w
  8157  161D  02FA               	subwf	___lwmod@dividend,f
  8158  161E  0879               	movf	___lwmod@divisor+1,w
  8159  161F  1C03               	skipc
  8160  1620  03FB               	decf	___lwmod@dividend+1,f
  8161  1621  02FB               	subwf	___lwmod@dividend+1,f
  8162  1622                     l2495:
  8163  1622  3001               	movlw	1
  8164  1623                     u2245:
  8165  1623  1003               	clrc
  8166  1624  0CF9               	rrf	___lwmod@divisor+1,f
  8167  1625  0CF8               	rrf	___lwmod@divisor,f
  8168  1626  3EFF               	addlw	-1
  8169  1627  1D03               	skipz
  8170  1628  2E23               	goto	u2245
  8171  1629                     l2497:
  8172  1629  3001               	movlw	1
  8173  162A  02FD               	subwf	___lwmod@counter,f
  8174  162B  1D03               	btfss	3,2
  8175  162C  2E2E               	goto	u2251
  8176  162D  2E2F               	goto	u2250
  8177  162E                     u2251:
  8178  162E  2E12               	goto	l2491
  8179  162F                     u2250:
  8180  162F                     l2499:
  8181  162F  087B               	movf	___lwmod@dividend+1,w
  8182  1630  00F9               	movwf	?___lwmod+1
  8183  1631  087A               	movf	___lwmod@dividend,w
  8184  1632  00F8               	movwf	?___lwmod
  8185  1633                     l854:
  8186  1633  0008               	return
  8187  1634                     __end_of___lwmod:
  8188                           
  8189                           	psect	text25
  8190  000A                     __ptext25:	
  8191 ;; *************** function ___lwdiv *****************
  8192 ;; Defined at:
  8193 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\lwdiv.c"
  8194 ;; Parameters:    Size  Location     Type
  8195 ;;  divisor         2    0[COMMON] unsigned int 
  8196 ;;  dividend        2    2[COMMON] unsigned int 
  8197 ;; Auto vars:     Size  Location     Type
  8198 ;;  quotient        2    5[COMMON] unsigned int 
  8199 ;;  counter         1    7[COMMON] unsigned char 
  8200 ;; Return value:  Size  Location     Type
  8201 ;;                  2    0[COMMON] unsigned int 
  8202 ;; Registers used:
  8203 ;;		wreg, status,2, status,0
  8204 ;; Tracked objects:
  8205 ;;		On entry : 0/0
  8206 ;;		On exit  : 0/0
  8207 ;;		Unchanged: 0/0
  8208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8209 ;;      Params:         4       0       0       0       0
  8210 ;;      Locals:         3       0       0       0       0
  8211 ;;      Temps:          1       0       0       0       0
  8212 ;;      Totals:         8       0       0       0       0
  8213 ;;Total ram usage:        8 bytes
  8214 ;; Hardware stack levels used: 1
  8215 ;; This function calls:
  8216 ;;		Nothing
  8217 ;; This function is called by:
  8218 ;;		_main
  8219 ;;		_sprintf
  8220 ;; This function uses a non-reentrant model
  8221 ;;
  8222                           
  8223  000A                     ___lwdiv:	
  8224                           ;psect for function ___lwdiv
  8225                           
  8226  000A                     l2455:	
  8227                           ;incstack = 0
  8228                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  8229                           
  8230  000A  01F5               	clrf	___lwdiv@quotient
  8231  000B  01F6               	clrf	___lwdiv@quotient+1
  8232  000C                     l2457:
  8233  000C  0870               	movf	___lwdiv@divisor,w
  8234  000D  0471               	iorwf	___lwdiv@divisor+1,w
  8235  000E  1903               	btfsc	3,2
  8236  000F  2811               	goto	u2131
  8237  0010  2812               	goto	u2130
  8238  0011                     u2131:
  8239  0011  2849               	goto	l2477
  8240  0012                     u2130:
  8241  0012                     l2459:
  8242  0012  01F7               	clrf	___lwdiv@counter
  8243  0013  0AF7               	incf	___lwdiv@counter,f
  8244  0014  2820               	goto	l2465
  8245  0015                     l2461:
  8246  0015  3001               	movlw	1
  8247  0016                     u2145:
  8248  0016  1003               	clrc
  8249  0017  0DF0               	rlf	___lwdiv@divisor,f
  8250  0018  0DF1               	rlf	___lwdiv@divisor+1,f
  8251  0019  3EFF               	addlw	-1
  8252  001A  1D03               	skipz
  8253  001B  2816               	goto	u2145
  8254  001C                     l2463:
  8255  001C  3001               	movlw	1
  8256  001D  00F4               	movwf	??___lwdiv
  8257  001E  0874               	movf	??___lwdiv,w
  8258  001F  07F7               	addwf	___lwdiv@counter,f
  8259  0020                     l2465:
  8260  0020  1FF1               	btfss	___lwdiv@divisor+1,7
  8261  0021  2823               	goto	u2151
  8262  0022  2824               	goto	u2150
  8263  0023                     u2151:
  8264  0023  2815               	goto	l2461
  8265  0024                     u2150:
  8266  0024                     l2467:
  8267  0024  3001               	movlw	1
  8268  0025                     u2165:
  8269  0025  1003               	clrc
  8270  0026  0DF5               	rlf	___lwdiv@quotient,f
  8271  0027  0DF6               	rlf	___lwdiv@quotient+1,f
  8272  0028  3EFF               	addlw	-1
  8273  0029  1D03               	skipz
  8274  002A  2825               	goto	u2165
  8275  002B  0871               	movf	___lwdiv@divisor+1,w
  8276  002C  0273               	subwf	___lwdiv@dividend+1,w
  8277  002D  1D03               	skipz
  8278  002E  2831               	goto	u2175
  8279  002F  0870               	movf	___lwdiv@divisor,w
  8280  0030  0272               	subwf	___lwdiv@dividend,w
  8281  0031                     u2175:
  8282  0031  1C03               	skipc
  8283  0032  2834               	goto	u2171
  8284  0033  2835               	goto	u2170
  8285  0034                     u2171:
  8286  0034  283C               	goto	l2473
  8287  0035                     u2170:
  8288  0035                     l2469:
  8289  0035  0870               	movf	___lwdiv@divisor,w
  8290  0036  02F2               	subwf	___lwdiv@dividend,f
  8291  0037  0871               	movf	___lwdiv@divisor+1,w
  8292  0038  1C03               	skipc
  8293  0039  03F3               	decf	___lwdiv@dividend+1,f
  8294  003A  02F3               	subwf	___lwdiv@dividend+1,f
  8295  003B                     l2471:
  8296  003B  1475               	bsf	___lwdiv@quotient,0
  8297  003C                     l2473:
  8298  003C  3001               	movlw	1
  8299  003D                     u2185:
  8300  003D  1003               	clrc
  8301  003E  0CF1               	rrf	___lwdiv@divisor+1,f
  8302  003F  0CF0               	rrf	___lwdiv@divisor,f
  8303  0040  3EFF               	addlw	-1
  8304  0041  1D03               	skipz
  8305  0042  283D               	goto	u2185
  8306  0043                     l2475:
  8307  0043  3001               	movlw	1
  8308  0044  02F7               	subwf	___lwdiv@counter,f
  8309  0045  1D03               	btfss	3,2
  8310  0046  2848               	goto	u2191
  8311  0047  2849               	goto	u2190
  8312  0048                     u2191:
  8313  0048  2824               	goto	l2467
  8314  0049                     u2190:
  8315  0049                     l2477:
  8316  0049  0876               	movf	___lwdiv@quotient+1,w
  8317  004A  00F1               	movwf	?___lwdiv+1
  8318  004B  0875               	movf	___lwdiv@quotient,w
  8319  004C  00F0               	movwf	?___lwdiv
  8320  004D                     l844:
  8321  004D  0008               	return
  8322  004E                     __end_of___lwdiv:
  8323                           
  8324                           	psect	text26
  8325  1672                     __ptext26:	
  8326 ;; *************** function _LCD_Write_String *****************
  8327 ;; Defined at:
  8328 ;;		line 79 in file "LCD.c"
  8329 ;; Parameters:    Size  Location     Type
  8330 ;;  Str             2    7[COMMON] PTR const unsigned char 
  8331 ;;		 -> main@buffer3_737(16), STR_23(4), STR_22(4), STR_21(4), 
  8332 ;;		 -> STR_20(4), STR_19(4), STR_18(4), STR_17(4), 
  8333 ;;		 -> STR_16(4), year(10), month(10), date(10), 
  8334 ;;		 -> hours(10), mins(10), secs(10), STR_6(3), 
  8335 ;;		 -> STR_5(3), main@buffer3(16), DisplayTemp@buffer2(16), DisplayTemp@buffer1(16), 
  8336 ;; Auto vars:     Size  Location     Type
  8337 ;;  i               2   12[COMMON] int 
  8338 ;; Return value:  Size  Location     Type
  8339 ;;                  1    wreg      void 
  8340 ;; Registers used:
  8341 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8342 ;; Tracked objects:
  8343 ;;		On entry : 0/0
  8344 ;;		On exit  : 0/0
  8345 ;;		Unchanged: 0/0
  8346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8347 ;;      Params:         2       0       0       0       0
  8348 ;;      Locals:         2       0       0       0       0
  8349 ;;      Temps:          3       0       0       0       0
  8350 ;;      Totals:         7       0       0       0       0
  8351 ;;Total ram usage:        7 bytes
  8352 ;; Hardware stack levels used: 1
  8353 ;; Hardware stack levels required when called: 6
  8354 ;; This function calls:
  8355 ;;		_LCD_Write_Char
  8356 ;; This function is called by:
  8357 ;;		_LCD_String_xy
  8358 ;;		_DisplayTemp
  8359 ;;		_main
  8360 ;; This function uses a non-reentrant model
  8361 ;;
  8362                           
  8363  1672                     _LCD_Write_String:	
  8364                           ;psect for function _LCD_Write_String
  8365                           
  8366  1672                     l2543:	
  8367                           ;incstack = 0
  8368                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8369                           
  8370                           
  8371                           ;LCD.c: 79: void LCD_Write_String(const char* Str);LCD.c: 80: {;LCD.c: 81:   for(int i=0
      +                          ; Str[i]!='\0'; i++)
  8372  1672  01FC               	clrf	LCD_Write_String@i
  8373  1673  01FD               	clrf	LCD_Write_String@i+1
  8374  1674  2E97               	goto	l2549
  8375  1675                     l2545:
  8376                           
  8377                           ;LCD.c: 82:     LCD_Write_Char(Str[i]);
  8378  1675  087C               	movf	LCD_Write_String@i,w
  8379  1676  0777               	addwf	LCD_Write_String@Str,w
  8380  1677  00FA               	movwf	??_LCD_Write_String+1
  8381  1678  0878               	movf	LCD_Write_String@Str+1,w
  8382  1679  00F9               	movwf	??_LCD_Write_String
  8383  167A  1803               	skipnc
  8384  167B  0AF9               	incf	??_LCD_Write_String,f
  8385  167C  1FFC               	btfss	LCD_Write_String@i,7
  8386  167D  2E7F               	goto	u2330
  8387  167E  03F9               	decf	??_LCD_Write_String,f
  8388  167F                     u2330:
  8389  167F  0879               	movf	??_LCD_Write_String,w
  8390  1680  00FB               	movwf	??_LCD_Write_String+2
  8391  1681  087B               	movf	??_LCD_Write_String+2,w
  8392  1682  1283               	bcf	3,5	;RP0=0, select bank0
  8393  1683  1303               	bcf	3,6	;RP1=0, select bank0
  8394  1684  00FF               	movwf	btemp+1
  8395  1685  087A               	movf	??_LCD_Write_String+1,w
  8396  1686  0084               	movwf	4
  8397  1687  120A  158A  2000  160A  118A  	fcall	stringtab
  8398  168C  160A  118A  24B3  160A  118A  	fcall	_LCD_Write_Char
  8399  1691                     l2547:
  8400  1691  3001               	movlw	1
  8401  1692  07FC               	addwf	LCD_Write_String@i,f
  8402  1693  1803               	skipnc
  8403  1694  0AFD               	incf	LCD_Write_String@i+1,f
  8404  1695  3000               	movlw	0
  8405  1696  07FD               	addwf	LCD_Write_String@i+1,f
  8406  1697                     l2549:
  8407  1697  087C               	movf	LCD_Write_String@i,w
  8408  1698  0777               	addwf	LCD_Write_String@Str,w
  8409  1699  00FA               	movwf	??_LCD_Write_String+1
  8410  169A  0878               	movf	LCD_Write_String@Str+1,w
  8411  169B  00F9               	movwf	??_LCD_Write_String
  8412  169C  1803               	skipnc
  8413  169D  0AF9               	incf	??_LCD_Write_String,f
  8414  169E  1FFC               	btfss	LCD_Write_String@i,7
  8415  169F  2EA1               	goto	u2340
  8416  16A0  03F9               	decf	??_LCD_Write_String,f
  8417  16A1                     u2340:
  8418  16A1  0879               	movf	??_LCD_Write_String,w
  8419  16A2  00FB               	movwf	??_LCD_Write_String+2
  8420  16A3  087B               	movf	??_LCD_Write_String+2,w
  8421  16A4  1283               	bcf	3,5	;RP0=0, select bank0
  8422  16A5  1303               	bcf	3,6	;RP1=0, select bank0
  8423  16A6  00FF               	movwf	btemp+1
  8424  16A7  087A               	movf	??_LCD_Write_String+1,w
  8425  16A8  0084               	movwf	4
  8426  16A9  120A  158A  2000  160A  118A  	fcall	stringtab
  8427  16AE  3A00               	xorlw	0
  8428  16AF  1D03               	skipz
  8429  16B0  2EB2               	goto	u2351
  8430  16B1  2EB3               	goto	u2350
  8431  16B2                     u2351:
  8432  16B2  2E75               	goto	l2545
  8433  16B3                     u2350:
  8434  16B3                     l154:
  8435  16B3  0008               	return
  8436  16B4                     __end_of_LCD_Write_String:
  8437                           
  8438                           	psect	text27
  8439  14B3                     __ptext27:	
  8440 ;; *************** function _LCD_Write_Char *****************
  8441 ;; Defined at:
  8442 ;;		line 72 in file "LCD.c"
  8443 ;; Parameters:    Size  Location     Type
  8444 ;;  Data            1    wreg     const unsigned char 
  8445 ;; Auto vars:     Size  Location     Type
  8446 ;;  Data            1    6[COMMON] const unsigned char 
  8447 ;; Return value:  Size  Location     Type
  8448 ;;                  1    wreg      void 
  8449 ;; Registers used:
  8450 ;;		wreg, status,2, status,0, pclath, cstack
  8451 ;; Tracked objects:
  8452 ;;		On entry : 0/0
  8453 ;;		On exit  : 0/0
  8454 ;;		Unchanged: 0/0
  8455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8456 ;;      Params:         0       0       0       0       0
  8457 ;;      Locals:         1       0       0       0       0
  8458 ;;      Temps:          1       0       0       0       0
  8459 ;;      Totals:         2       0       0       0       0
  8460 ;;Total ram usage:        2 bytes
  8461 ;; Hardware stack levels used: 1
  8462 ;; Hardware stack levels required when called: 5
  8463 ;; This function calls:
  8464 ;;		_LCD_Write_4Bit
  8465 ;; This function is called by:
  8466 ;;		_LCD_Write_String
  8467 ;; This function uses a non-reentrant model
  8468 ;;
  8469                           
  8470  14B3                     _LCD_Write_Char:	
  8471                           ;psect for function _LCD_Write_Char
  8472                           
  8473                           
  8474                           ;incstack = 0
  8475                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  8476                           ;LCD_Write_Char@Data stored from wreg
  8477  14B3  00F6               	movwf	LCD_Write_Char@Data
  8478  14B4                     l2425:
  8479                           
  8480                           ;LCD.c: 72: void LCD_Write_Char(const char Data);LCD.c: 73: {;LCD.c: 74:   RS = 1;
  8481  14B4  1283               	bcf	3,5	;RP0=0, select bank0
  8482  14B5  1303               	bcf	3,6	;RP1=0, select bank0
  8483  14B6  01E6               	clrf	_RS
  8484  14B7  0AE6               	incf	_RS,f
  8485  14B8                     l2427:
  8486                           
  8487                           ;LCD.c: 75:   LCD_Write_4Bit(Data & 0xF0);
  8488  14B8  0876               	movf	LCD_Write_Char@Data,w
  8489  14B9  39F0               	andlw	240
  8490  14BA  160A  118A  247D  160A  118A  	fcall	_LCD_Write_4Bit
  8491                           
  8492                           ;LCD.c: 76:   LCD_Write_4Bit((Data << 4) & 0xF0);
  8493  14BF  0876               	movf	LCD_Write_Char@Data,w
  8494  14C0  00F5               	movwf	??_LCD_Write_Char
  8495  14C1  3003               	movlw	3
  8496  14C2                     u2065:
  8497  14C2  1003               	clrc
  8498  14C3  0DF5               	rlf	??_LCD_Write_Char,f
  8499  14C4  3EFF               	addlw	-1
  8500  14C5  1D03               	skipz
  8501  14C6  2CC2               	goto	u2065
  8502  14C7  1003               	clrc
  8503  14C8  0D75               	rlf	??_LCD_Write_Char,w
  8504  14C9  39F0               	andlw	240
  8505  14CA  160A  118A  247D  160A  118A  	fcall	_LCD_Write_4Bit
  8506  14CF                     l148:
  8507  14CF  0008               	return
  8508  14D0                     __end_of_LCD_Write_Char:
  8509                           
  8510                           	psect	text28
  8511  15C4                     __ptext28:	
  8512 ;; *************** function _LCD_Set_Cursor *****************
  8513 ;; Defined at:
  8514 ;;		line 85 in file "LCD.c"
  8515 ;; Parameters:    Size  Location     Type
  8516 ;;  ROW             1    wreg     unsigned char 
  8517 ;;  COL             1    7[COMMON] unsigned char 
  8518 ;; Auto vars:     Size  Location     Type
  8519 ;;  ROW             1   10[COMMON] unsigned char 
  8520 ;; Return value:  Size  Location     Type
  8521 ;;                  1    wreg      void 
  8522 ;; Registers used:
  8523 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8524 ;; Tracked objects:
  8525 ;;		On entry : 0/0
  8526 ;;		On exit  : 0/0
  8527 ;;		Unchanged: 0/0
  8528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8529 ;;      Params:         1       0       0       0       0
  8530 ;;      Locals:         1       0       0       0       0
  8531 ;;      Temps:          2       0       0       0       0
  8532 ;;      Totals:         4       0       0       0       0
  8533 ;;Total ram usage:        4 bytes
  8534 ;; Hardware stack levels used: 1
  8535 ;; Hardware stack levels required when called: 6
  8536 ;; This function calls:
  8537 ;;		_LCD_CMD
  8538 ;; This function is called by:
  8539 ;;		_DisplayTemp
  8540 ;; This function uses a non-reentrant model
  8541 ;;
  8542                           
  8543  15C4                     _LCD_Set_Cursor:	
  8544                           ;psect for function _LCD_Set_Cursor
  8545                           
  8546                           
  8547                           ;incstack = 0
  8548                           ; Regs used in _LCD_Set_Cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8549                           ;LCD_Set_Cursor@ROW stored from wreg
  8550  15C4  00FA               	movwf	LCD_Set_Cursor@ROW
  8551  15C5                     l2551:
  8552                           
  8553                           ;LCD.c: 85: void LCD_Set_Cursor(unsigned char ROW, unsigned char COL);LCD.c: 86: {;LCD.c
      +                          : 87:   switch(ROW)
  8554  15C5  2DE6               	goto	l2561
  8555  15C6                     l2553:
  8556                           
  8557                           ;LCD.c: 90:       LCD_CMD(0xC0 + COL-1);
  8558  15C6  0877               	movf	LCD_Set_Cursor@COL,w
  8559  15C7  3EBF               	addlw	191
  8560  15C8  160A  118A  2497  160A  118A  	fcall	_LCD_CMD
  8561                           
  8562                           ;LCD.c: 91:       break;
  8563  15CD  2DF9               	goto	l163
  8564  15CE                     l2555:
  8565                           
  8566                           ;LCD.c: 93:       LCD_CMD(0x94 + COL-1);
  8567  15CE  0877               	movf	LCD_Set_Cursor@COL,w
  8568  15CF  3E93               	addlw	147
  8569  15D0  160A  118A  2497  160A  118A  	fcall	_LCD_CMD
  8570                           
  8571                           ;LCD.c: 94:       break;
  8572  15D5  2DF9               	goto	l163
  8573  15D6                     l2557:
  8574                           
  8575                           ;LCD.c: 96:       LCD_CMD(0xD4 + COL-1);
  8576  15D6  0877               	movf	LCD_Set_Cursor@COL,w
  8577  15D7  3ED3               	addlw	211
  8578  15D8  160A  118A  2497  160A  118A  	fcall	_LCD_CMD
  8579                           
  8580                           ;LCD.c: 97:       break;
  8581  15DD  2DF9               	goto	l163
  8582  15DE                     l2559:
  8583                           
  8584                           ;LCD.c: 100:       LCD_CMD(0x80 + COL-1);
  8585  15DE  0877               	movf	LCD_Set_Cursor@COL,w
  8586  15DF  3E7F               	addlw	127
  8587  15E0  160A  118A  2497  160A  118A  	fcall	_LCD_CMD
  8588                           
  8589                           ;LCD.c: 101:   }
  8590  15E5  2DF9               	goto	l163
  8591  15E6                     l2561:
  8592  15E6  087A               	movf	LCD_Set_Cursor@ROW,w
  8593  15E7  00F8               	movwf	??_LCD_Set_Cursor
  8594  15E8  01F9               	clrf	??_LCD_Set_Cursor+1
  8595                           
  8596                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8597                           ; Switch size 1, requested type "simple"
  8598                           ; Number of cases is 1, Range of values is 0 to 0
  8599                           ; switch strategies available:
  8600                           ; Name         Instructions Cycles
  8601                           ; simple_byte            4     3 (average)
  8602                           ; direct_byte           11     8 (fixed)
  8603                           ; jumptable            260     6 (fixed)
  8604                           ;	Chosen strategy is simple_byte
  8605  15E9  0879               	movf	??_LCD_Set_Cursor+1,w
  8606  15EA  3A00               	xorlw	0	; case 0
  8607  15EB  1903               	skipnz
  8608  15EC  2DEE               	goto	l3683
  8609  15ED  2DDE               	goto	l2559
  8610  15EE                     l3683:
  8611                           
  8612                           ; Switch size 1, requested type "simple"
  8613                           ; Number of cases is 3, Range of values is 2 to 4
  8614                           ; switch strategies available:
  8615                           ; Name         Instructions Cycles
  8616                           ; simple_byte           10     6 (average)
  8617                           ; direct_byte           20    11 (fixed)
  8618                           ; jumptable            263     9 (fixed)
  8619                           ;	Chosen strategy is simple_byte
  8620  15EE  0878               	movf	??_LCD_Set_Cursor,w
  8621  15EF  3A02               	xorlw	2	; case 2
  8622  15F0  1903               	skipnz
  8623  15F1  2DC6               	goto	l2553
  8624  15F2  3A01               	xorlw	1	; case 3
  8625  15F3  1903               	skipnz
  8626  15F4  2DCE               	goto	l2555
  8627  15F5  3A07               	xorlw	7	; case 4
  8628  15F6  1903               	skipnz
  8629  15F7  2DD6               	goto	l2557
  8630  15F8  2DDE               	goto	l2559
  8631  15F9                     l163:
  8632  15F9  0008               	return
  8633  15FA                     __end_of_LCD_Set_Cursor:
  8634                           
  8635                           	psect	text29
  8636  1497                     __ptext29:	
  8637 ;; *************** function _LCD_CMD *****************
  8638 ;; Defined at:
  8639 ;;		line 65 in file "LCD.c"
  8640 ;; Parameters:    Size  Location     Type
  8641 ;;  CMD             1    wreg     unsigned char 
  8642 ;; Auto vars:     Size  Location     Type
  8643 ;;  CMD             1    6[COMMON] unsigned char 
  8644 ;; Return value:  Size  Location     Type
  8645 ;;                  1    wreg      void 
  8646 ;; Registers used:
  8647 ;;		wreg, status,2, status,0, pclath, cstack
  8648 ;; Tracked objects:
  8649 ;;		On entry : 0/0
  8650 ;;		On exit  : 0/0
  8651 ;;		Unchanged: 0/0
  8652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8653 ;;      Params:         0       0       0       0       0
  8654 ;;      Locals:         1       0       0       0       0
  8655 ;;      Temps:          1       0       0       0       0
  8656 ;;      Totals:         2       0       0       0       0
  8657 ;;Total ram usage:        2 bytes
  8658 ;; Hardware stack levels used: 1
  8659 ;; Hardware stack levels required when called: 5
  8660 ;; This function calls:
  8661 ;;		_LCD_Write_4Bit
  8662 ;; This function is called by:
  8663 ;;		_LCD_String_xy
  8664 ;;		_LCD_Init
  8665 ;;		_LCD_Set_Cursor
  8666 ;;		_LCD_Clear
  8667 ;;		_LCD_SL
  8668 ;;		_LCD_SR
  8669 ;; This function uses a non-reentrant model
  8670 ;;
  8671                           
  8672  1497                     _LCD_CMD:	
  8673                           ;psect for function _LCD_CMD
  8674                           
  8675                           
  8676                           ;incstack = 0
  8677                           ; Regs used in _LCD_CMD: [wreg+status,2+status,0+pclath+cstack]
  8678                           ;LCD_CMD@CMD stored from wreg
  8679  1497  00F6               	movwf	LCD_CMD@CMD
  8680  1498                     l2419:
  8681                           
  8682                           ;LCD.c: 65: void LCD_CMD(unsigned char CMD);LCD.c: 66: {;LCD.c: 67:   RS = 0;
  8683  1498  1283               	bcf	3,5	;RP0=0, select bank0
  8684  1499  1303               	bcf	3,6	;RP1=0, select bank0
  8685  149A  01E6               	clrf	_RS
  8686  149B                     l2421:
  8687                           
  8688                           ;LCD.c: 68:   LCD_Write_4Bit(CMD & 0xF0);
  8689  149B  0876               	movf	LCD_CMD@CMD,w
  8690  149C  39F0               	andlw	240
  8691  149D  160A  118A  247D  160A  118A  	fcall	_LCD_Write_4Bit
  8692  14A2                     l2423:
  8693                           
  8694                           ;LCD.c: 69:   LCD_Write_4Bit((CMD << 4) & 0xF0);
  8695  14A2  0876               	movf	LCD_CMD@CMD,w
  8696  14A3  00F5               	movwf	??_LCD_CMD
  8697  14A4  3003               	movlw	3
  8698  14A5                     u2055:
  8699  14A5  1003               	clrc
  8700  14A6  0DF5               	rlf	??_LCD_CMD,f
  8701  14A7  3EFF               	addlw	-1
  8702  14A8  1D03               	skipz
  8703  14A9  2CA5               	goto	u2055
  8704  14AA  1003               	clrc
  8705  14AB  0D75               	rlf	??_LCD_CMD,w
  8706  14AC  39F0               	andlw	240
  8707  14AD  160A  118A  247D  160A  118A  	fcall	_LCD_Write_4Bit
  8708  14B2                     l145:
  8709  14B2  0008               	return
  8710  14B3                     __end_of_LCD_CMD:
  8711                           
  8712                           	psect	text30
  8713  147D                     __ptext30:	
  8714 ;; *************** function _LCD_Write_4Bit *****************
  8715 ;; Defined at:
  8716 ;;		line 56 in file "LCD.c"
  8717 ;; Parameters:    Size  Location     Type
  8718 ;;  Nibble          1    wreg     unsigned char 
  8719 ;; Auto vars:     Size  Location     Type
  8720 ;;  Nibble          1    4[COMMON] unsigned char 
  8721 ;; Return value:  Size  Location     Type
  8722 ;;                  1    wreg      void 
  8723 ;; Registers used:
  8724 ;;		wreg, status,2, status,0, pclath, cstack
  8725 ;; Tracked objects:
  8726 ;;		On entry : 0/0
  8727 ;;		On exit  : 0/0
  8728 ;;		Unchanged: 0/0
  8729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8730 ;;      Params:         0       0       0       0       0
  8731 ;;      Locals:         1       0       0       0       0
  8732 ;;      Temps:          1       0       0       0       0
  8733 ;;      Totals:         2       0       0       0       0
  8734 ;;Total ram usage:        2 bytes
  8735 ;; Hardware stack levels used: 1
  8736 ;; Hardware stack levels required when called: 4
  8737 ;; This function calls:
  8738 ;;		_IO_Expander_Write
  8739 ;; This function is called by:
  8740 ;;		_LCD_CMD
  8741 ;;		_LCD_Write_Char
  8742 ;; This function uses a non-reentrant model
  8743 ;;
  8744                           
  8745  147D                     _LCD_Write_4Bit:	
  8746                           ;psect for function _LCD_Write_4Bit
  8747                           
  8748                           
  8749                           ;incstack = 0
  8750                           ; Regs used in _LCD_Write_4Bit: [wreg+status,2+status,0+pclath+cstack]
  8751                           ;LCD_Write_4Bit@Nibble stored from wreg
  8752  147D  00F4               	movwf	LCD_Write_4Bit@Nibble
  8753  147E                     l2409:
  8754                           
  8755                           ;LCD.c: 56: void LCD_Write_4Bit(unsigned char Nibble);LCD.c: 57: {;LCD.c: 59:   Nibble |
      +                          = RS;
  8756  147E  1283               	bcf	3,5	;RP0=0, select bank0
  8757  147F  1303               	bcf	3,6	;RP1=0, select bank0
  8758  1480  0866               	movf	_RS,w
  8759  1481  00F3               	movwf	??_LCD_Write_4Bit
  8760  1482  0873               	movf	??_LCD_Write_4Bit,w
  8761  1483  04F4               	iorwf	LCD_Write_4Bit@Nibble,f
  8762  1484                     l2411:
  8763                           
  8764                           ;LCD.c: 60:   IO_Expander_Write(Nibble | 0x04);
  8765  1484  0874               	movf	LCD_Write_4Bit@Nibble,w
  8766  1485  3804               	iorlw	4
  8767  1486  160A  118A  2435  160A  118A  	fcall	_IO_Expander_Write
  8768  148B                     l2413:
  8769                           
  8770                           ;LCD.c: 61:   IO_Expander_Write(Nibble & 0xFB);
  8771  148B  0874               	movf	LCD_Write_4Bit@Nibble,w
  8772  148C  39FB               	andlw	251
  8773  148D  160A  118A  2435  160A  118A  	fcall	_IO_Expander_Write
  8774                           
  8775                           ;LCD.c: 62:   _delay((unsigned long)((50)*(8000000/4000000.0)));
  8776  1492  3021               	movlw	33
  8777  1493  00F3               	movwf	??_LCD_Write_4Bit
  8778  1494                     u4127:
  8779  1494  0BF3               	decfsz	??_LCD_Write_4Bit,f
  8780  1495  2C94               	goto	u4127
  8781  1496                     l142:
  8782  1496  0008               	return
  8783  1497                     __end_of_LCD_Write_4Bit:
  8784                           
  8785                           	psect	text31
  8786  1435                     __ptext31:	
  8787 ;; *************** function _IO_Expander_Write *****************
  8788 ;; Defined at:
  8789 ;;		line 49 in file "LCD.c"
  8790 ;; Parameters:    Size  Location     Type
  8791 ;;  Data            1    wreg     unsigned char 
  8792 ;; Auto vars:     Size  Location     Type
  8793 ;;  Data            1    2[COMMON] unsigned char 
  8794 ;; Return value:  Size  Location     Type
  8795 ;;                  1    wreg      void 
  8796 ;; Registers used:
  8797 ;;		wreg, status,2, status,0, pclath, cstack
  8798 ;; Tracked objects:
  8799 ;;		On entry : 0/0
  8800 ;;		On exit  : 0/0
  8801 ;;		Unchanged: 0/0
  8802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8803 ;;      Params:         0       0       0       0       0
  8804 ;;      Locals:         1       0       0       0       0
  8805 ;;      Temps:          0       0       0       0       0
  8806 ;;      Totals:         1       0       0       0       0
  8807 ;;Total ram usage:        1 bytes
  8808 ;; Hardware stack levels used: 1
  8809 ;; Hardware stack levels required when called: 3
  8810 ;; This function calls:
  8811 ;;		_I2C_Start
  8812 ;;		_I2C_Stop
  8813 ;;		_I2C_Write
  8814 ;; This function is called by:
  8815 ;;		_LCD_Init
  8816 ;;		_LCD_Write_4Bit
  8817 ;;		_Backlight
  8818 ;;		_noBacklight
  8819 ;; This function uses a non-reentrant model
  8820 ;;
  8821                           
  8822  1435                     _IO_Expander_Write:	
  8823                           ;psect for function _IO_Expander_Write
  8824                           
  8825                           
  8826                           ;incstack = 0
  8827                           ; Regs used in _IO_Expander_Write: [wreg+status,2+status,0+pclath+cstack]
  8828                           ;IO_Expander_Write@Data stored from wreg
  8829  1435  00F2               	movwf	IO_Expander_Write@Data
  8830  1436                     l2407:
  8831                           
  8832                           ;LCD.c: 49: void IO_Expander_Write(unsigned char Data);LCD.c: 50: {;LCD.c: 51:   I2C_Sta
      +                          rt(0x4E);
  8833  1436  304E               	movlw	78
  8834  1437  160A  118A  244B  160A  118A  	fcall	_I2C_Start
  8835                           
  8836                           ;LCD.c: 52:   I2C_Write(Data | BackLight_State);
  8837  143C  0872               	movf	IO_Expander_Write@Data,w
  8838  143D  1283               	bcf	3,5	;RP0=0, select bank0
  8839  143E  1303               	bcf	3,6	;RP1=0, select bank0
  8840  143F  0469               	iorwf	_BackLight_State,w
  8841  1440  160A  118A  240D  160A  118A  	fcall	_I2C_Write
  8842                           
  8843                           ;LCD.c: 53:   I2C_Stop();
  8844  1445  160A  118A  23C1  160A  118A  	fcall	_I2C_Stop
  8845  144A                     l139:
  8846  144A  0008               	return
  8847  144B                     __end_of_IO_Expander_Write:
  8848                           
  8849                           	psect	text32
  8850  13C1                     __ptext32:	
  8851 ;; *************** function _I2C_Stop *****************
  8852 ;; Defined at:
  8853 ;;		line 91 in file "I2C_Master.c"
  8854 ;; Parameters:    Size  Location     Type
  8855 ;;		None
  8856 ;; Auto vars:     Size  Location     Type
  8857 ;;		None
  8858 ;; Return value:  Size  Location     Type
  8859 ;;                  1    wreg      unsigned char 
  8860 ;; Registers used:
  8861 ;;		wreg
  8862 ;; Tracked objects:
  8863 ;;		On entry : 0/0
  8864 ;;		On exit  : 0/0
  8865 ;;		Unchanged: 0/0
  8866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8867 ;;      Params:         0       0       0       0       0
  8868 ;;      Locals:         0       0       0       0       0
  8869 ;;      Temps:          0       0       0       0       0
  8870 ;;      Totals:         0       0       0       0       0
  8871 ;;Total ram usage:        0 bytes
  8872 ;; Hardware stack levels used: 1
  8873 ;; This function calls:
  8874 ;;		Nothing
  8875 ;; This function is called by:
  8876 ;;		_IO_Expander_Write
  8877 ;;		_main
  8878 ;;		_RTC_Read_Calendar
  8879 ;;		_RTC_Clock_Write
  8880 ;;		_RTC_Calendar_Write
  8881 ;;		_I2C_Start_Wait
  8882 ;; This function uses a non-reentrant model
  8883 ;;
  8884                           
  8885  13C1                     _I2C_Stop:	
  8886                           ;psect for function _I2C_Stop
  8887                           
  8888  13C1                     l2397:	
  8889                           ;incstack = 0
  8890                           ; Regs used in _I2C_Stop: [wreg]
  8891                           
  8892                           
  8893                           ;I2C_Master.c: 93:     PEN = 1;
  8894  13C1  1683               	bsf	3,5	;RP0=1, select bank1
  8895  13C2  1303               	bcf	3,6	;RP1=0, select bank1
  8896  13C3  1511               	bsf	17,2	;volatile
  8897  13C4                     l89:	
  8898                           ;I2C_Master.c: 94:     while(PEN);
  8899                           
  8900  13C4  1911               	btfsc	17,2	;volatile
  8901  13C5  2BC7               	goto	u2001
  8902  13C6  2BC8               	goto	u2000
  8903  13C7                     u2001:
  8904  13C7  2BC4               	goto	l89
  8905  13C8                     u2000:
  8906  13C8                     l91:
  8907                           
  8908                           ;I2C_Master.c: 95:     if(!SSPSTATbits.P)
  8909  13C8  0814               	movf	20,w	;volatile
  8910  13C9                     l93:
  8911  13C9  0008               	return
  8912  13CA                     __end_of_I2C_Stop:
  8913                           
  8914                           	psect	text33
  8915  144B                     __ptext33:	
  8916 ;; *************** function _I2C_Start *****************
  8917 ;; Defined at:
  8918 ;;		line 66 in file "I2C_Master.c"
  8919 ;; Parameters:    Size  Location     Type
  8920 ;;  slave_write_    1    wreg     unsigned char 
  8921 ;; Auto vars:     Size  Location     Type
  8922 ;;  slave_write_    1    1[COMMON] unsigned char 
  8923 ;; Return value:  Size  Location     Type
  8924 ;;                  1    wreg      unsigned char 
  8925 ;; Registers used:
  8926 ;;		wreg, status,2, status,0, pclath, cstack
  8927 ;; Tracked objects:
  8928 ;;		On entry : 0/0
  8929 ;;		On exit  : 0/0
  8930 ;;		Unchanged: 0/0
  8931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8932 ;;      Params:         0       0       0       0       0
  8933 ;;      Locals:         1       0       0       0       0
  8934 ;;      Temps:          0       0       0       0       0
  8935 ;;      Totals:         1       0       0       0       0
  8936 ;;Total ram usage:        1 bytes
  8937 ;; Hardware stack levels used: 1
  8938 ;; Hardware stack levels required when called: 2
  8939 ;; This function calls:
  8940 ;;		_I2C_Write
  8941 ;; This function is called by:
  8942 ;;		_IO_Expander_Write
  8943 ;;		_RTC_Read_Clock
  8944 ;;		_RTC_Read_Calendar
  8945 ;;		_RTC_Clock_Write
  8946 ;;		_RTC_Calendar_Write
  8947 ;; This function uses a non-reentrant model
  8948 ;;
  8949                           
  8950  144B                     _I2C_Start:	
  8951                           ;psect for function _I2C_Start
  8952                           
  8953                           
  8954                           ;incstack = 0
  8955                           ; Regs used in _I2C_Start: [wreg+status,2+status,0+pclath+cstack]
  8956                           ;I2C_Start@slave_write_address stored from wreg
  8957  144B  00F1               	movwf	I2C_Start@slave_write_address
  8958  144C                     l2399:
  8959                           
  8960                           ;I2C_Master.c: 66: char I2C_Start(char slave_write_address);I2C_Master.c: 67: {;I2C_Mast
      +                          er.c: 68:     SSPCON2bits.SEN=1;
  8961  144C  1683               	bsf	3,5	;RP0=1, select bank1
  8962  144D  1303               	bcf	3,6	;RP1=0, select bank1
  8963  144E  1411               	bsf	17,0	;volatile
  8964  144F                     l73:	
  8965                           ;I2C_Master.c: 69:     while(SSPCON2bits.SEN);
  8966                           
  8967  144F  1811               	btfsc	17,0	;volatile
  8968  1450  2C52               	goto	u2011
  8969  1451  2C53               	goto	u2010
  8970  1452                     u2011:
  8971  1452  2C4F               	goto	l73
  8972  1453                     u2010:
  8973  1453                     l75:
  8974                           
  8975                           ;I2C_Master.c: 70:  SSPIF=0;
  8976  1453  1283               	bcf	3,5	;RP0=0, select bank0
  8977  1454  1303               	bcf	3,6	;RP1=0, select bank0
  8978  1455  118C               	bcf	12,3	;volatile
  8979                           
  8980                           ;I2C_Master.c: 71:     if(!SSPSTATbits.S)
  8981  1456  1683               	bsf	3,5	;RP0=1, select bank1
  8982  1457  1303               	bcf	3,6	;RP1=0, select bank1
  8983  1458  1994               	btfsc	20,3	;volatile
  8984  1459  2C5B               	goto	u2021
  8985  145A  2C5C               	goto	u2020
  8986  145B                     u2021:
  8987  145B  2C5D               	goto	l2403
  8988  145C                     u2020:
  8989  145C  2C63               	goto	l77
  8990  145D                     l2403:
  8991                           
  8992                           ;I2C_Master.c: 73:     return (I2C_Write(slave_write_address));;	Return value of _I2C_St
      +                          art is never used
  8993  145D  0871               	movf	I2C_Start@slave_write_address,w
  8994  145E  160A  118A  240D  160A  118A  	fcall	_I2C_Write
  8995  1463                     l77:
  8996  1463  0008               	return
  8997  1464                     __end_of_I2C_Start:
  8998                           
  8999                           	psect	text34
  9000  140D                     __ptext34:	
  9001 ;; *************** function _I2C_Write *****************
  9002 ;; Defined at:
  9003 ;;		line 100 in file "I2C_Master.c"
  9004 ;; Parameters:    Size  Location     Type
  9005 ;;  data            1    wreg     unsigned char 
  9006 ;; Auto vars:     Size  Location     Type
  9007 ;;  data            1    0[COMMON] unsigned char 
  9008 ;; Return value:  Size  Location     Type
  9009 ;;                  1    wreg      unsigned char 
  9010 ;; Registers used:
  9011 ;;		wreg, status,2, status,0, pclath, cstack
  9012 ;; Tracked objects:
  9013 ;;		On entry : 0/0
  9014 ;;		On exit  : 0/0
  9015 ;;		Unchanged: 0/0
  9016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9017 ;;      Params:         0       0       0       0       0
  9018 ;;      Locals:         1       0       0       0       0
  9019 ;;      Temps:          0       0       0       0       0
  9020 ;;      Totals:         1       0       0       0       0
  9021 ;;Total ram usage:        1 bytes
  9022 ;; Hardware stack levels used: 1
  9023 ;; Hardware stack levels required when called: 1
  9024 ;; This function calls:
  9025 ;;		_I2C_Ready
  9026 ;; This function is called by:
  9027 ;;		_I2C_Start
  9028 ;;		_I2C_Repeated_Start
  9029 ;;		_IO_Expander_Write
  9030 ;;		_RTC_Read_Clock
  9031 ;;		_RTC_Read_Calendar
  9032 ;;		_RTC_Clock_Write
  9033 ;;		_RTC_Calendar_Write
  9034 ;;		_I2C_Start_Wait
  9035 ;; This function uses a non-reentrant model
  9036 ;;
  9037                           
  9038  140D                     _I2C_Write:	
  9039                           ;psect for function _I2C_Write
  9040                           
  9041                           
  9042                           ;incstack = 0
  9043                           ; Regs used in _I2C_Write: [wreg+status,2+status,0+pclath+cstack]
  9044                           ;I2C_Write@data stored from wreg
  9045  140D  00F0               	movwf	I2C_Write@data
  9046  140E                     l2381:
  9047                           
  9048                           ;I2C_Master.c: 100: char I2C_Write(unsigned char data);I2C_Master.c: 101: {;I2C_Master.c
      +                          : 102:       SSPBUF = data;
  9049  140E  0870               	movf	I2C_Write@data,w
  9050  140F  1283               	bcf	3,5	;RP0=0, select bank0
  9051  1410  1303               	bcf	3,6	;RP1=0, select bank0
  9052  1411  0093               	movwf	19	;volatile
  9053  1412                     l2383:
  9054                           
  9055                           ;I2C_Master.c: 103:       I2C_Ready();
  9056  1412  160A  118A  23B1  160A  118A  	fcall	_I2C_Ready
  9057  1417                     l2385:
  9058                           
  9059                           ;I2C_Master.c: 104:       if (ACKSTAT)
  9060  1417  1683               	bsf	3,5	;RP0=1, select bank1
  9061  1418  1303               	bcf	3,6	;RP1=0, select bank1
  9062  1419  1F11               	btfss	17,6	;volatile
  9063  141A  2C1C               	goto	u1991
  9064  141B  2C1D               	goto	u1990
  9065  141C                     u1991:
  9066  141C  2C1F               	goto	l2393
  9067  141D                     u1990:
  9068  141D                     l2387:
  9069                           
  9070                           ;I2C_Master.c: 105:         return 1;
  9071  141D  3001               	movlw	1
  9072  141E  2C20               	goto	l97
  9073  141F                     l2393:
  9074                           
  9075                           ;I2C_Master.c: 107:         return 2;
  9076  141F  3002               	movlw	2
  9077  1420                     l97:
  9078  1420  0008               	return
  9079  1421                     __end_of_I2C_Write:
  9080                           
  9081                           	psect	text35
  9082  13B1                     __ptext35:	
  9083 ;; *************** function _I2C_Ready *****************
  9084 ;; Defined at:
  9085 ;;		line 41 in file "I2C_Master.c"
  9086 ;; Parameters:    Size  Location     Type
  9087 ;;		None
  9088 ;; Auto vars:     Size  Location     Type
  9089 ;;		None
  9090 ;; Return value:  Size  Location     Type
  9091 ;;                  1    wreg      void 
  9092 ;; Registers used:
  9093 ;;		None
  9094 ;; Tracked objects:
  9095 ;;		On entry : 0/0
  9096 ;;		On exit  : 0/0
  9097 ;;		Unchanged: 0/0
  9098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9099 ;;      Params:         0       0       0       0       0
  9100 ;;      Locals:         0       0       0       0       0
  9101 ;;      Temps:          0       0       0       0       0
  9102 ;;      Totals:         0       0       0       0       0
  9103 ;;Total ram usage:        0 bytes
  9104 ;; Hardware stack levels used: 1
  9105 ;; This function calls:
  9106 ;;		Nothing
  9107 ;; This function is called by:
  9108 ;;		_I2C_Read
  9109 ;;		_I2C_Write
  9110 ;; This function uses a non-reentrant model
  9111 ;;
  9112                           
  9113  13B1                     _I2C_Ready:	
  9114                           ;psect for function _I2C_Ready
  9115                           
  9116  13B1                     l2379:	
  9117                           ;incstack = 0
  9118                           ; Regs used in _I2C_Ready: []
  9119                           
  9120  13B1                     l56:	
  9121                           ;I2C_Master.c: 43:     while(!SSPIF);
  9122                           
  9123  13B1  1283               	bcf	3,5	;RP0=0, select bank0
  9124  13B2  1303               	bcf	3,6	;RP1=0, select bank0
  9125  13B3  1D8C               	btfss	12,3	;volatile
  9126  13B4  2BB6               	goto	u1981
  9127  13B5  2BB7               	goto	u1980
  9128  13B6                     u1981:
  9129  13B6  2BB1               	goto	l56
  9130  13B7                     u1980:
  9131  13B7                     l58:
  9132                           
  9133                           ;I2C_Master.c: 44:     SSPIF=0;
  9134  13B7  118C               	bcf	12,3	;volatile
  9135  13B8                     l59:
  9136  13B8  0008               	return
  9137  13B9                     __end_of_I2C_Ready:
  9138  007E                     btemp	set	126	;btemp
  9139  007E                     wtemp0	set	126
  9140                           
  9141                           	psect	idloc
  9142                           
  9143                           ;Config register IDLOC0 @ 0x2000
  9144                           ;	unspecified, using default values
  9145  2000                     	org	8192
  9146  2000  3FFF               	dw	16383
  9147                           
  9148                           ;Config register IDLOC1 @ 0x2001
  9149                           ;	unspecified, using default values
  9150  2001                     	org	8193
  9151  2001  3FFF               	dw	16383
  9152                           
  9153                           ;Config register IDLOC2 @ 0x2002
  9154                           ;	unspecified, using default values
  9155  2002                     	org	8194
  9156  2002  3FFF               	dw	16383
  9157                           
  9158                           ;Config register IDLOC3 @ 0x2003
  9159                           ;	unspecified, using default values
  9160  2003                     	org	8195
  9161  2003  3FFF               	dw	16383
  9162                           
  9163                           	psect	config
  9164                           
  9165                           ;Config register CONFIG1 @ 0x2007
  9166                           ;	Oscillator Selection bits
  9167                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  9168                           ;	Watchdog Timer Enable bit
  9169                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  9170                           ;	Power-up Timer Enable bit
  9171                           ;	PWRTE = OFF, PWRT disabled
  9172                           ;	RE3/MCLR pin function select bit
  9173                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  9174                           ;	Code Protection bit
  9175                           ;	CP = OFF, Program memory code protection is disabled
  9176                           ;	Data Code Protection bit
  9177                           ;	CPD = OFF, Data memory code protection is disabled
  9178                           ;	Brown Out Reset Selection bits
  9179                           ;	BOREN = ON, BOR enabled
  9180                           ;	Internal External Switchover bit
  9181                           ;	IESO = ON, Internal/External Switchover mode is enabled
  9182                           ;	Fail-Safe Clock Monitor Enabled bit
  9183                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  9184                           ;	Low Voltage Programming Enable bit
  9185                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  9186                           ;	In-Circuit Debugger Mode bit
  9187                           ;	DEBUG = 0x1, unprogrammed default
  9188  2007                     	org	8199
  9189  2007  2FD2               	dw	12242
  9190                           
  9191                           ;Config register CONFIG2 @ 0x2008
  9192                           ;	Brown-out Reset Selection bit
  9193                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  9194                           ;	Flash Program Memory Self Write Enable bits
  9195                           ;	WRT = OFF, Write protection off
  9196  2008                     	org	8200
  9197  2008  3FFF               	dw	16383

Data Sizes:
    Strings     130
    Constant    18
    Data        10
    BSS         85
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     62      74
    BANK1            80     36      79
    BANK3            96      0      40
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_25(CODE[7]), ?_sprintf(BANK0[2]), STR_4(CODE[12]), result(BANK0[2]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 11
		 -> STR_24(CODE[11]), STR_15(CODE[4]), STR_14(CODE[4]), STR_13(CODE[8]), 
		 -> STR_12(CODE[8]), STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[8]), 
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_3(CODE[3]), STR_2(CODE[11]), 
		 -> STR_1(CODE[11]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 16
		 -> main@buffer3_737(BANK1[16]), year(BANK3[10]), month(BANK3[10]), date(BANK3[10]), 
		 -> hours(BANK3[10]), mins(BANK1[10]), secs(BANK1[10]), main@buffer3(BANK1[16]), 
		 -> DisplayTemp@buffer2(BANK0[16]), DisplayTemp@buffer1(BANK0[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    LCD_Write_String@Str	PTR const unsigned char  size(2) Largest target is 16
		 -> main@buffer3_737(BANK1[16]), STR_23(CODE[4]), STR_22(CODE[4]), STR_21(CODE[4]), 
		 -> STR_20(CODE[4]), STR_19(CODE[4]), STR_18(CODE[4]), STR_17(CODE[4]), 
		 -> STR_16(CODE[4]), year(BANK3[10]), month(BANK3[10]), date(BANK3[10]), 
		 -> hours(BANK3[10]), mins(BANK1[10]), secs(BANK1[10]), STR_6(CODE[3]), 
		 -> STR_5(CODE[3]), main@buffer3(BANK1[16]), DisplayTemp@buffer2(BANK0[16]), DisplayTemp@buffer1(BANK0[16]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 16
		 -> main@buffer3_737(BANK1[16]), date(BANK3[10]), hours(BANK3[10]), STR_6(CODE[3]), 
		 -> STR_5(CODE[3]), main@buffer3(BANK1[16]), 


Critical Paths under _main in COMMON

    _main->_LCD_Write_String
    _Update_Farenheit->___xxtofl
    _Update_Celsius->___xxtofl
    ___fltol->___xxtofl
    ___flmul->___xxtofl
    ___fladd->___xxtofl
    _RTC_Read_Clock->_I2C_Read
    _RTC_Read_Calendar->_I2C_Read
    _I2C_Repeated_Start->_I2C_Write
    _RTC_Clock_Write->_I2C_Start
    _RTC_Calendar_Write->_I2C_Start
    _LCD_String_xy->_LCD_Write_String
    _LCD_Init->_LCD_CMD
    _LCD_Clear->_LCD_CMD
    _DisplayTemp->_LCD_Write_String
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Char->_LCD_Write_4Bit
    _LCD_Set_Cursor->_LCD_CMD
    _LCD_CMD->_LCD_Write_4Bit
    _LCD_Write_4Bit->_IO_Expander_Write
    _IO_Expander_Write->_I2C_Start
    _I2C_Start->_I2C_Write

Critical Paths under _main in BANK0

    _main->_Update_Celsius
    _main->_Update_Farenheit
    _Update_Farenheit->___fltol
    _Update_Celsius->___fltol
    ___fltol->___fladd
    ___fladd->___flmul
    _DisplayTemp->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                39    39      0   28718
                                             59 BANK0      3     3      0
                                              0 BANK1     36    36      0
                        _DisplayTemp
                           _I2C_Init
                           _I2C_Stop
                          _LCD_Clear
                           _LCD_Init
                      _LCD_String_xy
                   _LCD_Write_String
                 _RTC_Calendar_Write
                    _RTC_Clock_Write
                  _RTC_Read_Calendar
                     _RTC_Read_Clock
                     _Update_Celsius
                   _Update_Farenheit
                            ___lwdiv
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _Update_Farenheit                                     2     2      0    5838
                                             57 BANK0      2     2      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _Update_Celsius                                       2     2      0    5838
                                             57 BANK0      2     2      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     381
                                             46 BANK0     11     7      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    2569
                                              0 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             20    12      8    2414
                                             26 BANK0     20    12      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _RTC_Read_Clock                                       3     3      0     177
                                              3 COMMON     3     3      0
                           _I2C_Read
                 _I2C_Repeated_Start
                          _I2C_Start
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _RTC_Read_Calendar                                    3     3      0     177
                                              3 COMMON     3     3      0
                           _I2C_Read
                 _I2C_Repeated_Start
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Repeated_Start                                   1     1      0      44
                                              1 COMMON     1     1      0
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Read                                             3     3      0      45
                                              0 COMMON     3     3      0
                            _I2C_Ack
                           _I2C_Nack
                          _I2C_Ready
 ---------------------------------------------------------------------------------
 (3) _I2C_Nack                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Ack                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RTC_Clock_Write                                      5     2      3     405
                                              2 COMMON     5     2      3
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _RTC_Calendar_Write                                   4     1      3     382
                                              2 COMMON     4     1      3
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _LCD_String_xy                                        6     3      3    2935
                                              0 BANK0      6     3      3
                            _LCD_CMD
                   _LCD_Write_String
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     265
                                              7 COMMON     2     2      0
                  _IO_Expander_Write
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            1     1      0     177
                                              7 COMMON     1     1      0
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DisplayTemp                                         35    35      0    5986
                                             21 BANK0     35    35      0
                     _LCD_Set_Cursor
                   _LCD_Write_String
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             25    20      5    3944
                                              0 BANK0     21    16      5
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     618
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_String                                     7     5      2    1559
                                              7 COMMON     7     5      2
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Char                                       2     2      0     177
                                              5 COMMON     2     2      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (2) _LCD_Set_Cursor                                       4     3      1     363
                                              7 COMMON     4     3      1
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _LCD_CMD                                              2     2      0     177
                                              5 COMMON     2     2      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_4Bit                                       2     2      0     133
                                              3 COMMON     2     2      0
                  _IO_Expander_Write
 ---------------------------------------------------------------------------------
 (4) _IO_Expander_Write                                    1     1      0      88
                                              2 COMMON     1     1      0
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Start                                            1     1      0      44
                                              1 COMMON     1     1      0
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Write                                            1     1      0      22
                                              0 COMMON     1     1      0
                          _I2C_Ready
 ---------------------------------------------------------------------------------
 (3) _I2C_Ready                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DisplayTemp
     _LCD_Set_Cursor
       _LCD_CMD
         _LCD_Write_4Bit
           _IO_Expander_Write
             _I2C_Start
               _I2C_Write
                 _I2C_Ready
             _I2C_Stop
             _I2C_Write
     _LCD_Write_String
       _LCD_Write_Char
         _LCD_Write_4Bit
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _I2C_Init
   _I2C_Stop
   _LCD_Clear
     _LCD_CMD
   _LCD_Init
     _IO_Expander_Write
     _LCD_CMD
   _LCD_String_xy
     _LCD_CMD
     _LCD_Write_String
   _LCD_Write_String
   _RTC_Calendar_Write
     _I2C_Start
     _I2C_Stop
     _I2C_Write
   _RTC_Clock_Write
     _I2C_Start
     _I2C_Stop
     _I2C_Write
   _RTC_Read_Calendar
     _I2C_Read
       _I2C_Ack
       _I2C_Nack
       _I2C_Ready
     _I2C_Repeated_Start
       _I2C_Write
     _I2C_Start
     _I2C_Stop
     _I2C_Write
   _RTC_Read_Clock
     _I2C_Read
     _I2C_Repeated_Start
     _I2C_Start
     _I2C_Write
   _Update_Celsius
     ___fladd
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
     ___fltol
       ___fladd (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _Update_Farenheit
     ___fladd
     ___flmul
     ___fltol
     ___xxtofl
   ___lwdiv
   _sprintf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      28       9       41.7%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     24      4F       7       98.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     3E      4A       5       92.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      CF      12        0.0%
ABS                  0      0      CF       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Wed Apr 20 11:03:22 2022

                                     pc 0002                             _SSPSTATbits 0094  
                                    l50 1519                                      l53 1434  
                                    l45 14F9                                      l56 13B1  
                                    l80 1468                                      l73 144F  
                                    l49 1513                                      l58 13B7  
                                    l82 146C                                      l59 13B8  
                                    l75 1453                                      l91 13C8  
                                    l84 147C                                      l77 1463  
                                    l93 13C9                                      l97 1420  
                                    l89 13C4                                      _RS 0066  
                                    fsr 0004                     ___wmul@multiplicand 0072  
RTC_Read_Calendar@read_calendar_address 0075                     __Umul8_16@word_mpld 0076  
                                   l101 13CE                                     l110 13DB  
                                   l104 13D2                                     l107 13D7  
                                   l211 178A                                     l133 15C3  
                                   l205 1715                                     l142 1496  
                                   l214 17FF                                     l136 0A02  
                                   l208 1786                                     l145 14B2  
                                   l217 1711                                     l154 16B3  
                                   l139 144A                                     l163 15F9  
                                   l148 14CF                                     l412 08FF  
                                   l333 0465                                     l415 156A  
                                   l409 1671                                     l178 13E7  
                                   l418 1595                                     l370 070A  
                                   l363 06DC                                     l355 069A  
                                   l524 0E6C                                     l525 0DB6  
                                   l374 079B                                     l544 0E97  
                                   l553 0F0C                                     l572 14DC  
                                   l549 0EC0                                     l574 14F4  
                                   l568 0FFF                                     l907 0D38  
                                   l844 004D                                     l908 0D44  
                                   l765 0966                                     l854 1633  
                                   l758 097B                                     l871 0B9E  
                                   l768 097B                                     l865 0B20  
                                   l961 03AE                                     l890 0CB6  
                                   l980 152E                                     l869 0BC7  
                                   l973 03A2                                     l886 0C92  
                                   l878 0D44                                     l982 1540  
                                   l967 031A                        ??_Update_Celsius 0059  
                                   l896 0CD8                                     l899 0D16  
                                   _RB5 0035                                     _RE3 004B  
                                   _PR2 0092                                     _PEN 048A  
                                   _Day 00CA                         __end_of_I2C_Ack 13D3  
                                   _min 00CE                                     _sec 00D0  
                                   fsr0 0004                                     indf 0000  
                          ___flmul@aexp 0032                            ___flmul@bexp 0033  
                          ___flmul@sign 002D                            ___flmul@temp 0038  
                          ___flmul@prod 0034                         __end_of_LCD_CMD 14B3  
                           main@buffer3 00A0                     LCD_Write_String@Str 0077  
                        _LCD_Set_Cursor 15C4                            ___fltol@exp1 0058  
                                  l1011 0A6A                                    l1005 0A25  
                                  l1007 0ABC                                    l1025 13F9  
                                  l1018 0A86                                    l1019 0A92  
                                  l3001 00B2                                    l3011 00F5  
                                  l3021 017E                                    l3013 0111  
                                  l3005 00BB                                    l3101 0A04  
                                  l3031 01F1                                    l3023 018E  
                                  l3015 013D                                    l3007 00CB  
                                  l3103 0A09                                    l3041 029E  
                                  l3033 020E                                    l3025 01AB  
                                  l3017 0159                                    l3009 00D8  
                                  l3121 0A53                                    l3113 0A36  
                                  l3105 0A0D                                    l3201 1712  
                                  l2403 145D                                    l2411 1484  
                                  l3051 02EA                                    l3043 02C6  
                                  l3035 023B                                    l3027 01BB  
                                  l3019 0175                                    l3131 0A8A  
                                  l3123 0A61                                    l3115 0A3B  
                                  l3107 0A1D                                    l3211 1736  
                                  l3203 1719                                    l2413 148B  
                                  l2421 149B                                    l3061 02FF  
                                  l3053 02EB                                    l3045 02CF  
                                  l3037 024B                                    l3029 01D8  
                                  l3141 0AB4                                    l3133 0A94  
                                  l3125 0A71                                    l3117 0A48  
                                  l3109 0A2D                                    l3221 1797  
                                  l3213 1785                                    l3205 171B  
                                  l3301 03C8                                    l2407 1436  
                                  l2423 14A2                                    l2431 13EA  
                                  l3231 16B4                                    l3151 142E  
                                  l2415 13CA                                    l2511 1537  
                                  l2503 151B                                    l3071 0324  
                                  l3063 0303                                    l3055 02F4  
                                  l3047 02DD                                    l3039 0278  
                                  l3135 0AAA                                    l3127 0A7C  
                                  l3119 0A4F                                    l3223 179E  
                                  l3215 1787                                    l3207 1722  
                                  l3311 03D4                                    l3303 03C9  
                                  l2409 147E                                    l2425 14B4  
                                  l2441 14D0                                    l2433 13F0  
                                  l2601 0DD8                                    l3241 16F9  
                                  l3233 16C7                                    l3153 1430  
                                  l3145 1421                                    l3161 159F  
                                  l2417 13D3                                    l2521 1503  
                                  l2513 153C                                    l2505 151D  
                                  l3081 0362                                    l3073 0332  
                                  l3065 0317                                    l3049 02E6  
                                  l3057 02FA                                    l3137 0AAF  
                                  l3129 0A80                                    l3225 17AB  
                                  l3217 178E                                    l3209 1729  
                                  l3401 05FB                                    l3321 03E3  
                                  l3313 03D5                                    l3305 03CD  
                                  l2419 1498                                    l2427 14B8  
                                  l2451 14F0                                    l2443 14D2  
                                  l2435 13F6                                    l2611 0E06  
                                  l2603 0DE9                                    l3243 1702  
                                  l3235 16D1                                    l3155 1431  
                                  l3147 1425                                    l3171 097C  
                                  l3163 15A5                                    l3251 1553  
                                  l2523 1508                                    l2531 1465  
                                  l2507 1524                                    l3091 0396  
                                  l3083 036D                                    l3075 0336  
                                  l3059 02FE                                    l3139 0AB3  
                                  l3227 17AC                                    l3219 1790  
                                  l3411 062C                                    l3403 0604  
                                  l3331 041F                                    l3323 03E8  
                                  l3315 03D6                                    l3307 03D1  
                                  l2381 140E                                    l2461 0015  
                                  l2445 14D6                                    l2437 13F8  
                                  l2429 13E9                                    l2701 0FCF  
                                  l2621 0E38                                    l2613 0E0C  
                                  l2605 0DF3                                    l3237 16DA  
                                  l3149 142B                                    l3181 09AE  
                                  l3173 0982                                    l3165 15AC  
                                  l3157 1599                                    l3253 1559  
                                  l3245 1542                                    l2525 150E  
                                  l2517 14F6                                    l3261 1635  
                                  l2509 1528                                    l3093 039A  
                                  l3085 037C                                    l3077 034F  
                                  l3069 031F                                    l3229 17FB  
                                  l3501 0746                                    l3413 0636  
                                  l3405 060E                                    l3341 0461  
                                  l3333 0424                                    l3325 03F3  
                                  l3317 03D9                                    l3309 03D2  
                                  l2383 1412                                    l2551 15C5  
                                  l2543 1672                                    l2471 003B  
                                  l2463 001C                                    l2455 000A  
                                  l2447 14E3                                    l2703 0FD8  
                                  l2631 0E7C                                    l2615 0E1B  
                                  l2607 0DFA                                    l3239 16E6  
                                  l3191 09E4                                    l3183 09B7  
                                  l3175 098A                                    l3167 15B2  
                                  l3159 1599                                    l3255 155F  
                                  l3247 1547                                    l2527 1518  
                                  l2519 14FD                                    l2535 1476  
                                  l3263 08B0                                    l3095 039B  
                                  l3087 0386                                    l3079 0355  
                                  l3511 0791                                    l3503 0749  
                                  l3415 0640                                    l3407 0618  
                                  l3423 065E                                    l3351 047E  
                                  l3335 042C                                    l3327 0407  
                                  l3319 03DE                                    l2393 141F  
                                  l2385 1417                                    l2553 15C6  
                                  l2561 15E6                                    l2545 1675  
                                  l2473 003C                                    l2465 0020  
                                  l2457 000C                                    l2481 15FA  
                                  l2449 14EA                                    l2705 0FDE  
                                  l2633 0E80                                    l2617 0E2C  
                                  l2609 0DFD                                    l2625 0E47  
                                  l3193 09F3                                    l3185 09C6  
                                  l3177 0999                                    l3169 15B8  
                                  l3257 1565                                    l3249 154D  
                                  l2537 147C                                    l2801 0B08  
                                  l3097 03A6                                    l3089 0388  
                                  l3521 07AD                                    l3513 0797  
                                  l3505 075C                                    l3441 06AD  
                                  l3433 069E                                    l3417 064A  
                                  l3409 0622                                    l3425 0685  
                                  l3361 04B4                                    l3353 0489  
                                  l3345 0469                                    l3337 044C  
                                  l3329 041B                                    l2379 13B1  
                                  l2387 141D                                    l2555 15CE  
                                  l2547 1691                                    l2475 0043  
                                  l2467 0024                                    l2459 0012  
                                  l2491 1612                                    l2483 1600  
                                  l2635 0E84                                    l2627 0E70  
                                  l2619 0E32                                    l2571 0D52  
                                  l2707 0FE7                                    l3195 09F9  
                                  l3187 09CC                                    l3179 099F  
                                  l3259 156C                                    l2811 0B26  
                                  l2803 0B0D                                    l2731 0900  
                                  l3507 0775                                    l3451 06BD  
                                  l3443 06B5                                    l3427 0690  
                                  l3419 0654                                    l3371 051A  
                                  l3363 04BC                                    l3355 048F  
                                  l3347 046D                                    l3523 07B0  
                                  l3339 045B                                    l3291 03B7  
                                  l2397 13C1                                    l2557 15D6  
                                  l2549 1697                                    l2469 0035  
                                  l2477 0049                                    l2493 161C  
                                  l2485 1603                                    l2645 0E99  
                                  l2629 0E78                                    l2637 0E8A  
                                  l2709 0FF9                                    l2581 0D79  
                                  l2573 0D5B                                    l3197 13DC  
                                  l3189 09DB                                    l2901 0C9A  
                                  l2821 0B3A                                    l2813 0B2A  
                                  l2805 0B15                                    l2741 092C  
                                  l2733 090D                                    l3525 07BB  
                                  l3517 079F                                    l3509 0782  
                                  l3461 06D2                                    l3453 06C0  
                                  l3445 06B8                                    l3429 0696  
                                  l3381 0569                                    l3373 0523  
                                  l3365 04D7                                    l3357 0493  
                                  l3437 06A3                                    l3349 0478  
                                  l3293 03BB                                    l2399 144C  
                                  l2559 15DE                                    l2495 1622  
                                  l2487 160A                                    l2671 0F17  
                                  l2655 0EC2                                    l2639 0E92  
                                  l2663 0EE9                                    l2591 0DC1  
                                  l2583 0D8E                                    l2575 0D62  
                                  l2567 0D45                                    l3199 13E2  
                                  l2911 0CB5                                    l2903 0C9F  
                                  l2831 0B4E                                    l2823 0B3E  
                                  l2815 0B2E                                    l2807 0B16  
                                  l2743 0934                                    l3519 07A3  
                                  l3463 06D8                                    l3455 06C3  
                                  l3447 06B9                                    l3439 06AA  
                                  l3471 06E5                                    l3391 0598  
                                  l3383 0584                                    l3367 04F2  
                                  l3359 04A4                                    l3375 052D  
                                  l3295 03C2                                    l2497 1629  
                                  l2489 160E                                    l2681 0F3C  
                                  l2673 0F23                                    l2665 0EFA  
                                  l2649 0EB5                                    l2593 0DC5  
                                  l2585 0DA1                                    l2577 0D65  
                                  l2569 0D4C                                    l2913 0CBA  
                                  l2921 0CC6                                    l2841 0B62  
                                  l2833 0B52                                    l2825 0B42  
                                  l2817 0B32                                    l2809 0B18  
                                  l2761 095B                                    l2753 0942  
                                  l2745 0936                                    l2737 0916  
                                  l3481 06FB                                    l3473 06EC  
                                  l3457 06C8                                    l3449 06BA  
                                  l3393 059D                                    l3377 0533  
                                  l3369 050D                                    l3297 03C5  
                                  l3289 03AF                                    l2499 162F  
                                  l2691 0F62                                    l2683 0F48  
                                  l2675 0F27                                    l2667 0F00  
                                  l2659 0EDE                                    l2595 0DCB  
                                  l2587 0DA5                                    l2579 0D75  
                                  l2915 0CBD                                    l2907 0CA8  
                                  l2923 0CCA                                    l2851 0BA2  
                                  l2843 0B66                                    l2835 0B56  
                                  l2827 0B46                                    l2819 0B36  
                                  l2771 0ACA                                    l2763 096B  
                                  l2747 093A                                    l2755 0954  
                                  l2739 092B                                    l3491 0706  
                                  l3483 06FC                                    l3475 06EF  
                                  l3467 06E0                                    l3459 06CD  
                                  l3395 05B8                                    l3379 054E  
                                  l3299 03C6                                    l2693 0F91  
                                  l2685 0F4E                                    l2677 0F2D  
                                  l2669 0F06                                    l2597 0DCF  
                                  l2589 0DB8                                    l2941 0D12  
                                  l2933 0CDD                                    l2925 0CCB  
                                  l2917 0CBF                                    l2909 0CB1  
                                  l2861 0BBB                                    l2853 0BAB  
                                  l2837 0B5A                                    l2829 0B4A  
                                  l2845 0B6A                                    l2781 0AE1  
                                  l2773 0ACE                                    l2765 0970  
                                  l3493 070F                                    l3485 06FF  
                                  l3477 06F7                                    l3397 05D3  
                                  l3389 0592                                    l2695 0FB2  
                                  l2687 0F57                                    l2679 0F36  
                                  l2599 0DD2                                    l2951 0D2E  
                                  l2943 0D1B                                    l2935 0CE2  
                                  l2927 0CCF                                    l2919 0CC4  
                                  l2871 0BD9                                    l2855 0BAD  
                                  l2863 0BBF                                    l2847 0B6B  
                                  l2839 0B5E                                    l2791 0AF7  
                                  l2783 0AE2                                    l2775 0ACF  
                                  l2767 0ABD                                    l3495 0713  
                                  l3487 0702                                    l3479 06FA  
                                  l3399 05EE                                    l3681 0FC7  
                                  l2689 0F5D                                    l2953 0D32  
                                  l2945 0D20                                    l2937 0CF0  
                                  l2929 0CD5                                    l2881 0C03  
                                  l2873 0BF0                                    l2865 0BCB  
                                  l2857 0BB1                                    l2849 0B82  
                                  l2793 0AF8                                    l2777 0AD4  
                                  l2785 0AE4                                    l2769 0AC4  
                                  l2961 004E                                    l3497 0722  
                                  l3489 0705                                    l3683 15EE  
                                  l2699 0FBE                                    l2955 0D34  
                                  l2947 0D28                                    l2939 0CF4  
                                  l2891 0C2C                                    l2883 0C07  
                                  l2875 0BF4                                    l2867 0BD0  
                                  l2859 0BB2                                    l2795 0AFE  
                                  l2787 0AEC                                    l2779 0AD9  
                                  l2971 0065                                    l2963 0055  
                                  l3499 0731                                    l3675 066E  
                                  l3677 0E5B                                    l2957 0D3F  
                                  l2949 0D2D                                    l2893 0C6A  
                                  l2885 0C08                                    l2877 0BF8  
                                  l2797 0B02                                    l2789 0AF1  
                                  l2981 0081                                    l2973 006A  
                                  l2965 005B                                    l3679 0EF2  
                                  l2959 0D43                                    l2895 0C70  
                                  l2887 0C11                                    l2879 0C01  
                                  l2799 0B03                                    l2991 0096  
                                  l2983 0087                                    l2975 0072  
                                  l2967 005F                                    l2897 0C75  
                                  l2889 0C16                                    l2993 009E  
                                  l2985 008B                                    l2977 0074  
                                  l2969 0060                                    l2899 0C84  
                                  l2995 00A0                                    l2987 008C  
                                  l2979 007C                                    l2997 00A8  
                                  l2989 0091                                    l2999 00AD  
                                  STR_1 084A                                    STR_2 0855  
                                  STR_3 08A1                                    STR_4 0833  
                                  STR_5 089E                                    STR_6 089B  
                                  STR_7 0877                                    STR_8 086C  
                                  STR_9 0868                                    u2000 13C8  
                                  u2001 13C7                                    u2010 1453  
                                  u2011 1452                                    u2020 145C  
                                  u2021 145B                                    u2030 13D2  
                                  u2031 13D1                                    u2200 1600  
                                  u2120 14F0                                    u2040 13DB  
                                  u3000 0CC4                                    u2201 15FF  
                                  u2121 14EF                                    u2105 14DD  
                                  u2041 13DA                                    u3001 0CC3  
                                  u2130 0012                                    u3010 0CCA  
                                  u2131 0011                                    u2115 14E4  
                                  u3011 0CC9                                    u2220 1612  
                                  u2300 1508                                    u3100 0D20  
                                  u3020 0CCF                                    u2221 1611  
                                  u2301 1507                                    u3101 0D1F  
                                  u3021 0CCE                                    u2150 0024  
                                  u2230 161C                                    u2070 13F0  
                                  u2310 146C                                    u3110 0D2D  
                                  u3030 0CD5                                    u2055 14A5  
                                  u2151 0023                                    u2231 161B  
                                  u2215 1604                                    u2071 13EF  
                                  u2311 146B                                    u3111 0D2C  
                                  u3031 0CD4                                    u2080 13F6  
                                  u2400 0DE9                                    u2320 1475  
                                  u3120 0D32                                    u3040 0CDC  
                                  u3200 00AD                                    u2065 14C2  
                                  u2145 0016                                    u2081 13F5  
                                  u2401 0DE8                                    u2321 1474  
                                  u3121 0D31                                    u3041 0CDB  
                                  u3201 00AC                                    u2330 167F  
                                  u2170 0035                                    u2250 162F  
                                  u2090 14D6                                    u2410 0DF3  
                                  u3130 0D43                                    u3050 0CE2  
                                  u3210 00B2                                    u2171 0034  
                                  u2251 162E                                    u2235 1618  
                                  u2091 14D5                                    u2411 0DF2  
                                  u3131 0D42                                    u3051 0CE1  
                                  u3211 00B1                                    u2340 16A1  
                                  u2500 0F00                                    u2420 0E1A  
                                  u3060 0CF4                                    u2260 1528  
                                  u3140 005F                                    u2165 0025  
                                  u2245 1623                                    u2501 0EFF  
                                  u2421 0E19                                    u3061 0CF3  
                                  u2261 1527                                    u3301 0200  
                                  u3221 0103                                    u3141 005E  
                                  u2350 16B3                                    u2190 0049  
                                  u2510 0F06                                    u2430 0E46  
                                  u3070 0D03                                    u3302 0207  
                                  u3222 010A                                    u3150 0065  
                                  u2351 16B2                                    u2191 0048  
                                  u2175 0031                                    u2511 0F05  
                                  u2431 0E45                                    u2415 0DEF  
                                  u4007 0986                                    u3311 022D  
                                  u3303 020E                                    u3231 011F  
                                  u3223 0111                                    u3151 0064  
                                  u2520 0F17                                    u2440 0E70  
                                  u2360 0D52                                    u3080 0D12  
                                  u2280 153C                                    u3312 0234  
                                  u3232 0126                                    u3160 006A  
                                  u2600 093A                                    u2185 003D  
                                  u2521 0F16                                    u2441 0E6F  
                                  u2361 0D51                                    u4017 0994  
                                  u3081 0D11                                    u2281 153B  
                                  u3321 025A                                    u3313 023B  
                                  u3241 014B                                    u3233 012D  
                                  u3161 0069                                    u2601 0939  
                                  u2530 0F2D                                    u2450 0E80  
                                  u2370 0D75                                    u2290 14FD  
                                  u3090 0D1B                                    u3410 02FE  
                                  u3330 0284                                    u3322 0261  
                                  u3242 0152                                    u3170 008B  
                                  u2610 0941                                    u2531 0F2C  
                                  u2451 0E7F                                    u2371 0D74  
                                  u4107 16CD                                    u4027 09A3  
                                  u2291 14FC                                    u3091 0D1A  
                                  u3075 0CFE                                    u2275 152F  
                                  u3411 02FD                                    u3323 0268  
                                  u3251 0167                                    u3243 0159  
                                  u3171 008A                                    u2611 0940  
                                  u2540 0F48                                    u2460 0EB4  
                                  u2380 0DB5                                    u2700 0AD9  
                                  u3500 039A                                    u3420 0303  
                                  u3252 016E                                    u3180 0091  
                                  u2541 0F47                                    u2525 0F13  
                                  u2461 0EB3                                    u2381 0DB4  
                                  u4117 170A                                    u4037 09B2  
                                  u2701 0AD8                                    u3501 0399  
                                  u3421 0302                                    u3405 02ED  
                                  u3341 0290                                    u3253 0175  
                                  u3181 0090                                    u2550 0F4E  
                                  u2470 0EBF                                    u2390 0DCB  
                                  u2710 0AF7                                    u3430 0317  
                                  u3350 02AC                                    u3342 0297  
                                  u3190 0096                                    u2630 0953  
                                  u3510 0A09                                    u4127 1494  
                                  u2551 0F4D                                    u2471 0EBE  
                                  u2391 0DCA                                    u4047 09C1  
                                  u2711 0AF6                                    u3431 0316  
                                  u3343 029E                                    u3335 027F  
                                  u3271 019D                                    u3191 0095  
                                  u2631 0952                                    u3511 0A08  
                                  u2560 0FE7                                    u2480 0EDD  
                                  u2800 0BA2                                    u2720 0B02  
                                  u3440 031E                                    u3272 01A4  
                                  u2640 095A                                    u3600 0A86  
                                  u3520 0A0D                                    u2561 0FE6  
                                  u2481 0EDC                                    u2465 0EB0  
                                  u4057 09D0                                    u2801 0BA1  
                                  u2721 0B01                                    u3441 031D  
                                  u3361 02B8                                    u3281 01CA  
                                  u3273 01AB                                    u3265 0177  
                                  u2641 0959                                    u2625 0943  
                                  u3601 0A85                                    u3521 0A0C  
                                  u2570 0FF9                                    u2490 0EE8  
                                  u2810 0BB1                                    u2730 0B08  
                                  u3450 0324                                    u3362 02BF  
                                  u3282 01D1                                    u3610 0A8A  
                                  u3530 0A2D                                    u2571 0FF8  
                                  u2491 0EE7                                    u4067 09DF  
                                  u2811 0BB0                                    u2731 0B07  
                                  u3451 0323                                    u3363 02C6  
                                  u3355 02A7                                    u3283 01D8  
                                  u3611 0A89                                    u3531 0A2C  
                                  u2740 0B0D                                    u3460 0336  
                                  u2660 096B                                    u2580 090D  
                                  u3620 0A9F                                    u2485 0ED9  
                                  u4077 09EE                                    u2741 0B0C  
                                  u3461 0335                                    u2661 096A  
                                  u2581 090C                                    u2910 0C2C  
                                  u2830 0BC7                                    u2750 0B26  
                                  u3470 0345                                    u3390 02EA  
                                  u2670 0970                                    u2590 0924  
                                  u3630 0AAF                                    u3550 0A4E  
                                  u3710 042C                                    u4087 09FD  
                                  u2911 0C2B                                    u2831 0BC6  
                                  u2751 0B25                                    u3391 02E9  
                                  u3375 02C8                                    u3295 01DA  
                                  u2671 096F                                    u2655 095D  
                                  u3631 0AAE                                    u3551 0A4D  
                                  u3711 042B                                    u2840 0BCB  
                                  u2760 0B2A                                    u2680 0ACE  
                                  u3480 0362                                    u3640 0AB3  
                                  u3800 069A                                    u3720 0461  
                                  u4097 13E4                                    u2921 0C43  
                                  u2913 0C28                                    u2905 0C0A  
                                  u2841 0BCA                                    u2825 0BB4  
                                  u2761 0B29                                    u2681 0ACD  
                                  u3481 0361                                    u3385 02DF  
                                  u3641 0AB2                                    u3625 0A9A  
                                  u3545 0A40                                    u3801 0699  
                                  u3721 0460                                    u3650 159F  
                                  u2930 0C57                                    u2922 0C44  
                                  u2850 0BD0                                    u2770 0B82  
                                  u2690 0AD4                                    u3490 037C  
                                  u3570 0A70                                    u3810 069E  
                                  u3730 0465                                    u3651 159E  
                                  u2931 0C58                                    u2923 0C49  
                                  u2851 0BCF                                    u2771 0B81  
                                  u2691 0AD3                                    u3491 037B  
                                  u3475 0340                                    u2595 091F  
                                  u3571 0A6F                                    u3811 069D  
                                  u3731 0464                                    u1980 13B7  
                                  u2940 0C75                                    u2932 0C5D  
                                  u2924 0C4A                                    u2780 0B8D  
                                  u3660 1719                                    u3900 0797  
                                  u3820 06A2                                    u3740 0469  
                                  u1981 13B6                                    u2941 0C74  
                                  u2933 0C5E                                    u2925 0C4F  
                                  u2861 0BE2                                    u2781 0B8B  
                                  u3485 035E                                    u3565 0A62  
                                  u3661 1718                                    u3901 0796  
                                  u3821 06A1                                    u3741 0468  
                                  u1990 141D                                    u2950 0C9A  
                                  u2926 0C50                                    u2870 0BF4  
                                  u2862 0BE9                                    u2790 0B8E  
                                  u3590 0A80                                    u3670 178E  
                                  u3910 079B                                    u3830 06AA  
                                  u3750 046D                                    u1991 141C  
                                  u2951 0C99                                    u2871 0BF3  
                                  u2863 0BF0                                    u2775 0B7E  
                                  u3495 0378                                    u3591 0A7F  
                                  u3671 178D                                    u3911 079A  
                                  u3831 06A9                                    u3751 046C  
                                  u2960 0C9F                                    u2880 0BF8  
                                  u3920 079F                                    u3840 06D8  
                                  u3760 047E                                    u2961 0C9E  
                                  u2881 0BF7                                    u3585 0A75  
                                  u3921 079E                                    u3841 06D7  
                                  u3761 047D                                    u2890 0C07  
                                  u3930 07A3                                    u3850 06DC  
                                  u3770 048F                                    u2891 0C06  
                                  u3931 07A2                                    u3851 06DB  
                                  u3771 048E                                    u2980 0CB5  
                                  u3940 07CA                                    u3860 06E0  
                                  u3780 0493                                    _RCEN 048B  
                                  u2981 0CB4                                    u3941 07C9  
                                  u3861 06DF                                    u3781 0492  
                                  u2990 0CBA                                    u3870 06E4  
                                  u3790 0696                                    u2991 0CB9  
                                  u2975 0CAA                                    u3871 06E3  
                                  u3791 0695                                    u3880 06EC  
                                  u3945 07C6                                    u3881 06EB  
                                  u3890 070F                                    u3891 070E  
                                  u3957 03EE                                    u3967 0454  
                                  u3977 068B                                    u3987 078A  
                                  u3997 07B6                                    _RSEN 0489  
                                  _Date 00C8                                    _Year 00C4  
                     ?_LCD_Write_String 0077                                    _date 01A4  
                                  _days 00E6                                    _main 03AF  
                       ?_RTC_Read_Clock 0070                                    _hour 00CC  
                      __end_of_I2C_Nack 13DC                                    _mins 00D2  
                                  _secs 00DC                        __end_of_I2C_Init 1435  
                      __end_of_I2C_Read 151A                                    _year 0190  
                                  btemp 007E                        __end_of_I2C_Stop 13CA  
                                  start 0000                      ??_LCD_Write_String 0079  
                         _LCD_String_xy 1596                    LCD_Write_4Bit@Nibble 0074  
      RTC_Read_Clock@read_clock_address 0075                        __end_of_LCD_Init 0A03  
                     ?_Update_Farenheit 0070                              _Clock_type 00EE  
                   __end_of_DisplayTemp 1712                           ___fltol@sign1 0057  
                       __end_of___fladd 0D45                                   ?_main 0070  
                                 _ACKEN 048C                                   _ACKDT 048D  
                                 STR_10 0877                                   STR_11 086C  
                                 STR_12 0868                                   STR_20 0893  
                                 STR_21 0883                                   STR_13 0860  
                                 STR_14 0864                                   STR_22 088F  
                                 STR_15 0877                                   STR_23 0897  
                                 STR_16 088B                                   STR_24 083F  
                                 STR_17 0887                                   STR_25 0870  
                                 STR_18 087F                                   STR_26 0822  
                                 STR_19 087B                         __end_of___flmul 03AF  
                       __end_of___fltol 097C                                   _ANSEL 0188  
                                 _AM_PM 00ED                         __end_of___lwdiv 004E  
                       __end_of___lwmod 1634                      ??_Update_Farenheit 0059  
                                 _PORTB 0006                                   _TRISB 0086  
                                 _TRISC 0087                                   _SSPIE 0463  
                                 _TRISE 0089                                   _SSPIF 0063  
                __end_of_LCD_Set_Cursor 15FA                                   _Month 00C6  
                       __end_of_dpowers 081A                         __end_of_isdigit 13FA  
                                 _hours 01AE                                   _month 019A  
                     __end_of_I2C_Ready 13B9                       __end_of_I2C_Start 1464  
                     __end_of_I2C_Write 1421                                   pclath 000A  
                                 status 0003                                   wtemp0 007E  
                       __end_of_sprintf 1000                          ?_LCD_String_xy 0020  
                        _LCD_Write_4Bit 147D                          _LCD_Write_Char 14B3  
                       __initialization 07CE                            __end_of_main 07CE  
               RTC_Calendar_Write@month 0073                       _IO_Expander_Write 1435  
                             ??_I2C_Ack 0070                      ?_IO_Expander_Write 0070  
                                ??_main 005B                       __end_of_LCD_Clear 13E8  
                             ??_LCD_CMD 0075                      _RTC_Calendar_Write 156B  
                   ??_IO_Expander_Write 0072                         ?_LCD_Set_Cursor 0077  
                                _ADRESH 001E                                  _ADRESL 009E  
                                _CCPR1L 0015                                  _ANSELH 0189  
                      LCD_String_xy@msg 0021                        LCD_String_xy@pos 0020  
                      LCD_String_xy@row 0024                     ?_RTC_Calendar_Write 0072  
                                _SSPADD 0093                                  _SSPBUF 0013  
                                _SSPCON 0014                  __end_of_LCD_Write_4Bit 1497  
                      __end_of___xxtofl 0ABD                  __end_of_LCD_Write_Char 14D0  
             __end_of_IO_Expander_Write 144B                             _DisplayTemp 16B4  
                             ??___fladd 0042                                  ___wmul 14D0  
                             ??___flmul 0028                               ??___fltol 0052  
                             ??___lwdiv 0074                               ??___lwmod 007C  
                  ??_RTC_Calendar_Write 0075                                  _result 0067  
                    _I2C_Repeated_Start 1464                               ?_I2C_Nack 0070  
                             ??_isdigit 0070                               ?_I2C_Init 0070  
                             ?_I2C_Read 0070                               ?_I2C_Stop 0070  
                   ?_I2C_Repeated_Start 0070                               ??_sprintf 0025  
                          ___xxtofl@arg 007A                            ___xxtofl@exp 0079  
                          ___xxtofl@val 0070                 __end_of__initialization 07FC  
                             ?_LCD_Init 0070                         ??_LCD_String_xy 0023  
                       ?_LCD_Write_4Bit 0070                              ___fltol@f1 004E  
                       ?_LCD_Write_Char 0070                    ??_I2C_Repeated_Start 0071  
                        __pcstackCOMMON 0070                            __pidataBANK0 0009  
                          __pidataBANK1 08A6                              ??_I2C_Nack 0070  
                            ??_I2C_Init 0070                              ??_I2C_Read 0070  
                            ??_I2C_Stop 0070                        ??_RTC_Read_Clock 0073  
                          sprintf@width 0032                              __pbssBANK0 005E  
                            __pbssBANK1 00C4                              __pbssBANK3 0190  
                            ??_LCD_Init 0077                      DisplayTemp@buffer1 0038  
                    DisplayTemp@buffer2 0048                       __end_of__Umul8_16 1541  
                            __pmaintext 03AF                            I2C_Read@flag 0071  
                        I2C_Read@buffer 0072                                 ?___wmul 0070  
                               _I2C_Ack 13CA                                 _ACKSTAT 048E  
                               _LCD_CMD 1497                               ?___xxtofl 0070  
                               _SSPCON2 0091                                 _SSPSTAT 0094  
                            __stringtab 0800                               _I2C_Ready 13B1  
                             _I2C_Start 144B                               _I2C_Write 140D  
                               ___fladd 0ABD                       _RTC_Read_Calendar 08AF  
                               ___flmul 004E                                 ___fltol 0900  
                               ___lwdiv 000A                                 ___lwmod 15FA  
                    ?_RTC_Read_Calendar 0070                               _ANSELbits 0188  
                      ??_LCD_Set_Cursor 0078                                 __ptext1 1712  
                               __ptext2 1787                                 __ptext3 0A03  
                               __ptext4 0900                                 __ptext5 004E  
                               __ptext6 151A                                 __ptext7 0ABD  
                               __ptext8 1634                                 __ptext9 08AF  
                     __end_of_hexpowers 0822                                 _dpowers 0810  
                             _T2CONbits 0012                                 _isdigit 13E8  
                            ??___xxtofl 0074                     ??_RTC_Read_Calendar 0073  
                             _LCD_Clear 13DC                                 _sprintf 0D45  
                               clrloop0 13BA                                 main@tmp 00C0  
                  end_of_initialization 07FC                              ?_I2C_Ready 0070  
                            ?_I2C_Start 0070                              ?_I2C_Write 0070  
             __end_of_RTC_Read_Calendar 0900                            ?_DisplayTemp 0070  
                    RTC_Clock_Write@min 0072                      RTC_Clock_Write@sec 0076  
                            LCD_CMD@CMD 0076                             ___fladd@grs 004D  
                     ??_RTC_Clock_Write 0075                           ___xxtofl@sign 0078  
                             _TRISCbits 0087                              ?_LCD_Clear 0070  
                      ??_LCD_Write_4Bit 0073                       LCD_Write_String@i 007C  
                      ??_LCD_Write_Char 0075                             ___flmul@grs 002E  
                           _CCP1CONbits 0017                          __end_of___wmul 14F5  
                      _LCD_Write_String 1672                     start_initialization 07CE  
                RTC_Calendar_Write@date 0072                  RTC_Calendar_Write@year 0074  
  I2C_Repeated_Start@slave_read_address 0071                        _Update_Farenheit 1712  
                           ??_I2C_Ready 0070                             ??_I2C_Start 0071  
                           ??_I2C_Write 0070                   __end_of_LCD_String_xy 15C4  
                             _Temp_Mode 0060                                ??___wmul 0074  
                            init_fetch0 13FA                               __Umul8_16 151A  
                           __pdataBANK0 0069                             __pdataBANK1 00E6  
                              ?_I2C_Ack 0070                               ___fladd@a 003E  
                             ___fladd@b 003A                                ?_LCD_CMD 0070  
                             ___flmul@a 0024                               ___flmul@b 0020  
                             ___latbits 0002                           __pcstackBANK0 0020  
                         __pcstackBANK1 00A0                             ??_LCD_Clear 0077  
                          _isdigit$1225 0070                          _Update_Celsius 1787  
                       main@buffer3_737 00B0                             sprintf@flag 002F  
                           sprintf@prec 0029                               _alarmTime 005E  
                      ___lwdiv@dividend 0072                   IO_Expander_Write@Data 0072  
                              ?___fladd 003A                                ?___flmul 0020  
                              ?___fltol 004E                         main@displayMode 00C2  
                            ?__Umul8_16 0070                                ?___lwdiv 0070  
                              ?___lwmod 0078                               __pstrings 0800  
                              _I2C_Nack 13D3                                ?_isdigit 0070  
                              _I2C_Init 1421                                _I2C_Read 14F5  
                              _I2C_Stop 13C1                  __end_of_Update_Celsius 1800  
                             _hexpowers 081A                        ___lwdiv@quotient 0075  
                 LCD_String_xy@location 0025                                ?_sprintf 0020  
                              _LCD_Init 097C                          ___wmul@product 0074  
                             clear_ram0 13B9                                _PIE1bits 008C  
                              _PIR1bits 000C                         _RTC_Clock_Write 1541  
                            _ADCON0bits 001F                             __stringbase 080F  
                            _ADCON1bits 009F                       ___wmul@multiplier 0070  
                       ?_Update_Celsius 0070            I2C_Start@slave_write_address 0071  
              __end_of_LCD_Write_String 16B4                   RTC_Calendar_Write@day 0075  
                         I2C_Write@data 0070                             ??__Umul8_16 0072  
              __end_of_Update_Farenheit 1787                      __end_of__stringtab 0810  
                         _temperature_c 0064                           _temperature_f 0062  
                            sprintf@idx 0028                              sprintf@len 002D  
                            sprintf@val 0030                                ___xxtofl 0A03  
                       ___lwdiv@divisor 0070                         ___lwdiv@counter 0077  
                              __ptext10 1464                                __ptext11 14F5  
                              __ptext20 16B4                                __ptext12 13D3  
                              __ptext21 0D45                                __ptext13 13CA  
                              __ptext30 147D                                __ptext22 13E8  
                              __ptext14 1541                                __ptext31 1435  
                              __ptext23 14D0                                __ptext15 156B  
                              __ptext32 13C1                                __ptext24 15FA  
                              __ptext16 1596                                __ptext33 144B  
                              __ptext25 000A                                __ptext17 097C  
                              __ptext34 140D                                __ptext26 1672  
                              __ptext18 13DC                                __ptext35 13B1  
                              __ptext27 14B3                                __ptext19 1421  
                              __ptext28 15C4                                __ptext29 1497  
                       _BackLight_State 0069                 __end_of_RTC_Clock_Write 156B  
            __end_of_RTC_Calendar_Write 1596                              _INTCONbits 000B  
                    LCD_Write_Char@Data 0076                                init_ram0 13FE  
                  RTC_Clock_Write@AM_PM 0074                                isdigit@c 0071  
                             sprintf@ap 002C                               sprintf@cp 002A  
                             sprintf@sp 0020                        ___lwmod@dividend 007A  
            __end_of_I2C_Repeated_Start 147D                          _RTC_Read_Clock 1634  
                             stringcode 080A                  __Umul8_16@multiplicand 0070  
                              sprintf@c 0034                                sprintf@f 0022  
                   RTC_Clock_Write@hour 0073                         ___lwmod@divisor 0078  
                           _PSTRCONbits 009D                         ___lwmod@counter 007D  
                              stringdir 080A                                stringtab 0800  
                     LCD_Set_Cursor@COL 0077                       LCD_Set_Cursor@ROW 007A  
                           _SSPCON2bits 0091                           ___fladd@signs 004A  
                          ___fladd@aexp 004B                            ___fladd@bexp 004C  
                __end_of_RTC_Read_Clock 1672                    __Umul8_16@multiplier 0078  
                      ?_RTC_Clock_Write 0072                       __Umul8_16@product 0074  
                         ??_DisplayTemp 0035  
