

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Mon Apr 18 14:10:35 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F886
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK3,global,class=CODE,delta=2,noexec
     7                           	psect	strings,global,class=STRING,delta=2,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    14                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    15                           	psect	inittext,global,class=CODE,delta=2
    16                           	psect	clrtext,global,class=CODE,delta=2
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	maintext,global,class=CODE,split=1,delta=2
    21                           	psect	text1,local,class=CODE,merge=1,delta=2
    22                           	psect	text2,local,class=CODE,merge=1,delta=2
    23                           	psect	text3,local,class=CODE,merge=1,delta=2
    24                           	psect	text4,local,class=CODE,merge=1,delta=2
    25                           	psect	text5,local,class=CODE,merge=1,delta=2
    26                           	psect	text6,local,class=CODE,merge=1,delta=2
    27                           	psect	text7,local,class=CODE,merge=1,delta=2
    28                           	psect	text8,local,class=CODE,merge=1,delta=2
    29                           	psect	text9,local,class=CODE,merge=1,delta=2
    30                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text15,local,class=CODE,merge=1,delta=2
    36                           	psect	text16,local,class=CODE,merge=1,delta=2
    37                           	psect	text17,local,class=CODE,merge=1,delta=2
    38                           	psect	text18,local,class=CODE,merge=1,delta=2
    39                           	psect	text19,local,class=CODE,merge=1,delta=2
    40                           	psect	text20,local,class=CODE,merge=1,delta=2
    41                           	psect	text21,local,class=CODE,merge=1,delta=2
    42                           	psect	text22,local,class=CODE,merge=1,delta=2
    43                           	psect	text23,local,class=CODE,merge=1,delta=2
    44                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text25,local,class=CODE,merge=1,delta=2,group=3
    46                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    47                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    48                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    49                           	psect	text29,local,class=CODE,merge=1,delta=2
    50                           	psect	text30,local,class=CODE,merge=1,delta=2
    51                           	psect	text31,local,class=CODE,merge=1,delta=2
    52                           	psect	text32,local,class=CODE,merge=1,delta=2
    53                           	psect	text33,local,class=CODE,merge=1,delta=2
    54                           	psect	text34,local,class=CODE,merge=1,delta=2
    55                           	psect	text35,local,class=CODE,merge=1,delta=2
    56                           	psect	text36,local,class=CODE,merge=1,delta=2
    57                           	psect	text37,local,class=CODE,merge=1,delta=2
    58                           	psect	text38,local,class=CODE,merge=1,delta=2
    59                           	psect	text39,local,class=CODE,merge=1,delta=2
    60                           	psect	text40,local,class=CODE,merge=1,delta=2
    61                           	psect	text41,local,class=CODE,merge=1,delta=2
    62                           	psect	text42,local,class=CODE,merge=1,delta=2
    63                           	psect	text43,local,class=CODE,merge=1,delta=2
    64                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    65                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    66                           	dabs	1,0x7E,2
    67  0000                     
    68                           ; Version 2.40
    69                           ; Generated 17/11/2021 GMT
    70                           ; 
    71                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    72                           ; All rights reserved.
    73                           ; 
    74                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    75                           ; 
    76                           ; Redistribution and use in source and binary forms, with or without modification, are
    77                           ; permitted provided that the following conditions are met:
    78                           ; 
    79                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    80                           ;        conditions and the following disclaimer.
    81                           ; 
    82                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    83                           ;        of conditions and the following disclaimer in the documentation and/or other
    84                           ;        materials provided with the distribution. Publication is not required when
    85                           ;        this file is used in an embedded application.
    86                           ; 
    87                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    88                           ;        software without specific prior written permission.
    89                           ; 
    90                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    91                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    92                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    93                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    94                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    95                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    96                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    97                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    98                           ; 
    99                           ; 
   100                           ; Code-generator required, PIC16F886 Definitions
   101                           ; 
   102                           ; SFR Addresses
   103  0000                     	;# 
   104  0001                     	;# 
   105  0002                     	;# 
   106  0003                     	;# 
   107  0004                     	;# 
   108  0005                     	;# 
   109  0006                     	;# 
   110  0007                     	;# 
   111  0009                     	;# 
   112  000A                     	;# 
   113  000B                     	;# 
   114  000C                     	;# 
   115  000D                     	;# 
   116  000E                     	;# 
   117  000E                     	;# 
   118  000F                     	;# 
   119  0010                     	;# 
   120  0011                     	;# 
   121  0012                     	;# 
   122  0013                     	;# 
   123  0014                     	;# 
   124  0015                     	;# 
   125  0015                     	;# 
   126  0016                     	;# 
   127  0017                     	;# 
   128  0018                     	;# 
   129  0019                     	;# 
   130  001A                     	;# 
   131  001B                     	;# 
   132  001B                     	;# 
   133  001C                     	;# 
   134  001D                     	;# 
   135  001E                     	;# 
   136  001F                     	;# 
   137  0081                     	;# 
   138  0085                     	;# 
   139  0086                     	;# 
   140  0087                     	;# 
   141  0089                     	;# 
   142  008C                     	;# 
   143  008D                     	;# 
   144  008E                     	;# 
   145  008F                     	;# 
   146  0090                     	;# 
   147  0091                     	;# 
   148  0092                     	;# 
   149  0093                     	;# 
   150  0093                     	;# 
   151  0093                     	;# 
   152  0094                     	;# 
   153  0095                     	;# 
   154  0096                     	;# 
   155  0097                     	;# 
   156  0098                     	;# 
   157  0099                     	;# 
   158  009A                     	;# 
   159  009B                     	;# 
   160  009C                     	;# 
   161  009D                     	;# 
   162  009E                     	;# 
   163  009F                     	;# 
   164  0105                     	;# 
   165  0107                     	;# 
   166  0108                     	;# 
   167  0109                     	;# 
   168  010C                     	;# 
   169  010C                     	;# 
   170  010D                     	;# 
   171  010E                     	;# 
   172  010F                     	;# 
   173  0185                     	;# 
   174  0187                     	;# 
   175  0188                     	;# 
   176  0189                     	;# 
   177  018C                     	;# 
   178  018D                     	;# 
   179  0000                     	;# 
   180  0001                     	;# 
   181  0002                     	;# 
   182  0003                     	;# 
   183  0004                     	;# 
   184  0005                     	;# 
   185  0006                     	;# 
   186  0007                     	;# 
   187  0009                     	;# 
   188  000A                     	;# 
   189  000B                     	;# 
   190  000C                     	;# 
   191  000D                     	;# 
   192  000E                     	;# 
   193  000E                     	;# 
   194  000F                     	;# 
   195  0010                     	;# 
   196  0011                     	;# 
   197  0012                     	;# 
   198  0013                     	;# 
   199  0014                     	;# 
   200  0015                     	;# 
   201  0015                     	;# 
   202  0016                     	;# 
   203  0017                     	;# 
   204  0018                     	;# 
   205  0019                     	;# 
   206  001A                     	;# 
   207  001B                     	;# 
   208  001B                     	;# 
   209  001C                     	;# 
   210  001D                     	;# 
   211  001E                     	;# 
   212  001F                     	;# 
   213  0081                     	;# 
   214  0085                     	;# 
   215  0086                     	;# 
   216  0087                     	;# 
   217  0089                     	;# 
   218  008C                     	;# 
   219  008D                     	;# 
   220  008E                     	;# 
   221  008F                     	;# 
   222  0090                     	;# 
   223  0091                     	;# 
   224  0092                     	;# 
   225  0093                     	;# 
   226  0093                     	;# 
   227  0093                     	;# 
   228  0094                     	;# 
   229  0095                     	;# 
   230  0096                     	;# 
   231  0097                     	;# 
   232  0098                     	;# 
   233  0099                     	;# 
   234  009A                     	;# 
   235  009B                     	;# 
   236  009C                     	;# 
   237  009D                     	;# 
   238  009E                     	;# 
   239  009F                     	;# 
   240  0105                     	;# 
   241  0107                     	;# 
   242  0108                     	;# 
   243  0109                     	;# 
   244  010C                     	;# 
   245  010C                     	;# 
   246  010D                     	;# 
   247  010E                     	;# 
   248  010F                     	;# 
   249  0185                     	;# 
   250  0187                     	;# 
   251  0188                     	;# 
   252  0189                     	;# 
   253  018C                     	;# 
   254  018D                     	;# 
   255  0000                     	;# 
   256  0001                     	;# 
   257  0002                     	;# 
   258  0003                     	;# 
   259  0004                     	;# 
   260  0005                     	;# 
   261  0006                     	;# 
   262  0007                     	;# 
   263  0009                     	;# 
   264  000A                     	;# 
   265  000B                     	;# 
   266  000C                     	;# 
   267  000D                     	;# 
   268  000E                     	;# 
   269  000E                     	;# 
   270  000F                     	;# 
   271  0010                     	;# 
   272  0011                     	;# 
   273  0012                     	;# 
   274  0013                     	;# 
   275  0014                     	;# 
   276  0015                     	;# 
   277  0015                     	;# 
   278  0016                     	;# 
   279  0017                     	;# 
   280  0018                     	;# 
   281  0019                     	;# 
   282  001A                     	;# 
   283  001B                     	;# 
   284  001B                     	;# 
   285  001C                     	;# 
   286  001D                     	;# 
   287  001E                     	;# 
   288  001F                     	;# 
   289  0081                     	;# 
   290  0085                     	;# 
   291  0086                     	;# 
   292  0087                     	;# 
   293  0089                     	;# 
   294  008C                     	;# 
   295  008D                     	;# 
   296  008E                     	;# 
   297  008F                     	;# 
   298  0090                     	;# 
   299  0091                     	;# 
   300  0092                     	;# 
   301  0093                     	;# 
   302  0093                     	;# 
   303  0093                     	;# 
   304  0094                     	;# 
   305  0095                     	;# 
   306  0096                     	;# 
   307  0097                     	;# 
   308  0098                     	;# 
   309  0099                     	;# 
   310  009A                     	;# 
   311  009B                     	;# 
   312  009C                     	;# 
   313  009D                     	;# 
   314  009E                     	;# 
   315  009F                     	;# 
   316  0105                     	;# 
   317  0107                     	;# 
   318  0108                     	;# 
   319  0109                     	;# 
   320  010C                     	;# 
   321  010C                     	;# 
   322  010D                     	;# 
   323  010E                     	;# 
   324  010F                     	;# 
   325  0185                     	;# 
   326  0187                     	;# 
   327  0188                     	;# 
   328  0189                     	;# 
   329  018C                     	;# 
   330  018D                     	;# 
   331  0000                     	;# 
   332  0001                     	;# 
   333  0002                     	;# 
   334  0003                     	;# 
   335  0004                     	;# 
   336  0005                     	;# 
   337  0006                     	;# 
   338  0007                     	;# 
   339  0009                     	;# 
   340  000A                     	;# 
   341  000B                     	;# 
   342  000C                     	;# 
   343  000D                     	;# 
   344  000E                     	;# 
   345  000E                     	;# 
   346  000F                     	;# 
   347  0010                     	;# 
   348  0011                     	;# 
   349  0012                     	;# 
   350  0013                     	;# 
   351  0014                     	;# 
   352  0015                     	;# 
   353  0015                     	;# 
   354  0016                     	;# 
   355  0017                     	;# 
   356  0018                     	;# 
   357  0019                     	;# 
   358  001A                     	;# 
   359  001B                     	;# 
   360  001B                     	;# 
   361  001C                     	;# 
   362  001D                     	;# 
   363  001E                     	;# 
   364  001F                     	;# 
   365  0081                     	;# 
   366  0085                     	;# 
   367  0086                     	;# 
   368  0087                     	;# 
   369  0089                     	;# 
   370  008C                     	;# 
   371  008D                     	;# 
   372  008E                     	;# 
   373  008F                     	;# 
   374  0090                     	;# 
   375  0091                     	;# 
   376  0092                     	;# 
   377  0093                     	;# 
   378  0093                     	;# 
   379  0093                     	;# 
   380  0094                     	;# 
   381  0095                     	;# 
   382  0096                     	;# 
   383  0097                     	;# 
   384  0098                     	;# 
   385  0099                     	;# 
   386  009A                     	;# 
   387  009B                     	;# 
   388  009C                     	;# 
   389  009D                     	;# 
   390  009E                     	;# 
   391  009F                     	;# 
   392  0105                     	;# 
   393  0107                     	;# 
   394  0108                     	;# 
   395  0109                     	;# 
   396  010C                     	;# 
   397  010C                     	;# 
   398  010D                     	;# 
   399  010E                     	;# 
   400  010F                     	;# 
   401  0185                     	;# 
   402  0187                     	;# 
   403  0188                     	;# 
   404  0189                     	;# 
   405  018C                     	;# 
   406  018D                     	;# 
   407  0000                     	;# 
   408  0001                     	;# 
   409  0002                     	;# 
   410  0003                     	;# 
   411  0004                     	;# 
   412  0005                     	;# 
   413  0006                     	;# 
   414  0007                     	;# 
   415  0009                     	;# 
   416  000A                     	;# 
   417  000B                     	;# 
   418  000C                     	;# 
   419  000D                     	;# 
   420  000E                     	;# 
   421  000E                     	;# 
   422  000F                     	;# 
   423  0010                     	;# 
   424  0011                     	;# 
   425  0012                     	;# 
   426  0013                     	;# 
   427  0014                     	;# 
   428  0015                     	;# 
   429  0015                     	;# 
   430  0016                     	;# 
   431  0017                     	;# 
   432  0018                     	;# 
   433  0019                     	;# 
   434  001A                     	;# 
   435  001B                     	;# 
   436  001B                     	;# 
   437  001C                     	;# 
   438  001D                     	;# 
   439  001E                     	;# 
   440  001F                     	;# 
   441  0081                     	;# 
   442  0085                     	;# 
   443  0086                     	;# 
   444  0087                     	;# 
   445  0089                     	;# 
   446  008C                     	;# 
   447  008D                     	;# 
   448  008E                     	;# 
   449  008F                     	;# 
   450  0090                     	;# 
   451  0091                     	;# 
   452  0092                     	;# 
   453  0093                     	;# 
   454  0093                     	;# 
   455  0093                     	;# 
   456  0094                     	;# 
   457  0095                     	;# 
   458  0096                     	;# 
   459  0097                     	;# 
   460  0098                     	;# 
   461  0099                     	;# 
   462  009A                     	;# 
   463  009B                     	;# 
   464  009C                     	;# 
   465  009D                     	;# 
   466  009E                     	;# 
   467  009F                     	;# 
   468  0105                     	;# 
   469  0107                     	;# 
   470  0108                     	;# 
   471  0109                     	;# 
   472  010C                     	;# 
   473  010C                     	;# 
   474  010D                     	;# 
   475  010E                     	;# 
   476  010F                     	;# 
   477  0185                     	;# 
   478  0187                     	;# 
   479  0188                     	;# 
   480  0189                     	;# 
   481  018C                     	;# 
   482  018D                     	;# 
   483  0000                     	;# 
   484  0001                     	;# 
   485  0002                     	;# 
   486  0003                     	;# 
   487  0004                     	;# 
   488  0005                     	;# 
   489  0006                     	;# 
   490  0007                     	;# 
   491  0009                     	;# 
   492  000A                     	;# 
   493  000B                     	;# 
   494  000C                     	;# 
   495  000D                     	;# 
   496  000E                     	;# 
   497  000E                     	;# 
   498  000F                     	;# 
   499  0010                     	;# 
   500  0011                     	;# 
   501  0012                     	;# 
   502  0013                     	;# 
   503  0014                     	;# 
   504  0015                     	;# 
   505  0015                     	;# 
   506  0016                     	;# 
   507  0017                     	;# 
   508  0018                     	;# 
   509  0019                     	;# 
   510  001A                     	;# 
   511  001B                     	;# 
   512  001B                     	;# 
   513  001C                     	;# 
   514  001D                     	;# 
   515  001E                     	;# 
   516  001F                     	;# 
   517  0081                     	;# 
   518  0085                     	;# 
   519  0086                     	;# 
   520  0087                     	;# 
   521  0089                     	;# 
   522  008C                     	;# 
   523  008D                     	;# 
   524  008E                     	;# 
   525  008F                     	;# 
   526  0090                     	;# 
   527  0091                     	;# 
   528  0092                     	;# 
   529  0093                     	;# 
   530  0093                     	;# 
   531  0093                     	;# 
   532  0094                     	;# 
   533  0095                     	;# 
   534  0096                     	;# 
   535  0097                     	;# 
   536  0098                     	;# 
   537  0099                     	;# 
   538  009A                     	;# 
   539  009B                     	;# 
   540  009C                     	;# 
   541  009D                     	;# 
   542  009E                     	;# 
   543  009F                     	;# 
   544  0105                     	;# 
   545  0107                     	;# 
   546  0108                     	;# 
   547  0109                     	;# 
   548  010C                     	;# 
   549  010C                     	;# 
   550  010D                     	;# 
   551  010E                     	;# 
   552  010F                     	;# 
   553  0185                     	;# 
   554  0187                     	;# 
   555  0188                     	;# 
   556  0189                     	;# 
   557  018C                     	;# 
   558  018D                     	;# 
   559  0000                     	;# 
   560  0001                     	;# 
   561  0002                     	;# 
   562  0003                     	;# 
   563  0004                     	;# 
   564  0005                     	;# 
   565  0006                     	;# 
   566  0007                     	;# 
   567  0009                     	;# 
   568  000A                     	;# 
   569  000B                     	;# 
   570  000C                     	;# 
   571  000D                     	;# 
   572  000E                     	;# 
   573  000E                     	;# 
   574  000F                     	;# 
   575  0010                     	;# 
   576  0011                     	;# 
   577  0012                     	;# 
   578  0013                     	;# 
   579  0014                     	;# 
   580  0015                     	;# 
   581  0015                     	;# 
   582  0016                     	;# 
   583  0017                     	;# 
   584  0018                     	;# 
   585  0019                     	;# 
   586  001A                     	;# 
   587  001B                     	;# 
   588  001B                     	;# 
   589  001C                     	;# 
   590  001D                     	;# 
   591  001E                     	;# 
   592  001F                     	;# 
   593  0081                     	;# 
   594  0085                     	;# 
   595  0086                     	;# 
   596  0087                     	;# 
   597  0089                     	;# 
   598  008C                     	;# 
   599  008D                     	;# 
   600  008E                     	;# 
   601  008F                     	;# 
   602  0090                     	;# 
   603  0091                     	;# 
   604  0092                     	;# 
   605  0093                     	;# 
   606  0093                     	;# 
   607  0093                     	;# 
   608  0094                     	;# 
   609  0095                     	;# 
   610  0096                     	;# 
   611  0097                     	;# 
   612  0098                     	;# 
   613  0099                     	;# 
   614  009A                     	;# 
   615  009B                     	;# 
   616  009C                     	;# 
   617  009D                     	;# 
   618  009E                     	;# 
   619  009F                     	;# 
   620  0105                     	;# 
   621  0107                     	;# 
   622  0108                     	;# 
   623  0109                     	;# 
   624  010C                     	;# 
   625  010C                     	;# 
   626  010D                     	;# 
   627  010E                     	;# 
   628  010F                     	;# 
   629  0185                     	;# 
   630  0187                     	;# 
   631  0188                     	;# 
   632  0189                     	;# 
   633  018C                     	;# 
   634  018D                     	;# 
   635  0000                     	;# 
   636  0001                     	;# 
   637  0002                     	;# 
   638  0003                     	;# 
   639  0004                     	;# 
   640  0005                     	;# 
   641  0006                     	;# 
   642  0007                     	;# 
   643  0009                     	;# 
   644  000A                     	;# 
   645  000B                     	;# 
   646  000C                     	;# 
   647  000D                     	;# 
   648  000E                     	;# 
   649  000E                     	;# 
   650  000F                     	;# 
   651  0010                     	;# 
   652  0011                     	;# 
   653  0012                     	;# 
   654  0013                     	;# 
   655  0014                     	;# 
   656  0015                     	;# 
   657  0015                     	;# 
   658  0016                     	;# 
   659  0017                     	;# 
   660  0018                     	;# 
   661  0019                     	;# 
   662  001A                     	;# 
   663  001B                     	;# 
   664  001B                     	;# 
   665  001C                     	;# 
   666  001D                     	;# 
   667  001E                     	;# 
   668  001F                     	;# 
   669  0081                     	;# 
   670  0085                     	;# 
   671  0086                     	;# 
   672  0087                     	;# 
   673  0089                     	;# 
   674  008C                     	;# 
   675  008D                     	;# 
   676  008E                     	;# 
   677  008F                     	;# 
   678  0090                     	;# 
   679  0091                     	;# 
   680  0092                     	;# 
   681  0093                     	;# 
   682  0093                     	;# 
   683  0093                     	;# 
   684  0094                     	;# 
   685  0095                     	;# 
   686  0096                     	;# 
   687  0097                     	;# 
   688  0098                     	;# 
   689  0099                     	;# 
   690  009A                     	;# 
   691  009B                     	;# 
   692  009C                     	;# 
   693  009D                     	;# 
   694  009E                     	;# 
   695  009F                     	;# 
   696  0105                     	;# 
   697  0107                     	;# 
   698  0108                     	;# 
   699  0109                     	;# 
   700  010C                     	;# 
   701  010C                     	;# 
   702  010D                     	;# 
   703  010E                     	;# 
   704  010F                     	;# 
   705  0185                     	;# 
   706  0187                     	;# 
   707  0188                     	;# 
   708  0189                     	;# 
   709  018C                     	;# 
   710  018D                     	;# 
   711  0000                     	;# 
   712  0001                     	;# 
   713  0002                     	;# 
   714  0003                     	;# 
   715  0004                     	;# 
   716  0005                     	;# 
   717  0006                     	;# 
   718  0007                     	;# 
   719  0009                     	;# 
   720  000A                     	;# 
   721  000B                     	;# 
   722  000C                     	;# 
   723  000D                     	;# 
   724  000E                     	;# 
   725  000E                     	;# 
   726  000F                     	;# 
   727  0010                     	;# 
   728  0011                     	;# 
   729  0012                     	;# 
   730  0013                     	;# 
   731  0014                     	;# 
   732  0015                     	;# 
   733  0015                     	;# 
   734  0016                     	;# 
   735  0017                     	;# 
   736  0018                     	;# 
   737  0019                     	;# 
   738  001A                     	;# 
   739  001B                     	;# 
   740  001B                     	;# 
   741  001C                     	;# 
   742  001D                     	;# 
   743  001E                     	;# 
   744  001F                     	;# 
   745  0081                     	;# 
   746  0085                     	;# 
   747  0086                     	;# 
   748  0087                     	;# 
   749  0089                     	;# 
   750  008C                     	;# 
   751  008D                     	;# 
   752  008E                     	;# 
   753  008F                     	;# 
   754  0090                     	;# 
   755  0091                     	;# 
   756  0092                     	;# 
   757  0093                     	;# 
   758  0093                     	;# 
   759  0093                     	;# 
   760  0094                     	;# 
   761  0095                     	;# 
   762  0096                     	;# 
   763  0097                     	;# 
   764  0098                     	;# 
   765  0099                     	;# 
   766  009A                     	;# 
   767  009B                     	;# 
   768  009C                     	;# 
   769  009D                     	;# 
   770  009E                     	;# 
   771  009F                     	;# 
   772  0105                     	;# 
   773  0107                     	;# 
   774  0108                     	;# 
   775  0109                     	;# 
   776  010C                     	;# 
   777  010C                     	;# 
   778  010D                     	;# 
   779  010E                     	;# 
   780  010F                     	;# 
   781  0185                     	;# 
   782  0187                     	;# 
   783  0188                     	;# 
   784  0189                     	;# 
   785  018C                     	;# 
   786  018D                     	;# 
   787  0000                     	;# 
   788  0001                     	;# 
   789  0002                     	;# 
   790  0003                     	;# 
   791  0004                     	;# 
   792  0005                     	;# 
   793  0006                     	;# 
   794  0007                     	;# 
   795  0009                     	;# 
   796  000A                     	;# 
   797  000B                     	;# 
   798  000C                     	;# 
   799  000D                     	;# 
   800  000E                     	;# 
   801  000E                     	;# 
   802  000F                     	;# 
   803  0010                     	;# 
   804  0011                     	;# 
   805  0012                     	;# 
   806  0013                     	;# 
   807  0014                     	;# 
   808  0015                     	;# 
   809  0015                     	;# 
   810  0016                     	;# 
   811  0017                     	;# 
   812  0018                     	;# 
   813  0019                     	;# 
   814  001A                     	;# 
   815  001B                     	;# 
   816  001B                     	;# 
   817  001C                     	;# 
   818  001D                     	;# 
   819  001E                     	;# 
   820  001F                     	;# 
   821  0081                     	;# 
   822  0085                     	;# 
   823  0086                     	;# 
   824  0087                     	;# 
   825  0089                     	;# 
   826  008C                     	;# 
   827  008D                     	;# 
   828  008E                     	;# 
   829  008F                     	;# 
   830  0090                     	;# 
   831  0091                     	;# 
   832  0092                     	;# 
   833  0093                     	;# 
   834  0093                     	;# 
   835  0093                     	;# 
   836  0094                     	;# 
   837  0095                     	;# 
   838  0096                     	;# 
   839  0097                     	;# 
   840  0098                     	;# 
   841  0099                     	;# 
   842  009A                     	;# 
   843  009B                     	;# 
   844  009C                     	;# 
   845  009D                     	;# 
   846  009E                     	;# 
   847  009F                     	;# 
   848  0105                     	;# 
   849  0107                     	;# 
   850  0108                     	;# 
   851  0109                     	;# 
   852  010C                     	;# 
   853  010C                     	;# 
   854  010D                     	;# 
   855  010E                     	;# 
   856  010F                     	;# 
   857  0185                     	;# 
   858  0187                     	;# 
   859  0188                     	;# 
   860  0189                     	;# 
   861  018C                     	;# 
   862  018D                     	;# 
   863                           
   864                           	psect	idataBANK0
   865  1193                     __pidataBANK0:
   866                           
   867                           ;initializer for _brightness
   868  1193  3414               	retlw	20
   869                           
   870                           ;initializer for _AM_PM
   871  1194  3405               	retlw	5
   872                           
   873                           ;initializer for _Clock_type
   874  1195  3406               	retlw	6
   875                           
   876                           ;initializer for _BackLight_State
   877  1196  3408               	retlw	8
   878                           
   879                           	psect	idataBANK1
   880  118D                     __pidataBANK1:
   881                           
   882                           ;initializer for _colorIncrement
   883  118D  3402               	retlw	2
   884  118E  3400               	retlw	0
   885                           
   886                           	psect	idataBANK3
   887  119E                     __pidataBANK3:
   888                           
   889                           ;initializer for _days
   890  119E  3453               	retlw	83
   891  119F  344D               	retlw	77
   892  11A0  3454               	retlw	84
   893  11A1  3457               	retlw	87
   894  11A2  3474               	retlw	116
   895  11A3  3446               	retlw	70
   896  11A4  3473               	retlw	115
   897                           
   898                           	psect	strings
   899  1000                     __pstrings:
   900  1000                     stringtab:
   901  1000                     __stringtab:
   902                           
   903                           ;	String table - string pointers are 1 byte each
   904  1000  1BFF               	btfsc	btemp+1,7
   905  1001  280A               	ljmp	stringcode
   906  1002  1383               	bcf	3,7
   907  1003  187F               	btfsc	btemp+1,0
   908  1004  1783               	bsf	3,7
   909  1005  0800               	movf	0,w
   910  1006  0A84               	incf	4,f
   911  1007  1903               	skipnz
   912  1008  0AFF               	incf	btemp+1,f
   913  1009  0008               	return
   914  100A                     stringcode:
   915  100A                     stringdir:
   916  100A  3010               	movlw	high stringdir
   917  100B  008A               	movwf	10
   918  100C  0804               	movf	4,w
   919  100D  0A84               	incf	4,f
   920  100E  0782               	addwf	2,f
   921  100F                     __stringbase:
   922  100F  3400               	retlw	0
   923  1010                     __end_of__stringtab:
   924  1010                     _dpowers:
   925  1010  3401               	retlw	1
   926  1011  3400               	retlw	0
   927  1012  340A               	retlw	10
   928  1013  3400               	retlw	0
   929  1014  3464               	retlw	100
   930  1015  3400               	retlw	0
   931  1016  34E8               	retlw	232
   932  1017  3403               	retlw	3
   933  1018  3410               	retlw	16
   934  1019  3427               	retlw	39
   935  101A                     __end_of_dpowers:
   936  101A                     _hexpowers:
   937  101A  3401               	retlw	1
   938  101B  3400               	retlw	0
   939  101C  3410               	retlw	16
   940  101D  3400               	retlw	0
   941  101E  3400               	retlw	0
   942  101F  3401               	retlw	1
   943  1020  3400               	retlw	0
   944  1021  3410               	retlw	16
   945  1022                     __end_of_hexpowers:
   946  0015                     _CCPR1L	set	21
   947  0006                     _PORTBbits	set	6
   948  0017                     _CCP1CONbits	set	23
   949  0012                     _T2CON	set	18
   950  0006                     _PORTB	set	6
   951  000C                     _PIR1bits	set	12
   952  001E                     _ADRESH	set	30
   953  001F                     _ADCON0bits	set	31
   954  0014                     _SSPCON	set	20
   955  0013                     _SSPBUF	set	19
   956  003B                     _RC3	set	59
   957  0035                     _RB5	set	53
   958  004B                     _RE3	set	75
   959  0034                     _RB4	set	52
   960  0063                     _SSPIF	set	99
   961  009D                     _PSTRCONbits	set	157
   962  0086                     _TRISBbits	set	134
   963  0092                     _PR2	set	146
   964  008C                     _PIE1bits	set	140
   965  009F                     _ADCON1bits	set	159
   966  0089                     _TRISE	set	137
   967  0086                     _TRISB	set	134
   968  009E                     _ADRESL	set	158
   969  0091                     _SSPCON2bits	set	145
   970  0093                     _SSPADD	set	147
   971  0091                     _SSPCON2	set	145
   972  0094                     _SSPSTAT	set	148
   973  0094                     _SSPSTATbits	set	148
   974  048C                     _ACKEN	set	1164
   975  048D                     _ACKDT	set	1165
   976  048A                     _PEN	set	1162
   977  0489                     _RSEN	set	1161
   978  048E                     _ACKSTAT	set	1166
   979  0463                     _SSPIE	set	1123
   980  0431                     _TRISB1	set	1073
   981  0430                     _TRISB0	set	1072
   982  048B                     _RCEN	set	1163
   983  0189                     _ANSELHbits	set	393
   984  0188                     _ANSELbits	set	392
   985  0189                     _ANSELH	set	393
   986  0188                     _ANSEL	set	392
   987  1022                     STR_25:
   988  1022  3430               	retlw	48	;'0'
   989  1023  3431               	retlw	49	;'1'
   990  1024  3432               	retlw	50	;'2'
   991  1025  3433               	retlw	51	;'3'
   992  1026  3434               	retlw	52	;'4'
   993  1027  3435               	retlw	53	;'5'
   994  1028  3436               	retlw	54	;'6'
   995  1029  3437               	retlw	55	;'7'
   996  102A  3438               	retlw	56	;'8'
   997  102B  3439               	retlw	57	;'9'
   998  102C  3461               	retlw	97	;'a'
   999  102D  3462               	retlw	98	;'b'
  1000  102E  3463               	retlw	99	;'c'
  1001  102F  3464               	retlw	100	;'d'
  1002  1030  3465               	retlw	101	;'e'
  1003  1031  3466               	retlw	102	;'f'
  1004  1032  3400               	retlw	0
  1005  1033                     STR_4:
  1006  1033  3448               	retlw	72	;'H'
  1007  1034  3465               	retlw	101	;'e'
  1008  1035  346C               	retlw	108	;'l'
  1009  1036  346C               	retlw	108	;'l'
  1010  1037  346F               	retlw	111	;'o'
  1011  1038  3420               	retlw	32	;' '
  1012  1039  3454               	retlw	84	;'T'
  1013  103A  3468               	retlw	104	;'h'
  1014  103B  3465               	retlw	101	;'e'
  1015  103C  3472               	retlw	114	;'r'
  1016  103D  3465               	retlw	101	;'e'
  1017  103E  3400               	retlw	0
  1018  103F                     STR_1:
  1019  103F  3454               	retlw	84	;'T'
  1020  1040  3465               	retlw	101	;'e'
  1021  1041  346D               	retlw	109	;'m'
  1022  1042  3470               	retlw	112	;'p'
  1023  1043  343A               	retlw	58	;':'
  1024  1044  3425               	retlw	37	;'%'
  1025  1045  3433               	retlw	51	;'3'
  1026  1046  3464               	retlw	100	;'d'
  1027  1047  342A               	retlw	42	;'*'
  1028  1048  3443               	retlw	67	;'C'
  1029  1049  3400               	retlw	0
  1030  104A                     STR_2:
  1031  104A  3454               	retlw	84	;'T'
  1032  104B  3465               	retlw	101	;'e'
  1033  104C  346D               	retlw	109	;'m'
  1034  104D  3470               	retlw	112	;'p'
  1035  104E  343A               	retlw	58	;':'
  1036  104F  3425               	retlw	37	;'%'
  1037  1050  3433               	retlw	51	;'3'
  1038  1051  3464               	retlw	100	;'d'
  1039  1052  342A               	retlw	42	;'*'
  1040  1053  3446               	retlw	70	;'F'
  1041  1054  3400               	retlw	0
  1042  1055                     STR_13:
  1043  1055  3443               	retlw	67	;'C'
  1044  1056  3461               	retlw	97	;'a'
  1045  1057  346C               	retlw	108	;'l'
  1046  1058  3420               	retlw	32	;' '
  1047  1059  3425               	retlw	37	;'%'
  1048  105A  3478               	retlw	120	;'x'
  1049  105B  342D               	retlw	45	;'-'
  1050  105C  3400               	retlw	0
  1051  105D                     STR_9:
  1052  105D  3454               	retlw	84	;'T'
  1053  105E  3469               	retlw	105	;'i'
  1054  105F  346D               	retlw	109	;'m'
  1055  1060  343A               	retlw	58	;':'
  1056  1061  3425               	retlw	37	;'%'
  1057  1062  3478               	retlw	120	;'x'
  1058  1063  343A               	retlw	58	;':'
  1059  1064  3400               	retlw	0
  1060  1065                     STR_24:
  1061  1065  3428               	retlw	40	;'('
  1062  1066  346E               	retlw	110	;'n'
  1063  1067  3475               	retlw	117	;'u'
  1064  1068  346C               	retlw	108	;'l'
  1065  1069  346C               	retlw	108	;'l'
  1066  106A  3429               	retlw	41	;')'
  1067  106B  3400               	retlw	0
  1068  106C                     STR_7:
  1069  106C  3425               	retlw	37	;'%'
  1070  106D  3478               	retlw	120	;'x'
  1071  106E  3420               	retlw	32	;' '
  1072  106F  3400               	retlw	0
  1073  1070                     STR_19:
  1074  1070  3457               	retlw	87	;'W'
  1075  1071  3465               	retlw	101	;'e'
  1076  1072  3464               	retlw	100	;'d'
  1077  1073  3400               	retlw	0
  1078  1074                     STR_18:
  1079  1074  3454               	retlw	84	;'T'
  1080  1075  3475               	retlw	117	;'u'
  1081  1076  3465               	retlw	101	;'e'
  1082  1077  3400               	retlw	0
  1083  1078                     STR_21:
  1084  1078  3446               	retlw	70	;'F'
  1085  1079  3472               	retlw	114	;'r'
  1086  107A  3469               	retlw	105	;'i'
  1087  107B  3400               	retlw	0
  1088  107C                     STR_17:
  1089  107C  344D               	retlw	77	;'M'
  1090  107D  346F               	retlw	111	;'o'
  1091  107E  346E               	retlw	110	;'n'
  1092  107F  3400               	retlw	0
  1093  1080                     STR_16:
  1094  1080  3453               	retlw	83	;'S'
  1095  1081  3475               	retlw	117	;'u'
  1096  1082  346E               	retlw	110	;'n'
  1097  1083  3400               	retlw	0
  1098  1084                     STR_22:
  1099  1084  3453               	retlw	83	;'S'
  1100  1085  3461               	retlw	97	;'a'
  1101  1086  3474               	retlw	116	;'t'
  1102  1087  3400               	retlw	0
  1103  1088                     STR_20:
  1104  1088  3454               	retlw	84	;'T'
  1105  1089  3468               	retlw	104	;'h'
  1106  108A  3475               	retlw	117	;'u'
  1107  108B  3400               	retlw	0
  1108  108C                     STR_23:
  1109  108C  3449               	retlw	73	;'I'
  1110  108D  346E               	retlw	110	;'n'
  1111  108E  3476               	retlw	118	;'v'
  1112  108F  3400               	retlw	0
  1113  1090                     STR_6:
  1114  1090  3441               	retlw	65	;'A'
  1115  1091  344D               	retlw	77	;'M'
  1116  1092  3400               	retlw	0
  1117  1093                     STR_5:
  1118  1093  3450               	retlw	80	;'P'
  1119  1094  344D               	retlw	77	;'M'
  1120  1095  3400               	retlw	0
  1121  1096                     STR_3:
  1122  1096  3425               	retlw	37	;'%'
  1123  1097  3473               	retlw	115	;'s'
  1124  1098  3400               	retlw	0
  1125  106C                     
  1126                           	psect	cinit
  1127  07B8                     start_initialization:	
  1128                           ; #config settings
  1129                           
  1130  07B8                     __initialization:
  1131                           
  1132                           ; Initialize objects allocated to BANK3
  1133  07B8  1783               	bsf	3,7	;select IRP bank2
  1134  07B9  30B5               	movlw	low (__pdataBANK3+7)
  1135  07BA  00FD               	movwf	btemp+-1
  1136  07BB  3011               	movlw	high __pidataBANK3
  1137  07BC  00FE               	movwf	btemp
  1138  07BD  309E               	movlw	low __pidataBANK3
  1139  07BE  00FF               	movwf	btemp+1
  1140  07BF  30AE               	movlw	low __pdataBANK3
  1141  07C0  0084               	movwf	4
  1142  07C1  160A  118A  21E0  120A  118A  	fcall	init_ram0
  1143                           
  1144                           ; Initialize objects allocated to BANK1
  1145  07C6  1683               	bsf	3,5	;RP0=1, select bank1
  1146  07C7  1303               	bcf	3,6	;RP1=0, select bank1
  1147  07C8  160A  118A  218D  120A  118A  	fcall	__pidataBANK1	;fetch initializer
  1148  07CD  00E8               	movwf	__pdataBANK1& (0+127)
  1149  07CE  160A  118A  218E  120A  118A  	fcall	__pidataBANK1+1	;fetch initializer
  1150  07D3  00E9               	movwf	(__pdataBANK1+1)& (0+127)
  1151                           
  1152                           ; Initialize objects allocated to BANK0
  1153  07D4  1383               	bcf	3,7	;select IRP bank0
  1154  07D5  306F               	movlw	low (__pdataBANK0+4)
  1155  07D6  00FD               	movwf	btemp+-1
  1156  07D7  3011               	movlw	high __pidataBANK0
  1157  07D8  00FE               	movwf	btemp
  1158  07D9  3093               	movlw	low __pidataBANK0
  1159  07DA  00FF               	movwf	btemp+1
  1160  07DB  306B               	movlw	low __pdataBANK0
  1161  07DC  0084               	movwf	4
  1162  07DD  160A  118A  21E0  120A  118A  	fcall	init_ram0
  1163                           
  1164                           ; Clear objects allocated to BANK3
  1165  07E2  1783               	bsf	3,7	;select IRP bank2
  1166  07E3  3090               	movlw	low __pbssBANK3
  1167  07E4  0084               	movwf	4
  1168  07E5  30AE               	movlw	low (__pbssBANK3+30)
  1169  07E6  160A  118A  21AD  120A  118A  	fcall	clear_ram0
  1170                           
  1171                           ; Clear objects allocated to BANK1
  1172  07EB  1383               	bcf	3,7	;select IRP bank0
  1173  07EC  30A0               	movlw	low __pbssBANK1
  1174  07ED  0084               	movwf	4
  1175  07EE  30D4               	movlw	low (__pbssBANK1+52)
  1176  07EF  160A  118A  21AD  120A  118A  	fcall	clear_ram0
  1177                           
  1178                           ; Clear objects allocated to BANK0
  1179  07F4  3062               	movlw	low __pbssBANK0
  1180  07F5  0084               	movwf	4
  1181  07F6  306B               	movlw	low (__pbssBANK0+9)
  1182  07F7  160A  118A  21AD  120A  118A  	fcall	clear_ram0
  1183  07FC                     end_of_initialization:	
  1184                           ;End of C runtime variable initialization code
  1185                           
  1186  07FC                     __end_of__initialization:
  1187  07FC  0183               	clrf	3
  1188  07FD  120A  118A  2815   	ljmp	_main	;jump to C main() function
  1189                           
  1190                           	psect	bssBANK0
  1191  0062                     __pbssBANK0:
  1192  0062                     _hour:
  1193  0062                     	ds	2
  1194  0064                     _min:
  1195  0064                     	ds	2
  1196  0066                     _sec:
  1197  0066                     	ds	2
  1198  0068                     _RS:
  1199  0068                     	ds	1
  1200  0069                     _result:
  1201  0069                     	ds	2
  1202                           
  1203                           	psect	dataBANK0
  1204  006B                     __pdataBANK0:
  1205  006B                     _brightness:
  1206  006B                     	ds	1
  1207  006C                     _AM_PM:
  1208  006C                     	ds	1
  1209  006D                     _Clock_type:
  1210  006D                     	ds	1
  1211  006E                     _BackLight_State:
  1212  006E                     	ds	1
  1213                           
  1214                           	psect	bssBANK1
  1215  00A0                     __pbssBANK1:
  1216  00A0                     _photo_result:
  1217  00A0                     	ds	2
  1218  00A2                     _btnState:
  1219  00A2                     	ds	2
  1220  00A4                     _lastStateCLK:
  1221  00A4                     	ds	2
  1222  00A6                     _Year:
  1223  00A6                     	ds	2
  1224  00A8                     _Month:
  1225  00A8                     	ds	2
  1226  00AA                     _Date:
  1227  00AA                     	ds	2
  1228  00AC                     _Day:
  1229  00AC                     	ds	2
  1230  00AE                     _alarmTime:
  1231  00AE                     	ds	2
  1232  00B0                     _Temp_Mode:
  1233  00B0                     	ds	2
  1234  00B2                     _temperature_f:
  1235  00B2                     	ds	2
  1236  00B4                     _temperature_c:
  1237  00B4                     	ds	2
  1238  00B6                     _hours:
  1239  00B6                     	ds	10
  1240  00C0                     _mins:
  1241  00C0                     	ds	10
  1242  00CA                     _secs:
  1243  00CA                     	ds	10
  1244                           
  1245                           	psect	dataBANK1
  1246  00E8                     __pdataBANK1:
  1247  00E8                     _colorIncrement:
  1248  00E8                     	ds	2
  1249                           
  1250                           	psect	bssBANK3
  1251  0190                     __pbssBANK3:
  1252  0190                     _year:
  1253  0190                     	ds	10
  1254  019A                     _month:
  1255  019A                     	ds	10
  1256  01A4                     _date:
  1257  01A4                     	ds	10
  1258                           
  1259                           	psect	dataBANK3
  1260  01AE                     __pdataBANK3:
  1261  01AE                     _days:
  1262  01AE                     	ds	7
  1263                           
  1264                           	psect	inittext
  1265  11DC                     init_fetch0:	
  1266                           ;	Called with low address in FSR and high address in W
  1267                           
  1268  11DC  087E               	movf	btemp,w
  1269  11DD  008A               	movwf	10
  1270  11DE  087F               	movf	btemp+1,w
  1271  11DF  0082               	movwf	2
  1272  11E0                     init_ram0:	
  1273                           ;Called with:
  1274                           ;	high address of idata address in btemp 
  1275                           ;	low address of idata address in btemp+1 
  1276                           ;	low address of data in FSR
  1277                           ;	high address + 1 of data in btemp-1
  1278                           
  1279  11E0  160A  118A  21DC  160A  118A  	fcall	init_fetch0
  1280  11E5  0080               	movwf	0
  1281  11E6  0A84               	incf	4,f
  1282  11E7  0804               	movf	4,w
  1283  11E8  067D               	xorwf	btemp+-1,w
  1284  11E9  1903               	btfsc	3,2
  1285  11EA  3400               	retlw	0
  1286  11EB  0AFF               	incf	btemp+1,f
  1287  11EC  1903               	btfsc	3,2
  1288  11ED  0AFE               	incf	btemp,f
  1289  11EE  29E0               	goto	init_ram0
  1290                           
  1291                           	psect	clrtext
  1292  11AD                     clear_ram0:	
  1293                           ;	Called with FSR containing the base address, and
  1294                           ;	W with the last address+1
  1295                           
  1296  11AD  0064               	clrwdt	;clear the watchdog before getting into this loop
  1297  11AE                     clrloop0:
  1298  11AE  0180               	clrf	0	;clear RAM location pointed to by FSR
  1299  11AF  0A84               	incf	4,f	;increment pointer
  1300  11B0  0604               	xorwf	4,w	;XOR with final address
  1301  11B1  1903               	btfsc	3,2	;have we reached the end yet?
  1302  11B2  3400               	retlw	0	;all done for this memory range, return
  1303  11B3  0604               	xorwf	4,w	;XOR again to restore value
  1304  11B4  29AE               	goto	clrloop0	;do the next byte
  1305                           
  1306                           	psect	cstackBANK1
  1307  00D4                     __pcstackBANK1:
  1308  00D4                     main@buffer3:
  1309                           
  1310                           ; 16 bytes @ 0x0
  1311  00D4                     	ds	16
  1312  00E4                     main@ledMode:
  1313                           
  1314                           ; 2 bytes @ 0x10
  1315  00E4                     	ds	2
  1316  00E6                     main@displayMode:
  1317                           
  1318                           ; 2 bytes @ 0x12
  1319  00E6                     	ds	2
  1320                           
  1321                           	psect	cstackCOMMON
  1322  0070                     __pcstackCOMMON:
  1323  0070                     ?_isdigit:
  1324  0070                     ?_I2C_Ack:	
  1325                           ; 1 bit 
  1326                           
  1327  0070                     ??_I2C_Ack:	
  1328                           ; 1 bytes @ 0x0
  1329                           
  1330  0070                     ?_I2C_Nack:	
  1331                           ; 1 bytes @ 0x0
  1332                           
  1333  0070                     ??_I2C_Nack:	
  1334                           ; 1 bytes @ 0x0
  1335                           
  1336  0070                     ?_I2C_Ready:	
  1337                           ; 1 bytes @ 0x0
  1338                           
  1339  0070                     ??_I2C_Ready:	
  1340                           ; 1 bytes @ 0x0
  1341                           
  1342  0070                     ?_I2C_Write:	
  1343                           ; 1 bytes @ 0x0
  1344                           
  1345  0070                     ??_I2C_Write:	
  1346                           ; 1 bytes @ 0x0
  1347                           
  1348  0070                     ?_I2C_Stop:	
  1349                           ; 1 bytes @ 0x0
  1350                           
  1351  0070                     ??_I2C_Stop:	
  1352                           ; 1 bytes @ 0x0
  1353                           
  1354  0070                     ?_LCD_CMD:	
  1355                           ; 1 bytes @ 0x0
  1356                           
  1357  0070                     ?_IO_Expander_Write:	
  1358                           ; 1 bytes @ 0x0
  1359                           
  1360  0070                     ?_LED_Init:	
  1361                           ; 1 bytes @ 0x0
  1362                           
  1363  0070                     ??_LED_Init:	
  1364                           ; 1 bytes @ 0x0
  1365                           
  1366  0070                     ?_RotaryEncoder_Init:	
  1367                           ; 1 bytes @ 0x0
  1368                           
  1369  0070                     ??_RotaryEncoder_Init:	
  1370                           ; 1 bytes @ 0x0
  1371                           
  1372  0070                     ?_ChangeBrightness:	
  1373                           ; 1 bytes @ 0x0
  1374                           
  1375  0070                     ??_ChangeBrightness:	
  1376                           ; 1 bytes @ 0x0
  1377                           
  1378  0070                     ?_ChangeColor:	
  1379                           ; 1 bytes @ 0x0
  1380                           
  1381  0070                     ?_ReadPhoto:	
  1382                           ; 1 bytes @ 0x0
  1383                           
  1384  0070                     ??_ReadPhoto:	
  1385                           ; 1 bytes @ 0x0
  1386                           
  1387  0070                     ?_printClock:	
  1388                           ; 1 bytes @ 0x0
  1389                           
  1390  0070                     ??_isdigit:	
  1391                           ; 1 bytes @ 0x0
  1392                           
  1393  0070                     ?_I2C_Read:	
  1394                           ; 1 bytes @ 0x0
  1395                           
  1396  0070                     ??_I2C_Read:	
  1397                           ; 1 bytes @ 0x0
  1398                           
  1399  0070                     ?_I2C_Init:	
  1400                           ; 1 bytes @ 0x0
  1401                           
  1402  0070                     ??_I2C_Init:	
  1403                           ; 1 bytes @ 0x0
  1404                           
  1405  0070                     ?_I2C_Start:	
  1406                           ; 1 bytes @ 0x0
  1407                           
  1408  0070                     ?_I2C_Repeated_Start:	
  1409                           ; 1 bytes @ 0x0
  1410                           
  1411  0070                     ?_LCD_Init:	
  1412                           ; 1 bytes @ 0x0
  1413                           
  1414  0070                     ?_LCD_Write_4Bit:	
  1415                           ; 1 bytes @ 0x0
  1416                           
  1417  0070                     ?_LCD_Write_Char:	
  1418                           ; 1 bytes @ 0x0
  1419                           
  1420  0070                     ?_LCD_Clear:	
  1421                           ; 1 bytes @ 0x0
  1422                           
  1423  0070                     ?_Update_Farenheit:	
  1424                           ; 1 bytes @ 0x0
  1425                           
  1426  0070                     ?_Update_Celsius:	
  1427                           ; 1 bytes @ 0x0
  1428                           
  1429  0070                     ?_DisplayTemp:	
  1430                           ; 1 bytes @ 0x0
  1431                           
  1432  0070                     ?_main:	
  1433                           ; 1 bytes @ 0x0
  1434                           
  1435  0070                     ?_RTC_Read_Clock:	
  1436                           ; 1 bytes @ 0x0
  1437                           
  1438  0070                     ?_RTC_Read_Calendar:	
  1439                           ; 1 bytes @ 0x0
  1440                           
  1441  0070                     ?_LED_Color:	
  1442                           ; 1 bytes @ 0x0
  1443                           
  1444  0070                     ?_sendByte:	
  1445                           ; 1 bytes @ 0x0
  1446                           
  1447  0070                     ??_sendByte:	
  1448                           ; 1 bytes @ 0x0
  1449                           
  1450  0070                     ?__Umul8_16:	
  1451                           ; 1 bytes @ 0x0
  1452                           
  1453  0070                     ?___wmul:	
  1454                           ; 2 bytes @ 0x0
  1455                           
  1456  0070                     ?___lwdiv:	
  1457                           ; 2 bytes @ 0x0
  1458                           
  1459  0070                     ?___xxtofl:	
  1460                           ; 2 bytes @ 0x0
  1461                           
  1462  0070                     I2C_Write@data:	
  1463                           ; 4 bytes @ 0x0
  1464                           
  1465  0070                     sendByte@b:	
  1466                           ; 1 bytes @ 0x0
  1467                           
  1468  0070                     __Umul8_16@multiplicand:	
  1469                           ; 1 bytes @ 0x0
  1470                           
  1471  0070                     _isdigit$1347:	
  1472                           ; 1 bytes @ 0x0
  1473                           
  1474  0070                     ___wmul@multiplier:	
  1475                           ; 1 bytes @ 0x0
  1476                           
  1477  0070                     ___lwdiv@divisor:	
  1478                           ; 2 bytes @ 0x0
  1479                           
  1480  0070                     ___xxtofl@val:	
  1481                           ; 2 bytes @ 0x0
  1482                           
  1483                           
  1484                           ; 4 bytes @ 0x0
  1485  0070                     	ds	1
  1486  0071                     ?_sendRGB:
  1487  0071                     ??_I2C_Start:	
  1488                           ; 1 bytes @ 0x1
  1489                           
  1490  0071                     ??_I2C_Repeated_Start:	
  1491                           ; 1 bytes @ 0x1
  1492                           
  1493  0071                     I2C_Read@flag:	
  1494                           ; 1 bytes @ 0x1
  1495                           
  1496  0071                     I2C_Start@slave_write_address:	
  1497                           ; 1 bytes @ 0x1
  1498                           
  1499  0071                     I2C_Repeated_Start@slave_read_address:	
  1500                           ; 1 bytes @ 0x1
  1501                           
  1502  0071                     sendRGB@g:	
  1503                           ; 1 bytes @ 0x1
  1504                           
  1505  0071                     isdigit@c:	
  1506                           ; 1 bytes @ 0x1
  1507                           
  1508                           
  1509                           ; 1 bytes @ 0x1
  1510  0071                     	ds	1
  1511  0072                     ??_IO_Expander_Write:
  1512  0072                     ?_RTC_Clock_Write:	
  1513                           ; 1 bytes @ 0x2
  1514                           
  1515  0072                     ?_RTC_Calendar_Write:	
  1516                           ; 1 bytes @ 0x2
  1517                           
  1518  0072                     ??__Umul8_16:	
  1519                           ; 1 bytes @ 0x2
  1520                           
  1521  0072                     I2C_Read@buffer:	
  1522                           ; 1 bytes @ 0x2
  1523                           
  1524  0072                     IO_Expander_Write@Data:	
  1525                           ; 1 bytes @ 0x2
  1526                           
  1527  0072                     RTC_Clock_Write@min:	
  1528                           ; 1 bytes @ 0x2
  1529                           
  1530  0072                     RTC_Calendar_Write@date:	
  1531                           ; 1 bytes @ 0x2
  1532                           
  1533  0072                     sendRGB@b:	
  1534                           ; 1 bytes @ 0x2
  1535                           
  1536  0072                     ___wmul@multiplicand:	
  1537                           ; 1 bytes @ 0x2
  1538                           
  1539  0072                     ___lwdiv@dividend:	
  1540                           ; 2 bytes @ 0x2
  1541                           
  1542                           
  1543                           ; 2 bytes @ 0x2
  1544  0072                     	ds	1
  1545  0073                     ??_sendRGB:
  1546  0073                     ??_LCD_Write_4Bit:	
  1547                           ; 1 bytes @ 0x3
  1548                           
  1549  0073                     ??_RTC_Read_Clock:	
  1550                           ; 1 bytes @ 0x3
  1551                           
  1552  0073                     ??_RTC_Read_Calendar:	
  1553                           ; 1 bytes @ 0x3
  1554                           
  1555  0073                     RTC_Clock_Write@hour:	
  1556                           ; 1 bytes @ 0x3
  1557                           
  1558  0073                     RTC_Calendar_Write@month:	
  1559                           ; 1 bytes @ 0x3
  1560                           
  1561  0073                     sendRGB@r:	
  1562                           ; 1 bytes @ 0x3
  1563                           
  1564                           
  1565                           ; 1 bytes @ 0x3
  1566  0073                     	ds	1
  1567  0074                     ??_LED_Color:
  1568  0074                     ??___wmul:	
  1569                           ; 1 bytes @ 0x4
  1570                           
  1571  0074                     ??___lwdiv:	
  1572                           ; 1 bytes @ 0x4
  1573                           
  1574  0074                     ??___xxtofl:	
  1575                           ; 1 bytes @ 0x4
  1576                           
  1577  0074                     LCD_Write_4Bit@Nibble:	
  1578                           ; 1 bytes @ 0x4
  1579                           
  1580  0074                     RTC_Clock_Write@AM_PM:	
  1581                           ; 1 bytes @ 0x4
  1582                           
  1583  0074                     RTC_Calendar_Write@year:	
  1584                           ; 1 bytes @ 0x4
  1585                           
  1586  0074                     ___wmul@product:	
  1587                           ; 1 bytes @ 0x4
  1588                           
  1589  0074                     __Umul8_16@product:	
  1590                           ; 2 bytes @ 0x4
  1591                           
  1592                           
  1593                           ; 2 bytes @ 0x4
  1594  0074                     	ds	1
  1595  0075                     ??_LCD_CMD:
  1596  0075                     ??_RTC_Clock_Write:	
  1597                           ; 1 bytes @ 0x5
  1598                           
  1599  0075                     ??_RTC_Calendar_Write:	
  1600                           ; 1 bytes @ 0x5
  1601                           
  1602  0075                     ??_LCD_Write_Char:	
  1603                           ; 1 bytes @ 0x5
  1604                           
  1605  0075                     RTC_Read_Clock@read_clock_address:	
  1606                           ; 1 bytes @ 0x5
  1607                           
  1608  0075                     RTC_Read_Calendar@read_calendar_address:	
  1609                           ; 1 bytes @ 0x5
  1610                           
  1611  0075                     RTC_Calendar_Write@day:	
  1612                           ; 1 bytes @ 0x5
  1613                           
  1614  0075                     ___lwdiv@quotient:	
  1615                           ; 1 bytes @ 0x5
  1616                           
  1617                           
  1618                           ; 2 bytes @ 0x5
  1619  0075                     	ds	1
  1620  0076                     LCD_CMD@CMD:
  1621  0076                     LCD_Write_Char@Data:	
  1622                           ; 1 bytes @ 0x6
  1623                           
  1624  0076                     RTC_Clock_Write@sec:	
  1625                           ; 1 bytes @ 0x6
  1626                           
  1627  0076                     LED_Color@brt:	
  1628                           ; 1 bytes @ 0x6
  1629                           
  1630  0076                     __Umul8_16@word_mpld:	
  1631                           ; 1 bytes @ 0x6
  1632                           
  1633                           
  1634                           ; 2 bytes @ 0x6
  1635  0076                     	ds	1
  1636  0077                     ?_LCD_Write_String:
  1637  0077                     ??_ChangeColor:	
  1638                           ; 1 bytes @ 0x7
  1639                           
  1640  0077                     ??_LCD_Init:	
  1641                           ; 1 bytes @ 0x7
  1642                           
  1643  0077                     ?_LCD_Set_Cursor:	
  1644                           ; 1 bytes @ 0x7
  1645                           
  1646  0077                     ??_LCD_Clear:	
  1647                           ; 1 bytes @ 0x7
  1648                           
  1649  0077                     LCD_Set_Cursor@COL:	
  1650                           ; 1 bytes @ 0x7
  1651                           
  1652  0077                     ___lwdiv@counter:	
  1653                           ; 1 bytes @ 0x7
  1654                           
  1655  0077                     LCD_Write_String@Str:	
  1656                           ; 1 bytes @ 0x7
  1657                           
  1658                           
  1659                           ; 2 bytes @ 0x7
  1660  0077                     	ds	1
  1661  0078                     ??_LCD_Set_Cursor:
  1662  0078                     ?___lwmod:	
  1663                           ; 1 bytes @ 0x8
  1664                           
  1665  0078                     __Umul8_16@multiplier:	
  1666                           ; 2 bytes @ 0x8
  1667                           
  1668  0078                     ___xxtofl@sign:	
  1669                           ; 1 bytes @ 0x8
  1670                           
  1671  0078                     ___lwmod@divisor:	
  1672                           ; 1 bytes @ 0x8
  1673                           
  1674                           
  1675                           ; 2 bytes @ 0x8
  1676  0078                     	ds	1
  1677  0079                     ??_LCD_Write_String:
  1678  0079                     ___xxtofl@exp:	
  1679                           ; 1 bytes @ 0x9
  1680                           
  1681                           
  1682                           ; 1 bytes @ 0x9
  1683  0079                     	ds	1
  1684  007A                     LCD_Set_Cursor@ROW:
  1685  007A                     ___lwmod@dividend:	
  1686                           ; 1 bytes @ 0xA
  1687                           
  1688  007A                     ___xxtofl@arg:	
  1689                           ; 2 bytes @ 0xA
  1690                           
  1691                           
  1692                           ; 4 bytes @ 0xA
  1693  007A                     	ds	2
  1694  007C                     ??___lwmod:
  1695  007C                     LCD_Write_String@i:	
  1696                           ; 1 bytes @ 0xC
  1697                           
  1698                           
  1699                           ; 2 bytes @ 0xC
  1700  007C                     	ds	1
  1701  007D                     ___lwmod@counter:
  1702                           
  1703                           ; 1 bytes @ 0xD
  1704  007D                     	ds	1
  1705                           
  1706                           	psect	cstackBANK0
  1707  0020                     __pcstackBANK0:
  1708  0020                     ?_sprintf:
  1709  0020                     ?___flmul:	
  1710                           ; 2 bytes @ 0x0
  1711                           
  1712  0020                     sprintf@sp:	
  1713                           ; 4 bytes @ 0x0
  1714                           
  1715  0020                     ___flmul@b:	
  1716                           ; 2 bytes @ 0x0
  1717                           
  1718                           
  1719                           ; 4 bytes @ 0x0
  1720  0020                     	ds	2
  1721  0022                     sprintf@f:
  1722                           
  1723                           ; 1 bytes @ 0x2
  1724  0022                     	ds	2
  1725  0024                     ___flmul@a:
  1726                           
  1727                           ; 4 bytes @ 0x4
  1728  0024                     	ds	1
  1729  0025                     ??_sprintf:
  1730                           
  1731                           ; 1 bytes @ 0x5
  1732  0025                     	ds	3
  1733  0028                     ??___flmul:
  1734  0028                     sprintf@idx:	
  1735                           ; 1 bytes @ 0x8
  1736                           
  1737                           
  1738                           ; 1 bytes @ 0x8
  1739  0028                     	ds	1
  1740  0029                     sprintf@prec:
  1741                           
  1742                           ; 1 bytes @ 0x9
  1743  0029                     	ds	1
  1744  002A                     sprintf@cp:
  1745                           
  1746                           ; 2 bytes @ 0xA
  1747  002A                     	ds	2
  1748  002C                     sprintf@ap:
  1749                           
  1750                           ; 1 bytes @ 0xC
  1751  002C                     	ds	1
  1752  002D                     ___flmul@sign:
  1753  002D                     sprintf@len:	
  1754                           ; 1 bytes @ 0xD
  1755                           
  1756                           
  1757                           ; 2 bytes @ 0xD
  1758  002D                     	ds	1
  1759  002E                     ___flmul@grs:
  1760                           
  1761                           ; 4 bytes @ 0xE
  1762  002E                     	ds	1
  1763  002F                     sprintf@flag:
  1764                           
  1765                           ; 1 bytes @ 0xF
  1766  002F                     	ds	1
  1767  0030                     sprintf@val:
  1768                           
  1769                           ; 2 bytes @ 0x10
  1770  0030                     	ds	2
  1771  0032                     ___flmul@aexp:
  1772  0032                     sprintf@width:	
  1773                           ; 1 bytes @ 0x12
  1774                           
  1775                           
  1776                           ; 2 bytes @ 0x12
  1777  0032                     	ds	1
  1778  0033                     ___flmul@bexp:
  1779                           
  1780                           ; 1 bytes @ 0x13
  1781  0033                     	ds	1
  1782  0034                     sprintf@c:
  1783  0034                     ___flmul@prod:	
  1784                           ; 1 bytes @ 0x14
  1785                           
  1786                           
  1787                           ; 4 bytes @ 0x14
  1788  0034                     	ds	1
  1789  0035                     ??_printClock:
  1790  0035                     ??_DisplayTemp:	
  1791                           ; 1 bytes @ 0x15
  1792                           
  1793                           
  1794                           ; 1 bytes @ 0x15
  1795  0035                     	ds	3
  1796  0038                     ___flmul@temp:
  1797  0038                     DisplayTemp@buffer1:	
  1798                           ; 2 bytes @ 0x18
  1799                           
  1800                           
  1801                           ; 16 bytes @ 0x18
  1802  0038                     	ds	2
  1803  003A                     ?___fladd:
  1804  003A                     ___fladd@b:	
  1805                           ; 4 bytes @ 0x1A
  1806                           
  1807                           
  1808                           ; 4 bytes @ 0x1A
  1809  003A                     	ds	4
  1810  003E                     ___fladd@a:
  1811                           
  1812                           ; 4 bytes @ 0x1E
  1813  003E                     	ds	4
  1814  0042                     ??___fladd:
  1815                           
  1816                           ; 1 bytes @ 0x22
  1817  0042                     	ds	6
  1818  0048                     DisplayTemp@buffer2:
  1819                           
  1820                           ; 16 bytes @ 0x28
  1821  0048                     	ds	2
  1822  004A                     ___fladd@signs:
  1823                           
  1824                           ; 1 bytes @ 0x2A
  1825  004A                     	ds	1
  1826  004B                     ___fladd@aexp:
  1827                           
  1828                           ; 1 bytes @ 0x2B
  1829  004B                     	ds	1
  1830  004C                     ___fladd@bexp:
  1831                           
  1832                           ; 1 bytes @ 0x2C
  1833  004C                     	ds	1
  1834  004D                     ___fladd@grs:
  1835                           
  1836                           ; 1 bytes @ 0x2D
  1837  004D                     	ds	1
  1838  004E                     ?___fltol:
  1839  004E                     ___fltol@f1:	
  1840                           ; 4 bytes @ 0x2E
  1841                           
  1842                           
  1843                           ; 4 bytes @ 0x2E
  1844  004E                     	ds	4
  1845  0052                     ??___fltol:
  1846                           
  1847                           ; 1 bytes @ 0x32
  1848  0052                     	ds	5
  1849  0057                     ___fltol@sign1:
  1850                           
  1851                           ; 1 bytes @ 0x37
  1852  0057                     	ds	1
  1853  0058                     ___fltol@exp1:
  1854                           
  1855                           ; 1 bytes @ 0x38
  1856  0058                     	ds	1
  1857  0059                     ??_Update_Farenheit:
  1858  0059                     ??_Update_Celsius:	
  1859                           ; 1 bytes @ 0x39
  1860                           
  1861                           
  1862                           ; 1 bytes @ 0x39
  1863  0059                     	ds	2
  1864  005B                     _Update_Farenheit$1560:
  1865  005B                     _Update_Celsius$1561:	
  1866                           ; 4 bytes @ 0x3B
  1867                           
  1868                           
  1869                           ; 4 bytes @ 0x3B
  1870  005B                     	ds	4
  1871  005F                     ??_main:
  1872                           
  1873                           ; 1 bytes @ 0x3F
  1874  005F                     	ds	3
  1875                           
  1876                           	psect	maintext
  1877  0015                     __pmaintext:	
  1878 ;;
  1879 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1880 ;;
  1881 ;; *************** function _main *****************
  1882 ;; Defined at:
  1883 ;;		line 33 in file "interface_main.c"
  1884 ;; Parameters:    Size  Location     Type
  1885 ;;		None
  1886 ;; Auto vars:     Size  Location     Type
  1887 ;;  buffer3        16    0[BANK1 ] unsigned char [16]
  1888 ;;  displayMode     2   18[BANK1 ] short 
  1889 ;;  ledMode         2   16[BANK1 ] short 
  1890 ;; Return value:  Size  Location     Type
  1891 ;;                  1    wreg      void 
  1892 ;; Registers used:
  1893 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1894 ;; Tracked objects:
  1895 ;;		On entry : B00/0
  1896 ;;		On exit  : 0/0
  1897 ;;		Unchanged: 0/0
  1898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1899 ;;      Params:         0       0       0       0       0
  1900 ;;      Locals:         0       0      20       0       0
  1901 ;;      Temps:          0       3       0       0       0
  1902 ;;      Totals:         0       3      20       0       0
  1903 ;;Total ram usage:       23 bytes
  1904 ;; Hardware stack levels required when called: 8
  1905 ;; This function calls:
  1906 ;;		_ChangeBrightness
  1907 ;;		_ChangeColor
  1908 ;;		_DisplayTemp
  1909 ;;		_I2C_Init
  1910 ;;		_LCD_Clear
  1911 ;;		_LCD_Init
  1912 ;;		_LCD_Write_String
  1913 ;;		_LED_Init
  1914 ;;		_RTC_Calendar_Write
  1915 ;;		_RTC_Clock_Write
  1916 ;;		_ReadPhoto
  1917 ;;		_RotaryEncoder_Init
  1918 ;;		_Update_Celsius
  1919 ;;		_Update_Farenheit
  1920 ;;		_printClock
  1921 ;;		_sprintf
  1922 ;; This function is called by:
  1923 ;;		Startup code after reset
  1924 ;; This function uses a non-reentrant model
  1925 ;;
  1926                           
  1927  0015                     _main:	
  1928                           ;psect for function _main
  1929                           
  1930  0015                     l3715:	
  1931                           ;incstack = 0
  1932                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1933                           
  1934                           
  1935                           ;interface_main.c: 35:     TRISB = 0b00110000;
  1936  0015  3030               	movlw	48
  1937  0016  1683               	bsf	3,5	;RP0=1, select bank1
  1938  0017  1303               	bcf	3,6	;RP1=0, select bank1
  1939  0018  0086               	movwf	6	;volatile
  1940  0019                     l3717:
  1941                           
  1942                           ;interface_main.c: 36:     ANSEL = 0;
  1943  0019  1683               	bsf	3,5	;RP0=1, select bank3
  1944  001A  1703               	bsf	3,6	;RP1=1, select bank3
  1945  001B  0188               	clrf	8	;volatile
  1946  001C                     l3719:
  1947                           
  1948                           ;interface_main.c: 37:     ANSELH = 0x00;
  1949  001C  0189               	clrf	9	;volatile
  1950                           
  1951                           ;interface_main.c: 38:     PORTB = 0b00110000;
  1952  001D  3030               	movlw	48
  1953  001E  1283               	bcf	3,5	;RP0=0, select bank0
  1954  001F  1303               	bcf	3,6	;RP1=0, select bank0
  1955  0020  0086               	movwf	6	;volatile
  1956  0021                     l3721:
  1957                           
  1958                           ;interface_main.c: 39:     TRISE = 0x0;
  1959  0021  1683               	bsf	3,5	;RP0=1, select bank1
  1960  0022  1303               	bcf	3,6	;RP1=0, select bank1
  1961  0023  0189               	clrf	9	;volatile
  1962  0024                     l3723:
  1963                           
  1964                           ;interface_main.c: 41:     I2C_Init();
  1965  0024  160A  118A  2217  120A  118A  	fcall	_I2C_Init
  1966  0029                     l3725:
  1967                           
  1968                           ;interface_main.c: 42:     LCD_Init();
  1969  0029  160A  118A  26DB  120A  118A  	fcall	_LCD_Init
  1970  002E                     l3727:
  1971                           
  1972                           ;interface_main.c: 43:     LED_Init();
  1973  002E  160A  118A  218F  120A  118A  	fcall	_LED_Init
  1974  0033                     l3729:
  1975                           
  1976                           ;interface_main.c: 44:     RotaryEncoder_Init();
  1977  0033  160A  118A  2241  120A  118A  	fcall	_RotaryEncoder_Init
  1978  0038                     l3731:
  1979                           
  1980                           ;interface_main.c: 46:     RTC_Clock_Write(0x00, 0x14, 0x10, 0x40);
  1981  0038  3014               	movlw	20
  1982  0039  1283               	bcf	3,5	;RP0=0, select bank0
  1983  003A  1303               	bcf	3,6	;RP1=0, select bank0
  1984  003B  00DF               	movwf	??_main
  1985  003C  085F               	movf	??_main,w
  1986  003D  00F2               	movwf	RTC_Clock_Write@min
  1987  003E  3010               	movlw	16
  1988  003F  00E0               	movwf	??_main+1
  1989  0040  0860               	movf	??_main+1,w
  1990  0041  00F3               	movwf	RTC_Clock_Write@hour
  1991  0042  3040               	movlw	64
  1992  0043  00E1               	movwf	??_main+2
  1993  0044  0861               	movf	??_main+2,w
  1994  0045  00F4               	movwf	RTC_Clock_Write@AM_PM
  1995  0046  3000               	movlw	0
  1996  0047  160A  118A  2334  120A  118A  	fcall	_RTC_Clock_Write
  1997  004C                     l3733:
  1998                           
  1999                           ;interface_main.c: 47:     RTC_Calendar_Write(0x1, 0x22, 0x04, 0x18);
  2000  004C  3022               	movlw	34
  2001  004D  1283               	bcf	3,5	;RP0=0, select bank0
  2002  004E  1303               	bcf	3,6	;RP1=0, select bank0
  2003  004F  00DF               	movwf	??_main
  2004  0050  085F               	movf	??_main,w
  2005  0051  00F2               	movwf	RTC_Calendar_Write@date
  2006  0052  3004               	movlw	4
  2007  0053  00E0               	movwf	??_main+1
  2008  0054  0860               	movf	??_main+1,w
  2009  0055  00F3               	movwf	RTC_Calendar_Write@month
  2010  0056  3018               	movlw	24
  2011  0057  00E1               	movwf	??_main+2
  2012  0058  0861               	movf	??_main+2,w
  2013  0059  00F4               	movwf	RTC_Calendar_Write@year
  2014  005A  3001               	movlw	1
  2015  005B  160A  118A  235E  120A  118A  	fcall	_RTC_Calendar_Write
  2016  0060                     l3735:
  2017                           
  2018                           ;interface_main.c: 49:     short int displayMode = 0;
  2019  0060  1683               	bsf	3,5	;RP0=1, select bank1
  2020  0061  1303               	bcf	3,6	;RP1=0, select bank1
  2021  0062  01E6               	clrf	main@displayMode^(0+128)
  2022  0063  01E7               	clrf	(main@displayMode+1)^(0+128)
  2023                           
  2024                           ;interface_main.c: 50:     short int ledMode = 1;
  2025  0064  3001               	movlw	1
  2026  0065  00E4               	movwf	main@ledMode^(0+128)
  2027  0066  3000               	movlw	0
  2028  0067  00E5               	movwf	(main@ledMode^(0+128)+1)
  2029  0068                     l3737:
  2030                           
  2031                           ;interface_main.c: 56:         if(ledMode == 1)
  2032  0068  1683               	bsf	3,5	;RP0=1, select bank1
  2033  0069  1303               	bcf	3,6	;RP1=0, select bank1
  2034  006A  0364               	decf	main@ledMode^(0+128),w
  2035  006B  0465               	iorwf	(main@ledMode+1)^(0+128),w
  2036  006C  1D03               	btfss	3,2
  2037  006D  286F               	goto	u4121
  2038  006E  2870               	goto	u4120
  2039  006F                     u4121:
  2040  006F  288F               	goto	l3747
  2041  0070                     u4120:
  2042  0070                     l3739:
  2043                           
  2044                           ;interface_main.c: 57:         {;interface_main.c: 59:             ChangeBrightness();
  2045  0070  160A  118A  2569  120A  118A  	fcall	_ChangeBrightness
  2046                           
  2047                           ;interface_main.c: 60:             ChangeColor();
  2048  0075  160A  118A  2197  120A  118A  	fcall	_ChangeColor
  2049  007A                     l3741:
  2050                           
  2051                           ;interface_main.c: 62:             if(RB4 == 0)
  2052  007A  1283               	bcf	3,5	;RP0=0, select bank0
  2053  007B  1303               	bcf	3,6	;RP1=0, select bank0
  2054  007C  1A06               	btfsc	6,4	;volatile
  2055  007D  287F               	goto	u4131
  2056  007E  2880               	goto	u4130
  2057  007F                     u4131:
  2058  007F  28A6               	goto	l294
  2059  0080                     u4130:
  2060  0080                     l291:
  2061  0080  1E06               	btfss	6,4	;volatile
  2062  0081  2883               	goto	u4141
  2063  0082  2884               	goto	u4140
  2064  0083                     u4141:
  2065  0083  2880               	goto	l291
  2066  0084                     u4140:
  2067  0084                     l3745:
  2068                           
  2069                           ;interface_main.c: 65:                 ledMode = ledMode + 1;
  2070  0084  1683               	bsf	3,5	;RP0=1, select bank1
  2071  0085  1303               	bcf	3,6	;RP1=0, select bank1
  2072  0086  0864               	movf	main@ledMode^(0+128),w
  2073  0087  3E01               	addlw	1
  2074  0088  00E4               	movwf	main@ledMode^(0+128)
  2075  0089  0865               	movf	(main@ledMode+1)^(0+128),w
  2076  008A  1803               	skipnc
  2077  008B  3E01               	addlw	1
  2078  008C  3E00               	addlw	0
  2079  008D  00E5               	movwf	(main@ledMode+1)^(0+128)
  2080  008E  28A6               	goto	l294
  2081  008F                     l3747:
  2082  008F  3002               	movlw	2
  2083  0090  0664               	xorwf	main@ledMode^(0+128),w
  2084  0091  0465               	iorwf	(main@ledMode+1)^(0+128),w
  2085  0092  1D03               	btfss	3,2
  2086  0093  2895               	goto	u4151
  2087  0094  2896               	goto	u4150
  2088  0095                     u4151:
  2089  0095  28A6               	goto	l294
  2090  0096                     u4150:
  2091  0096                     l3749:
  2092                           
  2093                           ;interface_main.c: 69:         {;interface_main.c: 70:             ReadPhoto();
  2094  0096  160A  118A  23F9  120A  118A  	fcall	_ReadPhoto
  2095  009B                     l3751:
  2096                           
  2097                           ;interface_main.c: 73:             if(RB4 == 0)
  2098  009B  1283               	bcf	3,5	;RP0=0, select bank0
  2099  009C  1303               	bcf	3,6	;RP1=0, select bank0
  2100  009D  1A06               	btfsc	6,4	;volatile
  2101  009E  28A0               	goto	u4161
  2102  009F  28A1               	goto	u4160
  2103  00A0                     u4161:
  2104  00A0  28A6               	goto	l294
  2105  00A1                     u4160:
  2106  00A1                     l297:
  2107  00A1  1E06               	btfss	6,4	;volatile
  2108  00A2  28A4               	goto	u4171
  2109  00A3  28A5               	goto	u4170
  2110  00A4                     u4171:
  2111  00A4  28A1               	goto	l297
  2112  00A5                     u4170:
  2113  00A5  2884               	goto	l3745
  2114  00A6                     l294:
  2115                           
  2116                           ;interface_main.c: 81:         if (displayMode == 0)
  2117  00A6  1683               	bsf	3,5	;RP0=1, select bank1
  2118  00A7  1303               	bcf	3,6	;RP1=0, select bank1
  2119  00A8  0866               	movf	main@displayMode^(0+128),w
  2120  00A9  0467               	iorwf	(main@displayMode+1)^(0+128),w
  2121  00AA  1D03               	btfss	3,2
  2122  00AB  28AD               	goto	u4181
  2123  00AC  28AE               	goto	u4180
  2124  00AD                     u4181:
  2125  00AD  28FB               	goto	l3775
  2126  00AE                     u4180:
  2127  00AE                     l3757:
  2128                           
  2129                           ;interface_main.c: 82:         {;interface_main.c: 83:             char buffer3[16];;int
      +                          erface_main.c: 84:             LCD_Clear();
  2130  00AE  160A  118A  21D0  120A  118A  	fcall	_LCD_Clear
  2131  00B3                     l3759:
  2132                           
  2133                           ;interface_main.c: 85:             sprintf(buffer3, "%s", "Hello There");
  2134  00B3  30D4               	movlw	(low (main@buffer3| 0))& (0+255)
  2135  00B4  1283               	bcf	3,5	;RP0=0, select bank0
  2136  00B5  1303               	bcf	3,6	;RP1=0, select bank0
  2137  00B6  00A0               	movwf	sprintf@sp
  2138  00B7  3000               	movlw	0
  2139  00B8  00A1               	movwf	sprintf@sp+1
  2140  00B9  3087               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2141  00BA  00DF               	movwf	??_main
  2142  00BB  085F               	movf	??_main,w
  2143  00BC  00A2               	movwf	sprintf@f
  2144  00BD  3024               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2145  00BE  00A3               	movwf	low ((?_sprintf| 0+3))
  2146  00BF  3080               	movlw	128
  2147  00C0  00A4               	movwf	(low ((?_sprintf| 0+3))+1)
  2148  00C1  120A  118A  219C  120A  118A  	fcall	_sprintf
  2149  00C6                     l3761:
  2150                           
  2151                           ;interface_main.c: 86:             LCD_Write_String(buffer3);
  2152  00C6  30D4               	movlw	(low (main@buffer3| 0))& (0+255)
  2153  00C7  00F7               	movwf	LCD_Write_String@Str
  2154  00C8  3000               	movlw	0
  2155  00C9  00F8               	movwf	LCD_Write_String@Str+1
  2156  00CA  160A  118A  2475  120A  118A  	fcall	_LCD_Write_String
  2157  00CF                     l3763:
  2158                           
  2159                           ;interface_main.c: 87:             _delay((unsigned long)((100)*(8000000/4000.0)));
  2160  00CF  3002               	movlw	2
  2161  00D0  1283               	bcf	3,5	;RP0=0, select bank0
  2162  00D1  1303               	bcf	3,6	;RP1=0, select bank0
  2163  00D2  00E1               	movwf	??_main+2
  2164  00D3  3004               	movlw	4
  2165  00D4  00E0               	movwf	??_main+1
  2166  00D5  30B9               	movlw	185
  2167  00D6  00DF               	movwf	??_main
  2168  00D7                     u4357:
  2169  00D7  0BDF               	decfsz	??_main,f
  2170  00D8  28D7               	goto	u4357
  2171  00D9  0BE0               	decfsz	??_main+1,f
  2172  00DA  28D7               	goto	u4357
  2173  00DB  0BE1               	decfsz	??_main+2,f
  2174  00DC  28D7               	goto	u4357
  2175  00DD  28DE               	nop2
  2176  00DE                     l3765:
  2177                           
  2178                           ;interface_main.c: 89:             if(RE3 == 0 && RB5 == 0)
  2179  00DE  1283               	bcf	3,5	;RP0=0, select bank0
  2180  00DF  1303               	bcf	3,6	;RP1=0, select bank0
  2181  00E0  1989               	btfsc	9,3	;volatile
  2182  00E1  28E3               	goto	u4191
  2183  00E2  28E4               	goto	u4190
  2184  00E3                     u4191:
  2185  00E3  2965               	goto	l3827
  2186  00E4                     u4190:
  2187  00E4                     l3767:
  2188  00E4  1A86               	btfsc	6,5	;volatile
  2189  00E5  28E7               	goto	u4201
  2190  00E6  28E8               	goto	u4200
  2191  00E7                     u4201:
  2192  00E7  2965               	goto	l3827
  2193  00E8                     u4200:
  2194  00E8                     l302:
  2195  00E8  1989               	btfsc	9,3	;volatile
  2196  00E9  28EB               	goto	u4211
  2197  00EA  28EC               	goto	u4210
  2198  00EB                     u4211:
  2199  00EB  28F0               	goto	l3773
  2200  00EC                     u4210:
  2201  00EC                     l3771:
  2202  00EC  1E86               	btfss	6,5	;volatile
  2203  00ED  28EF               	goto	u4221
  2204  00EE  28F0               	goto	u4220
  2205  00EF                     u4221:
  2206  00EF  28E8               	goto	l302
  2207  00F0                     u4220:
  2208  00F0                     l3773:
  2209                           
  2210                           ;interface_main.c: 92:                 displayMode = displayMode+1;
  2211  00F0  1683               	bsf	3,5	;RP0=1, select bank1
  2212  00F1  1303               	bcf	3,6	;RP1=0, select bank1
  2213  00F2  0866               	movf	main@displayMode^(0+128),w
  2214  00F3  3E01               	addlw	1
  2215  00F4  00E6               	movwf	main@displayMode^(0+128)
  2216  00F5  0867               	movf	(main@displayMode+1)^(0+128),w
  2217  00F6  1803               	skipnc
  2218  00F7  3E01               	addlw	1
  2219  00F8  3E00               	addlw	0
  2220  00F9  00E7               	movwf	(main@displayMode+1)^(0+128)
  2221  00FA  2965               	goto	l3827
  2222  00FB                     l3775:
  2223  00FB  0366               	decf	main@displayMode^(0+128),w
  2224  00FC  0467               	iorwf	(main@displayMode+1)^(0+128),w
  2225  00FD  1D03               	btfss	3,2
  2226  00FE  2900               	goto	u4231
  2227  00FF  2901               	goto	u4230
  2228  0100                     u4231:
  2229  0100  291E               	goto	l3791
  2230  0101                     u4230:
  2231  0101                     l3777:
  2232                           
  2233                           ;interface_main.c: 97:         {;interface_main.c: 98:             LCD_Clear();
  2234  0101  160A  118A  21D0  120A  118A  	fcall	_LCD_Clear
  2235  0106                     l3779:
  2236                           
  2237                           ;interface_main.c: 99:             printClock();
  2238  0106  120A  158A  2380  120A  118A  	fcall	_printClock
  2239  010B                     l3781:
  2240                           
  2241                           ;interface_main.c: 100:             if(RE3 == 0 && RB5 == 0)
  2242  010B  1283               	bcf	3,5	;RP0=0, select bank0
  2243  010C  1303               	bcf	3,6	;RP1=0, select bank0
  2244  010D  1989               	btfsc	9,3	;volatile
  2245  010E  2910               	goto	u4241
  2246  010F  2911               	goto	u4240
  2247  0110                     u4241:
  2248  0110  2965               	goto	l3827
  2249  0111                     u4240:
  2250  0111                     l3783:
  2251  0111  1A86               	btfsc	6,5	;volatile
  2252  0112  2914               	goto	u4251
  2253  0113  2915               	goto	u4250
  2254  0114                     u4251:
  2255  0114  2965               	goto	l3827
  2256  0115                     u4250:
  2257  0115                     l310:
  2258  0115  1989               	btfsc	9,3	;volatile
  2259  0116  2918               	goto	u4261
  2260  0117  2919               	goto	u4260
  2261  0118                     u4261:
  2262  0118  28F0               	goto	l3773
  2263  0119                     u4260:
  2264  0119                     l3787:
  2265  0119  1E86               	btfss	6,5	;volatile
  2266  011A  291C               	goto	u4271
  2267  011B  291D               	goto	u4270
  2268  011C                     u4271:
  2269  011C  2915               	goto	l310
  2270  011D                     u4270:
  2271  011D  28F0               	goto	l3773
  2272  011E                     l3791:
  2273  011E  3002               	movlw	2
  2274  011F  0666               	xorwf	main@displayMode^(0+128),w
  2275  0120  0467               	iorwf	(main@displayMode+1)^(0+128),w
  2276  0121  1D03               	btfss	3,2
  2277  0122  2924               	goto	u4281
  2278  0123  2925               	goto	u4280
  2279  0124                     u4281:
  2280  0124  2965               	goto	l3827
  2281  0125                     u4280:
  2282  0125                     l3793:
  2283                           
  2284                           ;interface_main.c: 108:         {;interface_main.c: 110:             ANSELbits.ANS3 = 1;
  2285  0125  1683               	bsf	3,5	;RP0=1, select bank3
  2286  0126  1703               	bsf	3,6	;RP1=1, select bank3
  2287  0127  1588               	bsf	8,3	;volatile
  2288  0128                     l3795:
  2289                           
  2290                           ;interface_main.c: 113:             ADCON0bits.ADCS = 0b11;
  2291  0128  30C0               	movlw	192
  2292  0129  1283               	bcf	3,5	;RP0=0, select bank0
  2293  012A  1303               	bcf	3,6	;RP1=0, select bank0
  2294  012B  049F               	iorwf	31,f	;volatile
  2295                           
  2296                           ;interface_main.c: 114:             ADCON0bits.CHS = 0b0011;
  2297  012C  081F               	movf	31,w	;volatile
  2298  012D  39C3               	andlw	-61
  2299  012E  380C               	iorlw	12
  2300  012F  009F               	movwf	31	;volatile
  2301  0130                     l3797:
  2302                           
  2303                           ;interface_main.c: 117:             ADCON1bits.VCFG1 = 0;
  2304  0130  1683               	bsf	3,5	;RP0=1, select bank1
  2305  0131  1303               	bcf	3,6	;RP1=0, select bank1
  2306  0132  129F               	bcf	31,5	;volatile
  2307  0133                     l3799:
  2308                           
  2309                           ;interface_main.c: 118:             ADCON1bits.VCFG0 = 0;
  2310  0133  121F               	bcf	31,4	;volatile
  2311  0134                     l3801:
  2312                           
  2313                           ;interface_main.c: 119:             ADCON1bits.ADFM = 1;
  2314  0134  179F               	bsf	31,7	;volatile
  2315  0135                     l3803:
  2316                           
  2317                           ;interface_main.c: 122:             PIR1bits.ADIF = 0;
  2318  0135  1283               	bcf	3,5	;RP0=0, select bank0
  2319  0136  1303               	bcf	3,6	;RP1=0, select bank0
  2320  0137  130C               	bcf	12,6	;volatile
  2321  0138                     l3805:
  2322                           
  2323                           ;interface_main.c: 125:             PIE1bits.ADIE = 1;
  2324  0138  1683               	bsf	3,5	;RP0=1, select bank1
  2325  0139  1303               	bcf	3,6	;RP1=0, select bank1
  2326  013A  170C               	bsf	12,6	;volatile
  2327  013B                     l3807:
  2328                           
  2329                           ;interface_main.c: 127:             ADCON0bits.ADON = 1;
  2330  013B  1283               	bcf	3,5	;RP0=0, select bank0
  2331  013C  1303               	bcf	3,6	;RP1=0, select bank0
  2332  013D  141F               	bsf	31,0	;volatile
  2333  013E                     l3809:
  2334                           
  2335                           ;interface_main.c: 129:             LCD_Clear();
  2336  013E  160A  118A  21D0  120A  118A  	fcall	_LCD_Clear
  2337  0143                     l3811:
  2338                           
  2339                           ;interface_main.c: 130:             Update_Celsius();
  2340  0143  160A  118A  2762  120A  118A  	fcall	_Update_Celsius
  2341  0148                     l3813:
  2342                           
  2343                           ;interface_main.c: 131:             Update_Farenheit();
  2344  0148  120A  158A  2125  120A  118A  	fcall	_Update_Farenheit
  2345  014D                     l3815:
  2346                           
  2347                           ;interface_main.c: 132:             DisplayTemp();
  2348  014D  160A  118A  24FB  120A  118A  	fcall	_DisplayTemp
  2349  0152                     l3817:
  2350                           
  2351                           ;interface_main.c: 134:             if(RE3 == 0 && RB5 == 0)
  2352  0152  1283               	bcf	3,5	;RP0=0, select bank0
  2353  0153  1303               	bcf	3,6	;RP1=0, select bank0
  2354  0154  1989               	btfsc	9,3	;volatile
  2355  0155  2957               	goto	u4291
  2356  0156  2958               	goto	u4290
  2357  0157                     u4291:
  2358  0157  2965               	goto	l3827
  2359  0158                     u4290:
  2360  0158                     l3819:
  2361  0158  1A86               	btfsc	6,5	;volatile
  2362  0159  295B               	goto	u4301
  2363  015A  295C               	goto	u4300
  2364  015B                     u4301:
  2365  015B  2965               	goto	l3827
  2366  015C                     u4300:
  2367  015C                     l318:
  2368  015C  1989               	btfsc	9,3	;volatile
  2369  015D  295F               	goto	u4311
  2370  015E  2960               	goto	u4310
  2371  015F                     u4311:
  2372  015F  28F0               	goto	l3773
  2373  0160                     u4310:
  2374  0160                     l3823:
  2375  0160  1E86               	btfss	6,5	;volatile
  2376  0161  2963               	goto	u4321
  2377  0162  2964               	goto	u4320
  2378  0163                     u4321:
  2379  0163  295C               	goto	l318
  2380  0164                     u4320:
  2381  0164  28F0               	goto	l3773
  2382  0165                     l3827:
  2383                           
  2384                           ;interface_main.c: 141:        _delay((unsigned long)((10)*(8000000/4000.0)));
  2385  0165  301A               	movlw	26
  2386  0166  1283               	bcf	3,5	;RP0=0, select bank0
  2387  0167  1303               	bcf	3,6	;RP1=0, select bank0
  2388  0168  00E0               	movwf	??_main+1
  2389  0169  30F7               	movlw	247
  2390  016A  00DF               	movwf	??_main
  2391  016B                     u4367:
  2392  016B  0BDF               	decfsz	??_main,f
  2393  016C  296B               	goto	u4367
  2394  016D  0BE0               	decfsz	??_main+1,f
  2395  016E  296B               	goto	u4367
  2396  016F  2970               	nop2
  2397  0170                     l3829:
  2398                           
  2399                           ;interface_main.c: 142:        if(displayMode >= 3)
  2400  0170  1683               	bsf	3,5	;RP0=1, select bank1
  2401  0171  1303               	bcf	3,6	;RP1=0, select bank1
  2402  0172  0867               	movf	(main@displayMode+1)^(0+128),w
  2403  0173  3A80               	xorlw	128
  2404  0174  00FF               	movwf	btemp+1
  2405  0175  3080               	movlw	128
  2406  0176  027F               	subwf	btemp+1,w
  2407  0177  1D03               	skipz
  2408  0178  297B               	goto	u4335
  2409  0179  3003               	movlw	3
  2410  017A  0266               	subwf	main@displayMode^(0+128),w
  2411  017B                     u4335:
  2412  017B  1C03               	skipc
  2413  017C  297E               	goto	u4331
  2414  017D  297F               	goto	u4330
  2415  017E                     u4331:
  2416  017E  2983               	goto	l3833
  2417  017F                     u4330:
  2418  017F                     l3831:
  2419                           
  2420                           ;interface_main.c: 143:        {;interface_main.c: 144:            displayMode = 0;
  2421  017F  1683               	bsf	3,5	;RP0=1, select bank1
  2422  0180  1303               	bcf	3,6	;RP1=0, select bank1
  2423  0181  01E6               	clrf	main@displayMode^(0+128)
  2424  0182  01E7               	clrf	(main@displayMode+1)^(0+128)
  2425  0183                     l3833:
  2426                           
  2427                           ;interface_main.c: 146:        if(ledMode >= 2)
  2428  0183  1683               	bsf	3,5	;RP0=1, select bank1
  2429  0184  1303               	bcf	3,6	;RP1=0, select bank1
  2430  0185  0865               	movf	(main@ledMode+1)^(0+128),w
  2431  0186  3A80               	xorlw	128
  2432  0187  00FF               	movwf	btemp+1
  2433  0188  3080               	movlw	128
  2434  0189  027F               	subwf	btemp+1,w
  2435  018A  1D03               	skipz
  2436  018B  298E               	goto	u4345
  2437  018C  3002               	movlw	2
  2438  018D  0264               	subwf	main@ledMode^(0+128),w
  2439  018E                     u4345:
  2440  018E  1C03               	skipc
  2441  018F  2991               	goto	u4341
  2442  0190  2992               	goto	u4340
  2443  0191                     u4341:
  2444  0191  2868               	goto	l3737
  2445  0192                     u4340:
  2446  0192                     l3835:
  2447                           
  2448                           ;interface_main.c: 147:        {;interface_main.c: 148:            ledMode = 1;
  2449  0192  3001               	movlw	1
  2450  0193  1683               	bsf	3,5	;RP0=1, select bank1
  2451  0194  1303               	bcf	3,6	;RP1=0, select bank1
  2452  0195  00E4               	movwf	main@ledMode^(0+128)
  2453  0196  3000               	movlw	0
  2454  0197  00E5               	movwf	(main@ledMode^(0+128)+1)
  2455  0198  2868               	goto	l3737
  2456  0199  120A  118A  2800   	ljmp	start
  2457  019C                     __end_of_main:
  2458                           
  2459                           	psect	text1
  2460  0B80                     __ptext1:	
  2461 ;; *************** function _printClock *****************
  2462 ;; Defined at:
  2463 ;;		line 14 in file "DisplayClock.c"
  2464 ;; Parameters:    Size  Location     Type
  2465 ;;		None
  2466 ;; Auto vars:     Size  Location     Type
  2467 ;;		None
  2468 ;; Return value:  Size  Location     Type
  2469 ;;                  1    wreg      void 
  2470 ;; Registers used:
  2471 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2472 ;; Tracked objects:
  2473 ;;		On entry : 0/0
  2474 ;;		On exit  : 0/0
  2475 ;;		Unchanged: 0/0
  2476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2477 ;;      Params:         0       0       0       0       0
  2478 ;;      Locals:         0       0       0       0       0
  2479 ;;      Temps:          0       3       0       0       0
  2480 ;;      Totals:         0       3       0       0       0
  2481 ;;Total ram usage:        3 bytes
  2482 ;; Hardware stack levels used: 1
  2483 ;; Hardware stack levels required when called: 7
  2484 ;; This function calls:
  2485 ;;		_I2C_Stop
  2486 ;;		_LCD_Set_Cursor
  2487 ;;		_LCD_Write_String
  2488 ;;		_RTC_Read_Calendar
  2489 ;;		_RTC_Read_Clock
  2490 ;;		_sprintf
  2491 ;; This function is called by:
  2492 ;;		_main
  2493 ;; This function uses a non-reentrant model
  2494 ;;
  2495                           
  2496  0B80                     _printClock:	
  2497                           ;psect for function _printClock
  2498                           
  2499  0B80                     l3585:	
  2500                           ;incstack = 0
  2501                           ; Regs used in _printClock: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2502                           
  2503                           
  2504                           ;DisplayClock.c: 16:     RTC_Read_Clock(0);
  2505  0B80  3000               	movlw	0
  2506  0B81  160A  118A  2437  120A  158A  	fcall	_RTC_Read_Clock
  2507                           
  2508                           ;DisplayClock.c: 17:     I2C_Stop();
  2509  0B86  160A  118A  21B5  120A  158A  	fcall	_I2C_Stop
  2510  0B8B                     l3587:
  2511                           
  2512                           ;DisplayClock.c: 18:     if(hour & (1<<Clock_type)){
  2513  0B8B  1283               	bcf	3,5	;RP0=0, select bank0
  2514  0B8C  1303               	bcf	3,6	;RP1=0, select bank0
  2515  0B8D  1F62               	btfss	_hour,6
  2516  0B8E  2B90               	goto	u4061
  2517  0B8F  2B91               	goto	u4060
  2518  0B90                     u4061:
  2519  0B90  2C23               	goto	l3615
  2520  0B91                     u4060:
  2521  0B91                     l3589:
  2522                           
  2523                           ;DisplayClock.c: 20:         if(hour & (1<<AM_PM)){
  2524  0B91  1EE2               	btfss	_hour,5
  2525  0B92  2B94               	goto	u4071
  2526  0B93  2B95               	goto	u4070
  2527  0B94                     u4071:
  2528  0B94  2BA9               	goto	l3595
  2529  0B95                     u4070:
  2530  0B95                     l3591:
  2531                           
  2532                           ;DisplayClock.c: 21:             LCD_Set_Cursor('1','14');
  2533  0B95  3034               	movlw	52
  2534  0B96  00B5               	movwf	??_printClock
  2535  0B97  0835               	movf	??_printClock,w
  2536  0B98  00F7               	movwf	LCD_Set_Cursor@COL
  2537  0B99  3031               	movlw	49
  2538  0B9A  160A  118A  2389  120A  158A  	fcall	_LCD_Set_Cursor
  2539  0B9F                     l3593:
  2540                           
  2541                           ;DisplayClock.c: 22:             LCD_Write_String("PM");
  2542  0B9F  3084               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2543  0BA0  00F7               	movwf	LCD_Write_String@Str
  2544  0BA1  3080               	movlw	128
  2545  0BA2  00F8               	movwf	LCD_Write_String@Str+1
  2546  0BA3  160A  118A  2475  120A  158A  	fcall	_LCD_Write_String
  2547                           
  2548                           ;DisplayClock.c: 23:         }
  2549  0BA8  2BBC               	goto	l3599
  2550  0BA9                     l3595:
  2551                           
  2552                           ;DisplayClock.c: 25:             LCD_Set_Cursor('1','14');
  2553  0BA9  3034               	movlw	52
  2554  0BAA  00B5               	movwf	??_printClock
  2555  0BAB  0835               	movf	??_printClock,w
  2556  0BAC  00F7               	movwf	LCD_Set_Cursor@COL
  2557  0BAD  3031               	movlw	49
  2558  0BAE  160A  118A  2389  120A  158A  	fcall	_LCD_Set_Cursor
  2559  0BB3                     l3597:
  2560                           
  2561                           ;DisplayClock.c: 26:             LCD_Write_String("AM");
  2562  0BB3  3081               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2563  0BB4  00F7               	movwf	LCD_Write_String@Str
  2564  0BB5  3080               	movlw	128
  2565  0BB6  00F8               	movwf	LCD_Write_String@Str+1
  2566  0BB7  160A  118A  2475  120A  158A  	fcall	_LCD_Write_String
  2567  0BBC                     l3599:
  2568                           
  2569                           ;DisplayClock.c: 29:         hour = hour & (0x1f);
  2570  0BBC  301F               	movlw	31
  2571  0BBD  1283               	bcf	3,5	;RP0=0, select bank0
  2572  0BBE  1303               	bcf	3,6	;RP1=0, select bank0
  2573  0BBF  0562               	andwf	_hour,w
  2574  0BC0  00E2               	movwf	_hour
  2575  0BC1  3000               	movlw	0
  2576  0BC2  0563               	andwf	_hour+1,w
  2577  0BC3  00E3               	movwf	_hour+1
  2578  0BC4                     l3601:
  2579                           
  2580                           ;DisplayClock.c: 30:         sprintf(secs,"%x ",sec);
  2581  0BC4  30CA               	movlw	(low (_secs| 0))& (0+255)
  2582  0BC5  00A0               	movwf	sprintf@sp
  2583  0BC6  3000               	movlw	0
  2584  0BC7  00A1               	movwf	sprintf@sp+1
  2585  0BC8  305D               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2586  0BC9  00B5               	movwf	??_printClock
  2587  0BCA  0835               	movf	??_printClock,w
  2588  0BCB  00A2               	movwf	sprintf@f
  2589  0BCC  0867               	movf	_sec+1,w
  2590  0BCD  00A4               	movwf	?_sprintf+4
  2591  0BCE  0866               	movf	_sec,w
  2592  0BCF  00A3               	movwf	?_sprintf+3
  2593  0BD0  120A  118A  219C  120A  158A  	fcall	_sprintf
  2594  0BD5                     l3603:
  2595                           
  2596                           ;DisplayClock.c: 31:         sprintf(mins,"%x:",min);
  2597  0BD5  30C0               	movlw	(low (_mins| 0))& (0+255)
  2598  0BD6  1283               	bcf	3,5	;RP0=0, select bank0
  2599  0BD7  1303               	bcf	3,6	;RP1=0, select bank0
  2600  0BD8  00A0               	movwf	sprintf@sp
  2601  0BD9  3000               	movlw	0
  2602  0BDA  00A1               	movwf	sprintf@sp+1
  2603  0BDB  3052               	movlw	(low (((STR_9+4)-__stringbase)| (0+32768)))& (0+255)
  2604  0BDC  00B5               	movwf	??_printClock
  2605  0BDD  0835               	movf	??_printClock,w
  2606  0BDE  00A2               	movwf	sprintf@f
  2607  0BDF  0865               	movf	_min+1,w
  2608  0BE0  00A4               	movwf	?_sprintf+4
  2609  0BE1  0864               	movf	_min,w
  2610  0BE2  00A3               	movwf	?_sprintf+3
  2611  0BE3  120A  118A  219C  120A  158A  	fcall	_sprintf
  2612  0BE8                     l3605:
  2613                           
  2614                           ;DisplayClock.c: 32:         sprintf(hours,"Tim:%x:",hour);
  2615  0BE8  30B6               	movlw	(low (_hours| 0))& (0+255)
  2616  0BE9  1283               	bcf	3,5	;RP0=0, select bank0
  2617  0BEA  1303               	bcf	3,6	;RP1=0, select bank0
  2618  0BEB  00A0               	movwf	sprintf@sp
  2619  0BEC  3000               	movlw	0
  2620  0BED  00A1               	movwf	sprintf@sp+1
  2621  0BEE  304E               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  2622  0BEF  00B5               	movwf	??_printClock
  2623  0BF0  0835               	movf	??_printClock,w
  2624  0BF1  00A2               	movwf	sprintf@f
  2625  0BF2  0863               	movf	_hour+1,w
  2626  0BF3  00A4               	movwf	?_sprintf+4
  2627  0BF4  0862               	movf	_hour,w
  2628  0BF5  00A3               	movwf	?_sprintf+3
  2629  0BF6  120A  118A  219C  120A  158A  	fcall	_sprintf
  2630  0BFB                     l3607:
  2631                           
  2632                           ;DisplayClock.c: 33:         LCD_Set_Cursor('1', '0');
  2633  0BFB  3030               	movlw	48
  2634  0BFC  1283               	bcf	3,5	;RP0=0, select bank0
  2635  0BFD  1303               	bcf	3,6	;RP1=0, select bank0
  2636  0BFE  00B5               	movwf	??_printClock
  2637  0BFF  0835               	movf	??_printClock,w
  2638  0C00  00F7               	movwf	LCD_Set_Cursor@COL
  2639  0C01  3031               	movlw	49
  2640  0C02  160A  118A  2389  120A  158A  	fcall	_LCD_Set_Cursor
  2641  0C07                     l3609:
  2642                           
  2643                           ;DisplayClock.c: 34:         LCD_Write_String(hours);
  2644  0C07  30B6               	movlw	(low (_hours| 0))& (0+255)
  2645  0C08  00F7               	movwf	LCD_Write_String@Str
  2646  0C09  3000               	movlw	0
  2647  0C0A  00F8               	movwf	LCD_Write_String@Str+1
  2648  0C0B  160A  118A  2475  120A  158A  	fcall	_LCD_Write_String
  2649  0C10                     l3611:
  2650                           
  2651                           ;DisplayClock.c: 35:         LCD_Write_String(mins);
  2652  0C10  30C0               	movlw	(low (_mins| 0))& (0+255)
  2653  0C11  00F7               	movwf	LCD_Write_String@Str
  2654  0C12  3000               	movlw	0
  2655  0C13  00F8               	movwf	LCD_Write_String@Str+1
  2656  0C14  160A  118A  2475  120A  158A  	fcall	_LCD_Write_String
  2657  0C19                     l3613:
  2658                           
  2659                           ;DisplayClock.c: 36:         LCD_Write_String(secs);
  2660  0C19  30CA               	movlw	(low (_secs| 0))& (0+255)
  2661  0C1A  00F7               	movwf	LCD_Write_String@Str
  2662  0C1B  3000               	movlw	0
  2663  0C1C  00F8               	movwf	LCD_Write_String@Str+1
  2664  0C1D  160A  118A  2475  120A  158A  	fcall	_LCD_Write_String
  2665                           
  2666                           ;DisplayClock.c: 37:     }
  2667  0C22  2C6D               	goto	l3631
  2668  0C23                     l3615:
  2669                           
  2670                           ;DisplayClock.c: 40:         hour = hour & (0x3f);
  2671  0C23  303F               	movlw	63
  2672  0C24  0562               	andwf	_hour,w
  2673  0C25  00E2               	movwf	_hour
  2674  0C26  3000               	movlw	0
  2675  0C27  0563               	andwf	_hour+1,w
  2676  0C28  00E3               	movwf	_hour+1
  2677  0C29                     l3617:
  2678                           
  2679                           ;DisplayClock.c: 41:         sprintf(secs,"%x ",sec);
  2680  0C29  30CA               	movlw	(low (_secs| 0))& (0+255)
  2681  0C2A  00A0               	movwf	sprintf@sp
  2682  0C2B  3000               	movlw	0
  2683  0C2C  00A1               	movwf	sprintf@sp+1
  2684  0C2D  305D               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2685  0C2E  00B5               	movwf	??_printClock
  2686  0C2F  0835               	movf	??_printClock,w
  2687  0C30  00A2               	movwf	sprintf@f
  2688  0C31  0867               	movf	_sec+1,w
  2689  0C32  00A4               	movwf	?_sprintf+4
  2690  0C33  0866               	movf	_sec,w
  2691  0C34  00A3               	movwf	?_sprintf+3
  2692  0C35  120A  118A  219C  120A  158A  	fcall	_sprintf
  2693  0C3A                     l3619:
  2694                           
  2695                           ;DisplayClock.c: 42:         sprintf(mins,"%x:",min);
  2696  0C3A  30C0               	movlw	(low (_mins| 0))& (0+255)
  2697  0C3B  1283               	bcf	3,5	;RP0=0, select bank0
  2698  0C3C  1303               	bcf	3,6	;RP1=0, select bank0
  2699  0C3D  00A0               	movwf	sprintf@sp
  2700  0C3E  3000               	movlw	0
  2701  0C3F  00A1               	movwf	sprintf@sp+1
  2702  0C40  3052               	movlw	(low (((STR_9+4)-__stringbase)| (0+32768)))& (0+255)
  2703  0C41  00B5               	movwf	??_printClock
  2704  0C42  0835               	movf	??_printClock,w
  2705  0C43  00A2               	movwf	sprintf@f
  2706  0C44  0865               	movf	_min+1,w
  2707  0C45  00A4               	movwf	?_sprintf+4
  2708  0C46  0864               	movf	_min,w
  2709  0C47  00A3               	movwf	?_sprintf+3
  2710  0C48  120A  118A  219C  120A  158A  	fcall	_sprintf
  2711  0C4D                     l3621:
  2712                           
  2713                           ;DisplayClock.c: 43:         sprintf(hours,"Tim:%x:",hour);
  2714  0C4D  30B6               	movlw	(low (_hours| 0))& (0+255)
  2715  0C4E  1283               	bcf	3,5	;RP0=0, select bank0
  2716  0C4F  1303               	bcf	3,6	;RP1=0, select bank0
  2717  0C50  00A0               	movwf	sprintf@sp
  2718  0C51  3000               	movlw	0
  2719  0C52  00A1               	movwf	sprintf@sp+1
  2720  0C53  304E               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  2721  0C54  00B5               	movwf	??_printClock
  2722  0C55  0835               	movf	??_printClock,w
  2723  0C56  00A2               	movwf	sprintf@f
  2724  0C57  0863               	movf	_hour+1,w
  2725  0C58  00A4               	movwf	?_sprintf+4
  2726  0C59  0862               	movf	_hour,w
  2727  0C5A  00A3               	movwf	?_sprintf+3
  2728  0C5B  120A  118A  219C  120A  158A  	fcall	_sprintf
  2729  0C60                     l3623:
  2730                           
  2731                           ;DisplayClock.c: 44:         LCD_Set_Cursor('1','0');
  2732  0C60  3030               	movlw	48
  2733  0C61  1283               	bcf	3,5	;RP0=0, select bank0
  2734  0C62  1303               	bcf	3,6	;RP1=0, select bank0
  2735  0C63  00B5               	movwf	??_printClock
  2736  0C64  0835               	movf	??_printClock,w
  2737  0C65  00F7               	movwf	LCD_Set_Cursor@COL
  2738  0C66  3031               	movlw	49
  2739  0C67  160A  118A  2389  120A  158A  	fcall	_LCD_Set_Cursor
  2740  0C6C  2C07               	goto	l3609
  2741  0C6D                     l3631:
  2742                           
  2743                           ;DisplayClock.c: 50:     RTC_Read_Calendar(3);
  2744  0C6D  3003               	movlw	3
  2745  0C6E  120A  158A  201A  120A  158A  	fcall	_RTC_Read_Calendar
  2746  0C73                     l3633:
  2747                           
  2748                           ;DisplayClock.c: 51:     I2C_Stop();
  2749  0C73  160A  118A  21B5  120A  158A  	fcall	_I2C_Stop
  2750  0C78                     l3635:
  2751                           
  2752                           ;DisplayClock.c: 52:     sprintf(date,"Cal %x-",Date);
  2753  0C78  30A4               	movlw	(low (_date| (0+256)))& (0+255)
  2754  0C79  1283               	bcf	3,5	;RP0=0, select bank0
  2755  0C7A  1303               	bcf	3,6	;RP1=0, select bank0
  2756  0C7B  00A0               	movwf	sprintf@sp
  2757  0C7C  3001               	movlw	1
  2758  0C7D  00A1               	movwf	sprintf@sp+1
  2759  0C7E  3046               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  2760  0C7F  00B5               	movwf	??_printClock
  2761  0C80  0835               	movf	??_printClock,w
  2762  0C81  00A2               	movwf	sprintf@f
  2763  0C82  1683               	bsf	3,5	;RP0=1, select bank1
  2764  0C83  1303               	bcf	3,6	;RP1=0, select bank1
  2765  0C84  082B               	movf	(_Date+1)^(0+128),w
  2766  0C85  1283               	bcf	3,5	;RP0=0, select bank0
  2767  0C86  1303               	bcf	3,6	;RP1=0, select bank0
  2768  0C87  00A4               	movwf	?_sprintf+4
  2769  0C88  1683               	bsf	3,5	;RP0=1, select bank1
  2770  0C89  1303               	bcf	3,6	;RP1=0, select bank1
  2771  0C8A  082A               	movf	_Date^(0+128),w
  2772  0C8B  1283               	bcf	3,5	;RP0=0, select bank0
  2773  0C8C  1303               	bcf	3,6	;RP1=0, select bank0
  2774  0C8D  00A3               	movwf	?_sprintf+3
  2775  0C8E  120A  118A  219C  120A  158A  	fcall	_sprintf
  2776  0C93                     l3637:
  2777                           
  2778                           ;DisplayClock.c: 53:     sprintf(month,"%x-",Month);
  2779  0C93  309A               	movlw	(low (_month| (0+256)))& (0+255)
  2780  0C94  1283               	bcf	3,5	;RP0=0, select bank0
  2781  0C95  1303               	bcf	3,6	;RP1=0, select bank0
  2782  0C96  00A0               	movwf	sprintf@sp
  2783  0C97  3001               	movlw	1
  2784  0C98  00A1               	movwf	sprintf@sp+1
  2785  0C99  304A               	movlw	(low (((STR_13+4)-__stringbase)| (0+32768)))& (0+255)
  2786  0C9A  00B5               	movwf	??_printClock
  2787  0C9B  0835               	movf	??_printClock,w
  2788  0C9C  00A2               	movwf	sprintf@f
  2789  0C9D  1683               	bsf	3,5	;RP0=1, select bank1
  2790  0C9E  1303               	bcf	3,6	;RP1=0, select bank1
  2791  0C9F  0829               	movf	(_Month+1)^(0+128),w
  2792  0CA0  1283               	bcf	3,5	;RP0=0, select bank0
  2793  0CA1  1303               	bcf	3,6	;RP1=0, select bank0
  2794  0CA2  00A4               	movwf	?_sprintf+4
  2795  0CA3  1683               	bsf	3,5	;RP0=1, select bank1
  2796  0CA4  1303               	bcf	3,6	;RP1=0, select bank1
  2797  0CA5  0828               	movf	_Month^(0+128),w
  2798  0CA6  1283               	bcf	3,5	;RP0=0, select bank0
  2799  0CA7  1303               	bcf	3,6	;RP1=0, select bank0
  2800  0CA8  00A3               	movwf	?_sprintf+3
  2801  0CA9  120A  118A  219C  120A  158A  	fcall	_sprintf
  2802  0CAE                     l3639:
  2803                           
  2804                           ;DisplayClock.c: 54:     sprintf(year,"%x ",Year);
  2805  0CAE  3090               	movlw	(low (_year| (0+256)))& (0+255)
  2806  0CAF  1283               	bcf	3,5	;RP0=0, select bank0
  2807  0CB0  1303               	bcf	3,6	;RP1=0, select bank0
  2808  0CB1  00A0               	movwf	sprintf@sp
  2809  0CB2  3001               	movlw	1
  2810  0CB3  00A1               	movwf	sprintf@sp+1
  2811  0CB4  305D               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2812  0CB5  00B5               	movwf	??_printClock
  2813  0CB6  0835               	movf	??_printClock,w
  2814  0CB7  00A2               	movwf	sprintf@f
  2815  0CB8  1683               	bsf	3,5	;RP0=1, select bank1
  2816  0CB9  1303               	bcf	3,6	;RP1=0, select bank1
  2817  0CBA  0827               	movf	(_Year+1)^(0+128),w
  2818  0CBB  1283               	bcf	3,5	;RP0=0, select bank0
  2819  0CBC  1303               	bcf	3,6	;RP1=0, select bank0
  2820  0CBD  00A4               	movwf	?_sprintf+4
  2821  0CBE  1683               	bsf	3,5	;RP0=1, select bank1
  2822  0CBF  1303               	bcf	3,6	;RP1=0, select bank1
  2823  0CC0  0826               	movf	_Year^(0+128),w
  2824  0CC1  1283               	bcf	3,5	;RP0=0, select bank0
  2825  0CC2  1303               	bcf	3,6	;RP1=0, select bank0
  2826  0CC3  00A3               	movwf	?_sprintf+3
  2827  0CC4  120A  118A  219C  120A  158A  	fcall	_sprintf
  2828  0CC9                     l3641:
  2829                           
  2830                           ;DisplayClock.c: 55:     LCD_Set_Cursor('2','0');
  2831  0CC9  3030               	movlw	48
  2832  0CCA  1283               	bcf	3,5	;RP0=0, select bank0
  2833  0CCB  1303               	bcf	3,6	;RP1=0, select bank0
  2834  0CCC  00B5               	movwf	??_printClock
  2835  0CCD  0835               	movf	??_printClock,w
  2836  0CCE  00F7               	movwf	LCD_Set_Cursor@COL
  2837  0CCF  3032               	movlw	50
  2838  0CD0  160A  118A  2389  120A  158A  	fcall	_LCD_Set_Cursor
  2839  0CD5                     l3643:
  2840                           
  2841                           ;DisplayClock.c: 56:     LCD_Write_String(date);
  2842  0CD5  30A4               	movlw	(low (_date| (0+256)))& (0+255)
  2843  0CD6  00F7               	movwf	LCD_Write_String@Str
  2844  0CD7  3001               	movlw	1
  2845  0CD8  00F8               	movwf	LCD_Write_String@Str+1
  2846  0CD9  160A  118A  2475  120A  158A  	fcall	_LCD_Write_String
  2847  0CDE                     l3645:
  2848                           
  2849                           ;DisplayClock.c: 57:     LCD_Write_String(month);
  2850  0CDE  309A               	movlw	(low (_month| (0+256)))& (0+255)
  2851  0CDF  00F7               	movwf	LCD_Write_String@Str
  2852  0CE0  3001               	movlw	1
  2853  0CE1  00F8               	movwf	LCD_Write_String@Str+1
  2854  0CE2  160A  118A  2475  120A  158A  	fcall	_LCD_Write_String
  2855  0CE7                     l3647:
  2856                           
  2857                           ;DisplayClock.c: 58:     LCD_Write_String(year);
  2858  0CE7  3090               	movlw	(low (_year| (0+256)))& (0+255)
  2859  0CE8  00F7               	movwf	LCD_Write_String@Str
  2860  0CE9  3001               	movlw	1
  2861  0CEA  00F8               	movwf	LCD_Write_String@Str+1
  2862  0CEB  160A  118A  2475  120A  158A  	fcall	_LCD_Write_String
  2863                           
  2864                           ;DisplayClock.c: 63:     switch(days[Day])
  2865  0CF0  2D41               	goto	l3667
  2866  0CF1                     l3649:
  2867                           
  2868                           ;DisplayClock.c: 66:                     LCD_Write_String("Sun");
  2869  0CF1  3071               	movlw	(low ((STR_16-__stringbase)| (0+32768)))& (0+255)
  2870  0CF2  00F7               	movwf	LCD_Write_String@Str
  2871  0CF3  3080               	movlw	128
  2872  0CF4  00F8               	movwf	LCD_Write_String@Str+1
  2873  0CF5  160A  118A  2475  120A  158A  	fcall	_LCD_Write_String
  2874                           
  2875                           ;DisplayClock.c: 67:                     break;
  2876  0CFA  2D68               	goto	l3669
  2877  0CFB                     l3651:
  2878                           
  2879                           ;DisplayClock.c: 69:                     LCD_Write_String("Mon");
  2880  0CFB  306D               	movlw	(low ((STR_17-__stringbase)| (0+32768)))& (0+255)
  2881  0CFC  00F7               	movwf	LCD_Write_String@Str
  2882  0CFD  3080               	movlw	128
  2883  0CFE  00F8               	movwf	LCD_Write_String@Str+1
  2884  0CFF  160A  118A  2475  120A  158A  	fcall	_LCD_Write_String
  2885                           
  2886                           ;DisplayClock.c: 70:                     break;
  2887  0D04  2D68               	goto	l3669
  2888  0D05                     l3653:
  2889                           
  2890                           ;DisplayClock.c: 72:                     LCD_Write_String("Tue");
  2891  0D05  3065               	movlw	(low ((STR_18-__stringbase)| (0+32768)))& (0+255)
  2892  0D06  00F7               	movwf	LCD_Write_String@Str
  2893  0D07  3080               	movlw	128
  2894  0D08  00F8               	movwf	LCD_Write_String@Str+1
  2895  0D09  160A  118A  2475  120A  158A  	fcall	_LCD_Write_String
  2896                           
  2897                           ;DisplayClock.c: 73:                     break;
  2898  0D0E  2D68               	goto	l3669
  2899  0D0F                     l3655:
  2900                           
  2901                           ;DisplayClock.c: 75:                     LCD_Write_String("Wed");
  2902  0D0F  3061               	movlw	(low ((STR_19-__stringbase)| (0+32768)))& (0+255)
  2903  0D10  00F7               	movwf	LCD_Write_String@Str
  2904  0D11  3080               	movlw	128
  2905  0D12  00F8               	movwf	LCD_Write_String@Str+1
  2906  0D13  160A  118A  2475  120A  158A  	fcall	_LCD_Write_String
  2907                           
  2908                           ;DisplayClock.c: 76:                     break;
  2909  0D18  2D68               	goto	l3669
  2910  0D19                     l3657:
  2911                           
  2912                           ;DisplayClock.c: 78:                     LCD_Write_String("Thu");
  2913  0D19  3079               	movlw	(low ((STR_20-__stringbase)| (0+32768)))& (0+255)
  2914  0D1A  00F7               	movwf	LCD_Write_String@Str
  2915  0D1B  3080               	movlw	128
  2916  0D1C  00F8               	movwf	LCD_Write_String@Str+1
  2917  0D1D  160A  118A  2475  120A  158A  	fcall	_LCD_Write_String
  2918                           
  2919                           ;DisplayClock.c: 79:                     break;
  2920  0D22  2D68               	goto	l3669
  2921  0D23                     l3659:
  2922                           
  2923                           ;DisplayClock.c: 81:                     LCD_Write_String("Fri");
  2924  0D23  3069               	movlw	(low ((STR_21-__stringbase)| (0+32768)))& (0+255)
  2925  0D24  00F7               	movwf	LCD_Write_String@Str
  2926  0D25  3080               	movlw	128
  2927  0D26  00F8               	movwf	LCD_Write_String@Str+1
  2928  0D27  160A  118A  2475  120A  158A  	fcall	_LCD_Write_String
  2929                           
  2930                           ;DisplayClock.c: 82:                     break;
  2931  0D2C  2D68               	goto	l3669
  2932  0D2D                     l3661:
  2933                           
  2934                           ;DisplayClock.c: 84:                     LCD_Write_String("Sat");
  2935  0D2D  3075               	movlw	(low ((STR_22-__stringbase)| (0+32768)))& (0+255)
  2936  0D2E  00F7               	movwf	LCD_Write_String@Str
  2937  0D2F  3080               	movlw	128
  2938  0D30  00F8               	movwf	LCD_Write_String@Str+1
  2939  0D31  160A  118A  2475  120A  158A  	fcall	_LCD_Write_String
  2940                           
  2941                           ;DisplayClock.c: 85:                     break;
  2942  0D36  2D68               	goto	l3669
  2943  0D37                     l3663:
  2944                           
  2945                           ;DisplayClock.c: 87:                     LCD_Write_String("Inv");
  2946  0D37  307D               	movlw	(low ((STR_23-__stringbase)| (0+32768)))& (0+255)
  2947  0D38  00F7               	movwf	LCD_Write_String@Str
  2948  0D39  3080               	movlw	128
  2949  0D3A  00F8               	movwf	LCD_Write_String@Str+1
  2950  0D3B  160A  118A  2475  120A  158A  	fcall	_LCD_Write_String
  2951                           
  2952                           ;DisplayClock.c: 88:                     break;
  2953  0D40  2D68               	goto	l3669
  2954  0D41                     l3667:
  2955  0D41  1683               	bsf	3,5	;RP0=1, select bank1
  2956  0D42  1303               	bcf	3,6	;RP1=0, select bank1
  2957  0D43  082C               	movf	_Day^(0+128),w
  2958  0D44  3EAE               	addlw	(low (_days| (0+256)))& (0+255)
  2959  0D45  0084               	movwf	4
  2960  0D46  1783               	bsf	3,7	;select IRP bank3
  2961  0D47  0800               	movf	0,w
  2962  0D48  1283               	bcf	3,5	;RP0=0, select bank0
  2963  0D49  1303               	bcf	3,6	;RP1=0, select bank0
  2964  0D4A  00B5               	movwf	??_printClock
  2965  0D4B  01B6               	clrf	??_printClock+1
  2966                           
  2967                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2968                           ; Switch size 1, requested type "simple"
  2969                           ; Number of cases is 1, Range of values is 0 to 0
  2970                           ; switch strategies available:
  2971                           ; Name         Instructions Cycles
  2972                           ; simple_byte            4     3 (average)
  2973                           ; direct_byte           11     8 (fixed)
  2974                           ; jumptable            260     6 (fixed)
  2975                           ;	Chosen strategy is simple_byte
  2976  0D4C  0836               	movf	??_printClock+1,w
  2977  0D4D  3A00               	xorlw	0	; case 0
  2978  0D4E  1903               	skipnz
  2979  0D4F  2D51               	goto	l3977
  2980  0D50  2D37               	goto	l3663
  2981  0D51                     l3977:
  2982                           
  2983                           ; Switch size 1, requested type "simple"
  2984                           ; Number of cases is 7, Range of values is 70 to 116
  2985                           ; switch strategies available:
  2986                           ; Name         Instructions Cycles
  2987                           ; simple_byte           22    12 (average)
  2988                           ; direct_byte          152    11 (fixed)
  2989                           ; jumptable            263     9 (fixed)
  2990                           ;	Chosen strategy is simple_byte
  2991  0D51  0835               	movf	??_printClock,w
  2992  0D52  3A46               	xorlw	70	; case 70
  2993  0D53  1903               	skipnz
  2994  0D54  2D23               	goto	l3659
  2995  0D55  3A0B               	xorlw	11	; case 77
  2996  0D56  1903               	skipnz
  2997  0D57  2CFB               	goto	l3651
  2998  0D58  3A1E               	xorlw	30	; case 83
  2999  0D59  1903               	skipnz
  3000  0D5A  2CF1               	goto	l3649
  3001  0D5B  3A07               	xorlw	7	; case 84
  3002  0D5C  1903               	skipnz
  3003  0D5D  2D05               	goto	l3653
  3004  0D5E  3A03               	xorlw	3	; case 87
  3005  0D5F  1903               	skipnz
  3006  0D60  2D0F               	goto	l3655
  3007  0D61  3A24               	xorlw	36	; case 115
  3008  0D62  1903               	skipnz
  3009  0D63  2D2D               	goto	l3661
  3010  0D64  3A07               	xorlw	7	; case 116
  3011  0D65  1903               	skipnz
  3012  0D66  2D19               	goto	l3657
  3013  0D67  2D37               	goto	l3663
  3014  0D68                     l3669:
  3015                           
  3016                           ;DisplayClock.c: 91:     _delay((unsigned long)((100)*(8000000/4000.0)));
  3017  0D68  3002               	movlw	2
  3018  0D69  1283               	bcf	3,5	;RP0=0, select bank0
  3019  0D6A  1303               	bcf	3,6	;RP1=0, select bank0
  3020  0D6B  00B7               	movwf	??_printClock+2
  3021  0D6C  3004               	movlw	4
  3022  0D6D  00B6               	movwf	??_printClock+1
  3023  0D6E  30B9               	movlw	185
  3024  0D6F  00B5               	movwf	??_printClock
  3025  0D70                     u4377:
  3026  0D70  0BB5               	decfsz	??_printClock,f
  3027  0D71  2D70               	goto	u4377
  3028  0D72  0BB6               	decfsz	??_printClock+1,f
  3029  0D73  2D70               	goto	u4377
  3030  0D74  0BB7               	decfsz	??_printClock+2,f
  3031  0D75  2D70               	goto	u4377
  3032  0D76  2D77               	nop2
  3033  0D77                     l426:
  3034  0D77  0008               	return
  3035  0D78                     __end_of_printClock:
  3036                           
  3037                           	psect	text2
  3038  1437                     __ptext2:	
  3039 ;; *************** function _RTC_Read_Clock *****************
  3040 ;; Defined at:
  3041 ;;		line 16 in file "RTC.c"
  3042 ;; Parameters:    Size  Location     Type
  3043 ;;  read_clock_a    1    wreg     unsigned char 
  3044 ;; Auto vars:     Size  Location     Type
  3045 ;;  read_clock_a    1    5[COMMON] unsigned char 
  3046 ;; Return value:  Size  Location     Type
  3047 ;;                  1    wreg      void 
  3048 ;; Registers used:
  3049 ;;		wreg, status,2, status,0, pclath, cstack
  3050 ;; Tracked objects:
  3051 ;;		On entry : 0/0
  3052 ;;		On exit  : 0/0
  3053 ;;		Unchanged: 0/0
  3054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3055 ;;      Params:         0       0       0       0       0
  3056 ;;      Locals:         1       0       0       0       0
  3057 ;;      Temps:          2       0       0       0       0
  3058 ;;      Totals:         3       0       0       0       0
  3059 ;;Total ram usage:        3 bytes
  3060 ;; Hardware stack levels used: 1
  3061 ;; Hardware stack levels required when called: 3
  3062 ;; This function calls:
  3063 ;;		_I2C_Read
  3064 ;;		_I2C_Repeated_Start
  3065 ;;		_I2C_Start
  3066 ;;		_I2C_Write
  3067 ;; This function is called by:
  3068 ;;		_printClock
  3069 ;; This function uses a non-reentrant model
  3070 ;;
  3071                           
  3072  1437                     _RTC_Read_Clock:	
  3073                           ;psect for function _RTC_Read_Clock
  3074                           
  3075                           
  3076                           ;incstack = 0
  3077                           ; Regs used in _RTC_Read_Clock: [wreg+status,2+status,0+pclath+cstack]
  3078                           ;RTC_Read_Clock@read_clock_address stored from wreg
  3079  1437  00F5               	movwf	RTC_Read_Clock@read_clock_address
  3080  1438                     l2957:
  3081                           
  3082                           ;RTC.c: 16: void RTC_Read_Clock(char read_clock_address);RTC.c: 17: {;RTC.c: 18:     I2C
      +                          _Start(0xD0);
  3083  1438  30D0               	movlw	208
  3084  1439  160A  118A  2258  160A  118A  	fcall	_I2C_Start
  3085                           
  3086                           ;RTC.c: 19:     I2C_Write(read_clock_address);
  3087  143E  0875               	movf	RTC_Read_Clock@read_clock_address,w
  3088  143F  160A  118A  2203  160A  118A  	fcall	_I2C_Write
  3089                           
  3090                           ;RTC.c: 20:     I2C_Repeated_Start(0xD1);
  3091  1444  30D1               	movlw	209
  3092  1445  160A  118A  2271  160A  118A  	fcall	_I2C_Repeated_Start
  3093                           
  3094                           ;RTC.c: 21:     sec = I2C_Read(0);
  3095  144A  3000               	movlw	0
  3096  144B  160A  118A  22E8  160A  118A  	fcall	_I2C_Read
  3097  1450  00F3               	movwf	??_RTC_Read_Clock
  3098  1451  01F4               	clrf	??_RTC_Read_Clock+1
  3099  1452  0873               	movf	??_RTC_Read_Clock,w
  3100  1453  1283               	bcf	3,5	;RP0=0, select bank0
  3101  1454  1303               	bcf	3,6	;RP1=0, select bank0
  3102  1455  00E6               	movwf	_sec
  3103  1456  0874               	movf	??_RTC_Read_Clock+1,w
  3104  1457  00E7               	movwf	_sec+1
  3105                           
  3106                           ;RTC.c: 22:     min = I2C_Read(0);
  3107  1458  3000               	movlw	0
  3108  1459  160A  118A  22E8  160A  118A  	fcall	_I2C_Read
  3109  145E  00F3               	movwf	??_RTC_Read_Clock
  3110  145F  01F4               	clrf	??_RTC_Read_Clock+1
  3111  1460  0873               	movf	??_RTC_Read_Clock,w
  3112  1461  1283               	bcf	3,5	;RP0=0, select bank0
  3113  1462  1303               	bcf	3,6	;RP1=0, select bank0
  3114  1463  00E4               	movwf	_min
  3115  1464  0874               	movf	??_RTC_Read_Clock+1,w
  3116  1465  00E5               	movwf	_min+1
  3117                           
  3118                           ;RTC.c: 23:     hour= I2C_Read(1);
  3119  1466  3001               	movlw	1
  3120  1467  160A  118A  22E8  160A  118A  	fcall	_I2C_Read
  3121  146C  00F3               	movwf	??_RTC_Read_Clock
  3122  146D  01F4               	clrf	??_RTC_Read_Clock+1
  3123  146E  0873               	movf	??_RTC_Read_Clock,w
  3124  146F  1283               	bcf	3,5	;RP0=0, select bank0
  3125  1470  1303               	bcf	3,6	;RP1=0, select bank0
  3126  1471  00E2               	movwf	_hour
  3127  1472  0874               	movf	??_RTC_Read_Clock+1,w
  3128  1473  00E3               	movwf	_hour+1
  3129  1474                     l354:
  3130  1474  0008               	return
  3131  1475                     __end_of_RTC_Read_Clock:
  3132                           
  3133                           	psect	text3
  3134  081A                     __ptext3:	
  3135 ;; *************** function _RTC_Read_Calendar *****************
  3136 ;; Defined at:
  3137 ;;		line 27 in file "RTC.c"
  3138 ;; Parameters:    Size  Location     Type
  3139 ;;  read_calenda    1    wreg     unsigned char 
  3140 ;; Auto vars:     Size  Location     Type
  3141 ;;  read_calenda    1    5[COMMON] unsigned char 
  3142 ;; Return value:  Size  Location     Type
  3143 ;;                  1    wreg      void 
  3144 ;; Registers used:
  3145 ;;		wreg, status,2, status,0, pclath, cstack
  3146 ;; Tracked objects:
  3147 ;;		On entry : 0/0
  3148 ;;		On exit  : 0/0
  3149 ;;		Unchanged: 0/0
  3150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3151 ;;      Params:         0       0       0       0       0
  3152 ;;      Locals:         1       0       0       0       0
  3153 ;;      Temps:          2       0       0       0       0
  3154 ;;      Totals:         3       0       0       0       0
  3155 ;;Total ram usage:        3 bytes
  3156 ;; Hardware stack levels used: 1
  3157 ;; Hardware stack levels required when called: 3
  3158 ;; This function calls:
  3159 ;;		_I2C_Read
  3160 ;;		_I2C_Repeated_Start
  3161 ;;		_I2C_Start
  3162 ;;		_I2C_Stop
  3163 ;;		_I2C_Write
  3164 ;; This function is called by:
  3165 ;;		_printClock
  3166 ;; This function uses a non-reentrant model
  3167 ;;
  3168                           
  3169  081A                     _RTC_Read_Calendar:	
  3170                           ;psect for function _RTC_Read_Calendar
  3171                           
  3172                           
  3173                           ;incstack = 0
  3174                           ; Regs used in _RTC_Read_Calendar: [wreg+status,2+status,0+pclath+cstack]
  3175                           ;RTC_Read_Calendar@read_calendar_address stored from wreg
  3176  081A  00F5               	movwf	RTC_Read_Calendar@read_calendar_address
  3177  081B                     l2959:
  3178                           
  3179                           ;RTC.c: 27: void RTC_Read_Calendar(char read_calendar_address);RTC.c: 28: {;RTC.c: 29:  
      +                             I2C_Start(0xD0);
  3180  081B  30D0               	movlw	208
  3181  081C  160A  118A  2258  120A  158A  	fcall	_I2C_Start
  3182                           
  3183                           ;RTC.c: 30:     I2C_Write(read_calendar_address);
  3184  0821  0875               	movf	RTC_Read_Calendar@read_calendar_address,w
  3185  0822  160A  118A  2203  120A  158A  	fcall	_I2C_Write
  3186                           
  3187                           ;RTC.c: 31:     I2C_Repeated_Start(0xD1);
  3188  0827  30D1               	movlw	209
  3189  0828  160A  118A  2271  120A  158A  	fcall	_I2C_Repeated_Start
  3190                           
  3191                           ;RTC.c: 32:     Day = I2C_Read(0);
  3192  082D  3000               	movlw	0
  3193  082E  160A  118A  22E8  120A  158A  	fcall	_I2C_Read
  3194  0833  00F3               	movwf	??_RTC_Read_Calendar
  3195  0834  01F4               	clrf	??_RTC_Read_Calendar+1
  3196  0835  0873               	movf	??_RTC_Read_Calendar,w
  3197  0836  1683               	bsf	3,5	;RP0=1, select bank1
  3198  0837  1303               	bcf	3,6	;RP1=0, select bank1
  3199  0838  00AC               	movwf	_Day^(0+128)
  3200  0839  0874               	movf	??_RTC_Read_Calendar+1,w
  3201  083A  00AD               	movwf	(_Day+1)^(0+128)
  3202                           
  3203                           ;RTC.c: 33:     Date = I2C_Read(0);
  3204  083B  3000               	movlw	0
  3205  083C  160A  118A  22E8  120A  158A  	fcall	_I2C_Read
  3206  0841  00F3               	movwf	??_RTC_Read_Calendar
  3207  0842  01F4               	clrf	??_RTC_Read_Calendar+1
  3208  0843  0873               	movf	??_RTC_Read_Calendar,w
  3209  0844  1683               	bsf	3,5	;RP0=1, select bank1
  3210  0845  1303               	bcf	3,6	;RP1=0, select bank1
  3211  0846  00AA               	movwf	_Date^(0+128)
  3212  0847  0874               	movf	??_RTC_Read_Calendar+1,w
  3213  0848  00AB               	movwf	(_Date+1)^(0+128)
  3214                           
  3215                           ;RTC.c: 34:     Month = I2C_Read(0);
  3216  0849  3000               	movlw	0
  3217  084A  160A  118A  22E8  120A  158A  	fcall	_I2C_Read
  3218  084F  00F3               	movwf	??_RTC_Read_Calendar
  3219  0850  01F4               	clrf	??_RTC_Read_Calendar+1
  3220  0851  0873               	movf	??_RTC_Read_Calendar,w
  3221  0852  1683               	bsf	3,5	;RP0=1, select bank1
  3222  0853  1303               	bcf	3,6	;RP1=0, select bank1
  3223  0854  00A8               	movwf	_Month^(0+128)
  3224  0855  0874               	movf	??_RTC_Read_Calendar+1,w
  3225  0856  00A9               	movwf	(_Month+1)^(0+128)
  3226                           
  3227                           ;RTC.c: 35:     Year = I2C_Read(1);
  3228  0857  3001               	movlw	1
  3229  0858  160A  118A  22E8  120A  158A  	fcall	_I2C_Read
  3230  085D  00F3               	movwf	??_RTC_Read_Calendar
  3231  085E  01F4               	clrf	??_RTC_Read_Calendar+1
  3232  085F  0873               	movf	??_RTC_Read_Calendar,w
  3233  0860  1683               	bsf	3,5	;RP0=1, select bank1
  3234  0861  1303               	bcf	3,6	;RP1=0, select bank1
  3235  0862  00A6               	movwf	_Year^(0+128)
  3236  0863  0874               	movf	??_RTC_Read_Calendar+1,w
  3237  0864  00A7               	movwf	(_Year+1)^(0+128)
  3238                           
  3239                           ;RTC.c: 36:     I2C_Stop();
  3240  0865  160A  118A  21B5  120A  158A  	fcall	_I2C_Stop
  3241  086A                     l357:
  3242  086A  0008               	return
  3243  086B                     __end_of_RTC_Read_Calendar:
  3244                           
  3245                           	psect	text4
  3246  1271                     __ptext4:	
  3247 ;; *************** function _I2C_Repeated_Start *****************
  3248 ;; Defined at:
  3249 ;;		line 77 in file "I2C_Master.c"
  3250 ;; Parameters:    Size  Location     Type
  3251 ;;  slave_read_a    1    wreg     unsigned char 
  3252 ;; Auto vars:     Size  Location     Type
  3253 ;;  slave_read_a    1    1[COMMON] unsigned char 
  3254 ;; Return value:  Size  Location     Type
  3255 ;;                  1    wreg      unsigned char 
  3256 ;; Registers used:
  3257 ;;		wreg, status,2, status,0, pclath, cstack
  3258 ;; Tracked objects:
  3259 ;;		On entry : 0/0
  3260 ;;		On exit  : 0/0
  3261 ;;		Unchanged: 0/0
  3262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3263 ;;      Params:         0       0       0       0       0
  3264 ;;      Locals:         1       0       0       0       0
  3265 ;;      Temps:          0       0       0       0       0
  3266 ;;      Totals:         1       0       0       0       0
  3267 ;;Total ram usage:        1 bytes
  3268 ;; Hardware stack levels used: 1
  3269 ;; Hardware stack levels required when called: 2
  3270 ;; This function calls:
  3271 ;;		_I2C_Write
  3272 ;; This function is called by:
  3273 ;;		_RTC_Read_Clock
  3274 ;;		_RTC_Read_Calendar
  3275 ;; This function uses a non-reentrant model
  3276 ;;
  3277                           
  3278  1271                     _I2C_Repeated_Start:	
  3279                           ;psect for function _I2C_Repeated_Start
  3280                           
  3281                           
  3282                           ;incstack = 0
  3283                           ; Regs used in _I2C_Repeated_Start: [wreg+status,2+status,0+pclath+cstack]
  3284                           ;I2C_Repeated_Start@slave_read_address stored from wreg
  3285  1271  00F1               	movwf	I2C_Repeated_Start@slave_read_address
  3286  1272                     l2657:
  3287                           
  3288                           ;I2C_Master.c: 77: char I2C_Repeated_Start(char slave_read_address);I2C_Master.c: 78: {;
      +                          I2C_Master.c: 79:     RSEN = 1;
  3289  1272  1683               	bsf	3,5	;RP0=1, select bank1
  3290  1273  1303               	bcf	3,6	;RP1=0, select bank1
  3291  1274  1491               	bsf	17,1	;volatile
  3292  1275                     l82:	
  3293                           ;I2C_Master.c: 80:     while(RSEN);
  3294                           
  3295  1275  1891               	btfsc	17,1	;volatile
  3296  1276  2A78               	goto	u2351
  3297  1277  2A79               	goto	u2350
  3298  1278                     u2351:
  3299  1278  2A75               	goto	l82
  3300  1279                     u2350:
  3301  1279                     l84:
  3302                           
  3303                           ;I2C_Master.c: 81:     SSPIF = 0;
  3304  1279  1283               	bcf	3,5	;RP0=0, select bank0
  3305  127A  1303               	bcf	3,6	;RP1=0, select bank0
  3306  127B  118C               	bcf	12,3	;volatile
  3307                           
  3308                           ;I2C_Master.c: 82:  if(!SSPSTATbits.S)
  3309  127C  1683               	bsf	3,5	;RP0=1, select bank1
  3310  127D  1303               	bcf	3,6	;RP1=0, select bank1
  3311  127E  1994               	btfsc	20,3	;volatile
  3312  127F  2A81               	goto	u2361
  3313  1280  2A82               	goto	u2360
  3314  1281                     u2361:
  3315  1281  2A83               	goto	l2661
  3316  1282                     u2360:
  3317  1282  2A89               	goto	l86
  3318  1283                     l2661:
  3319                           
  3320                           ;I2C_Master.c: 84:     I2C_Write(slave_read_address);
  3321  1283  0871               	movf	I2C_Repeated_Start@slave_read_address,w
  3322  1284  160A  118A  2203  160A  118A  	fcall	_I2C_Write
  3323  1289                     l2663:
  3324  1289                     l86:	
  3325                           ;I2C_Master.c: 85:     if (ACKSTAT)
  3326                           
  3327  1289  0008               	return
  3328  128A                     __end_of_I2C_Repeated_Start:
  3329                           
  3330                           	psect	text5
  3331  12E8                     __ptext5:	
  3332 ;; *************** function _I2C_Read *****************
  3333 ;; Defined at:
  3334 ;;		line 10 in file "I2C_Master.c"
  3335 ;; Parameters:    Size  Location     Type
  3336 ;;  flag            1    wreg     unsigned char 
  3337 ;; Auto vars:     Size  Location     Type
  3338 ;;  flag            1    1[COMMON] unsigned char 
  3339 ;;  buffer          1    2[COMMON] unsigned char 
  3340 ;; Return value:  Size  Location     Type
  3341 ;;                  1    wreg      unsigned char 
  3342 ;; Registers used:
  3343 ;;		wreg, status,2, status,0, pclath, cstack
  3344 ;; Tracked objects:
  3345 ;;		On entry : 0/0
  3346 ;;		On exit  : 0/0
  3347 ;;		Unchanged: 0/0
  3348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3349 ;;      Params:         0       0       0       0       0
  3350 ;;      Locals:         2       0       0       0       0
  3351 ;;      Temps:          1       0       0       0       0
  3352 ;;      Totals:         3       0       0       0       0
  3353 ;;Total ram usage:        3 bytes
  3354 ;; Hardware stack levels used: 1
  3355 ;; Hardware stack levels required when called: 1
  3356 ;; This function calls:
  3357 ;;		_I2C_Ack
  3358 ;;		_I2C_Nack
  3359 ;;		_I2C_Ready
  3360 ;; This function is called by:
  3361 ;;		_RTC_Read_Clock
  3362 ;;		_RTC_Read_Calendar
  3363 ;; This function uses a non-reentrant model
  3364 ;;
  3365                           
  3366  12E8                     _I2C_Read:	
  3367                           ;psect for function _I2C_Read
  3368                           
  3369                           
  3370                           ;incstack = 0
  3371                           ; Regs used in _I2C_Read: [wreg+status,2+status,0+pclath+cstack]
  3372                           ;I2C_Read@flag stored from wreg
  3373  12E8  00F1               	movwf	I2C_Read@flag
  3374  12E9                     l2643:
  3375                           
  3376                           ;I2C_Master.c: 10: char I2C_Read(char flag);I2C_Master.c: 12: {;I2C_Master.c: 13:       
      +                            char buffer;;I2C_Master.c: 14:         RCEN = 1;
  3377  12E9  1683               	bsf	3,5	;RP0=1, select bank1
  3378  12EA  1303               	bcf	3,6	;RP1=0, select bank1
  3379  12EB  1591               	bsf	17,3	;volatile
  3380  12EC                     l47:	
  3381                           ;I2C_Master.c: 15:         while(!SSPSTATbits.BF);
  3382                           
  3383  12EC  1C14               	btfss	20,0	;volatile
  3384  12ED  2AEF               	goto	u2331
  3385  12EE  2AF0               	goto	u2330
  3386  12EF                     u2331:
  3387  12EF  2AEC               	goto	l47
  3388  12F0                     u2330:
  3389  12F0                     l2645:
  3390                           
  3391                           ;I2C_Master.c: 17:         buffer = SSPBUF;
  3392  12F0  1283               	bcf	3,5	;RP0=0, select bank0
  3393  12F1  1303               	bcf	3,6	;RP1=0, select bank0
  3394  12F2  0813               	movf	19,w	;volatile
  3395  12F3  00F0               	movwf	??_I2C_Read
  3396  12F4  0870               	movf	??_I2C_Read,w
  3397  12F5  00F2               	movwf	I2C_Read@buffer
  3398  12F6                     l2647:
  3399                           
  3400                           ;I2C_Master.c: 19:         if(flag==0)
  3401  12F6  0871               	movf	I2C_Read@flag,w
  3402  12F7  1D03               	btfss	3,2
  3403  12F8  2AFA               	goto	u2341
  3404  12F9  2AFB               	goto	u2340
  3405  12FA                     u2341:
  3406  12FA  2B01               	goto	l2651
  3407  12FB                     u2340:
  3408  12FB                     l2649:
  3409                           
  3410                           ;I2C_Master.c: 20:             I2C_Ack();
  3411  12FB  160A  118A  21BE  160A  118A  	fcall	_I2C_Ack
  3412  1300  2B06               	goto	l51
  3413  1301                     l2651:
  3414                           
  3415                           ;I2C_Master.c: 22:             I2C_Nack();
  3416  1301  160A  118A  21C7  160A  118A  	fcall	_I2C_Nack
  3417  1306                     l51:
  3418                           
  3419                           ;I2C_Master.c: 23:         I2C_Ready();
  3420  1306  160A  118A  21A5  160A  118A  	fcall	_I2C_Ready
  3421  130B                     l2653:
  3422                           
  3423                           ;I2C_Master.c: 24:         return(buffer);
  3424  130B  0872               	movf	I2C_Read@buffer,w
  3425  130C                     l52:
  3426  130C  0008               	return
  3427  130D                     __end_of_I2C_Read:
  3428                           
  3429                           	psect	text6
  3430  11C7                     __ptext6:	
  3431 ;; *************** function _I2C_Nack *****************
  3432 ;; Defined at:
  3433 ;;		line 117 in file "I2C_Master.c"
  3434 ;; Parameters:    Size  Location     Type
  3435 ;;		None
  3436 ;; Auto vars:     Size  Location     Type
  3437 ;;		None
  3438 ;; Return value:  Size  Location     Type
  3439 ;;                  1    wreg      void 
  3440 ;; Registers used:
  3441 ;;		None
  3442 ;; Tracked objects:
  3443 ;;		On entry : 0/0
  3444 ;;		On exit  : 0/0
  3445 ;;		Unchanged: 0/0
  3446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3447 ;;      Params:         0       0       0       0       0
  3448 ;;      Locals:         0       0       0       0       0
  3449 ;;      Temps:          0       0       0       0       0
  3450 ;;      Totals:         0       0       0       0       0
  3451 ;;Total ram usage:        0 bytes
  3452 ;; Hardware stack levels used: 1
  3453 ;; This function calls:
  3454 ;;		Nothing
  3455 ;; This function is called by:
  3456 ;;		_I2C_Read
  3457 ;; This function uses a non-reentrant model
  3458 ;;
  3459                           
  3460  11C7                     _I2C_Nack:	
  3461                           ;psect for function _I2C_Nack
  3462                           
  3463  11C7                     l2617:	
  3464                           ;incstack = 0
  3465                           ; Regs used in _I2C_Nack: []
  3466                           
  3467                           
  3468                           ;I2C_Master.c: 119:     ACKDT=1;
  3469  11C7  1683               	bsf	3,5	;RP0=1, select bank1
  3470  11C8  1303               	bcf	3,6	;RP1=0, select bank1
  3471  11C9  1691               	bsf	17,5	;volatile
  3472                           
  3473                           ;I2C_Master.c: 120:  ACKEN=1;
  3474  11CA  1611               	bsf	17,4	;volatile
  3475  11CB                     l109:	
  3476                           ;I2C_Master.c: 121:     while(ACKEN);
  3477                           
  3478  11CB  1A11               	btfsc	17,4	;volatile
  3479  11CC  29CE               	goto	u2241
  3480  11CD  29CF               	goto	u2240
  3481  11CE                     u2241:
  3482  11CE  29CB               	goto	l109
  3483  11CF                     u2240:
  3484  11CF                     l112:
  3485  11CF  0008               	return
  3486  11D0                     __end_of_I2C_Nack:
  3487                           
  3488                           	psect	text7
  3489  11BE                     __ptext7:	
  3490 ;; *************** function _I2C_Ack *****************
  3491 ;; Defined at:
  3492 ;;		line 110 in file "I2C_Master.c"
  3493 ;; Parameters:    Size  Location     Type
  3494 ;;		None
  3495 ;; Auto vars:     Size  Location     Type
  3496 ;;		None
  3497 ;; Return value:  Size  Location     Type
  3498 ;;                  1    wreg      void 
  3499 ;; Registers used:
  3500 ;;		None
  3501 ;; Tracked objects:
  3502 ;;		On entry : 0/0
  3503 ;;		On exit  : 0/0
  3504 ;;		Unchanged: 0/0
  3505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3506 ;;      Params:         0       0       0       0       0
  3507 ;;      Locals:         0       0       0       0       0
  3508 ;;      Temps:          0       0       0       0       0
  3509 ;;      Totals:         0       0       0       0       0
  3510 ;;Total ram usage:        0 bytes
  3511 ;; Hardware stack levels used: 1
  3512 ;; This function calls:
  3513 ;;		Nothing
  3514 ;; This function is called by:
  3515 ;;		_I2C_Read
  3516 ;; This function uses a non-reentrant model
  3517 ;;
  3518                           
  3519  11BE                     _I2C_Ack:	
  3520                           ;psect for function _I2C_Ack
  3521                           
  3522  11BE                     l2615:	
  3523                           ;incstack = 0
  3524                           ; Regs used in _I2C_Ack: []
  3525                           
  3526                           
  3527                           ;I2C_Master.c: 112:     ACKDT=0;
  3528  11BE  1683               	bsf	3,5	;RP0=1, select bank1
  3529  11BF  1303               	bcf	3,6	;RP1=0, select bank1
  3530  11C0  1291               	bcf	17,5	;volatile
  3531                           
  3532                           ;I2C_Master.c: 113:  ACKEN=1;
  3533  11C1  1611               	bsf	17,4	;volatile
  3534  11C2                     l103:	
  3535                           ;I2C_Master.c: 114:     while(ACKEN);
  3536                           
  3537  11C2  1A11               	btfsc	17,4	;volatile
  3538  11C3  29C5               	goto	u2231
  3539  11C4  29C6               	goto	u2230
  3540  11C5                     u2231:
  3541  11C5  29C2               	goto	l103
  3542  11C6                     u2230:
  3543  11C6                     l106:
  3544  11C6  0008               	return
  3545  11C7                     __end_of_I2C_Ack:
  3546                           
  3547                           	psect	text8
  3548  0925                     __ptext8:	
  3549 ;; *************** function _Update_Farenheit *****************
  3550 ;; Defined at:
  3551 ;;		line 8 in file "Temp.c"
  3552 ;; Parameters:    Size  Location     Type
  3553 ;;		None
  3554 ;; Auto vars:     Size  Location     Type
  3555 ;;		None
  3556 ;; Return value:  Size  Location     Type
  3557 ;;                  1    wreg      void 
  3558 ;; Registers used:
  3559 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3560 ;; Tracked objects:
  3561 ;;		On entry : 0/0
  3562 ;;		On exit  : 0/0
  3563 ;;		Unchanged: 0/0
  3564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3565 ;;      Params:         0       0       0       0       0
  3566 ;;      Locals:         0       4       0       0       0
  3567 ;;      Temps:          0       2       0       0       0
  3568 ;;      Totals:         0       6       0       0       0
  3569 ;;Total ram usage:        6 bytes
  3570 ;; Hardware stack levels used: 1
  3571 ;; Hardware stack levels required when called: 2
  3572 ;; This function calls:
  3573 ;;		___fladd
  3574 ;;		___flmul
  3575 ;;		___fltol
  3576 ;;		___xxtofl
  3577 ;; This function is called by:
  3578 ;;		_main
  3579 ;; This function uses a non-reentrant model
  3580 ;;
  3581                           
  3582  0925                     _Update_Farenheit:	
  3583                           ;psect for function _Update_Farenheit
  3584                           
  3585  0925                     l3419:	
  3586                           ;incstack = 0
  3587                           ; Regs used in _Update_Farenheit: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3588                           
  3589                           
  3590                           ;Temp.c: 20:     ADCON0bits.GO = 1;
  3591  0925  1283               	bcf	3,5	;RP0=0, select bank0
  3592  0926  1303               	bcf	3,6	;RP1=0, select bank0
  3593  0927  149F               	bsf	31,1	;volatile
  3594  0928                     l207:	
  3595                           ;Temp.c: 22:     while(ADCON0bits.GO == 1);
  3596                           
  3597  0928  189F               	btfsc	31,1	;volatile
  3598  0929  292B               	goto	u3931
  3599  092A  292C               	goto	u3930
  3600  092B                     u3931:
  3601  092B  2928               	goto	l207
  3602  092C                     u3930:
  3603  092C                     l3421:
  3604                           
  3605                           ;Temp.c: 25:     result = 0x0000;
  3606  092C  01E9               	clrf	_result
  3607  092D  01EA               	clrf	_result+1
  3608  092E                     l3423:
  3609                           
  3610                           ;Temp.c: 26:     result = ADRESH;
  3611  092E  081E               	movf	30,w	;volatile
  3612  092F  00D9               	movwf	??_Update_Farenheit
  3613  0930  01DA               	clrf	??_Update_Farenheit+1
  3614  0931  0859               	movf	??_Update_Farenheit,w
  3615  0932  00E9               	movwf	_result
  3616  0933  085A               	movf	??_Update_Farenheit+1,w
  3617  0934  00EA               	movwf	_result+1
  3618  0935                     l3425:
  3619                           
  3620                           ;Temp.c: 27:     result = result << 8;
  3621  0935  0869               	movf	_result,w
  3622  0936  00DA               	movwf	??_Update_Farenheit+1
  3623  0937  01D9               	clrf	??_Update_Farenheit
  3624  0938  0859               	movf	??_Update_Farenheit,w
  3625  0939  00E9               	movwf	_result
  3626  093A  085A               	movf	??_Update_Farenheit+1,w
  3627  093B  00EA               	movwf	_result+1
  3628  093C                     l3427:
  3629                           
  3630                           ;Temp.c: 28:     result = result | ADRESL;
  3631  093C  0869               	movf	_result,w
  3632  093D  1683               	bsf	3,5	;RP0=1, select bank1
  3633  093E  1303               	bcf	3,6	;RP1=0, select bank1
  3634  093F  041E               	iorwf	30,w	;volatile
  3635  0940  1283               	bcf	3,5	;RP0=0, select bank0
  3636  0941  1303               	bcf	3,6	;RP1=0, select bank0
  3637  0942  00D9               	movwf	??_Update_Farenheit
  3638  0943  086A               	movf	_result+1,w
  3639  0944  00DA               	movwf	??_Update_Farenheit+1
  3640  0945  0859               	movf	??_Update_Farenheit,w
  3641  0946  00E9               	movwf	_result
  3642  0947  085A               	movf	??_Update_Farenheit+1,w
  3643  0948  00EA               	movwf	_result+1
  3644  0949                     l3429:
  3645                           
  3646                           ;Temp.c: 29:     temperature_f = .32640625*result -67;
  3647  0949  0869               	movf	_result,w
  3648  094A  00F0               	movwf	___xxtofl@val
  3649  094B  086A               	movf	_result+1,w
  3650  094C  00F1               	movwf	___xxtofl@val+1
  3651  094D  01F2               	clrf	___xxtofl@val+2
  3652  094E  01F3               	clrf	___xxtofl@val+3
  3653  094F  3000               	movlw	0
  3654  0950  120A  158A  206B  120A  158A  	fcall	___xxtofl
  3655  0955  0873               	movf	?___xxtofl+3,w
  3656  0956  1283               	bcf	3,5	;RP0=0, select bank0
  3657  0957  1303               	bcf	3,6	;RP1=0, select bank0
  3658  0958  00A7               	movwf	___flmul@a+3
  3659  0959  0872               	movf	?___xxtofl+2,w
  3660  095A  00A6               	movwf	___flmul@a+2
  3661  095B  0871               	movf	?___xxtofl+1,w
  3662  095C  00A5               	movwf	___flmul@a+1
  3663  095D  0870               	movf	?___xxtofl,w
  3664  095E  00A4               	movwf	___flmul@a
  3665  095F  303E               	movlw	62
  3666  0960  00A3               	movwf	___flmul@b+3
  3667  0961  30A7               	movlw	167
  3668  0962  00A2               	movwf	___flmul@b+2
  3669  0963  301E               	movlw	30
  3670  0964  00A1               	movwf	___flmul@b+1
  3671  0965  30B8               	movlw	184
  3672  0966  00A0               	movwf	___flmul@b
  3673  0967  120A  118A  2457  120A  158A  	fcall	___flmul
  3674  096C  1283               	bcf	3,5	;RP0=0, select bank0
  3675  096D  1303               	bcf	3,6	;RP1=0, select bank0
  3676  096E  0823               	movf	?___flmul+3,w
  3677  096F  00C1               	movwf	___fladd@a+3
  3678  0970  0822               	movf	?___flmul+2,w
  3679  0971  00C0               	movwf	___fladd@a+2
  3680  0972  0821               	movf	?___flmul+1,w
  3681  0973  00BF               	movwf	___fladd@a+1
  3682  0974  0820               	movf	?___flmul,w
  3683  0975  00BE               	movwf	___fladd@a
  3684  0976  30C2               	movlw	194
  3685  0977  00BD               	movwf	___fladd@b+3
  3686  0978  3086               	movlw	134
  3687  0979  00BC               	movwf	___fladd@b+2
  3688  097A  3000               	movlw	0
  3689  097B  00BB               	movwf	___fladd@b+1
  3690  097C  3000               	movlw	0
  3691  097D  00BA               	movwf	___fladd@b
  3692  097E  120A  158A  2578  120A  158A  	fcall	___fladd
  3693  0983  1283               	bcf	3,5	;RP0=0, select bank0
  3694  0984  1303               	bcf	3,6	;RP1=0, select bank0
  3695  0985  083D               	movf	?___fladd+3,w
  3696  0986  00D1               	movwf	___fltol@f1+3
  3697  0987  083C               	movf	?___fladd+2,w
  3698  0988  00D0               	movwf	___fltol@f1+2
  3699  0989  083B               	movf	?___fladd+1,w
  3700  098A  00CF               	movwf	___fltol@f1+1
  3701  098B  083A               	movf	?___fladd,w
  3702  098C  00CE               	movwf	___fltol@f1
  3703  098D  160A  118A  25DB  120A  158A  	fcall	___fltol
  3704  0992  1283               	bcf	3,5	;RP0=0, select bank0
  3705  0993  1303               	bcf	3,6	;RP1=0, select bank0
  3706  0994  084F               	movf	?___fltol+1,w
  3707  0995  1683               	bsf	3,5	;RP0=1, select bank1
  3708  0996  1303               	bcf	3,6	;RP1=0, select bank1
  3709  0997  00B3               	movwf	(_temperature_f+1)^(0+128)
  3710  0998  1283               	bcf	3,5	;RP0=0, select bank0
  3711  0999  1303               	bcf	3,6	;RP1=0, select bank0
  3712  099A  084E               	movf	?___fltol,w
  3713  099B  1683               	bsf	3,5	;RP0=1, select bank1
  3714  099C  1303               	bcf	3,6	;RP1=0, select bank1
  3715  099D  00B2               	movwf	_temperature_f^(0+128)
  3716  099E                     l3431:
  3717                           
  3718                           ;Temp.c: 31:     PIR1bits.ADIF = 0;
  3719  099E  1283               	bcf	3,5	;RP0=0, select bank0
  3720  099F  1303               	bcf	3,6	;RP1=0, select bank0
  3721  09A0  130C               	bcf	12,6	;volatile
  3722  09A1                     l3433:
  3723                           
  3724                           ;Temp.c: 33:     temperature_f = .32640625*result - 67+64;
  3725  09A1  0869               	movf	_result,w
  3726  09A2  00F0               	movwf	___xxtofl@val
  3727  09A3  086A               	movf	_result+1,w
  3728  09A4  00F1               	movwf	___xxtofl@val+1
  3729  09A5  01F2               	clrf	___xxtofl@val+2
  3730  09A6  01F3               	clrf	___xxtofl@val+3
  3731  09A7  3000               	movlw	0
  3732  09A8  120A  158A  206B  120A  158A  	fcall	___xxtofl
  3733  09AD  0873               	movf	?___xxtofl+3,w
  3734  09AE  1283               	bcf	3,5	;RP0=0, select bank0
  3735  09AF  1303               	bcf	3,6	;RP1=0, select bank0
  3736  09B0  00A7               	movwf	___flmul@a+3
  3737  09B1  0872               	movf	?___xxtofl+2,w
  3738  09B2  00A6               	movwf	___flmul@a+2
  3739  09B3  0871               	movf	?___xxtofl+1,w
  3740  09B4  00A5               	movwf	___flmul@a+1
  3741  09B5  0870               	movf	?___xxtofl,w
  3742  09B6  00A4               	movwf	___flmul@a
  3743  09B7  303E               	movlw	62
  3744  09B8  00A3               	movwf	___flmul@b+3
  3745  09B9  30A7               	movlw	167
  3746  09BA  00A2               	movwf	___flmul@b+2
  3747  09BB  301E               	movlw	30
  3748  09BC  00A1               	movwf	___flmul@b+1
  3749  09BD  30B8               	movlw	184
  3750  09BE  00A0               	movwf	___flmul@b
  3751  09BF  120A  118A  2457  120A  158A  	fcall	___flmul
  3752  09C4  1283               	bcf	3,5	;RP0=0, select bank0
  3753  09C5  1303               	bcf	3,6	;RP1=0, select bank0
  3754  09C6  0823               	movf	?___flmul+3,w
  3755  09C7  00C1               	movwf	___fladd@a+3
  3756  09C8  0822               	movf	?___flmul+2,w
  3757  09C9  00C0               	movwf	___fladd@a+2
  3758  09CA  0821               	movf	?___flmul+1,w
  3759  09CB  00BF               	movwf	___fladd@a+1
  3760  09CC  0820               	movf	?___flmul,w
  3761  09CD  00BE               	movwf	___fladd@a
  3762  09CE  30C2               	movlw	194
  3763  09CF  00BD               	movwf	___fladd@b+3
  3764  09D0  3086               	movlw	134
  3765  09D1  00BC               	movwf	___fladd@b+2
  3766  09D2  3000               	movlw	0
  3767  09D3  00BB               	movwf	___fladd@b+1
  3768  09D4  3000               	movlw	0
  3769  09D5  00BA               	movwf	___fladd@b
  3770  09D6  120A  158A  2578  120A  158A  	fcall	___fladd
  3771  09DB  1283               	bcf	3,5	;RP0=0, select bank0
  3772  09DC  1303               	bcf	3,6	;RP1=0, select bank0
  3773  09DD  083D               	movf	?___fladd+3,w
  3774  09DE  00DE               	movwf	_Update_Farenheit$1560+3
  3775  09DF  083C               	movf	?___fladd+2,w
  3776  09E0  00DD               	movwf	_Update_Farenheit$1560+2
  3777  09E1  083B               	movf	?___fladd+1,w
  3778  09E2  00DC               	movwf	_Update_Farenheit$1560+1
  3779  09E3  083A               	movf	?___fladd,w
  3780  09E4  00DB               	movwf	_Update_Farenheit$1560
  3781  09E5                     l3435:
  3782                           
  3783                           ;Temp.c: 33:     temperature_f = .32640625*result - 67+64;
  3784  09E5  085E               	movf	_Update_Farenheit$1560+3,w
  3785  09E6  00C1               	movwf	___fladd@a+3
  3786  09E7  085D               	movf	_Update_Farenheit$1560+2,w
  3787  09E8  00C0               	movwf	___fladd@a+2
  3788  09E9  085C               	movf	_Update_Farenheit$1560+1,w
  3789  09EA  00BF               	movwf	___fladd@a+1
  3790  09EB  085B               	movf	_Update_Farenheit$1560,w
  3791  09EC  00BE               	movwf	___fladd@a
  3792  09ED  3042               	movlw	66
  3793  09EE  00BD               	movwf	___fladd@b+3
  3794  09EF  3080               	movlw	128
  3795  09F0  00BC               	movwf	___fladd@b+2
  3796  09F1  3000               	movlw	0
  3797  09F2  00BB               	movwf	___fladd@b+1
  3798  09F3  3000               	movlw	0
  3799  09F4  00BA               	movwf	___fladd@b
  3800  09F5  120A  158A  2578  120A  158A  	fcall	___fladd
  3801  09FA  1283               	bcf	3,5	;RP0=0, select bank0
  3802  09FB  1303               	bcf	3,6	;RP1=0, select bank0
  3803  09FC  083D               	movf	?___fladd+3,w
  3804  09FD  00D1               	movwf	___fltol@f1+3
  3805  09FE  083C               	movf	?___fladd+2,w
  3806  09FF  00D0               	movwf	___fltol@f1+2
  3807  0A00  083B               	movf	?___fladd+1,w
  3808  0A01  00CF               	movwf	___fltol@f1+1
  3809  0A02  083A               	movf	?___fladd,w
  3810  0A03  00CE               	movwf	___fltol@f1
  3811  0A04  160A  118A  25DB  120A  158A  	fcall	___fltol
  3812  0A09  1283               	bcf	3,5	;RP0=0, select bank0
  3813  0A0A  1303               	bcf	3,6	;RP1=0, select bank0
  3814  0A0B  084F               	movf	?___fltol+1,w
  3815  0A0C  1683               	bsf	3,5	;RP0=1, select bank1
  3816  0A0D  1303               	bcf	3,6	;RP1=0, select bank1
  3817  0A0E  00B3               	movwf	(_temperature_f+1)^(0+128)
  3818  0A0F  1283               	bcf	3,5	;RP0=0, select bank0
  3819  0A10  1303               	bcf	3,6	;RP1=0, select bank0
  3820  0A11  084E               	movf	?___fltol,w
  3821  0A12  1683               	bsf	3,5	;RP0=1, select bank1
  3822  0A13  1303               	bcf	3,6	;RP1=0, select bank1
  3823  0A14  00B2               	movwf	_temperature_f^(0+128)
  3824  0A15                     l210:
  3825  0A15  0008               	return
  3826  0A16                     __end_of_Update_Farenheit:
  3827                           
  3828                           	psect	text9
  3829  1762                     __ptext9:	
  3830 ;; *************** function _Update_Celsius *****************
  3831 ;; Defined at:
  3832 ;;		line 39 in file "Temp.c"
  3833 ;; Parameters:    Size  Location     Type
  3834 ;;		None
  3835 ;; Auto vars:     Size  Location     Type
  3836 ;;		None
  3837 ;; Return value:  Size  Location     Type
  3838 ;;                  1    wreg      void 
  3839 ;; Registers used:
  3840 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3841 ;; Tracked objects:
  3842 ;;		On entry : 0/0
  3843 ;;		On exit  : 0/0
  3844 ;;		Unchanged: 0/0
  3845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3846 ;;      Params:         0       0       0       0       0
  3847 ;;      Locals:         0       4       0       0       0
  3848 ;;      Temps:          0       2       0       0       0
  3849 ;;      Totals:         0       6       0       0       0
  3850 ;;Total ram usage:        6 bytes
  3851 ;; Hardware stack levels used: 1
  3852 ;; Hardware stack levels required when called: 2
  3853 ;; This function calls:
  3854 ;;		___fladd
  3855 ;;		___flmul
  3856 ;;		___fltol
  3857 ;;		___xxtofl
  3858 ;; This function is called by:
  3859 ;;		_main
  3860 ;; This function uses a non-reentrant model
  3861 ;;
  3862                           
  3863  1762                     _Update_Celsius:	
  3864                           ;psect for function _Update_Celsius
  3865                           
  3866  1762                     l3437:	
  3867                           ;incstack = 0
  3868                           ; Regs used in _Update_Celsius: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3869                           
  3870                           
  3871                           ;Temp.c: 42:     ADCON0bits.GO = 1;
  3872  1762  1283               	bcf	3,5	;RP0=0, select bank0
  3873  1763  1303               	bcf	3,6	;RP1=0, select bank0
  3874  1764  149F               	bsf	31,1	;volatile
  3875  1765                     l213:	
  3876                           ;Temp.c: 44:     while(ADCON0bits.GO == 1);
  3877                           
  3878  1765  189F               	btfsc	31,1	;volatile
  3879  1766  2F68               	goto	u3941
  3880  1767  2F69               	goto	u3940
  3881  1768                     u3941:
  3882  1768  2F65               	goto	l213
  3883  1769                     u3940:
  3884  1769                     l3439:
  3885                           
  3886                           ;Temp.c: 47:     result = 0x0000;
  3887  1769  01E9               	clrf	_result
  3888  176A  01EA               	clrf	_result+1
  3889  176B                     l3441:
  3890                           
  3891                           ;Temp.c: 48:     result = ADRESH;
  3892  176B  081E               	movf	30,w	;volatile
  3893  176C  00D9               	movwf	??_Update_Celsius
  3894  176D  01DA               	clrf	??_Update_Celsius+1
  3895  176E  0859               	movf	??_Update_Celsius,w
  3896  176F  00E9               	movwf	_result
  3897  1770  085A               	movf	??_Update_Celsius+1,w
  3898  1771  00EA               	movwf	_result+1
  3899  1772                     l3443:
  3900                           
  3901                           ;Temp.c: 49:     result = result << 8;
  3902  1772  0869               	movf	_result,w
  3903  1773  00DA               	movwf	??_Update_Celsius+1
  3904  1774  01D9               	clrf	??_Update_Celsius
  3905  1775  0859               	movf	??_Update_Celsius,w
  3906  1776  00E9               	movwf	_result
  3907  1777  085A               	movf	??_Update_Celsius+1,w
  3908  1778  00EA               	movwf	_result+1
  3909  1779                     l3445:
  3910                           
  3911                           ;Temp.c: 50:     result = result | ADRESL;
  3912  1779  0869               	movf	_result,w
  3913  177A  1683               	bsf	3,5	;RP0=1, select bank1
  3914  177B  1303               	bcf	3,6	;RP1=0, select bank1
  3915  177C  041E               	iorwf	30,w	;volatile
  3916  177D  1283               	bcf	3,5	;RP0=0, select bank0
  3917  177E  1303               	bcf	3,6	;RP1=0, select bank0
  3918  177F  00D9               	movwf	??_Update_Celsius
  3919  1780  086A               	movf	_result+1,w
  3920  1781  00DA               	movwf	??_Update_Celsius+1
  3921  1782  0859               	movf	??_Update_Celsius,w
  3922  1783  00E9               	movwf	_result
  3923  1784  085A               	movf	??_Update_Celsius+1,w
  3924  1785  00EA               	movwf	_result+1
  3925  1786                     l3447:
  3926                           
  3927                           ;Temp.c: 52:     PIR1bits.ADIF = 0;
  3928  1786  130C               	bcf	12,6	;volatile
  3929  1787                     l3449:
  3930                           
  3931                           ;Temp.c: 53:     temperature_c = .17578125*result - 55+35;
  3932  1787  0869               	movf	_result,w
  3933  1788  00F0               	movwf	___xxtofl@val
  3934  1789  086A               	movf	_result+1,w
  3935  178A  00F1               	movwf	___xxtofl@val+1
  3936  178B  01F2               	clrf	___xxtofl@val+2
  3937  178C  01F3               	clrf	___xxtofl@val+3
  3938  178D  3000               	movlw	0
  3939  178E  120A  158A  206B  160A  118A  	fcall	___xxtofl
  3940  1793  0873               	movf	?___xxtofl+3,w
  3941  1794  1283               	bcf	3,5	;RP0=0, select bank0
  3942  1795  1303               	bcf	3,6	;RP1=0, select bank0
  3943  1796  00A7               	movwf	___flmul@a+3
  3944  1797  0872               	movf	?___xxtofl+2,w
  3945  1798  00A6               	movwf	___flmul@a+2
  3946  1799  0871               	movf	?___xxtofl+1,w
  3947  179A  00A5               	movwf	___flmul@a+1
  3948  179B  0870               	movf	?___xxtofl,w
  3949  179C  00A4               	movwf	___flmul@a
  3950  179D  303E               	movlw	62
  3951  179E  00A3               	movwf	___flmul@b+3
  3952  179F  3034               	movlw	52
  3953  17A0  00A2               	movwf	___flmul@b+2
  3954  17A1  3000               	movlw	0
  3955  17A2  00A1               	movwf	___flmul@b+1
  3956  17A3  3000               	movlw	0
  3957  17A4  00A0               	movwf	___flmul@b
  3958  17A5  120A  118A  2457  160A  118A  	fcall	___flmul
  3959  17AA  1283               	bcf	3,5	;RP0=0, select bank0
  3960  17AB  1303               	bcf	3,6	;RP1=0, select bank0
  3961  17AC  0823               	movf	?___flmul+3,w
  3962  17AD  00C1               	movwf	___fladd@a+3
  3963  17AE  0822               	movf	?___flmul+2,w
  3964  17AF  00C0               	movwf	___fladd@a+2
  3965  17B0  0821               	movf	?___flmul+1,w
  3966  17B1  00BF               	movwf	___fladd@a+1
  3967  17B2  0820               	movf	?___flmul,w
  3968  17B3  00BE               	movwf	___fladd@a
  3969  17B4  30C2               	movlw	194
  3970  17B5  00BD               	movwf	___fladd@b+3
  3971  17B6  305C               	movlw	92
  3972  17B7  00BC               	movwf	___fladd@b+2
  3973  17B8  3000               	movlw	0
  3974  17B9  00BB               	movwf	___fladd@b+1
  3975  17BA  3000               	movlw	0
  3976  17BB  00BA               	movwf	___fladd@b
  3977  17BC  120A  158A  2578  160A  118A  	fcall	___fladd
  3978  17C1  1283               	bcf	3,5	;RP0=0, select bank0
  3979  17C2  1303               	bcf	3,6	;RP1=0, select bank0
  3980  17C3  083D               	movf	?___fladd+3,w
  3981  17C4  00DE               	movwf	_Update_Celsius$1561+3
  3982  17C5  083C               	movf	?___fladd+2,w
  3983  17C6  00DD               	movwf	_Update_Celsius$1561+2
  3984  17C7  083B               	movf	?___fladd+1,w
  3985  17C8  00DC               	movwf	_Update_Celsius$1561+1
  3986  17C9  083A               	movf	?___fladd,w
  3987  17CA  00DB               	movwf	_Update_Celsius$1561
  3988  17CB                     l3451:
  3989                           
  3990                           ;Temp.c: 53:     temperature_c = .17578125*result - 55+35;
  3991  17CB  085E               	movf	_Update_Celsius$1561+3,w
  3992  17CC  00C1               	movwf	___fladd@a+3
  3993  17CD  085D               	movf	_Update_Celsius$1561+2,w
  3994  17CE  00C0               	movwf	___fladd@a+2
  3995  17CF  085C               	movf	_Update_Celsius$1561+1,w
  3996  17D0  00BF               	movwf	___fladd@a+1
  3997  17D1  085B               	movf	_Update_Celsius$1561,w
  3998  17D2  00BE               	movwf	___fladd@a
  3999  17D3  3042               	movlw	66
  4000  17D4  00BD               	movwf	___fladd@b+3
  4001  17D5  300C               	movlw	12
  4002  17D6  00BC               	movwf	___fladd@b+2
  4003  17D7  3000               	movlw	0
  4004  17D8  00BB               	movwf	___fladd@b+1
  4005  17D9  3000               	movlw	0
  4006  17DA  00BA               	movwf	___fladd@b
  4007  17DB  120A  158A  2578  160A  118A  	fcall	___fladd
  4008  17E0  1283               	bcf	3,5	;RP0=0, select bank0
  4009  17E1  1303               	bcf	3,6	;RP1=0, select bank0
  4010  17E2  083D               	movf	?___fladd+3,w
  4011  17E3  00D1               	movwf	___fltol@f1+3
  4012  17E4  083C               	movf	?___fladd+2,w
  4013  17E5  00D0               	movwf	___fltol@f1+2
  4014  17E6  083B               	movf	?___fladd+1,w
  4015  17E7  00CF               	movwf	___fltol@f1+1
  4016  17E8  083A               	movf	?___fladd,w
  4017  17E9  00CE               	movwf	___fltol@f1
  4018  17EA  160A  118A  25DB  160A  118A  	fcall	___fltol
  4019  17EF  1283               	bcf	3,5	;RP0=0, select bank0
  4020  17F0  1303               	bcf	3,6	;RP1=0, select bank0
  4021  17F1  084F               	movf	?___fltol+1,w
  4022  17F2  1683               	bsf	3,5	;RP0=1, select bank1
  4023  17F3  1303               	bcf	3,6	;RP1=0, select bank1
  4024  17F4  00B5               	movwf	(_temperature_c+1)^(0+128)
  4025  17F5  1283               	bcf	3,5	;RP0=0, select bank0
  4026  17F6  1303               	bcf	3,6	;RP1=0, select bank0
  4027  17F7  084E               	movf	?___fltol,w
  4028  17F8  1683               	bsf	3,5	;RP0=1, select bank1
  4029  17F9  1303               	bcf	3,6	;RP1=0, select bank1
  4030  17FA  00B4               	movwf	_temperature_c^(0+128)
  4031  17FB                     l3453:
  4032                           
  4033                           ;Temp.c: 55:     Temp_Mode = 1;
  4034  17FB  3001               	movlw	1
  4035  17FC  00B0               	movwf	_Temp_Mode^(0+128)
  4036  17FD  3000               	movlw	0
  4037  17FE  00B1               	movwf	(_Temp_Mode^(0+128)+1)
  4038  17FF                     l216:
  4039  17FF  0008               	return
  4040  1800                     __end_of_Update_Celsius:
  4041                           
  4042                           	psect	text10
  4043  086B                     __ptext10:	
  4044 ;; *************** function ___xxtofl *****************
  4045 ;; Defined at:
  4046 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\xxtofl.c"
  4047 ;; Parameters:    Size  Location     Type
  4048 ;;  sign            1    wreg     unsigned char 
  4049 ;;  val             4    0[COMMON] long 
  4050 ;; Auto vars:     Size  Location     Type
  4051 ;;  sign            1    8[COMMON] unsigned char 
  4052 ;;  arg             4   10[COMMON] unsigned long 
  4053 ;;  exp             1    9[COMMON] unsigned char 
  4054 ;; Return value:  Size  Location     Type
  4055 ;;                  4    0[COMMON] unsigned char 
  4056 ;; Registers used:
  4057 ;;		wreg, status,2, status,0
  4058 ;; Tracked objects:
  4059 ;;		On entry : 0/0
  4060 ;;		On exit  : 0/0
  4061 ;;		Unchanged: 0/0
  4062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4063 ;;      Params:         4       0       0       0       0
  4064 ;;      Locals:         6       0       0       0       0
  4065 ;;      Temps:          4       0       0       0       0
  4066 ;;      Totals:        14       0       0       0       0
  4067 ;;Total ram usage:       14 bytes
  4068 ;; Hardware stack levels used: 1
  4069 ;; This function calls:
  4070 ;;		Nothing
  4071 ;; This function is called by:
  4072 ;;		_Update_Farenheit
  4073 ;;		_Update_Celsius
  4074 ;; This function uses a non-reentrant model
  4075 ;;
  4076                           
  4077  086B                     ___xxtofl:	
  4078                           ;psect for function ___xxtofl
  4079                           
  4080                           
  4081                           ;incstack = 0
  4082                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4083                           ;___xxtofl@sign stored from wreg
  4084  086B  00F8               	movwf	___xxtofl@sign
  4085  086C                     l3333:
  4086  086C  0878               	movf	___xxtofl@sign,w
  4087  086D  1903               	btfsc	3,2
  4088  086E  2870               	goto	u3791
  4089  086F  2871               	goto	u3790
  4090  0870                     u3791:
  4091  0870  2885               	goto	l3339
  4092  0871                     u3790:
  4093  0871                     l3335:
  4094  0871  1FF3               	btfss	___xxtofl@val+3,7
  4095  0872  2874               	goto	u3801
  4096  0873  2875               	goto	u3800
  4097  0874                     u3801:
  4098  0874  2885               	goto	l3339
  4099  0875                     u3800:
  4100  0875                     l3337:
  4101  0875  0970               	comf	___xxtofl@val,w
  4102  0876  00FA               	movwf	___xxtofl@arg
  4103  0877  0971               	comf	___xxtofl@val+1,w
  4104  0878  00FB               	movwf	___xxtofl@arg+1
  4105  0879  0972               	comf	___xxtofl@val+2,w
  4106  087A  00FC               	movwf	___xxtofl@arg+2
  4107  087B  0973               	comf	___xxtofl@val+3,w
  4108  087C  00FD               	movwf	___xxtofl@arg+3
  4109  087D  0AFA               	incf	___xxtofl@arg,f
  4110  087E  1903               	skipnz
  4111  087F  0AFB               	incf	___xxtofl@arg+1,f
  4112  0880  1903               	skipnz
  4113  0881  0AFC               	incf	___xxtofl@arg+2,f
  4114  0882  1903               	skipnz
  4115  0883  0AFD               	incf	___xxtofl@arg+3,f
  4116  0884  288D               	goto	l1125
  4117  0885                     l3339:
  4118  0885  0873               	movf	___xxtofl@val+3,w
  4119  0886  00FD               	movwf	___xxtofl@arg+3
  4120  0887  0872               	movf	___xxtofl@val+2,w
  4121  0888  00FC               	movwf	___xxtofl@arg+2
  4122  0889  0871               	movf	___xxtofl@val+1,w
  4123  088A  00FB               	movwf	___xxtofl@arg+1
  4124  088B  0870               	movf	___xxtofl@val,w
  4125  088C  00FA               	movwf	___xxtofl@arg
  4126  088D                     l1125:
  4127  088D  0873               	movf	___xxtofl@val+3,w
  4128  088E  0472               	iorwf	___xxtofl@val+2,w
  4129  088F  0471               	iorwf	___xxtofl@val+1,w
  4130  0890  0470               	iorwf	___xxtofl@val,w
  4131  0891  1D03               	skipz
  4132  0892  2894               	goto	u3811
  4133  0893  2895               	goto	u3810
  4134  0894                     u3811:
  4135  0894  289E               	goto	l3345
  4136  0895                     u3810:
  4137  0895                     l3341:
  4138  0895  3000               	movlw	0
  4139  0896  00F3               	movwf	?___xxtofl+3
  4140  0897  3000               	movlw	0
  4141  0898  00F2               	movwf	?___xxtofl+2
  4142  0899  3000               	movlw	0
  4143  089A  00F1               	movwf	?___xxtofl+1
  4144  089B  3000               	movlw	0
  4145  089C  00F0               	movwf	?___xxtofl
  4146  089D  2924               	goto	l1127
  4147  089E                     l3345:
  4148  089E  3096               	movlw	150
  4149  089F  00F4               	movwf	??___xxtofl
  4150  08A0  0874               	movf	??___xxtofl,w
  4151  08A1  00F9               	movwf	___xxtofl@exp
  4152  08A2  28B0               	goto	l3349
  4153  08A3                     l3347:
  4154  08A3  3001               	movlw	1
  4155  08A4  00F4               	movwf	??___xxtofl
  4156  08A5  0874               	movf	??___xxtofl,w
  4157  08A6  07F9               	addwf	___xxtofl@exp,f
  4158  08A7  3001               	movlw	1
  4159  08A8                     u3825:
  4160  08A8  1003               	clrc
  4161  08A9  0CFD               	rrf	___xxtofl@arg+3,f
  4162  08AA  0CFC               	rrf	___xxtofl@arg+2,f
  4163  08AB  0CFB               	rrf	___xxtofl@arg+1,f
  4164  08AC  0CFA               	rrf	___xxtofl@arg,f
  4165  08AD  3EFF               	addlw	-1
  4166  08AE  1D03               	skipz
  4167  08AF  28A8               	goto	u3825
  4168  08B0                     l3349:
  4169  08B0  30FE               	movlw	254
  4170  08B1  057D               	andwf	___xxtofl@arg+3,w
  4171  08B2  1D03               	btfss	3,2
  4172  08B3  28B5               	goto	u3831
  4173  08B4  28B6               	goto	u3830
  4174  08B5                     u3831:
  4175  08B5  28A3               	goto	l3347
  4176  08B6                     u3830:
  4177  08B6  28D2               	goto	l1131
  4178  08B7                     l3351:
  4179  08B7  3001               	movlw	1
  4180  08B8  00F4               	movwf	??___xxtofl
  4181  08B9  0874               	movf	??___xxtofl,w
  4182  08BA  07F9               	addwf	___xxtofl@exp,f
  4183  08BB                     l3353:
  4184  08BB  3001               	movlw	1
  4185  08BC  07FA               	addwf	___xxtofl@arg,f
  4186  08BD  3000               	movlw	0
  4187  08BE  1803               	skipnc
  4188  08BF  3001               	movlw	1
  4189  08C0  07FB               	addwf	___xxtofl@arg+1,f
  4190  08C1  3000               	movlw	0
  4191  08C2  1803               	skipnc
  4192  08C3  3001               	movlw	1
  4193  08C4  07FC               	addwf	___xxtofl@arg+2,f
  4194  08C5  3000               	movlw	0
  4195  08C6  1803               	skipnc
  4196  08C7  3001               	movlw	1
  4197  08C8  07FD               	addwf	___xxtofl@arg+3,f
  4198  08C9                     l3355:
  4199  08C9  3001               	movlw	1
  4200  08CA                     u3845:
  4201  08CA  1003               	clrc
  4202  08CB  0CFD               	rrf	___xxtofl@arg+3,f
  4203  08CC  0CFC               	rrf	___xxtofl@arg+2,f
  4204  08CD  0CFB               	rrf	___xxtofl@arg+1,f
  4205  08CE  0CFA               	rrf	___xxtofl@arg,f
  4206  08CF  3EFF               	addlw	-1
  4207  08D0  1D03               	skipz
  4208  08D1  28CA               	goto	u3845
  4209  08D2                     l1131:
  4210  08D2  30FF               	movlw	255
  4211  08D3  057D               	andwf	___xxtofl@arg+3,w
  4212  08D4  1D03               	btfss	3,2
  4213  08D5  28D7               	goto	u3851
  4214  08D6  28D8               	goto	u3850
  4215  08D7                     u3851:
  4216  08D7  28B7               	goto	l3351
  4217  08D8                     u3850:
  4218  08D8  28E4               	goto	l3359
  4219  08D9                     l3357:
  4220  08D9  3001               	movlw	1
  4221  08DA  02F9               	subwf	___xxtofl@exp,f
  4222  08DB  3001               	movlw	1
  4223  08DC  00F4               	movwf	??___xxtofl
  4224  08DD                     u3865:
  4225  08DD  1003               	clrc
  4226  08DE  0DFA               	rlf	___xxtofl@arg,f
  4227  08DF  0DFB               	rlf	___xxtofl@arg+1,f
  4228  08E0  0DFC               	rlf	___xxtofl@arg+2,f
  4229  08E1  0DFD               	rlf	___xxtofl@arg+3,f
  4230  08E2  0BF4               	decfsz	??___xxtofl,f
  4231  08E3  28DD               	goto	u3865
  4232  08E4                     l3359:
  4233  08E4  1BFC               	btfsc	___xxtofl@arg+2,7
  4234  08E5  28E7               	goto	u3871
  4235  08E6  28E8               	goto	u3870
  4236  08E7                     u3871:
  4237  08E7  28EE               	goto	l1138
  4238  08E8                     u3870:
  4239  08E8                     l3361:
  4240  08E8  3002               	movlw	2
  4241  08E9  0279               	subwf	___xxtofl@exp,w
  4242  08EA  1803               	skipnc
  4243  08EB  28ED               	goto	u3881
  4244  08EC  28EE               	goto	u3880
  4245  08ED                     u3881:
  4246  08ED  28D9               	goto	l3357
  4247  08EE                     u3880:
  4248  08EE                     l1138:
  4249  08EE  1879               	btfsc	___xxtofl@exp,0
  4250  08EF  28F1               	goto	u3891
  4251  08F0  28F2               	goto	u3890
  4252  08F1                     u3891:
  4253  08F1  28FA               	goto	l1139
  4254  08F2                     u3890:
  4255  08F2                     l3363:
  4256  08F2  30FF               	movlw	255
  4257  08F3  05FA               	andwf	___xxtofl@arg,f
  4258  08F4  30FF               	movlw	255
  4259  08F5  05FB               	andwf	___xxtofl@arg+1,f
  4260  08F6  307F               	movlw	127
  4261  08F7  05FC               	andwf	___xxtofl@arg+2,f
  4262  08F8  30FF               	movlw	255
  4263  08F9  05FD               	andwf	___xxtofl@arg+3,f
  4264  08FA                     l1139:
  4265  08FA  1003               	clrc
  4266  08FB  0CF9               	rrf	___xxtofl@exp,f
  4267  08FC                     l3365:
  4268  08FC  0879               	movf	___xxtofl@exp,w
  4269  08FD  00F4               	movwf	??___xxtofl
  4270  08FE  01F5               	clrf	??___xxtofl+1
  4271  08FF  01F6               	clrf	??___xxtofl+2
  4272  0900  01F7               	clrf	??___xxtofl+3
  4273  0901  3018               	movlw	24
  4274  0902                     u3905:
  4275  0902  1003               	clrc
  4276  0903  0DF4               	rlf	??___xxtofl,f
  4277  0904  0DF5               	rlf	??___xxtofl+1,f
  4278  0905  0DF6               	rlf	??___xxtofl+2,f
  4279  0906  0DF7               	rlf	??___xxtofl+3,f
  4280  0907                     u3900:
  4281  0907  3EFF               	addlw	-1
  4282  0908  1D03               	skipz
  4283  0909  2902               	goto	u3905
  4284  090A  0874               	movf	??___xxtofl,w
  4285  090B  04FA               	iorwf	___xxtofl@arg,f
  4286  090C  0875               	movf	??___xxtofl+1,w
  4287  090D  04FB               	iorwf	___xxtofl@arg+1,f
  4288  090E  0876               	movf	??___xxtofl+2,w
  4289  090F  04FC               	iorwf	___xxtofl@arg+2,f
  4290  0910  0877               	movf	??___xxtofl+3,w
  4291  0911  04FD               	iorwf	___xxtofl@arg+3,f
  4292  0912                     l3367:
  4293  0912  0878               	movf	___xxtofl@sign,w
  4294  0913  1903               	btfsc	3,2
  4295  0914  2916               	goto	u3911
  4296  0915  2917               	goto	u3910
  4297  0916                     u3911:
  4298  0916  291C               	goto	l3373
  4299  0917                     u3910:
  4300  0917                     l3369:
  4301  0917  1FF3               	btfss	___xxtofl@val+3,7
  4302  0918  291A               	goto	u3921
  4303  0919  291B               	goto	u3920
  4304  091A                     u3921:
  4305  091A  291C               	goto	l3373
  4306  091B                     u3920:
  4307  091B                     l3371:
  4308  091B  17FD               	bsf	___xxtofl@arg+3,7
  4309  091C                     l3373:
  4310  091C  087D               	movf	___xxtofl@arg+3,w
  4311  091D  00F3               	movwf	?___xxtofl+3
  4312  091E  087C               	movf	___xxtofl@arg+2,w
  4313  091F  00F2               	movwf	?___xxtofl+2
  4314  0920  087B               	movf	___xxtofl@arg+1,w
  4315  0921  00F1               	movwf	?___xxtofl+1
  4316  0922  087A               	movf	___xxtofl@arg,w
  4317  0923  00F0               	movwf	?___xxtofl
  4318  0924                     l1127:
  4319  0924  0008               	return
  4320  0925                     __end_of___xxtofl:
  4321                           
  4322                           	psect	text11
  4323  15DB                     __ptext11:	
  4324 ;; *************** function ___fltol *****************
  4325 ;; Defined at:
  4326 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\fltol.c"
  4327 ;; Parameters:    Size  Location     Type
  4328 ;;  f1              4   46[BANK0 ] unsigned char 
  4329 ;; Auto vars:     Size  Location     Type
  4330 ;;  exp1            1   56[BANK0 ] unsigned char 
  4331 ;;  sign1           1   55[BANK0 ] unsigned char 
  4332 ;; Return value:  Size  Location     Type
  4333 ;;                  4   46[BANK0 ] long 
  4334 ;; Registers used:
  4335 ;;		wreg, status,2, status,0
  4336 ;; Tracked objects:
  4337 ;;		On entry : 0/0
  4338 ;;		On exit  : 0/0
  4339 ;;		Unchanged: 0/0
  4340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4341 ;;      Params:         0       4       0       0       0
  4342 ;;      Locals:         0       2       0       0       0
  4343 ;;      Temps:          0       5       0       0       0
  4344 ;;      Totals:         0      11       0       0       0
  4345 ;;Total ram usage:       11 bytes
  4346 ;; Hardware stack levels used: 1
  4347 ;; This function calls:
  4348 ;;		Nothing
  4349 ;; This function is called by:
  4350 ;;		_Update_Farenheit
  4351 ;;		_Update_Celsius
  4352 ;; This function uses a non-reentrant model
  4353 ;;
  4354                           
  4355  15DB                     ___fltol:	
  4356                           ;psect for function ___fltol
  4357                           
  4358  15DB                     l2963:	
  4359                           ;incstack = 0
  4360                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  4361                           
  4362  15DB  1003               	clrc
  4363  15DC  1283               	bcf	3,5	;RP0=0, select bank0
  4364  15DD  1303               	bcf	3,6	;RP1=0, select bank0
  4365  15DE  0D50               	rlf	___fltol@f1+2,w
  4366  15DF  0D51               	rlf	___fltol@f1+3,w
  4367  15E0  00D2               	movwf	??___fltol
  4368  15E1  0852               	movf	??___fltol,w
  4369  15E2  00D8               	movwf	___fltol@exp1
  4370  15E3  0858               	movf	___fltol@exp1,w
  4371  15E4  1D03               	btfss	3,2
  4372  15E5  2DE7               	goto	u2861
  4373  15E6  2DE8               	goto	u2860
  4374  15E7                     u2861:
  4375  15E7  2DF1               	goto	l2969
  4376  15E8                     u2860:
  4377  15E8                     l2965:
  4378  15E8  3000               	movlw	0
  4379  15E9  00D1               	movwf	?___fltol+3
  4380  15EA  3000               	movlw	0
  4381  15EB  00D0               	movwf	?___fltol+2
  4382  15EC  3000               	movlw	0
  4383  15ED  00CF               	movwf	?___fltol+1
  4384  15EE  3000               	movlw	0
  4385  15EF  00CE               	movwf	?___fltol
  4386  15F0  2E56               	goto	l878
  4387  15F1                     l2969:
  4388  15F1  084E               	movf	___fltol@f1,w
  4389  15F2  00D2               	movwf	??___fltol
  4390  15F3  084F               	movf	___fltol@f1+1,w
  4391  15F4  00D3               	movwf	??___fltol+1
  4392  15F5  0850               	movf	___fltol@f1+2,w
  4393  15F6  00D4               	movwf	??___fltol+2
  4394  15F7  0851               	movf	___fltol@f1+3,w
  4395  15F8  00D5               	movwf	??___fltol+3
  4396  15F9  301F               	movlw	31
  4397  15FA                     u2875:
  4398  15FA  1003               	clrc
  4399  15FB  0CD5               	rrf	??___fltol+3,f
  4400  15FC  0CD4               	rrf	??___fltol+2,f
  4401  15FD  0CD3               	rrf	??___fltol+1,f
  4402  15FE  0CD2               	rrf	??___fltol,f
  4403  15FF                     u2870:
  4404  15FF  3EFF               	addlw	-1
  4405  1600  1D03               	skipz
  4406  1601  2DFA               	goto	u2875
  4407  1602  0852               	movf	??___fltol,w
  4408  1603  00D6               	movwf	??___fltol+4
  4409  1604  0856               	movf	??___fltol+4,w
  4410  1605  00D7               	movwf	___fltol@sign1
  4411  1606                     l2971:
  4412  1606  17D0               	bsf	___fltol@f1+2,7
  4413  1607                     l2973:
  4414  1607  30FF               	movlw	255
  4415  1608  05CE               	andwf	___fltol@f1,f
  4416  1609  30FF               	movlw	255
  4417  160A  05CF               	andwf	___fltol@f1+1,f
  4418  160B  30FF               	movlw	255
  4419  160C  05D0               	andwf	___fltol@f1+2,f
  4420  160D  3000               	movlw	0
  4421  160E  05D1               	andwf	___fltol@f1+3,f
  4422  160F                     l2975:
  4423  160F  3096               	movlw	150
  4424  1610  02D8               	subwf	___fltol@exp1,f
  4425  1611                     l2977:
  4426  1611  1FD8               	btfss	___fltol@exp1,7
  4427  1612  2E14               	goto	u2881
  4428  1613  2E15               	goto	u2880
  4429  1614                     u2881:
  4430  1614  2E2F               	goto	l2987
  4431  1615                     u2880:
  4432  1615                     l2979:
  4433  1615  0858               	movf	___fltol@exp1,w
  4434  1616  3A80               	xorlw	128
  4435  1617  3E97               	addlw	151
  4436  1618  1803               	skipnc
  4437  1619  2E1B               	goto	u2891
  4438  161A  2E1C               	goto	u2890
  4439  161B                     u2891:
  4440  161B  2E1D               	goto	l2985
  4441  161C                     u2890:
  4442  161C  2DE8               	goto	l2965
  4443  161D                     l2985:
  4444  161D  3001               	movlw	1
  4445  161E                     u2905:
  4446  161E  1003               	clrc
  4447  161F  0CD1               	rrf	___fltol@f1+3,f
  4448  1620  0CD0               	rrf	___fltol@f1+2,f
  4449  1621  0CCF               	rrf	___fltol@f1+1,f
  4450  1622  0CCE               	rrf	___fltol@f1,f
  4451  1623  3EFF               	addlw	-1
  4452  1624  1D03               	skipz
  4453  1625  2E1E               	goto	u2905
  4454  1626  3001               	movlw	1
  4455  1627  00D2               	movwf	??___fltol
  4456  1628  0852               	movf	??___fltol,w
  4457  1629  07D8               	addwf	___fltol@exp1,f
  4458  162A  1D03               	btfss	3,2
  4459  162B  2E2D               	goto	u2911
  4460  162C  2E2E               	goto	u2910
  4461  162D                     u2911:
  4462  162D  2E1D               	goto	l2985
  4463  162E                     u2910:
  4464  162E  2E46               	goto	l2995
  4465  162F                     l2987:
  4466  162F  3020               	movlw	32
  4467  1630  0258               	subwf	___fltol@exp1,w
  4468  1631  1C03               	skipc
  4469  1632  2E34               	goto	u2921
  4470  1633  2E35               	goto	u2920
  4471  1634                     u2921:
  4472  1634  2E41               	goto	l885
  4473  1635                     u2920:
  4474  1635  2DE8               	goto	l2965
  4475  1636                     l2993:
  4476  1636  3001               	movlw	1
  4477  1637  00D2               	movwf	??___fltol
  4478  1638                     u2935:
  4479  1638  1003               	clrc
  4480  1639  0DCE               	rlf	___fltol@f1,f
  4481  163A  0DCF               	rlf	___fltol@f1+1,f
  4482  163B  0DD0               	rlf	___fltol@f1+2,f
  4483  163C  0DD1               	rlf	___fltol@f1+3,f
  4484  163D  0BD2               	decfsz	??___fltol,f
  4485  163E  2E38               	goto	u2935
  4486  163F  3001               	movlw	1
  4487  1640  02D8               	subwf	___fltol@exp1,f
  4488  1641                     l885:
  4489  1641  0858               	movf	___fltol@exp1,w
  4490  1642  1D03               	btfss	3,2
  4491  1643  2E45               	goto	u2941
  4492  1644  2E46               	goto	u2940
  4493  1645                     u2941:
  4494  1645  2E36               	goto	l2993
  4495  1646                     u2940:
  4496  1646                     l2995:
  4497  1646  0857               	movf	___fltol@sign1,w
  4498  1647  1903               	btfsc	3,2
  4499  1648  2E4A               	goto	u2951
  4500  1649  2E4B               	goto	u2950
  4501  164A                     u2951:
  4502  164A  2E56               	goto	l888
  4503  164B                     u2950:
  4504  164B                     l2997:
  4505  164B  09CE               	comf	___fltol@f1,f
  4506  164C  09CF               	comf	___fltol@f1+1,f
  4507  164D  09D0               	comf	___fltol@f1+2,f
  4508  164E  09D1               	comf	___fltol@f1+3,f
  4509  164F  0ACE               	incf	___fltol@f1,f
  4510  1650  1903               	skipnz
  4511  1651  0ACF               	incf	___fltol@f1+1,f
  4512  1652  1903               	skipnz
  4513  1653  0AD0               	incf	___fltol@f1+2,f
  4514  1654  1903               	skipnz
  4515  1655  0AD1               	incf	___fltol@f1+3,f
  4516  1656                     l888:
  4517  1656                     l878:
  4518  1656  0008               	return
  4519  1657                     __end_of___fltol:
  4520                           
  4521                           	psect	text12
  4522  0457                     __ptext12:	
  4523 ;; *************** function ___flmul *****************
  4524 ;; Defined at:
  4525 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\sprcmul.c"
  4526 ;; Parameters:    Size  Location     Type
  4527 ;;  b               4    0[BANK0 ] long 
  4528 ;;  a               4    4[BANK0 ] long 
  4529 ;; Auto vars:     Size  Location     Type
  4530 ;;  prod            4   20[BANK0 ] struct .
  4531 ;;  grs             4   14[BANK0 ] unsigned long 
  4532 ;;  temp            2   24[BANK0 ] struct .
  4533 ;;  bexp            1   19[BANK0 ] unsigned char 
  4534 ;;  aexp            1   18[BANK0 ] unsigned char 
  4535 ;;  sign            1   13[BANK0 ] unsigned char 
  4536 ;; Return value:  Size  Location     Type
  4537 ;;                  4    0[BANK0 ] unsigned char 
  4538 ;; Registers used:
  4539 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4540 ;; Tracked objects:
  4541 ;;		On entry : 0/0
  4542 ;;		On exit  : 0/0
  4543 ;;		Unchanged: 0/0
  4544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4545 ;;      Params:         0       8       0       0       0
  4546 ;;      Locals:         0      13       0       0       0
  4547 ;;      Temps:          0       5       0       0       0
  4548 ;;      Totals:         0      26       0       0       0
  4549 ;;Total ram usage:       26 bytes
  4550 ;; Hardware stack levels used: 1
  4551 ;; Hardware stack levels required when called: 1
  4552 ;; This function calls:
  4553 ;;		__Umul8_16
  4554 ;; This function is called by:
  4555 ;;		_Update_Farenheit
  4556 ;;		_Update_Celsius
  4557 ;; This function uses a non-reentrant model
  4558 ;;
  4559                           
  4560  0457                     ___flmul:	
  4561                           ;psect for function ___flmul
  4562                           
  4563  0457                     l3193:	
  4564                           ;incstack = 0
  4565                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4566                           
  4567  0457  1283               	bcf	3,5	;RP0=0, select bank0
  4568  0458  1303               	bcf	3,6	;RP1=0, select bank0
  4569  0459  0823               	movf	___flmul@b+3,w
  4570  045A  3980               	andlw	128
  4571  045B  00A8               	movwf	??___flmul
  4572  045C  0828               	movf	??___flmul,w
  4573  045D  00AD               	movwf	___flmul@sign
  4574  045E                     l3195:
  4575  045E  0823               	movf	___flmul@b+3,w
  4576  045F  00A8               	movwf	??___flmul
  4577  0460  0728               	addwf	??___flmul,w
  4578  0461  00A9               	movwf	??___flmul+1
  4579  0462  0829               	movf	??___flmul+1,w
  4580  0463  00B3               	movwf	___flmul@bexp
  4581  0464                     l3197:
  4582  0464  1FA2               	btfss	___flmul@b+2,7
  4583  0465  2C67               	goto	u3421
  4584  0466  2C68               	goto	u3420
  4585  0467                     u3421:
  4586  0467  2C69               	goto	l3201
  4587  0468                     u3420:
  4588  0468                     l3199:
  4589  0468  1433               	bsf	___flmul@bexp,0
  4590  0469                     l3201:
  4591  0469  0833               	movf	___flmul@bexp,w
  4592  046A  1903               	btfsc	3,2
  4593  046B  2C6D               	goto	u3431
  4594  046C  2C6E               	goto	u3430
  4595  046D                     u3431:
  4596  046D  2C7D               	goto	l3209
  4597  046E                     u3430:
  4598  046E                     l3203:
  4599  046E  0A33               	incf	___flmul@bexp,w
  4600  046F  1D03               	btfss	3,2
  4601  0470  2C72               	goto	u3441
  4602  0471  2C73               	goto	u3440
  4603  0472                     u3441:
  4604  0472  2C7B               	goto	l3207
  4605  0473                     u3440:
  4606  0473                     l3205:
  4607  0473  3000               	movlw	0
  4608  0474  00A3               	movwf	___flmul@b+3
  4609  0475  3000               	movlw	0
  4610  0476  00A2               	movwf	___flmul@b+2
  4611  0477  3000               	movlw	0
  4612  0478  00A1               	movwf	___flmul@b+1
  4613  0479  3000               	movlw	0
  4614  047A  00A0               	movwf	___flmul@b
  4615  047B                     l3207:
  4616  047B  17A2               	bsf	___flmul@b+2,7
  4617  047C  2C85               	goto	l3211
  4618  047D                     l3209:
  4619  047D  3000               	movlw	0
  4620  047E  00A3               	movwf	___flmul@b+3
  4621  047F  3000               	movlw	0
  4622  0480  00A2               	movwf	___flmul@b+2
  4623  0481  3000               	movlw	0
  4624  0482  00A1               	movwf	___flmul@b+1
  4625  0483  3000               	movlw	0
  4626  0484  00A0               	movwf	___flmul@b
  4627  0485                     l3211:
  4628  0485  0827               	movf	___flmul@a+3,w
  4629  0486  3980               	andlw	128
  4630  0487  00A8               	movwf	??___flmul
  4631  0488  0828               	movf	??___flmul,w
  4632  0489  06AD               	xorwf	___flmul@sign,f
  4633  048A                     l3213:
  4634  048A  0827               	movf	___flmul@a+3,w
  4635  048B  00A8               	movwf	??___flmul
  4636  048C  0728               	addwf	??___flmul,w
  4637  048D  00A9               	movwf	??___flmul+1
  4638  048E  0829               	movf	??___flmul+1,w
  4639  048F  00B2               	movwf	___flmul@aexp
  4640  0490                     l3215:
  4641  0490  1FA6               	btfss	___flmul@a+2,7
  4642  0491  2C93               	goto	u3451
  4643  0492  2C94               	goto	u3450
  4644  0493                     u3451:
  4645  0493  2C95               	goto	l3219
  4646  0494                     u3450:
  4647  0494                     l3217:
  4648  0494  1432               	bsf	___flmul@aexp,0
  4649  0495                     l3219:
  4650  0495  0832               	movf	___flmul@aexp,w
  4651  0496  1903               	btfsc	3,2
  4652  0497  2C99               	goto	u3461
  4653  0498  2C9A               	goto	u3460
  4654  0499                     u3461:
  4655  0499  2CA9               	goto	l3227
  4656  049A                     u3460:
  4657  049A                     l3221:
  4658  049A  0A32               	incf	___flmul@aexp,w
  4659  049B  1D03               	btfss	3,2
  4660  049C  2C9E               	goto	u3471
  4661  049D  2C9F               	goto	u3470
  4662  049E                     u3471:
  4663  049E  2CA7               	goto	l3225
  4664  049F                     u3470:
  4665  049F                     l3223:
  4666  049F  3000               	movlw	0
  4667  04A0  00A7               	movwf	___flmul@a+3
  4668  04A1  3000               	movlw	0
  4669  04A2  00A6               	movwf	___flmul@a+2
  4670  04A3  3000               	movlw	0
  4671  04A4  00A5               	movwf	___flmul@a+1
  4672  04A5  3000               	movlw	0
  4673  04A6  00A4               	movwf	___flmul@a
  4674  04A7                     l3225:
  4675  04A7  17A6               	bsf	___flmul@a+2,7
  4676  04A8  2CB1               	goto	l3229
  4677  04A9                     l3227:
  4678  04A9  3000               	movlw	0
  4679  04AA  00A7               	movwf	___flmul@a+3
  4680  04AB  3000               	movlw	0
  4681  04AC  00A6               	movwf	___flmul@a+2
  4682  04AD  3000               	movlw	0
  4683  04AE  00A5               	movwf	___flmul@a+1
  4684  04AF  3000               	movlw	0
  4685  04B0  00A4               	movwf	___flmul@a
  4686  04B1                     l3229:
  4687  04B1  0832               	movf	___flmul@aexp,w
  4688  04B2  1903               	btfsc	3,2
  4689  04B3  2CB5               	goto	u3481
  4690  04B4  2CB6               	goto	u3480
  4691  04B5                     u3481:
  4692  04B5  2CBB               	goto	l3233
  4693  04B6                     u3480:
  4694  04B6                     l3231:
  4695  04B6  0833               	movf	___flmul@bexp,w
  4696  04B7  1D03               	btfss	3,2
  4697  04B8  2CBA               	goto	u3491
  4698  04B9  2CBB               	goto	u3490
  4699  04BA                     u3491:
  4700  04BA  2CC4               	goto	l3237
  4701  04BB                     u3490:
  4702  04BB                     l3233:
  4703  04BB  3000               	movlw	0
  4704  04BC  00A3               	movwf	?___flmul+3
  4705  04BD  3000               	movlw	0
  4706  04BE  00A2               	movwf	?___flmul+2
  4707  04BF  3000               	movlw	0
  4708  04C0  00A1               	movwf	?___flmul+1
  4709  04C1  3000               	movlw	0
  4710  04C2  00A0               	movwf	?___flmul
  4711  04C3  2FB7               	goto	l1081
  4712  04C4                     l3237:
  4713  04C4  0820               	movf	___flmul@b,w
  4714  04C5  00A8               	movwf	??___flmul
  4715  04C6  0828               	movf	??___flmul,w
  4716  04C7  00F0               	movwf	__Umul8_16@multiplicand
  4717  04C8  0826               	movf	___flmul@a+2,w
  4718  04C9  160A  118A  230D  120A  118A  	fcall	__Umul8_16
  4719  04CE  0871               	movf	?__Umul8_16+1,w
  4720  04CF  1283               	bcf	3,5	;RP0=0, select bank0
  4721  04D0  1303               	bcf	3,6	;RP1=0, select bank0
  4722  04D1  00B9               	movwf	___flmul@temp+1
  4723  04D2  0870               	movf	?__Umul8_16,w
  4724  04D3  00B8               	movwf	___flmul@temp
  4725  04D4                     l3239:
  4726  04D4  0838               	movf	___flmul@temp,w
  4727  04D5  00A8               	movwf	??___flmul
  4728  04D6  01A9               	clrf	??___flmul+1
  4729  04D7  01AA               	clrf	??___flmul+2
  4730  04D8  01AB               	clrf	??___flmul+3
  4731  04D9  082B               	movf	??___flmul+3,w
  4732  04DA  00B1               	movwf	___flmul@grs+3
  4733  04DB  082A               	movf	??___flmul+2,w
  4734  04DC  00B0               	movwf	___flmul@grs+2
  4735  04DD  0829               	movf	??___flmul+1,w
  4736  04DE  00AF               	movwf	___flmul@grs+1
  4737  04DF  0828               	movf	??___flmul,w
  4738  04E0  00AE               	movwf	___flmul@grs
  4739  04E1                     l3241:
  4740  04E1  0839               	movf	___flmul@temp+1,w
  4741  04E2  00A8               	movwf	??___flmul
  4742  04E3  01A9               	clrf	??___flmul+1
  4743  04E4  01AA               	clrf	??___flmul+2
  4744  04E5  01AB               	clrf	??___flmul+3
  4745  04E6  082B               	movf	??___flmul+3,w
  4746  04E7  00B7               	movwf	___flmul@prod+3
  4747  04E8  082A               	movf	??___flmul+2,w
  4748  04E9  00B6               	movwf	___flmul@prod+2
  4749  04EA  0829               	movf	??___flmul+1,w
  4750  04EB  00B5               	movwf	___flmul@prod+1
  4751  04EC  0828               	movf	??___flmul,w
  4752  04ED  00B4               	movwf	___flmul@prod
  4753  04EE  0821               	movf	___flmul@b+1,w
  4754  04EF  00A8               	movwf	??___flmul
  4755  04F0  0828               	movf	??___flmul,w
  4756  04F1  00F0               	movwf	__Umul8_16@multiplicand
  4757  04F2  0825               	movf	___flmul@a+1,w
  4758  04F3  160A  118A  230D  120A  118A  	fcall	__Umul8_16
  4759  04F8  0871               	movf	?__Umul8_16+1,w
  4760  04F9  1283               	bcf	3,5	;RP0=0, select bank0
  4761  04FA  1303               	bcf	3,6	;RP1=0, select bank0
  4762  04FB  00B9               	movwf	___flmul@temp+1
  4763  04FC  0870               	movf	?__Umul8_16,w
  4764  04FD  00B8               	movwf	___flmul@temp
  4765  04FE                     l3243:
  4766  04FE  0838               	movf	___flmul@temp,w
  4767  04FF  00A8               	movwf	??___flmul
  4768  0500  01A9               	clrf	??___flmul+1
  4769  0501  01AA               	clrf	??___flmul+2
  4770  0502  01AB               	clrf	??___flmul+3
  4771  0503  0828               	movf	??___flmul,w
  4772  0504  07AE               	addwf	___flmul@grs,f
  4773  0505  0829               	movf	??___flmul+1,w
  4774  0506  1103               	clrz
  4775  0507  1803               	skipnc
  4776  0508  3E01               	addlw	1
  4777  0509  1903               	skipnz
  4778  050A  2D0C               	goto	u3501
  4779  050B  07AF               	addwf	___flmul@grs+1,f
  4780  050C                     u3501:
  4781  050C  082A               	movf	??___flmul+2,w
  4782  050D  1103               	clrz
  4783  050E  1803               	skipnc
  4784  050F  3E01               	addlw	1
  4785  0510  1903               	skipnz
  4786  0511  2D13               	goto	u3502
  4787  0512  07B0               	addwf	___flmul@grs+2,f
  4788  0513                     u3502:
  4789  0513  082B               	movf	??___flmul+3,w
  4790  0514  1103               	clrz
  4791  0515  1803               	skipnc
  4792  0516  3E01               	addlw	1
  4793  0517  1903               	skipnz
  4794  0518  2D1A               	goto	u3503
  4795  0519  07B1               	addwf	___flmul@grs+3,f
  4796  051A                     u3503:
  4797  051A                     l3245:
  4798  051A  0839               	movf	___flmul@temp+1,w
  4799  051B  00A8               	movwf	??___flmul
  4800  051C  01A9               	clrf	??___flmul+1
  4801  051D  01AA               	clrf	??___flmul+2
  4802  051E  01AB               	clrf	??___flmul+3
  4803  051F  0828               	movf	??___flmul,w
  4804  0520  07B4               	addwf	___flmul@prod,f
  4805  0521  0829               	movf	??___flmul+1,w
  4806  0522  1103               	clrz
  4807  0523  1803               	skipnc
  4808  0524  3E01               	addlw	1
  4809  0525  1903               	skipnz
  4810  0526  2D28               	goto	u3511
  4811  0527  07B5               	addwf	___flmul@prod+1,f
  4812  0528                     u3511:
  4813  0528  082A               	movf	??___flmul+2,w
  4814  0529  1103               	clrz
  4815  052A  1803               	skipnc
  4816  052B  3E01               	addlw	1
  4817  052C  1903               	skipnz
  4818  052D  2D2F               	goto	u3512
  4819  052E  07B6               	addwf	___flmul@prod+2,f
  4820  052F                     u3512:
  4821  052F  082B               	movf	??___flmul+3,w
  4822  0530  1103               	clrz
  4823  0531  1803               	skipnc
  4824  0532  3E01               	addlw	1
  4825  0533  1903               	skipnz
  4826  0534  2D36               	goto	u3513
  4827  0535  07B7               	addwf	___flmul@prod+3,f
  4828  0536                     u3513:
  4829  0536  0822               	movf	___flmul@b+2,w
  4830  0537  00A8               	movwf	??___flmul
  4831  0538  0828               	movf	??___flmul,w
  4832  0539  00F0               	movwf	__Umul8_16@multiplicand
  4833  053A  0824               	movf	___flmul@a,w
  4834  053B  160A  118A  230D  120A  118A  	fcall	__Umul8_16
  4835  0540  0871               	movf	?__Umul8_16+1,w
  4836  0541  1283               	bcf	3,5	;RP0=0, select bank0
  4837  0542  1303               	bcf	3,6	;RP1=0, select bank0
  4838  0543  00B9               	movwf	___flmul@temp+1
  4839  0544  0870               	movf	?__Umul8_16,w
  4840  0545  00B8               	movwf	___flmul@temp
  4841  0546                     l3247:
  4842  0546  0838               	movf	___flmul@temp,w
  4843  0547  00A8               	movwf	??___flmul
  4844  0548  01A9               	clrf	??___flmul+1
  4845  0549  01AA               	clrf	??___flmul+2
  4846  054A  01AB               	clrf	??___flmul+3
  4847  054B  0828               	movf	??___flmul,w
  4848  054C  07AE               	addwf	___flmul@grs,f
  4849  054D  0829               	movf	??___flmul+1,w
  4850  054E  1103               	clrz
  4851  054F  1803               	skipnc
  4852  0550  3E01               	addlw	1
  4853  0551  1903               	skipnz
  4854  0552  2D54               	goto	u3521
  4855  0553  07AF               	addwf	___flmul@grs+1,f
  4856  0554                     u3521:
  4857  0554  082A               	movf	??___flmul+2,w
  4858  0555  1103               	clrz
  4859  0556  1803               	skipnc
  4860  0557  3E01               	addlw	1
  4861  0558  1903               	skipnz
  4862  0559  2D5B               	goto	u3522
  4863  055A  07B0               	addwf	___flmul@grs+2,f
  4864  055B                     u3522:
  4865  055B  082B               	movf	??___flmul+3,w
  4866  055C  1103               	clrz
  4867  055D  1803               	skipnc
  4868  055E  3E01               	addlw	1
  4869  055F  1903               	skipnz
  4870  0560  2D62               	goto	u3523
  4871  0561  07B1               	addwf	___flmul@grs+3,f
  4872  0562                     u3523:
  4873  0562                     l3249:
  4874  0562  0839               	movf	___flmul@temp+1,w
  4875  0563  00A8               	movwf	??___flmul
  4876  0564  01A9               	clrf	??___flmul+1
  4877  0565  01AA               	clrf	??___flmul+2
  4878  0566  01AB               	clrf	??___flmul+3
  4879  0567  0828               	movf	??___flmul,w
  4880  0568  07B4               	addwf	___flmul@prod,f
  4881  0569  0829               	movf	??___flmul+1,w
  4882  056A  1103               	clrz
  4883  056B  1803               	skipnc
  4884  056C  3E01               	addlw	1
  4885  056D  1903               	skipnz
  4886  056E  2D70               	goto	u3531
  4887  056F  07B5               	addwf	___flmul@prod+1,f
  4888  0570                     u3531:
  4889  0570  082A               	movf	??___flmul+2,w
  4890  0571  1103               	clrz
  4891  0572  1803               	skipnc
  4892  0573  3E01               	addlw	1
  4893  0574  1903               	skipnz
  4894  0575  2D77               	goto	u3532
  4895  0576  07B6               	addwf	___flmul@prod+2,f
  4896  0577                     u3532:
  4897  0577  082B               	movf	??___flmul+3,w
  4898  0578  1103               	clrz
  4899  0579  1803               	skipnc
  4900  057A  3E01               	addlw	1
  4901  057B  1903               	skipnz
  4902  057C  2D7E               	goto	u3533
  4903  057D  07B7               	addwf	___flmul@prod+3,f
  4904  057E                     u3533:
  4905  057E                     l3251:
  4906  057E  3008               	movlw	8
  4907  057F  00A8               	movwf	??___flmul
  4908  0580                     u3545:
  4909  0580  1003               	clrc
  4910  0581  0DAE               	rlf	___flmul@grs,f
  4911  0582  0DAF               	rlf	___flmul@grs+1,f
  4912  0583  0DB0               	rlf	___flmul@grs+2,f
  4913  0584  0DB1               	rlf	___flmul@grs+3,f
  4914  0585  0BA8               	decfsz	??___flmul,f
  4915  0586  2D80               	goto	u3545
  4916  0587                     l3253:
  4917  0587  0821               	movf	___flmul@b+1,w
  4918  0588  00A8               	movwf	??___flmul
  4919  0589  0828               	movf	??___flmul,w
  4920  058A  00F0               	movwf	__Umul8_16@multiplicand
  4921  058B  0824               	movf	___flmul@a,w
  4922  058C  160A  118A  230D  120A  118A  	fcall	__Umul8_16
  4923  0591  0871               	movf	?__Umul8_16+1,w
  4924  0592  1283               	bcf	3,5	;RP0=0, select bank0
  4925  0593  1303               	bcf	3,6	;RP1=0, select bank0
  4926  0594  00B9               	movwf	___flmul@temp+1
  4927  0595  0870               	movf	?__Umul8_16,w
  4928  0596  00B8               	movwf	___flmul@temp
  4929  0597                     l3255:
  4930  0597  0838               	movf	___flmul@temp,w
  4931  0598  00A8               	movwf	??___flmul
  4932  0599  0839               	movf	___flmul@temp+1,w
  4933  059A  00A9               	movwf	??___flmul+1
  4934  059B  01AA               	clrf	??___flmul+2
  4935  059C  01AB               	clrf	??___flmul+3
  4936  059D  0828               	movf	??___flmul,w
  4937  059E  07AE               	addwf	___flmul@grs,f
  4938  059F  0829               	movf	??___flmul+1,w
  4939  05A0  1103               	clrz
  4940  05A1  1803               	skipnc
  4941  05A2  3E01               	addlw	1
  4942  05A3  1903               	skipnz
  4943  05A4  2DA6               	goto	u3551
  4944  05A5  07AF               	addwf	___flmul@grs+1,f
  4945  05A6                     u3551:
  4946  05A6  082A               	movf	??___flmul+2,w
  4947  05A7  1103               	clrz
  4948  05A8  1803               	skipnc
  4949  05A9  3E01               	addlw	1
  4950  05AA  1903               	skipnz
  4951  05AB  2DAD               	goto	u3552
  4952  05AC  07B0               	addwf	___flmul@grs+2,f
  4953  05AD                     u3552:
  4954  05AD  082B               	movf	??___flmul+3,w
  4955  05AE  1103               	clrz
  4956  05AF  1803               	skipnc
  4957  05B0  3E01               	addlw	1
  4958  05B1  1903               	skipnz
  4959  05B2  2DB4               	goto	u3553
  4960  05B3  07B1               	addwf	___flmul@grs+3,f
  4961  05B4                     u3553:
  4962  05B4                     l3257:
  4963  05B4  0820               	movf	___flmul@b,w
  4964  05B5  00A8               	movwf	??___flmul
  4965  05B6  0828               	movf	??___flmul,w
  4966  05B7  00F0               	movwf	__Umul8_16@multiplicand
  4967  05B8  0825               	movf	___flmul@a+1,w
  4968  05B9  160A  118A  230D  120A  118A  	fcall	__Umul8_16
  4969  05BE  0871               	movf	?__Umul8_16+1,w
  4970  05BF  1283               	bcf	3,5	;RP0=0, select bank0
  4971  05C0  1303               	bcf	3,6	;RP1=0, select bank0
  4972  05C1  00B9               	movwf	___flmul@temp+1
  4973  05C2  0870               	movf	?__Umul8_16,w
  4974  05C3  00B8               	movwf	___flmul@temp
  4975  05C4                     l3259:
  4976  05C4  0838               	movf	___flmul@temp,w
  4977  05C5  00A8               	movwf	??___flmul
  4978  05C6  0839               	movf	___flmul@temp+1,w
  4979  05C7  00A9               	movwf	??___flmul+1
  4980  05C8  01AA               	clrf	??___flmul+2
  4981  05C9  01AB               	clrf	??___flmul+3
  4982  05CA  0828               	movf	??___flmul,w
  4983  05CB  07AE               	addwf	___flmul@grs,f
  4984  05CC  0829               	movf	??___flmul+1,w
  4985  05CD  1103               	clrz
  4986  05CE  1803               	skipnc
  4987  05CF  3E01               	addlw	1
  4988  05D0  1903               	skipnz
  4989  05D1  2DD3               	goto	u3561
  4990  05D2  07AF               	addwf	___flmul@grs+1,f
  4991  05D3                     u3561:
  4992  05D3  082A               	movf	??___flmul+2,w
  4993  05D4  1103               	clrz
  4994  05D5  1803               	skipnc
  4995  05D6  3E01               	addlw	1
  4996  05D7  1903               	skipnz
  4997  05D8  2DDA               	goto	u3562
  4998  05D9  07B0               	addwf	___flmul@grs+2,f
  4999  05DA                     u3562:
  5000  05DA  082B               	movf	??___flmul+3,w
  5001  05DB  1103               	clrz
  5002  05DC  1803               	skipnc
  5003  05DD  3E01               	addlw	1
  5004  05DE  1903               	skipnz
  5005  05DF  2DE1               	goto	u3563
  5006  05E0  07B1               	addwf	___flmul@grs+3,f
  5007  05E1                     u3563:
  5008  05E1                     l3261:
  5009  05E1  3008               	movlw	8
  5010  05E2  00A8               	movwf	??___flmul
  5011  05E3                     u3575:
  5012  05E3  1003               	clrc
  5013  05E4  0DAE               	rlf	___flmul@grs,f
  5014  05E5  0DAF               	rlf	___flmul@grs+1,f
  5015  05E6  0DB0               	rlf	___flmul@grs+2,f
  5016  05E7  0DB1               	rlf	___flmul@grs+3,f
  5017  05E8  0BA8               	decfsz	??___flmul,f
  5018  05E9  2DE3               	goto	u3575
  5019  05EA  0820               	movf	___flmul@b,w
  5020  05EB  00A8               	movwf	??___flmul
  5021  05EC  0828               	movf	??___flmul,w
  5022  05ED  00F0               	movwf	__Umul8_16@multiplicand
  5023  05EE  0824               	movf	___flmul@a,w
  5024  05EF  160A  118A  230D  120A  118A  	fcall	__Umul8_16
  5025  05F4  0871               	movf	?__Umul8_16+1,w
  5026  05F5  1283               	bcf	3,5	;RP0=0, select bank0
  5027  05F6  1303               	bcf	3,6	;RP1=0, select bank0
  5028  05F7  00B9               	movwf	___flmul@temp+1
  5029  05F8  0870               	movf	?__Umul8_16,w
  5030  05F9  00B8               	movwf	___flmul@temp
  5031  05FA                     l3263:
  5032  05FA  0838               	movf	___flmul@temp,w
  5033  05FB  00A8               	movwf	??___flmul
  5034  05FC  0839               	movf	___flmul@temp+1,w
  5035  05FD  00A9               	movwf	??___flmul+1
  5036  05FE  01AA               	clrf	??___flmul+2
  5037  05FF  01AB               	clrf	??___flmul+3
  5038  0600  0828               	movf	??___flmul,w
  5039  0601  07AE               	addwf	___flmul@grs,f
  5040  0602  0829               	movf	??___flmul+1,w
  5041  0603  1103               	clrz
  5042  0604  1803               	skipnc
  5043  0605  3E01               	addlw	1
  5044  0606  1903               	skipnz
  5045  0607  2E09               	goto	u3581
  5046  0608  07AF               	addwf	___flmul@grs+1,f
  5047  0609                     u3581:
  5048  0609  082A               	movf	??___flmul+2,w
  5049  060A  1103               	clrz
  5050  060B  1803               	skipnc
  5051  060C  3E01               	addlw	1
  5052  060D  1903               	skipnz
  5053  060E  2E10               	goto	u3582
  5054  060F  07B0               	addwf	___flmul@grs+2,f
  5055  0610                     u3582:
  5056  0610  082B               	movf	??___flmul+3,w
  5057  0611  1103               	clrz
  5058  0612  1803               	skipnc
  5059  0613  3E01               	addlw	1
  5060  0614  1903               	skipnz
  5061  0615  2E17               	goto	u3583
  5062  0616  07B1               	addwf	___flmul@grs+3,f
  5063  0617                     u3583:
  5064  0617                     l3265:
  5065  0617  0821               	movf	___flmul@b+1,w
  5066  0618  00A8               	movwf	??___flmul
  5067  0619  0828               	movf	??___flmul,w
  5068  061A  00F0               	movwf	__Umul8_16@multiplicand
  5069  061B  0826               	movf	___flmul@a+2,w
  5070  061C  160A  118A  230D  120A  118A  	fcall	__Umul8_16
  5071  0621  0871               	movf	?__Umul8_16+1,w
  5072  0622  1283               	bcf	3,5	;RP0=0, select bank0
  5073  0623  1303               	bcf	3,6	;RP1=0, select bank0
  5074  0624  00B9               	movwf	___flmul@temp+1
  5075  0625  0870               	movf	?__Umul8_16,w
  5076  0626  00B8               	movwf	___flmul@temp
  5077  0627  0838               	movf	___flmul@temp,w
  5078  0628  00A8               	movwf	??___flmul
  5079  0629  0839               	movf	___flmul@temp+1,w
  5080  062A  00A9               	movwf	??___flmul+1
  5081  062B  01AA               	clrf	??___flmul+2
  5082  062C  01AB               	clrf	??___flmul+3
  5083  062D  0828               	movf	??___flmul,w
  5084  062E  07B4               	addwf	___flmul@prod,f
  5085  062F  0829               	movf	??___flmul+1,w
  5086  0630  1103               	clrz
  5087  0631  1803               	skipnc
  5088  0632  3E01               	addlw	1
  5089  0633  1903               	skipnz
  5090  0634  2E36               	goto	u3591
  5091  0635  07B5               	addwf	___flmul@prod+1,f
  5092  0636                     u3591:
  5093  0636  082A               	movf	??___flmul+2,w
  5094  0637  1103               	clrz
  5095  0638  1803               	skipnc
  5096  0639  3E01               	addlw	1
  5097  063A  1903               	skipnz
  5098  063B  2E3D               	goto	u3592
  5099  063C  07B6               	addwf	___flmul@prod+2,f
  5100  063D                     u3592:
  5101  063D  082B               	movf	??___flmul+3,w
  5102  063E  1103               	clrz
  5103  063F  1803               	skipnc
  5104  0640  3E01               	addlw	1
  5105  0641  1903               	skipnz
  5106  0642  2E44               	goto	u3593
  5107  0643  07B7               	addwf	___flmul@prod+3,f
  5108  0644                     u3593:
  5109  0644                     l3267:
  5110  0644  0822               	movf	___flmul@b+2,w
  5111  0645  00A8               	movwf	??___flmul
  5112  0646  0828               	movf	??___flmul,w
  5113  0647  00F0               	movwf	__Umul8_16@multiplicand
  5114  0648  0825               	movf	___flmul@a+1,w
  5115  0649  160A  118A  230D  120A  118A  	fcall	__Umul8_16
  5116  064E  0871               	movf	?__Umul8_16+1,w
  5117  064F  1283               	bcf	3,5	;RP0=0, select bank0
  5118  0650  1303               	bcf	3,6	;RP1=0, select bank0
  5119  0651  00B9               	movwf	___flmul@temp+1
  5120  0652  0870               	movf	?__Umul8_16,w
  5121  0653  00B8               	movwf	___flmul@temp
  5122  0654                     l3269:
  5123  0654  0838               	movf	___flmul@temp,w
  5124  0655  00A8               	movwf	??___flmul
  5125  0656  0839               	movf	___flmul@temp+1,w
  5126  0657  00A9               	movwf	??___flmul+1
  5127  0658  01AA               	clrf	??___flmul+2
  5128  0659  01AB               	clrf	??___flmul+3
  5129  065A  0828               	movf	??___flmul,w
  5130  065B  07B4               	addwf	___flmul@prod,f
  5131  065C  0829               	movf	??___flmul+1,w
  5132  065D  1103               	clrz
  5133  065E  1803               	skipnc
  5134  065F  3E01               	addlw	1
  5135  0660  1903               	skipnz
  5136  0661  2E63               	goto	u3601
  5137  0662  07B5               	addwf	___flmul@prod+1,f
  5138  0663                     u3601:
  5139  0663  082A               	movf	??___flmul+2,w
  5140  0664  1103               	clrz
  5141  0665  1803               	skipnc
  5142  0666  3E01               	addlw	1
  5143  0667  1903               	skipnz
  5144  0668  2E6A               	goto	u3602
  5145  0669  07B6               	addwf	___flmul@prod+2,f
  5146  066A                     u3602:
  5147  066A  082B               	movf	??___flmul+3,w
  5148  066B  1103               	clrz
  5149  066C  1803               	skipnc
  5150  066D  3E01               	addlw	1
  5151  066E  1903               	skipnz
  5152  066F  2E71               	goto	u3603
  5153  0670  07B7               	addwf	___flmul@prod+3,f
  5154  0671                     u3603:
  5155  0671  0822               	movf	___flmul@b+2,w
  5156  0672  00A8               	movwf	??___flmul
  5157  0673  0828               	movf	??___flmul,w
  5158  0674  00F0               	movwf	__Umul8_16@multiplicand
  5159  0675  0826               	movf	___flmul@a+2,w
  5160  0676  160A  118A  230D  120A  118A  	fcall	__Umul8_16
  5161  067B  0871               	movf	?__Umul8_16+1,w
  5162  067C  1283               	bcf	3,5	;RP0=0, select bank0
  5163  067D  1303               	bcf	3,6	;RP1=0, select bank0
  5164  067E  00B9               	movwf	___flmul@temp+1
  5165  067F  0870               	movf	?__Umul8_16,w
  5166  0680  00B8               	movwf	___flmul@temp
  5167  0681                     l3271:
  5168  0681  0838               	movf	___flmul@temp,w
  5169  0682  00A8               	movwf	??___flmul
  5170  0683  0839               	movf	___flmul@temp+1,w
  5171  0684  00A9               	movwf	??___flmul+1
  5172  0685  01AA               	clrf	??___flmul+2
  5173  0686  01AB               	clrf	??___flmul+3
  5174  0687  3008               	movlw	8
  5175  0688                     u3615:
  5176  0688  1003               	clrc
  5177  0689  0DA8               	rlf	??___flmul,f
  5178  068A  0DA9               	rlf	??___flmul+1,f
  5179  068B  0DAA               	rlf	??___flmul+2,f
  5180  068C  0DAB               	rlf	??___flmul+3,f
  5181  068D                     u3610:
  5182  068D  3EFF               	addlw	-1
  5183  068E  1D03               	skipz
  5184  068F  2E88               	goto	u3615
  5185  0690  0828               	movf	??___flmul,w
  5186  0691  07B4               	addwf	___flmul@prod,f
  5187  0692  0829               	movf	??___flmul+1,w
  5188  0693  1103               	clrz
  5189  0694  1803               	skipnc
  5190  0695  3E01               	addlw	1
  5191  0696  1903               	skipnz
  5192  0697  2E99               	goto	u3621
  5193  0698  07B5               	addwf	___flmul@prod+1,f
  5194  0699                     u3621:
  5195  0699  082A               	movf	??___flmul+2,w
  5196  069A  1103               	clrz
  5197  069B  1803               	skipnc
  5198  069C  3E01               	addlw	1
  5199  069D  1903               	skipnz
  5200  069E  2EA0               	goto	u3622
  5201  069F  07B6               	addwf	___flmul@prod+2,f
  5202  06A0                     u3622:
  5203  06A0  082B               	movf	??___flmul+3,w
  5204  06A1  1103               	clrz
  5205  06A2  1803               	skipnc
  5206  06A3  3E01               	addlw	1
  5207  06A4  1903               	skipnz
  5208  06A5  2EA7               	goto	u3623
  5209  06A6  07B7               	addwf	___flmul@prod+3,f
  5210  06A7                     u3623:
  5211  06A7                     l3273:
  5212  06A7  082E               	movf	___flmul@grs,w
  5213  06A8  00A8               	movwf	??___flmul
  5214  06A9  082F               	movf	___flmul@grs+1,w
  5215  06AA  00A9               	movwf	??___flmul+1
  5216  06AB  0830               	movf	___flmul@grs+2,w
  5217  06AC  00AA               	movwf	??___flmul+2
  5218  06AD  0831               	movf	___flmul@grs+3,w
  5219  06AE  00AB               	movwf	??___flmul+3
  5220  06AF  3018               	movlw	24
  5221  06B0                     u3635:
  5222  06B0  1003               	clrc
  5223  06B1  0CAB               	rrf	??___flmul+3,f
  5224  06B2  0CAA               	rrf	??___flmul+2,f
  5225  06B3  0CA9               	rrf	??___flmul+1,f
  5226  06B4  0CA8               	rrf	??___flmul,f
  5227  06B5                     u3630:
  5228  06B5  3EFF               	addlw	-1
  5229  06B6  1D03               	skipz
  5230  06B7  2EB0               	goto	u3635
  5231  06B8  0828               	movf	??___flmul,w
  5232  06B9  07B4               	addwf	___flmul@prod,f
  5233  06BA  0829               	movf	??___flmul+1,w
  5234  06BB  1103               	clrz
  5235  06BC  1803               	skipnc
  5236  06BD  3E01               	addlw	1
  5237  06BE  1903               	skipnz
  5238  06BF  2EC1               	goto	u3641
  5239  06C0  07B5               	addwf	___flmul@prod+1,f
  5240  06C1                     u3641:
  5241  06C1  082A               	movf	??___flmul+2,w
  5242  06C2  1103               	clrz
  5243  06C3  1803               	skipnc
  5244  06C4  3E01               	addlw	1
  5245  06C5  1903               	skipnz
  5246  06C6  2EC8               	goto	u3642
  5247  06C7  07B6               	addwf	___flmul@prod+2,f
  5248  06C8                     u3642:
  5249  06C8  082B               	movf	??___flmul+3,w
  5250  06C9  1103               	clrz
  5251  06CA  1803               	skipnc
  5252  06CB  3E01               	addlw	1
  5253  06CC  1903               	skipnz
  5254  06CD  2ECF               	goto	u3643
  5255  06CE  07B7               	addwf	___flmul@prod+3,f
  5256  06CF                     u3643:
  5257  06CF                     l3275:
  5258  06CF  3008               	movlw	8
  5259  06D0  00A8               	movwf	??___flmul
  5260  06D1                     u3655:
  5261  06D1  1003               	clrc
  5262  06D2  0DAE               	rlf	___flmul@grs,f
  5263  06D3  0DAF               	rlf	___flmul@grs+1,f
  5264  06D4  0DB0               	rlf	___flmul@grs+2,f
  5265  06D5  0DB1               	rlf	___flmul@grs+3,f
  5266  06D6  0BA8               	decfsz	??___flmul,f
  5267  06D7  2ED1               	goto	u3655
  5268  06D8                     l3277:
  5269  06D8  0833               	movf	___flmul@bexp,w
  5270  06D9  0732               	addwf	___flmul@aexp,w
  5271  06DA  00A8               	movwf	??___flmul
  5272  06DB  01A9               	clrf	??___flmul+1
  5273  06DC  0DA9               	rlf	??___flmul+1,f
  5274  06DD  0828               	movf	??___flmul,w
  5275  06DE  3E82               	addlw	130
  5276  06DF  00B8               	movwf	___flmul@temp
  5277  06E0  0829               	movf	??___flmul+1,w
  5278  06E1  1803               	skipnc
  5279  06E2  3E01               	addlw	1
  5280  06E3  3EFF               	addlw	255
  5281  06E4  00B9               	movwf	___flmul@temp+1
  5282  06E5  2F03               	goto	l3289
  5283  06E6                     l3279:
  5284  06E6  3001               	movlw	1
  5285  06E7  00A8               	movwf	??___flmul
  5286  06E8                     u3665:
  5287  06E8  1003               	clrc
  5288  06E9  0DB4               	rlf	___flmul@prod,f
  5289  06EA  0DB5               	rlf	___flmul@prod+1,f
  5290  06EB  0DB6               	rlf	___flmul@prod+2,f
  5291  06EC  0DB7               	rlf	___flmul@prod+3,f
  5292  06ED  0BA8               	decfsz	??___flmul,f
  5293  06EE  2EE8               	goto	u3665
  5294  06EF                     l3281:
  5295  06EF  1FB1               	btfss	___flmul@grs+3,7
  5296  06F0  2EF2               	goto	u3671
  5297  06F1  2EF3               	goto	u3670
  5298  06F2                     u3671:
  5299  06F2  2EF4               	goto	l3285
  5300  06F3                     u3670:
  5301  06F3                     l3283:
  5302  06F3  1434               	bsf	___flmul@prod,0
  5303  06F4                     l3285:
  5304  06F4  3001               	movlw	1
  5305  06F5  00A8               	movwf	??___flmul
  5306  06F6                     u3685:
  5307  06F6  1003               	clrc
  5308  06F7  0DAE               	rlf	___flmul@grs,f
  5309  06F8  0DAF               	rlf	___flmul@grs+1,f
  5310  06F9  0DB0               	rlf	___flmul@grs+2,f
  5311  06FA  0DB1               	rlf	___flmul@grs+3,f
  5312  06FB  0BA8               	decfsz	??___flmul,f
  5313  06FC  2EF6               	goto	u3685
  5314  06FD                     l3287:
  5315  06FD  30FF               	movlw	255
  5316  06FE  07B8               	addwf	___flmul@temp,f
  5317  06FF  1803               	skipnc
  5318  0700  0AB9               	incf	___flmul@temp+1,f
  5319  0701  30FF               	movlw	255
  5320  0702  07B9               	addwf	___flmul@temp+1,f
  5321  0703                     l3289:
  5322  0703  1FB6               	btfss	___flmul@prod+2,7
  5323  0704  2F06               	goto	u3691
  5324  0705  2F07               	goto	u3690
  5325  0706                     u3691:
  5326  0706  2EE6               	goto	l3279
  5327  0707                     u3690:
  5328  0707                     l3291:
  5329  0707  01B2               	clrf	___flmul@aexp
  5330  0708                     l3293:
  5331  0708  1FB1               	btfss	___flmul@grs+3,7
  5332  0709  2F0B               	goto	u3701
  5333  070A  2F0C               	goto	u3700
  5334  070B                     u3701:
  5335  070B  2F28               	goto	l3301
  5336  070C                     u3700:
  5337  070C                     l3295:
  5338  070C  30FF               	movlw	255
  5339  070D  052E               	andwf	___flmul@grs,w
  5340  070E  00A8               	movwf	??___flmul
  5341  070F  30FF               	movlw	255
  5342  0710  052F               	andwf	___flmul@grs+1,w
  5343  0711  00A9               	movwf	??___flmul+1
  5344  0712  30FF               	movlw	255
  5345  0713  0530               	andwf	___flmul@grs+2,w
  5346  0714  00AA               	movwf	??___flmul+2
  5347  0715  307F               	movlw	127
  5348  0716  0531               	andwf	___flmul@grs+3,w
  5349  0717  00AB               	movwf	??___flmul+3
  5350  0718  082B               	movf	??___flmul+3,w
  5351  0719  042A               	iorwf	??___flmul+2,w
  5352  071A  0429               	iorwf	??___flmul+1,w
  5353  071B  0428               	iorwf	??___flmul,w
  5354  071C  1903               	skipnz
  5355  071D  2F1F               	goto	u3711
  5356  071E  2F20               	goto	u3710
  5357  071F                     u3711:
  5358  071F  2F23               	goto	l1087
  5359  0720                     u3710:
  5360  0720                     l3297:
  5361  0720  01B2               	clrf	___flmul@aexp
  5362  0721  0AB2               	incf	___flmul@aexp,f
  5363  0722  2F28               	goto	l3301
  5364  0723                     l1087:
  5365  0723  1C34               	btfss	___flmul@prod,0
  5366  0724  2F26               	goto	u3721
  5367  0725  2F27               	goto	u3720
  5368  0726                     u3721:
  5369  0726  2F28               	goto	l3301
  5370  0727                     u3720:
  5371  0727  2F20               	goto	l3297
  5372  0728                     l3301:
  5373  0728  0832               	movf	___flmul@aexp,w
  5374  0729  1903               	btfsc	3,2
  5375  072A  2F2C               	goto	u3731
  5376  072B  2F2D               	goto	u3730
  5377  072C                     u3731:
  5378  072C  2F5E               	goto	l3311
  5379  072D                     u3730:
  5380  072D                     l3303:
  5381  072D  3001               	movlw	1
  5382  072E  07B4               	addwf	___flmul@prod,f
  5383  072F  3000               	movlw	0
  5384  0730  1803               	skipnc
  5385  0731  3001               	movlw	1
  5386  0732  07B5               	addwf	___flmul@prod+1,f
  5387  0733  3000               	movlw	0
  5388  0734  1803               	skipnc
  5389  0735  3001               	movlw	1
  5390  0736  07B6               	addwf	___flmul@prod+2,f
  5391  0737  3000               	movlw	0
  5392  0738  1803               	skipnc
  5393  0739  3001               	movlw	1
  5394  073A  07B7               	addwf	___flmul@prod+3,f
  5395  073B                     l3305:
  5396  073B  1C37               	btfss	___flmul@prod+3,0
  5397  073C  2F3E               	goto	u3741
  5398  073D  2F3F               	goto	u3740
  5399  073E                     u3741:
  5400  073E  2F5E               	goto	l3311
  5401  073F                     u3740:
  5402  073F                     l3307:
  5403  073F  0834               	movf	___flmul@prod,w
  5404  0740  00A8               	movwf	??___flmul
  5405  0741  0835               	movf	___flmul@prod+1,w
  5406  0742  00A9               	movwf	??___flmul+1
  5407  0743  0836               	movf	___flmul@prod+2,w
  5408  0744  00AA               	movwf	??___flmul+2
  5409  0745  0837               	movf	___flmul@prod+3,w
  5410  0746  00AB               	movwf	??___flmul+3
  5411  0747  3001               	movlw	1
  5412  0748  00AC               	movwf	??___flmul+4
  5413  0749                     u3755:
  5414  0749  0D2B               	rlf	??___flmul+3,w
  5415  074A  0CAB               	rrf	??___flmul+3,f
  5416  074B  0CAA               	rrf	??___flmul+2,f
  5417  074C  0CA9               	rrf	??___flmul+1,f
  5418  074D  0CA8               	rrf	??___flmul,f
  5419  074E                     u3750:
  5420  074E  0BAC               	decfsz	??___flmul+4,f
  5421  074F  2F49               	goto	u3755
  5422  0750  082B               	movf	??___flmul+3,w
  5423  0751  00B7               	movwf	___flmul@prod+3
  5424  0752  082A               	movf	??___flmul+2,w
  5425  0753  00B6               	movwf	___flmul@prod+2
  5426  0754  0829               	movf	??___flmul+1,w
  5427  0755  00B5               	movwf	___flmul@prod+1
  5428  0756  0828               	movf	??___flmul,w
  5429  0757  00B4               	movwf	___flmul@prod
  5430  0758                     l3309:
  5431  0758  3001               	movlw	1
  5432  0759  07B8               	addwf	___flmul@temp,f
  5433  075A  1803               	skipnc
  5434  075B  0AB9               	incf	___flmul@temp+1,f
  5435  075C  3000               	movlw	0
  5436  075D  07B9               	addwf	___flmul@temp+1,f
  5437  075E                     l3311:
  5438  075E  0839               	movf	___flmul@temp+1,w
  5439  075F  3A80               	xorlw	128
  5440  0760  00FF               	movwf	btemp+1
  5441  0761  3080               	movlw	128
  5442  0762  027F               	subwf	btemp+1,w
  5443  0763  1D03               	skipz
  5444  0764  2F67               	goto	u3765
  5445  0765  30FF               	movlw	255
  5446  0766  0238               	subwf	___flmul@temp,w
  5447  0767                     u3765:
  5448  0767  1C03               	skipc
  5449  0768  2F6A               	goto	u3761
  5450  0769  2F6B               	goto	u3760
  5451  076A                     u3761:
  5452  076A  2F76               	goto	l3315
  5453  076B                     u3760:
  5454  076B                     l3313:
  5455  076B  307F               	movlw	127
  5456  076C  1283               	bcf	3,5	;RP0=0, select bank0
  5457  076D  1303               	bcf	3,6	;RP1=0, select bank0
  5458  076E  00B7               	movwf	___flmul@prod+3
  5459  076F  3080               	movlw	128
  5460  0770  00B6               	movwf	___flmul@prod+2
  5461  0771  3000               	movlw	0
  5462  0772  00B5               	movwf	___flmul@prod+1
  5463  0773  3000               	movlw	0
  5464  0774  00B4               	movwf	___flmul@prod
  5465  0775  2FAB               	goto	l1093
  5466  0776                     l3315:
  5467  0776  1283               	bcf	3,5	;RP0=0, select bank0
  5468  0777  1303               	bcf	3,6	;RP1=0, select bank0
  5469  0778  0839               	movf	___flmul@temp+1,w
  5470  0779  3A80               	xorlw	128
  5471  077A  00FF               	movwf	btemp+1
  5472  077B  3080               	movlw	128
  5473  077C  027F               	subwf	btemp+1,w
  5474  077D  1D03               	skipz
  5475  077E  2F81               	goto	u3775
  5476  077F  3001               	movlw	1
  5477  0780  0238               	subwf	___flmul@temp,w
  5478  0781                     u3775:
  5479  0781  1803               	skipnc
  5480  0782  2F84               	goto	u3771
  5481  0783  2F85               	goto	u3770
  5482  0784                     u3771:
  5483  0784  2F91               	goto	l3321
  5484  0785                     u3770:
  5485  0785                     l3317:
  5486  0785  3000               	movlw	0
  5487  0786  1283               	bcf	3,5	;RP0=0, select bank0
  5488  0787  1303               	bcf	3,6	;RP1=0, select bank0
  5489  0788  00B7               	movwf	___flmul@prod+3
  5490  0789  3000               	movlw	0
  5491  078A  00B6               	movwf	___flmul@prod+2
  5492  078B  3000               	movlw	0
  5493  078C  00B5               	movwf	___flmul@prod+1
  5494  078D  3000               	movlw	0
  5495  078E  00B4               	movwf	___flmul@prod
  5496  078F                     l3319:
  5497  078F  01AD               	clrf	___flmul@sign
  5498  0790  2FAB               	goto	l1093
  5499  0791                     l3321:
  5500  0791  1283               	bcf	3,5	;RP0=0, select bank0
  5501  0792  1303               	bcf	3,6	;RP1=0, select bank0
  5502  0793  0838               	movf	___flmul@temp,w
  5503  0794  00A8               	movwf	??___flmul
  5504  0795  0828               	movf	??___flmul,w
  5505  0796  00B3               	movwf	___flmul@bexp
  5506  0797  30FF               	movlw	255
  5507  0798  05B4               	andwf	___flmul@prod,f
  5508  0799  30FF               	movlw	255
  5509  079A  05B5               	andwf	___flmul@prod+1,f
  5510  079B  307F               	movlw	127
  5511  079C  05B6               	andwf	___flmul@prod+2,f
  5512  079D  3000               	movlw	0
  5513  079E  05B7               	andwf	___flmul@prod+3,f
  5514  079F                     l3323:
  5515  079F  1C33               	btfss	___flmul@bexp,0
  5516  07A0  2FA2               	goto	u3781
  5517  07A1  2FA3               	goto	u3780
  5518  07A2                     u3781:
  5519  07A2  2FA4               	goto	l3327
  5520  07A3                     u3780:
  5521  07A3                     l3325:
  5522  07A3  17B6               	bsf	___flmul@prod+2,7
  5523  07A4                     l3327:
  5524  07A4  0833               	movf	___flmul@bexp,w
  5525  07A5  00A8               	movwf	??___flmul
  5526  07A6  1003               	clrc
  5527  07A7  0C28               	rrf	??___flmul,w
  5528  07A8  00A9               	movwf	??___flmul+1
  5529  07A9  0829               	movf	??___flmul+1,w
  5530  07AA  00B7               	movwf	___flmul@prod+3
  5531  07AB                     l1093:
  5532  07AB  082D               	movf	___flmul@sign,w
  5533  07AC  00A8               	movwf	??___flmul
  5534  07AD  0828               	movf	??___flmul,w
  5535  07AE  04B7               	iorwf	___flmul@prod+3,f
  5536  07AF                     l3329:
  5537  07AF  0837               	movf	___flmul@prod+3,w
  5538  07B0  00A3               	movwf	?___flmul+3
  5539  07B1  0836               	movf	___flmul@prod+2,w
  5540  07B2  00A2               	movwf	?___flmul+2
  5541  07B3  0835               	movf	___flmul@prod+1,w
  5542  07B4  00A1               	movwf	?___flmul+1
  5543  07B5  0834               	movf	___flmul@prod,w
  5544  07B6  00A0               	movwf	?___flmul
  5545  07B7                     l1081:
  5546  07B7  0008               	return
  5547  07B8                     __end_of___flmul:
  5548                           
  5549                           	psect	text13
  5550  130D                     __ptext13:	
  5551 ;; *************** function __Umul8_16 *****************
  5552 ;; Defined at:
  5553 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\Umul8_16.c"
  5554 ;; Parameters:    Size  Location     Type
  5555 ;;  multiplier      1    wreg     unsigned char 
  5556 ;;  multiplicand    1    0[COMMON] unsigned char 
  5557 ;; Auto vars:     Size  Location     Type
  5558 ;;  multiplier      1    8[COMMON] unsigned char 
  5559 ;;  word_mpld       2    6[COMMON] unsigned int 
  5560 ;;  product         2    4[COMMON] unsigned int 
  5561 ;; Return value:  Size  Location     Type
  5562 ;;                  2    0[COMMON] unsigned int 
  5563 ;; Registers used:
  5564 ;;		wreg, status,2, status,0
  5565 ;; Tracked objects:
  5566 ;;		On entry : 0/0
  5567 ;;		On exit  : 0/0
  5568 ;;		Unchanged: 0/0
  5569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5570 ;;      Params:         2       0       0       0       0
  5571 ;;      Locals:         5       0       0       0       0
  5572 ;;      Temps:          2       0       0       0       0
  5573 ;;      Totals:         9       0       0       0       0
  5574 ;;Total ram usage:        9 bytes
  5575 ;; Hardware stack levels used: 1
  5576 ;; This function calls:
  5577 ;;		Nothing
  5578 ;; This function is called by:
  5579 ;;		___flmul
  5580 ;; This function uses a non-reentrant model
  5581 ;;
  5582                           
  5583  130D                     __Umul8_16:	
  5584                           ;psect for function __Umul8_16
  5585                           
  5586                           
  5587                           ;incstack = 0
  5588                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5589                           ;__Umul8_16@multiplier stored from wreg
  5590  130D  00F8               	movwf	__Umul8_16@multiplier
  5591  130E                     l2755:
  5592  130E  01F4               	clrf	__Umul8_16@product
  5593  130F  01F5               	clrf	__Umul8_16@product+1
  5594  1310                     l2757:
  5595  1310  0870               	movf	__Umul8_16@multiplicand,w
  5596  1311  00F2               	movwf	??__Umul8_16
  5597  1312  01F3               	clrf	??__Umul8_16+1
  5598  1313  0872               	movf	??__Umul8_16,w
  5599  1314  00F6               	movwf	__Umul8_16@word_mpld
  5600  1315  0873               	movf	??__Umul8_16+1,w
  5601  1316  00F7               	movwf	__Umul8_16@word_mpld+1
  5602  1317                     l2759:
  5603  1317  1C78               	btfss	__Umul8_16@multiplier,0
  5604  1318  2B1A               	goto	u2581
  5605  1319  2B1B               	goto	u2580
  5606  131A                     u2581:
  5607  131A  2B21               	goto	l1100
  5608  131B                     u2580:
  5609  131B                     l2761:
  5610  131B  0876               	movf	__Umul8_16@word_mpld,w
  5611  131C  07F4               	addwf	__Umul8_16@product,f
  5612  131D  1803               	skipnc
  5613  131E  0AF5               	incf	__Umul8_16@product+1,f
  5614  131F  0877               	movf	__Umul8_16@word_mpld+1,w
  5615  1320  07F5               	addwf	__Umul8_16@product+1,f
  5616  1321                     l1100:
  5617  1321  3001               	movlw	1
  5618  1322                     u2595:
  5619  1322  1003               	clrc
  5620  1323  0DF6               	rlf	__Umul8_16@word_mpld,f
  5621  1324  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  5622  1325  3EFF               	addlw	-1
  5623  1326  1D03               	skipz
  5624  1327  2B22               	goto	u2595
  5625  1328  1003               	clrc
  5626  1329  0CF8               	rrf	__Umul8_16@multiplier,f
  5627  132A                     l2763:
  5628  132A  0878               	movf	__Umul8_16@multiplier,w
  5629  132B  1D03               	btfss	3,2
  5630  132C  2B2E               	goto	u2601
  5631  132D  2B2F               	goto	u2600
  5632  132E                     u2601:
  5633  132E  2B17               	goto	l2759
  5634  132F                     u2600:
  5635  132F                     l2765:
  5636  132F  0875               	movf	__Umul8_16@product+1,w
  5637  1330  00F1               	movwf	?__Umul8_16+1
  5638  1331  0874               	movf	__Umul8_16@product,w
  5639  1332  00F0               	movwf	?__Umul8_16
  5640  1333                     l1102:
  5641  1333  0008               	return
  5642  1334                     __end_of__Umul8_16:
  5643                           
  5644                           	psect	text14
  5645  0D78                     __ptext14:	
  5646 ;; *************** function ___fladd *****************
  5647 ;; Defined at:
  5648 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\sprcadd.c"
  5649 ;; Parameters:    Size  Location     Type
  5650 ;;  b               4   26[BANK0 ] unsigned int 
  5651 ;;  a               4   30[BANK0 ] unsigned int 
  5652 ;; Auto vars:     Size  Location     Type
  5653 ;;  grs             1   45[BANK0 ] unsigned char 
  5654 ;;  bexp            1   44[BANK0 ] unsigned char 
  5655 ;;  aexp            1   43[BANK0 ] unsigned char 
  5656 ;;  signs           1   42[BANK0 ] unsigned char 
  5657 ;; Return value:  Size  Location     Type
  5658 ;;                  4   26[BANK0 ] unsigned char 
  5659 ;; Registers used:
  5660 ;;		wreg, status,2, status,0, btemp+1
  5661 ;; Tracked objects:
  5662 ;;		On entry : 0/0
  5663 ;;		On exit  : 0/0
  5664 ;;		Unchanged: 0/0
  5665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5666 ;;      Params:         0       8       0       0       0
  5667 ;;      Locals:         0       4       0       0       0
  5668 ;;      Temps:          0       8       0       0       0
  5669 ;;      Totals:         0      20       0       0       0
  5670 ;;Total ram usage:       20 bytes
  5671 ;; Hardware stack levels used: 1
  5672 ;; This function calls:
  5673 ;;		Nothing
  5674 ;; This function is called by:
  5675 ;;		_Update_Farenheit
  5676 ;;		_Update_Celsius
  5677 ;; This function uses a non-reentrant model
  5678 ;;
  5679                           
  5680  0D78                     ___fladd:	
  5681                           ;psect for function ___fladd
  5682                           
  5683  0D78                     l2999:	
  5684                           ;incstack = 0
  5685                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  5686                           
  5687  0D78  1283               	bcf	3,5	;RP0=0, select bank0
  5688  0D79  1303               	bcf	3,6	;RP1=0, select bank0
  5689  0D7A  083D               	movf	___fladd@b+3,w
  5690  0D7B  3980               	andlw	128
  5691  0D7C  00C2               	movwf	??___fladd
  5692  0D7D  0842               	movf	??___fladd,w
  5693  0D7E  00CA               	movwf	___fladd@signs
  5694  0D7F                     l3001:
  5695  0D7F  083D               	movf	___fladd@b+3,w
  5696  0D80  00C2               	movwf	??___fladd
  5697  0D81  0742               	addwf	??___fladd,w
  5698  0D82  00C3               	movwf	??___fladd+1
  5699  0D83  0843               	movf	??___fladd+1,w
  5700  0D84  00CC               	movwf	___fladd@bexp
  5701  0D85                     l3003:
  5702  0D85  1FBC               	btfss	___fladd@b+2,7
  5703  0D86  2D88               	goto	u2961
  5704  0D87  2D89               	goto	u2960
  5705  0D88                     u2961:
  5706  0D88  2D8A               	goto	l3007
  5707  0D89                     u2960:
  5708  0D89                     l3005:
  5709  0D89  144C               	bsf	___fladd@bexp,0
  5710  0D8A                     l3007:
  5711  0D8A  084C               	movf	___fladd@bexp,w
  5712  0D8B  1903               	btfsc	3,2
  5713  0D8C  2D8E               	goto	u2971
  5714  0D8D  2D8F               	goto	u2970
  5715  0D8E                     u2971:
  5716  0D8E  2D9F               	goto	l3017
  5717  0D8F                     u2970:
  5718  0D8F                     l3009:
  5719  0D8F  0A4C               	incf	___fladd@bexp,w
  5720  0D90  1D03               	btfss	3,2
  5721  0D91  2D93               	goto	u2981
  5722  0D92  2D94               	goto	u2980
  5723  0D93                     u2981:
  5724  0D93  2D9C               	goto	l3013
  5725  0D94                     u2980:
  5726  0D94                     l3011:
  5727  0D94  3000               	movlw	0
  5728  0D95  00BD               	movwf	___fladd@b+3
  5729  0D96  3000               	movlw	0
  5730  0D97  00BC               	movwf	___fladd@b+2
  5731  0D98  3000               	movlw	0
  5732  0D99  00BB               	movwf	___fladd@b+1
  5733  0D9A  3000               	movlw	0
  5734  0D9B  00BA               	movwf	___fladd@b
  5735  0D9C                     l3013:
  5736  0D9C  17BC               	bsf	___fladd@b+2,7
  5737  0D9D                     l3015:
  5738  0D9D  01BD               	clrf	___fladd@b+3
  5739  0D9E  2DA7               	goto	l3019
  5740  0D9F                     l3017:
  5741  0D9F  3000               	movlw	0
  5742  0DA0  00BD               	movwf	___fladd@b+3
  5743  0DA1  3000               	movlw	0
  5744  0DA2  00BC               	movwf	___fladd@b+2
  5745  0DA3  3000               	movlw	0
  5746  0DA4  00BB               	movwf	___fladd@b+1
  5747  0DA5  3000               	movlw	0
  5748  0DA6  00BA               	movwf	___fladd@b
  5749  0DA7                     l3019:
  5750  0DA7  0841               	movf	___fladd@a+3,w
  5751  0DA8  3980               	andlw	128
  5752  0DA9  00C2               	movwf	??___fladd
  5753  0DAA  0842               	movf	??___fladd,w
  5754  0DAB  00CB               	movwf	___fladd@aexp
  5755  0DAC                     l3021:
  5756  0DAC  084B               	movf	___fladd@aexp,w
  5757  0DAD  064A               	xorwf	___fladd@signs,w
  5758  0DAE  1903               	skipnz
  5759  0DAF  2DB1               	goto	u2991
  5760  0DB0  2DB2               	goto	u2990
  5761  0DB1                     u2991:
  5762  0DB1  2DB3               	goto	l3025
  5763  0DB2                     u2990:
  5764  0DB2                     l3023:
  5765  0DB2  174A               	bsf	___fladd@signs,6
  5766  0DB3                     l3025:
  5767  0DB3  0841               	movf	___fladd@a+3,w
  5768  0DB4  00C2               	movwf	??___fladd
  5769  0DB5  0742               	addwf	??___fladd,w
  5770  0DB6  00C3               	movwf	??___fladd+1
  5771  0DB7  0843               	movf	??___fladd+1,w
  5772  0DB8  00CB               	movwf	___fladd@aexp
  5773  0DB9                     l3027:
  5774  0DB9  1FC0               	btfss	___fladd@a+2,7
  5775  0DBA  2DBC               	goto	u3001
  5776  0DBB  2DBD               	goto	u3000
  5777  0DBC                     u3001:
  5778  0DBC  2DBE               	goto	l3031
  5779  0DBD                     u3000:
  5780  0DBD                     l3029:
  5781  0DBD  144B               	bsf	___fladd@aexp,0
  5782  0DBE                     l3031:
  5783  0DBE  084B               	movf	___fladd@aexp,w
  5784  0DBF  1903               	btfsc	3,2
  5785  0DC0  2DC2               	goto	u3011
  5786  0DC1  2DC3               	goto	u3010
  5787  0DC2                     u3011:
  5788  0DC2  2DD3               	goto	l3041
  5789  0DC3                     u3010:
  5790  0DC3                     l3033:
  5791  0DC3  0A4B               	incf	___fladd@aexp,w
  5792  0DC4  1D03               	btfss	3,2
  5793  0DC5  2DC7               	goto	u3021
  5794  0DC6  2DC8               	goto	u3020
  5795  0DC7                     u3021:
  5796  0DC7  2DD0               	goto	l3037
  5797  0DC8                     u3020:
  5798  0DC8                     l3035:
  5799  0DC8  3000               	movlw	0
  5800  0DC9  00C1               	movwf	___fladd@a+3
  5801  0DCA  3000               	movlw	0
  5802  0DCB  00C0               	movwf	___fladd@a+2
  5803  0DCC  3000               	movlw	0
  5804  0DCD  00BF               	movwf	___fladd@a+1
  5805  0DCE  3000               	movlw	0
  5806  0DCF  00BE               	movwf	___fladd@a
  5807  0DD0                     l3037:
  5808  0DD0  17C0               	bsf	___fladd@a+2,7
  5809  0DD1                     l3039:
  5810  0DD1  01C1               	clrf	___fladd@a+3
  5811  0DD2  2DDB               	goto	l985
  5812  0DD3                     l3041:
  5813  0DD3  3000               	movlw	0
  5814  0DD4  00C1               	movwf	___fladd@a+3
  5815  0DD5  3000               	movlw	0
  5816  0DD6  00C0               	movwf	___fladd@a+2
  5817  0DD7  3000               	movlw	0
  5818  0DD8  00BF               	movwf	___fladd@a+1
  5819  0DD9  3000               	movlw	0
  5820  0DDA  00BE               	movwf	___fladd@a
  5821  0DDB                     l985:
  5822  0DDB  084C               	movf	___fladd@bexp,w
  5823  0DDC  024B               	subwf	___fladd@aexp,w
  5824  0DDD  1803               	skipnc
  5825  0DDE  2DE0               	goto	u3031
  5826  0DDF  2DE1               	goto	u3030
  5827  0DE0                     u3031:
  5828  0DE0  2E25               	goto	l3077
  5829  0DE1                     u3030:
  5830  0DE1                     l3043:
  5831  0DE1  1F4A               	btfss	___fladd@signs,6
  5832  0DE2  2DE4               	goto	u3041
  5833  0DE3  2DE5               	goto	u3040
  5834  0DE4                     u3041:
  5835  0DE4  2DE9               	goto	l3047
  5836  0DE5                     u3040:
  5837  0DE5                     l3045:
  5838  0DE5  3080               	movlw	128
  5839  0DE6  00C2               	movwf	??___fladd
  5840  0DE7  0842               	movf	??___fladd,w
  5841  0DE8  06CA               	xorwf	___fladd@signs,f
  5842  0DE9                     l3047:
  5843  0DE9  084C               	movf	___fladd@bexp,w
  5844  0DEA  00C2               	movwf	??___fladd
  5845  0DEB  0842               	movf	??___fladd,w
  5846  0DEC  00CD               	movwf	___fladd@grs
  5847  0DED                     l3049:
  5848  0DED  084B               	movf	___fladd@aexp,w
  5849  0DEE  00C2               	movwf	??___fladd
  5850  0DEF  0842               	movf	??___fladd,w
  5851  0DF0  00CC               	movwf	___fladd@bexp
  5852  0DF1                     l3051:
  5853  0DF1  084D               	movf	___fladd@grs,w
  5854  0DF2  00C2               	movwf	??___fladd
  5855  0DF3  0842               	movf	??___fladd,w
  5856  0DF4  00CB               	movwf	___fladd@aexp
  5857  0DF5                     l3053:
  5858  0DF5  083A               	movf	___fladd@b,w
  5859  0DF6  00C2               	movwf	??___fladd
  5860  0DF7  0842               	movf	??___fladd,w
  5861  0DF8  00CD               	movwf	___fladd@grs
  5862  0DF9                     l3055:
  5863  0DF9  083E               	movf	___fladd@a,w
  5864  0DFA  00C2               	movwf	??___fladd
  5865  0DFB  0842               	movf	??___fladd,w
  5866  0DFC  00BA               	movwf	___fladd@b
  5867  0DFD                     l3057:
  5868  0DFD  084D               	movf	___fladd@grs,w
  5869  0DFE  00C2               	movwf	??___fladd
  5870  0DFF  0842               	movf	??___fladd,w
  5871  0E00  00BE               	movwf	___fladd@a
  5872  0E01                     l3059:
  5873  0E01  083B               	movf	___fladd@b+1,w
  5874  0E02  00C2               	movwf	??___fladd
  5875  0E03  0842               	movf	??___fladd,w
  5876  0E04  00CD               	movwf	___fladd@grs
  5877  0E05                     l3061:
  5878  0E05  083F               	movf	___fladd@a+1,w
  5879  0E06  00C2               	movwf	??___fladd
  5880  0E07  0842               	movf	??___fladd,w
  5881  0E08  00BB               	movwf	___fladd@b+1
  5882  0E09                     l3063:
  5883  0E09  084D               	movf	___fladd@grs,w
  5884  0E0A  00C2               	movwf	??___fladd
  5885  0E0B  0842               	movf	??___fladd,w
  5886  0E0C  00BF               	movwf	___fladd@a+1
  5887  0E0D                     l3065:
  5888  0E0D  083C               	movf	___fladd@b+2,w
  5889  0E0E  00C2               	movwf	??___fladd
  5890  0E0F  0842               	movf	??___fladd,w
  5891  0E10  00CD               	movwf	___fladd@grs
  5892  0E11                     l3067:
  5893  0E11  0840               	movf	___fladd@a+2,w
  5894  0E12  00C2               	movwf	??___fladd
  5895  0E13  0842               	movf	??___fladd,w
  5896  0E14  00BC               	movwf	___fladd@b+2
  5897  0E15                     l3069:
  5898  0E15  084D               	movf	___fladd@grs,w
  5899  0E16  00C2               	movwf	??___fladd
  5900  0E17  0842               	movf	??___fladd,w
  5901  0E18  00C0               	movwf	___fladd@a+2
  5902  0E19                     l3071:
  5903  0E19  083D               	movf	___fladd@b+3,w
  5904  0E1A  00C2               	movwf	??___fladd
  5905  0E1B  0842               	movf	??___fladd,w
  5906  0E1C  00CD               	movwf	___fladd@grs
  5907  0E1D                     l3073:
  5908  0E1D  0841               	movf	___fladd@a+3,w
  5909  0E1E  00C2               	movwf	??___fladd
  5910  0E1F  0842               	movf	??___fladd,w
  5911  0E20  00BD               	movwf	___fladd@b+3
  5912  0E21                     l3075:
  5913  0E21  084D               	movf	___fladd@grs,w
  5914  0E22  00C2               	movwf	??___fladd
  5915  0E23  0842               	movf	??___fladd,w
  5916  0E24  00C1               	movwf	___fladd@a+3
  5917  0E25                     l3077:
  5918  0E25  01CD               	clrf	___fladd@grs
  5919  0E26                     l3079:
  5920  0E26  084B               	movf	___fladd@aexp,w
  5921  0E27  00C2               	movwf	??___fladd
  5922  0E28  01C3               	clrf	??___fladd+1
  5923  0E29  0843               	movf	??___fladd+1,w
  5924  0E2A  00C5               	movwf	??___fladd+3
  5925  0E2B  084C               	movf	___fladd@bexp,w
  5926  0E2C  0242               	subwf	??___fladd,w
  5927  0E2D  00C4               	movwf	??___fladd+2
  5928  0E2E  1C03               	skipc
  5929  0E2F  03C5               	decf	??___fladd+3,f
  5930  0E30  0845               	movf	??___fladd+3,w
  5931  0E31  3A80               	xorlw	128
  5932  0E32  00FF               	movwf	btemp+1
  5933  0E33  3080               	movlw	128
  5934  0E34  027F               	subwf	btemp+1,w
  5935  0E35  1D03               	skipz
  5936  0E36  2E39               	goto	u3055
  5937  0E37  301A               	movlw	26
  5938  0E38  0244               	subwf	??___fladd+2,w
  5939  0E39                     u3055:
  5940  0E39  1C03               	skipc
  5941  0E3A  2E3C               	goto	u3051
  5942  0E3B  2E3D               	goto	u3050
  5943  0E3C                     u3051:
  5944  0E3C  2E7A               	goto	l3095
  5945  0E3D                     u3050:
  5946  0E3D                     l3081:
  5947  0E3D  1283               	bcf	3,5	;RP0=0, select bank0
  5948  0E3E  1303               	bcf	3,6	;RP1=0, select bank0
  5949  0E3F  083D               	movf	___fladd@b+3,w
  5950  0E40  043C               	iorwf	___fladd@b+2,w
  5951  0E41  043B               	iorwf	___fladd@b+1,w
  5952  0E42  043A               	iorwf	___fladd@b,w
  5953  0E43  1D03               	skipz
  5954  0E44  2E46               	goto	u3061
  5955  0E45  2E48               	goto	u3060
  5956  0E46                     u3061:
  5957  0E46  3001               	movlw	1
  5958  0E47  2E49               	goto	u3070
  5959  0E48                     u3060:
  5960  0E48  3000               	movlw	0
  5961  0E49                     u3070:
  5962  0E49  00C2               	movwf	??___fladd
  5963  0E4A  0842               	movf	??___fladd,w
  5964  0E4B  00CD               	movwf	___fladd@grs
  5965  0E4C  3000               	movlw	0
  5966  0E4D  00BD               	movwf	___fladd@b+3
  5967  0E4E  3000               	movlw	0
  5968  0E4F  00BC               	movwf	___fladd@b+2
  5969  0E50  3000               	movlw	0
  5970  0E51  00BB               	movwf	___fladd@b+1
  5971  0E52  3000               	movlw	0
  5972  0E53  00BA               	movwf	___fladd@b
  5973  0E54  084B               	movf	___fladd@aexp,w
  5974  0E55  00C2               	movwf	??___fladd
  5975  0E56  0842               	movf	??___fladd,w
  5976  0E57  00CC               	movwf	___fladd@bexp
  5977  0E58  2E82               	goto	l989
  5978  0E59                     l991:
  5979  0E59  1C4D               	btfss	___fladd@grs,0
  5980  0E5A  2E5C               	goto	u3081
  5981  0E5B  2E5D               	goto	u3080
  5982  0E5C                     u3081:
  5983  0E5C  2E66               	goto	l3085
  5984  0E5D                     u3080:
  5985  0E5D                     l3083:
  5986  0E5D  084D               	movf	___fladd@grs,w
  5987  0E5E  00C2               	movwf	??___fladd
  5988  0E5F  1003               	clrc
  5989  0E60  0C42               	rrf	??___fladd,w
  5990  0E61  3801               	iorlw	1
  5991  0E62  00C3               	movwf	??___fladd+1
  5992  0E63  0843               	movf	??___fladd+1,w
  5993  0E64  00CD               	movwf	___fladd@grs
  5994  0E65  2E68               	goto	l3087
  5995  0E66                     l3085:
  5996  0E66  1003               	clrc
  5997  0E67  0CCD               	rrf	___fladd@grs,f
  5998  0E68                     l3087:
  5999  0E68  1C3A               	btfss	___fladd@b,0
  6000  0E69  2E6B               	goto	u3091
  6001  0E6A  2E6C               	goto	u3090
  6002  0E6B                     u3091:
  6003  0E6B  2E6D               	goto	l3091
  6004  0E6C                     u3090:
  6005  0E6C                     l3089:
  6006  0E6C  17CD               	bsf	___fladd@grs,7
  6007  0E6D                     l3091:
  6008  0E6D  3001               	movlw	1
  6009  0E6E  00C2               	movwf	??___fladd
  6010  0E6F                     u3105:
  6011  0E6F  0D3D               	rlf	___fladd@b+3,w
  6012  0E70  0CBD               	rrf	___fladd@b+3,f
  6013  0E71  0CBC               	rrf	___fladd@b+2,f
  6014  0E72  0CBB               	rrf	___fladd@b+1,f
  6015  0E73  0CBA               	rrf	___fladd@b,f
  6016  0E74  0BC2               	decfsz	??___fladd& (0+127),f
  6017  0E75  2E6F               	goto	u3105
  6018  0E76                     l3093:
  6019  0E76  3001               	movlw	1
  6020  0E77  00C2               	movwf	??___fladd
  6021  0E78  0842               	movf	??___fladd,w
  6022  0E79  07CC               	addwf	___fladd@bexp,f
  6023  0E7A                     l3095:
  6024  0E7A  1283               	bcf	3,5	;RP0=0, select bank0
  6025  0E7B  1303               	bcf	3,6	;RP1=0, select bank0
  6026  0E7C  084B               	movf	___fladd@aexp,w
  6027  0E7D  024C               	subwf	___fladd@bexp,w
  6028  0E7E  1C03               	skipc
  6029  0E7F  2E81               	goto	u3111
  6030  0E80  2E82               	goto	u3110
  6031  0E81                     u3111:
  6032  0E81  2E59               	goto	l991
  6033  0E82                     u3110:
  6034  0E82                     l989:
  6035  0E82  1B4A               	btfsc	___fladd@signs,6
  6036  0E83  2E85               	goto	u3121
  6037  0E84  2E86               	goto	u3120
  6038  0E85                     u3121:
  6039  0E85  2ED1               	goto	l3121
  6040  0E86                     u3120:
  6041  0E86                     l3097:
  6042  0E86  084C               	movf	___fladd@bexp,w
  6043  0E87  1D03               	btfss	3,2
  6044  0E88  2E8A               	goto	u3131
  6045  0E89  2E8B               	goto	u3130
  6046  0E8A                     u3131:
  6047  0E8A  2E94               	goto	l3103
  6048  0E8B                     u3130:
  6049  0E8B                     l3099:
  6050  0E8B  3000               	movlw	0
  6051  0E8C  00BD               	movwf	?___fladd+3
  6052  0E8D  3000               	movlw	0
  6053  0E8E  00BC               	movwf	?___fladd+2
  6054  0E8F  3000               	movlw	0
  6055  0E90  00BB               	movwf	?___fladd+1
  6056  0E91  3000               	movlw	0
  6057  0E92  00BA               	movwf	?___fladd
  6058  0E93  2FFF               	goto	l998
  6059  0E94                     l3103:
  6060  0E94  083E               	movf	___fladd@a,w
  6061  0E95  07BA               	addwf	___fladd@b,f
  6062  0E96  083F               	movf	___fladd@a+1,w
  6063  0E97  1103               	clrz
  6064  0E98  1803               	skipnc
  6065  0E99  3E01               	addlw	1
  6066  0E9A  1903               	skipnz
  6067  0E9B  2E9D               	goto	u3141
  6068  0E9C  07BB               	addwf	___fladd@b+1,f
  6069  0E9D                     u3141:
  6070  0E9D  0840               	movf	___fladd@a+2,w
  6071  0E9E  1103               	clrz
  6072  0E9F  1803               	skipnc
  6073  0EA0  3E01               	addlw	1
  6074  0EA1  1903               	skipnz
  6075  0EA2  2EA4               	goto	u3142
  6076  0EA3  07BC               	addwf	___fladd@b+2,f
  6077  0EA4                     u3142:
  6078  0EA4  0841               	movf	___fladd@a+3,w
  6079  0EA5  1103               	clrz
  6080  0EA6  1803               	skipnc
  6081  0EA7  3E01               	addlw	1
  6082  0EA8  1903               	skipnz
  6083  0EA9  2EAB               	goto	u3143
  6084  0EAA  07BD               	addwf	___fladd@b+3,f
  6085  0EAB                     u3143:
  6086  0EAB                     l3105:
  6087  0EAB  1C3D               	btfss	___fladd@b+3,0
  6088  0EAC  2EAE               	goto	u3151
  6089  0EAD  2EAF               	goto	u3150
  6090  0EAE                     u3151:
  6091  0EAE  2F85               	goto	l3155
  6092  0EAF                     u3150:
  6093  0EAF                     l3107:
  6094  0EAF  1C4D               	btfss	___fladd@grs,0
  6095  0EB0  2EB2               	goto	u3161
  6096  0EB1  2EB3               	goto	u3160
  6097  0EB2                     u3161:
  6098  0EB2  2EBC               	goto	l3111
  6099  0EB3                     u3160:
  6100  0EB3                     l3109:
  6101  0EB3  084D               	movf	___fladd@grs,w
  6102  0EB4  00C2               	movwf	??___fladd
  6103  0EB5  1003               	clrc
  6104  0EB6  0C42               	rrf	??___fladd,w
  6105  0EB7  3801               	iorlw	1
  6106  0EB8  00C3               	movwf	??___fladd+1
  6107  0EB9  0843               	movf	??___fladd+1,w
  6108  0EBA  00CD               	movwf	___fladd@grs
  6109  0EBB  2EBE               	goto	l3113
  6110  0EBC                     l3111:
  6111  0EBC  1003               	clrc
  6112  0EBD  0CCD               	rrf	___fladd@grs,f
  6113  0EBE                     l3113:
  6114  0EBE  1C3A               	btfss	___fladd@b,0
  6115  0EBF  2EC1               	goto	u3171
  6116  0EC0  2EC2               	goto	u3170
  6117  0EC1                     u3171:
  6118  0EC1  2EC3               	goto	l3117
  6119  0EC2                     u3170:
  6120  0EC2                     l3115:
  6121  0EC2  17CD               	bsf	___fladd@grs,7
  6122  0EC3                     l3117:
  6123  0EC3  3001               	movlw	1
  6124  0EC4  00C2               	movwf	??___fladd
  6125  0EC5                     u3185:
  6126  0EC5  0D3D               	rlf	___fladd@b+3,w
  6127  0EC6  0CBD               	rrf	___fladd@b+3,f
  6128  0EC7  0CBC               	rrf	___fladd@b+2,f
  6129  0EC8  0CBB               	rrf	___fladd@b+1,f
  6130  0EC9  0CBA               	rrf	___fladd@b,f
  6131  0ECA  0BC2               	decfsz	??___fladd& (0+127),f
  6132  0ECB  2EC5               	goto	u3185
  6133  0ECC                     l3119:
  6134  0ECC  3001               	movlw	1
  6135  0ECD  00C2               	movwf	??___fladd
  6136  0ECE  0842               	movf	??___fladd,w
  6137  0ECF  07CC               	addwf	___fladd@bexp,f
  6138  0ED0  2F85               	goto	l3155
  6139  0ED1                     l3121:
  6140  0ED1  083D               	movf	___fladd@b+3,w
  6141  0ED2  3A80               	xorlw	128
  6142  0ED3  00FF               	movwf	btemp+1
  6143  0ED4  0841               	movf	___fladd@a+3,w
  6144  0ED5  3A80               	xorlw	128
  6145  0ED6  027F               	subwf	btemp+1,w
  6146  0ED7  1D03               	skipz
  6147  0ED8  2EE3               	goto	u3193
  6148  0ED9  0840               	movf	___fladd@a+2,w
  6149  0EDA  023C               	subwf	___fladd@b+2,w
  6150  0EDB  1D03               	skipz
  6151  0EDC  2EE3               	goto	u3193
  6152  0EDD  083F               	movf	___fladd@a+1,w
  6153  0EDE  023B               	subwf	___fladd@b+1,w
  6154  0EDF  1D03               	skipz
  6155  0EE0  2EE3               	goto	u3193
  6156  0EE1  083E               	movf	___fladd@a,w
  6157  0EE2  023A               	subwf	___fladd@b,w
  6158  0EE3                     u3193:
  6159  0EE3  1803               	skipnc
  6160  0EE4  2EE6               	goto	u3191
  6161  0EE5  2EE7               	goto	u3190
  6162  0EE6                     u3191:
  6163  0EE6  2F3F               	goto	l3131
  6164  0EE7                     u3190:
  6165  0EE7                     l3123:
  6166  0EE7  30FF               	movlw	255
  6167  0EE8  00C2               	movwf	??___fladd
  6168  0EE9  30FF               	movlw	255
  6169  0EEA  00C3               	movwf	??___fladd+1
  6170  0EEB  30FF               	movlw	255
  6171  0EEC  00C4               	movwf	??___fladd+2
  6172  0EED  30FF               	movlw	255
  6173  0EEE  00C5               	movwf	??___fladd+3
  6174  0EEF  083E               	movf	___fladd@a,w
  6175  0EF0  00C6               	movwf	??___fladd+4
  6176  0EF1  083F               	movf	___fladd@a+1,w
  6177  0EF2  00C7               	movwf	??___fladd+5
  6178  0EF3  0840               	movf	___fladd@a+2,w
  6179  0EF4  00C8               	movwf	??___fladd+6
  6180  0EF5  0841               	movf	___fladd@a+3,w
  6181  0EF6  00C9               	movwf	??___fladd+7
  6182  0EF7  083A               	movf	___fladd@b,w
  6183  0EF8  02C6               	subwf	??___fladd+4,f
  6184  0EF9  083B               	movf	___fladd@b+1,w
  6185  0EFA  1C03               	skipc
  6186  0EFB  0F3B               	incfsz	___fladd@b+1,w
  6187  0EFC  2EFE               	goto	u3201
  6188  0EFD  2EFF               	goto	u3202
  6189  0EFE                     u3201:
  6190  0EFE  02C7               	subwf	??___fladd+5,f
  6191  0EFF                     u3202:
  6192  0EFF  083C               	movf	___fladd@b+2,w
  6193  0F00  1C03               	skipc
  6194  0F01  0F3C               	incfsz	___fladd@b+2,w
  6195  0F02  2F04               	goto	u3203
  6196  0F03  2F05               	goto	u3204
  6197  0F04                     u3203:
  6198  0F04  02C8               	subwf	??___fladd+6,f
  6199  0F05                     u3204:
  6200  0F05  083D               	movf	___fladd@b+3,w
  6201  0F06  1C03               	skipc
  6202  0F07  0F3D               	incfsz	___fladd@b+3,w
  6203  0F08  2F0A               	goto	u3205
  6204  0F09  2F0B               	goto	u3206
  6205  0F0A                     u3205:
  6206  0F0A  02C9               	subwf	??___fladd+7,f
  6207  0F0B                     u3206:
  6208  0F0B  0846               	movf	??___fladd+4,w
  6209  0F0C  07C2               	addwf	??___fladd,f
  6210  0F0D  0847               	movf	??___fladd+5,w
  6211  0F0E  1803               	skipnc
  6212  0F0F  0F47               	incfsz	??___fladd+5,w
  6213  0F10  2F12               	goto	u3210
  6214  0F11  2F13               	goto	u3211
  6215  0F12                     u3210:
  6216  0F12  07C3               	addwf	??___fladd+1,f
  6217  0F13                     u3211:
  6218  0F13  0848               	movf	??___fladd+6,w
  6219  0F14  1803               	skipnc
  6220  0F15  0F48               	incfsz	??___fladd+6,w
  6221  0F16  2F18               	goto	u3212
  6222  0F17  2F19               	goto	u3213
  6223  0F18                     u3212:
  6224  0F18  07C4               	addwf	??___fladd+2,f
  6225  0F19                     u3213:
  6226  0F19  0849               	movf	??___fladd+7,w
  6227  0F1A  1803               	skipnc
  6228  0F1B  0A49               	incf	??___fladd+7,w
  6229  0F1C  07C5               	addwf	??___fladd+3,f
  6230  0F1D  0845               	movf	??___fladd+3,w
  6231  0F1E  00BD               	movwf	___fladd@b+3
  6232  0F1F  0844               	movf	??___fladd+2,w
  6233  0F20  00BC               	movwf	___fladd@b+2
  6234  0F21  0843               	movf	??___fladd+1,w
  6235  0F22  00BB               	movwf	___fladd@b+1
  6236  0F23  0842               	movf	??___fladd,w
  6237  0F24  00BA               	movwf	___fladd@b
  6238  0F25                     l3125:
  6239  0F25  3080               	movlw	128
  6240  0F26  00C2               	movwf	??___fladd
  6241  0F27  0842               	movf	??___fladd,w
  6242  0F28  06CA               	xorwf	___fladd@signs,f
  6243  0F29  09CD               	comf	___fladd@grs,f
  6244  0F2A  0ACD               	incf	___fladd@grs,f
  6245  0F2B                     l3127:
  6246  0F2B  084D               	movf	___fladd@grs,w
  6247  0F2C  1D03               	btfss	3,2
  6248  0F2D  2F2F               	goto	u3221
  6249  0F2E  2F30               	goto	u3220
  6250  0F2F                     u3221:
  6251  0F2F  2F4D               	goto	l1006
  6252  0F30                     u3220:
  6253  0F30                     l3129:
  6254  0F30  3001               	movlw	1
  6255  0F31  07BA               	addwf	___fladd@b,f
  6256  0F32  3000               	movlw	0
  6257  0F33  1803               	skipnc
  6258  0F34  3001               	movlw	1
  6259  0F35  07BB               	addwf	___fladd@b+1,f
  6260  0F36  3000               	movlw	0
  6261  0F37  1803               	skipnc
  6262  0F38  3001               	movlw	1
  6263  0F39  07BC               	addwf	___fladd@b+2,f
  6264  0F3A  3000               	movlw	0
  6265  0F3B  1803               	skipnc
  6266  0F3C  3001               	movlw	1
  6267  0F3D  07BD               	addwf	___fladd@b+3,f
  6268  0F3E  2F4D               	goto	l1006
  6269  0F3F                     l3131:
  6270  0F3F  083E               	movf	___fladd@a,w
  6271  0F40  02BA               	subwf	___fladd@b,f
  6272  0F41  083F               	movf	___fladd@a+1,w
  6273  0F42  1C03               	skipc
  6274  0F43  0F3F               	incfsz	___fladd@a+1,w
  6275  0F44  02BB               	subwf	___fladd@b+1,f
  6276  0F45  0840               	movf	___fladd@a+2,w
  6277  0F46  1C03               	skipc
  6278  0F47  0F40               	incfsz	___fladd@a+2,w
  6279  0F48  02BC               	subwf	___fladd@b+2,f
  6280  0F49  0841               	movf	___fladd@a+3,w
  6281  0F4A  1C03               	skipc
  6282  0F4B  0F41               	incfsz	___fladd@a+3,w
  6283  0F4C  02BD               	subwf	___fladd@b+3,f
  6284  0F4D                     l1006:
  6285  0F4D  083D               	movf	___fladd@b+3,w
  6286  0F4E  043C               	iorwf	___fladd@b+2,w
  6287  0F4F  043B               	iorwf	___fladd@b+1,w
  6288  0F50  043A               	iorwf	___fladd@b,w
  6289  0F51  1D03               	skipz
  6290  0F52  2F54               	goto	u3231
  6291  0F53  2F55               	goto	u3230
  6292  0F54                     u3231:
  6293  0F54  2F81               	goto	l3153
  6294  0F55                     u3230:
  6295  0F55                     l3133:
  6296  0F55  084D               	movf	___fladd@grs,w
  6297  0F56  1D03               	btfss	3,2
  6298  0F57  2F59               	goto	u3241
  6299  0F58  2F5A               	goto	u3240
  6300  0F59                     u3241:
  6301  0F59  2F81               	goto	l3153
  6302  0F5A                     u3240:
  6303  0F5A                     l3135:
  6304  0F5A  3000               	movlw	0
  6305  0F5B  00BD               	movwf	?___fladd+3
  6306  0F5C  3000               	movlw	0
  6307  0F5D  00BC               	movwf	?___fladd+2
  6308  0F5E  3000               	movlw	0
  6309  0F5F  00BB               	movwf	?___fladd+1
  6310  0F60  3000               	movlw	0
  6311  0F61  00BA               	movwf	?___fladd
  6312  0F62  2FFF               	goto	l998
  6313  0F63                     l3139:
  6314  0F63  3001               	movlw	1
  6315  0F64  00C2               	movwf	??___fladd
  6316  0F65                     u3255:
  6317  0F65  1003               	clrc
  6318  0F66  0DBA               	rlf	___fladd@b,f
  6319  0F67  0DBB               	rlf	___fladd@b+1,f
  6320  0F68  0DBC               	rlf	___fladd@b+2,f
  6321  0F69  0DBD               	rlf	___fladd@b+3,f
  6322  0F6A  0BC2               	decfsz	??___fladd,f
  6323  0F6B  2F65               	goto	u3255
  6324  0F6C                     l3141:
  6325  0F6C  1FCD               	btfss	___fladd@grs,7
  6326  0F6D  2F6F               	goto	u3261
  6327  0F6E  2F70               	goto	u3260
  6328  0F6F                     u3261:
  6329  0F6F  2F71               	goto	l1010
  6330  0F70                     u3260:
  6331  0F70                     l3143:
  6332  0F70  143A               	bsf	___fladd@b,0
  6333  0F71                     l1010:
  6334  0F71  1C4D               	btfss	___fladd@grs,0
  6335  0F72  2F74               	goto	u3271
  6336  0F73  2F75               	goto	u3270
  6337  0F74                     u3271:
  6338  0F74  2F78               	goto	l3147
  6339  0F75                     u3270:
  6340  0F75                     l3145:
  6341  0F75  1403               	setc
  6342  0F76  0DCD               	rlf	___fladd@grs,f
  6343  0F77  2F7A               	goto	l3149
  6344  0F78                     l3147:
  6345  0F78  1003               	clrc
  6346  0F79  0DCD               	rlf	___fladd@grs,f
  6347  0F7A                     l3149:
  6348  0F7A  084C               	movf	___fladd@bexp,w
  6349  0F7B  1903               	btfsc	3,2
  6350  0F7C  2F7E               	goto	u3281
  6351  0F7D  2F7F               	goto	u3280
  6352  0F7E                     u3281:
  6353  0F7E  2F81               	goto	l3153
  6354  0F7F                     u3280:
  6355  0F7F                     l3151:
  6356  0F7F  3001               	movlw	1
  6357  0F80  02CC               	subwf	___fladd@bexp,f
  6358  0F81                     l3153:
  6359  0F81  1FBC               	btfss	___fladd@b+2,7
  6360  0F82  2F84               	goto	u3291
  6361  0F83  2F85               	goto	u3290
  6362  0F84                     u3291:
  6363  0F84  2F63               	goto	l3139
  6364  0F85                     u3290:
  6365  0F85                     l3155:
  6366  0F85  01CB               	clrf	___fladd@aexp
  6367  0F86                     l3157:
  6368  0F86  1FCD               	btfss	___fladd@grs,7
  6369  0F87  2F89               	goto	u3301
  6370  0F88  2F8A               	goto	u3300
  6371  0F89                     u3301:
  6372  0F89  2F98               	goto	l3165
  6373  0F8A                     u3300:
  6374  0F8A                     l3159:
  6375  0F8A  084D               	movf	___fladd@grs,w
  6376  0F8B  397F               	andlw	127
  6377  0F8C  1903               	btfsc	3,2
  6378  0F8D  2F8F               	goto	u3311
  6379  0F8E  2F90               	goto	u3310
  6380  0F8F                     u3311:
  6381  0F8F  2F93               	goto	l1016
  6382  0F90                     u3310:
  6383  0F90                     l3161:
  6384  0F90  01CB               	clrf	___fladd@aexp
  6385  0F91  0ACB               	incf	___fladd@aexp,f
  6386  0F92  2F98               	goto	l3165
  6387  0F93                     l1016:
  6388  0F93  1C3A               	btfss	___fladd@b,0
  6389  0F94  2F96               	goto	u3321
  6390  0F95  2F97               	goto	u3320
  6391  0F96                     u3321:
  6392  0F96  2F98               	goto	l3165
  6393  0F97                     u3320:
  6394  0F97  2F90               	goto	l3161
  6395  0F98                     l3165:
  6396  0F98  084B               	movf	___fladd@aexp,w
  6397  0F99  1903               	btfsc	3,2
  6398  0F9A  2F9C               	goto	u3331
  6399  0F9B  2F9D               	goto	u3330
  6400  0F9C                     u3331:
  6401  0F9C  2FD1               	goto	l1019
  6402  0F9D                     u3330:
  6403  0F9D                     l3167:
  6404  0F9D  3001               	movlw	1
  6405  0F9E  07BA               	addwf	___fladd@b,f
  6406  0F9F  3000               	movlw	0
  6407  0FA0  1803               	skipnc
  6408  0FA1  3001               	movlw	1
  6409  0FA2  07BB               	addwf	___fladd@b+1,f
  6410  0FA3  3000               	movlw	0
  6411  0FA4  1803               	skipnc
  6412  0FA5  3001               	movlw	1
  6413  0FA6  07BC               	addwf	___fladd@b+2,f
  6414  0FA7  3000               	movlw	0
  6415  0FA8  1803               	skipnc
  6416  0FA9  3001               	movlw	1
  6417  0FAA  07BD               	addwf	___fladd@b+3,f
  6418  0FAB                     l3169:
  6419  0FAB  1C3D               	btfss	___fladd@b+3,0
  6420  0FAC  2FAE               	goto	u3341
  6421  0FAD  2FAF               	goto	u3340
  6422  0FAE                     u3341:
  6423  0FAE  2FD1               	goto	l1019
  6424  0FAF                     u3340:
  6425  0FAF                     l3171:
  6426  0FAF  083A               	movf	___fladd@b,w
  6427  0FB0  00C2               	movwf	??___fladd
  6428  0FB1  083B               	movf	___fladd@b+1,w
  6429  0FB2  00C3               	movwf	??___fladd+1
  6430  0FB3  083C               	movf	___fladd@b+2,w
  6431  0FB4  00C4               	movwf	??___fladd+2
  6432  0FB5  083D               	movf	___fladd@b+3,w
  6433  0FB6  00C5               	movwf	??___fladd+3
  6434  0FB7  3001               	movlw	1
  6435  0FB8  00C6               	movwf	??___fladd+4
  6436  0FB9                     u3355:
  6437  0FB9  0D45               	rlf	??___fladd+3,w
  6438  0FBA  0CC5               	rrf	??___fladd+3,f
  6439  0FBB  0CC4               	rrf	??___fladd+2,f
  6440  0FBC  0CC3               	rrf	??___fladd+1,f
  6441  0FBD  0CC2               	rrf	??___fladd,f
  6442  0FBE                     u3350:
  6443  0FBE  0BC6               	decfsz	??___fladd+4,f
  6444  0FBF  2FB9               	goto	u3355
  6445  0FC0  0845               	movf	??___fladd+3,w
  6446  0FC1  00BD               	movwf	___fladd@b+3
  6447  0FC2  0844               	movf	??___fladd+2,w
  6448  0FC3  00BC               	movwf	___fladd@b+2
  6449  0FC4  0843               	movf	??___fladd+1,w
  6450  0FC5  00BB               	movwf	___fladd@b+1
  6451  0FC6  0842               	movf	??___fladd,w
  6452  0FC7  00BA               	movwf	___fladd@b
  6453  0FC8  0A4C               	incf	___fladd@bexp,w
  6454  0FC9  1903               	btfsc	3,2
  6455  0FCA  2FCC               	goto	u3361
  6456  0FCB  2FCD               	goto	u3360
  6457  0FCC                     u3361:
  6458  0FCC  2FD1               	goto	l1019
  6459  0FCD                     u3360:
  6460  0FCD                     l3173:
  6461  0FCD  3001               	movlw	1
  6462  0FCE  00C2               	movwf	??___fladd
  6463  0FCF  0842               	movf	??___fladd,w
  6464  0FD0  07CC               	addwf	___fladd@bexp,f
  6465  0FD1                     l1019:
  6466  0FD1  0A4C               	incf	___fladd@bexp,w
  6467  0FD2  1903               	btfsc	3,2
  6468  0FD3  2FD5               	goto	u3371
  6469  0FD4  2FD6               	goto	u3370
  6470  0FD5                     u3371:
  6471  0FD5  2FDB               	goto	l3177
  6472  0FD6                     u3370:
  6473  0FD6                     l3175:
  6474  0FD6  084C               	movf	___fladd@bexp,w
  6475  0FD7  1D03               	btfss	3,2
  6476  0FD8  2FDA               	goto	u3381
  6477  0FD9  2FDB               	goto	u3380
  6478  0FDA                     u3381:
  6479  0FDA  2FE9               	goto	l3183
  6480  0FDB                     u3380:
  6481  0FDB                     l3177:
  6482  0FDB  3000               	movlw	0
  6483  0FDC  00BD               	movwf	___fladd@b+3
  6484  0FDD  3000               	movlw	0
  6485  0FDE  00BC               	movwf	___fladd@b+2
  6486  0FDF  3000               	movlw	0
  6487  0FE0  00BB               	movwf	___fladd@b+1
  6488  0FE1  3000               	movlw	0
  6489  0FE2  00BA               	movwf	___fladd@b
  6490  0FE3                     l3179:
  6491  0FE3  084C               	movf	___fladd@bexp,w
  6492  0FE4  1D03               	btfss	3,2
  6493  0FE5  2FE7               	goto	u3391
  6494  0FE6  2FE8               	goto	u3390
  6495  0FE7                     u3391:
  6496  0FE7  2FE9               	goto	l3183
  6497  0FE8                     u3390:
  6498  0FE8                     l3181:
  6499  0FE8  01CA               	clrf	___fladd@signs
  6500  0FE9                     l3183:
  6501  0FE9  1C4C               	btfss	___fladd@bexp,0
  6502  0FEA  2FEC               	goto	u3401
  6503  0FEB  2FED               	goto	u3400
  6504  0FEC                     u3401:
  6505  0FEC  2FEF               	goto	l3187
  6506  0FED                     u3400:
  6507  0FED                     l3185:
  6508  0FED  17BC               	bsf	___fladd@b+2,7
  6509  0FEE  2FF3               	goto	l1027
  6510  0FEF                     l3187:
  6511  0FEF  307F               	movlw	127
  6512  0FF0  00C2               	movwf	??___fladd
  6513  0FF1  0842               	movf	??___fladd,w
  6514  0FF2  05BC               	andwf	___fladd@b+2,f
  6515  0FF3                     l1027:
  6516  0FF3  084C               	movf	___fladd@bexp,w
  6517  0FF4  00C2               	movwf	??___fladd
  6518  0FF5  1003               	clrc
  6519  0FF6  0C42               	rrf	??___fladd,w
  6520  0FF7  00C3               	movwf	??___fladd+1
  6521  0FF8  0843               	movf	??___fladd+1,w
  6522  0FF9  00BD               	movwf	___fladd@b+3
  6523  0FFA                     l3189:
  6524  0FFA  1FCA               	btfss	___fladd@signs,7
  6525  0FFB  2FFD               	goto	u3411
  6526  0FFC  2FFE               	goto	u3410
  6527  0FFD                     u3411:
  6528  0FFD  2FFF               	goto	l1028
  6529  0FFE                     u3410:
  6530  0FFE                     l3191:
  6531  0FFE  17BD               	bsf	___fladd@b+3,7
  6532  0FFF                     l1028:
  6533  0FFF                     l998:
  6534  0FFF  0008               	return
  6535  1000                     __end_of___fladd:
  6536                           
  6537                           	psect	text15
  6538  1241                     __ptext15:	
  6539 ;; *************** function _RotaryEncoder_Init *****************
  6540 ;; Defined at:
  6541 ;;		line 12 in file "RotaryEncoder.c"
  6542 ;; Parameters:    Size  Location     Type
  6543 ;;		None
  6544 ;; Auto vars:     Size  Location     Type
  6545 ;;		None
  6546 ;; Return value:  Size  Location     Type
  6547 ;;                  1    wreg      void 
  6548 ;; Registers used:
  6549 ;;		wreg, status,2, status,0
  6550 ;; Tracked objects:
  6551 ;;		On entry : 0/0
  6552 ;;		On exit  : 0/0
  6553 ;;		Unchanged: 0/0
  6554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6555 ;;      Params:         0       0       0       0       0
  6556 ;;      Locals:         0       0       0       0       0
  6557 ;;      Temps:          0       0       0       0       0
  6558 ;;      Totals:         0       0       0       0       0
  6559 ;;Total ram usage:        0 bytes
  6560 ;; Hardware stack levels used: 1
  6561 ;; This function calls:
  6562 ;;		Nothing
  6563 ;; This function is called by:
  6564 ;;		_main
  6565 ;; This function uses a non-reentrant model
  6566 ;;
  6567                           
  6568  1241                     _RotaryEncoder_Init:	
  6569                           ;psect for function _RotaryEncoder_Init
  6570                           
  6571  1241                     l3471:	
  6572                           ;incstack = 0
  6573                           ; Regs used in _RotaryEncoder_Init: [wreg+status,2+status,0]
  6574                           
  6575                           
  6576                           ;RotaryEncoder.c: 14:     T2CON = 0x04;
  6577  1241  3004               	movlw	4
  6578  1242  1283               	bcf	3,5	;RP0=0, select bank0
  6579  1243  1303               	bcf	3,6	;RP1=0, select bank0
  6580  1244  0092               	movwf	18	;volatile
  6581                           
  6582                           ;RotaryEncoder.c: 15:     PR2 = 101;
  6583  1245  3065               	movlw	101
  6584  1246  1683               	bsf	3,5	;RP0=1, select bank1
  6585  1247  1303               	bcf	3,6	;RP1=0, select bank1
  6586  1248  0092               	movwf	18	;volatile
  6587  1249                     l3473:
  6588                           
  6589                           ;RotaryEncoder.c: 17:     TRISBbits.TRISB0 = 1;
  6590  1249  1406               	bsf	6,0	;volatile
  6591  124A                     l3475:
  6592                           
  6593                           ;RotaryEncoder.c: 18:     TRISBbits.TRISB3 = 1;
  6594  124A  1586               	bsf	6,3	;volatile
  6595  124B                     l3477:
  6596                           
  6597                           ;RotaryEncoder.c: 19:     TRISBbits.TRISB7 = 1;
  6598  124B  1786               	bsf	6,7	;volatile
  6599  124C                     l3479:
  6600                           
  6601                           ;RotaryEncoder.c: 21:     PSTRCONbits.STRB = 1;
  6602  124C  149D               	bsf	29,1	;volatile
  6603  124D                     l3481:
  6604                           
  6605                           ;RotaryEncoder.c: 22:     PSTRCONbits.STRC = 1;
  6606  124D  151D               	bsf	29,2	;volatile
  6607  124E                     l3483:
  6608                           
  6609                           ;RotaryEncoder.c: 23:     PSTRCONbits.STRD = 1;
  6610  124E  159D               	bsf	29,3	;volatile
  6611  124F                     l3485:
  6612                           
  6613                           ;RotaryEncoder.c: 26:     CCP1CONbits.P1M = 0x00;
  6614  124F  303F               	movlw	-193
  6615  1250  1283               	bcf	3,5	;RP0=0, select bank0
  6616  1251  1303               	bcf	3,6	;RP1=0, select bank0
  6617  1252  0597               	andwf	23,f	;volatile
  6618  1253                     l3487:
  6619                           
  6620                           ;RotaryEncoder.c: 27:     CCP1CONbits.CCP1M = 0b1100;
  6621  1253  0817               	movf	23,w	;volatile
  6622  1254  39F0               	andlw	-16
  6623  1255  380C               	iorlw	12
  6624  1256  0097               	movwf	23	;volatile
  6625  1257                     l489:
  6626  1257  0008               	return
  6627  1258                     __end_of_RotaryEncoder_Init:
  6628                           
  6629                           	psect	text16
  6630  13F9                     __ptext16:	
  6631 ;; *************** function _ReadPhoto *****************
  6632 ;; Defined at:
  6633 ;;		line 14 in file "PhotoResistor.c"
  6634 ;; Parameters:    Size  Location     Type
  6635 ;;		None
  6636 ;; Auto vars:     Size  Location     Type
  6637 ;;		None
  6638 ;; Return value:  Size  Location     Type
  6639 ;;                  1    wreg      void 
  6640 ;; Registers used:
  6641 ;;		wreg, status,2, status,0
  6642 ;; Tracked objects:
  6643 ;;		On entry : 0/0
  6644 ;;		On exit  : 0/0
  6645 ;;		Unchanged: 0/0
  6646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6647 ;;      Params:         0       0       0       0       0
  6648 ;;      Locals:         0       0       0       0       0
  6649 ;;      Temps:          2       0       0       0       0
  6650 ;;      Totals:         2       0       0       0       0
  6651 ;;Total ram usage:        2 bytes
  6652 ;; Hardware stack levels used: 1
  6653 ;; This function calls:
  6654 ;;		Nothing
  6655 ;; This function is called by:
  6656 ;;		_main
  6657 ;; This function uses a non-reentrant model
  6658 ;;
  6659                           
  6660  13F9                     _ReadPhoto:	
  6661                           ;psect for function _ReadPhoto
  6662                           
  6663  13F9                     l3559:	
  6664                           ;incstack = 0
  6665                           ; Regs used in _ReadPhoto: [wreg+status,2+status,0]
  6666                           
  6667                           
  6668                           ;PhotoResistor.c: 17:     ADCON0bits.ADCS = 0b11;
  6669  13F9  30C0               	movlw	192
  6670  13FA  1283               	bcf	3,5	;RP0=0, select bank0
  6671  13FB  1303               	bcf	3,6	;RP1=0, select bank0
  6672  13FC  049F               	iorwf	31,f	;volatile
  6673                           
  6674                           ;PhotoResistor.c: 18:     ADCON0bits.CHS = 0b1000;
  6675  13FD  081F               	movf	31,w	;volatile
  6676  13FE  39C3               	andlw	-61
  6677  13FF  3820               	iorlw	32
  6678  1400  009F               	movwf	31	;volatile
  6679  1401                     l3561:
  6680                           
  6681                           ;PhotoResistor.c: 21:     ADCON1bits.VCFG1 = 0;
  6682  1401  1683               	bsf	3,5	;RP0=1, select bank1
  6683  1402  1303               	bcf	3,6	;RP1=0, select bank1
  6684  1403  129F               	bcf	31,5	;volatile
  6685  1404                     l3563:
  6686                           
  6687                           ;PhotoResistor.c: 22:     ADCON1bits.VCFG0 = 0;
  6688  1404  121F               	bcf	31,4	;volatile
  6689  1405                     l3565:
  6690                           
  6691                           ;PhotoResistor.c: 23:     ADCON1bits.ADFM = 1;
  6692  1405  179F               	bsf	31,7	;volatile
  6693  1406                     l3567:
  6694                           
  6695                           ;PhotoResistor.c: 26:     PIR1bits.ADIF = 0;
  6696  1406  1283               	bcf	3,5	;RP0=0, select bank0
  6697  1407  1303               	bcf	3,6	;RP1=0, select bank0
  6698  1408  130C               	bcf	12,6	;volatile
  6699  1409                     l3569:
  6700                           
  6701                           ;PhotoResistor.c: 29:     PIE1bits.ADIE = 1;
  6702  1409  1683               	bsf	3,5	;RP0=1, select bank1
  6703  140A  1303               	bcf	3,6	;RP1=0, select bank1
  6704  140B  170C               	bsf	12,6	;volatile
  6705  140C                     l3571:
  6706                           
  6707                           ;PhotoResistor.c: 31:     ADCON0bits.ADON = 1;
  6708  140C  1283               	bcf	3,5	;RP0=0, select bank0
  6709  140D  1303               	bcf	3,6	;RP1=0, select bank0
  6710  140E  141F               	bsf	31,0	;volatile
  6711  140F                     l3573:
  6712                           
  6713                           ;PhotoResistor.c: 34:     ADCON0bits.GO = 1;
  6714  140F  149F               	bsf	31,1	;volatile
  6715  1410                     l535:	
  6716                           ;PhotoResistor.c: 36:     while(ADCON0bits.GO == 1);
  6717                           
  6718  1410  189F               	btfsc	31,1	;volatile
  6719  1411  2C13               	goto	u4051
  6720  1412  2C14               	goto	u4050
  6721  1413                     u4051:
  6722  1413  2C10               	goto	l535
  6723  1414                     u4050:
  6724  1414                     l3575:
  6725                           
  6726                           ;PhotoResistor.c: 39:     photo_result = 0x0000;
  6727  1414  1683               	bsf	3,5	;RP0=1, select bank1
  6728  1415  1303               	bcf	3,6	;RP1=0, select bank1
  6729  1416  01A0               	clrf	_photo_result^(0+128)
  6730  1417  01A1               	clrf	(_photo_result+1)^(0+128)
  6731  1418                     l3577:
  6732                           
  6733                           ;PhotoResistor.c: 40:     photo_result = ADRESH;
  6734  1418  1283               	bcf	3,5	;RP0=0, select bank0
  6735  1419  1303               	bcf	3,6	;RP1=0, select bank0
  6736  141A  081E               	movf	30,w	;volatile
  6737  141B  00F0               	movwf	??_ReadPhoto
  6738  141C  01F1               	clrf	??_ReadPhoto+1
  6739  141D  0870               	movf	??_ReadPhoto,w
  6740  141E  1683               	bsf	3,5	;RP0=1, select bank1
  6741  141F  1303               	bcf	3,6	;RP1=0, select bank1
  6742  1420  00A0               	movwf	_photo_result^(0+128)
  6743  1421  0871               	movf	??_ReadPhoto+1,w
  6744  1422  00A1               	movwf	(_photo_result+1)^(0+128)
  6745  1423                     l3579:
  6746                           
  6747                           ;PhotoResistor.c: 41:     photo_result = photo_result << 8;
  6748  1423  0820               	movf	_photo_result^(0+128),w
  6749  1424  00F1               	movwf	??_ReadPhoto+1
  6750  1425  01F0               	clrf	??_ReadPhoto
  6751  1426  0870               	movf	??_ReadPhoto,w
  6752  1427  00A0               	movwf	_photo_result^(0+128)
  6753  1428  0871               	movf	??_ReadPhoto+1,w
  6754  1429  00A1               	movwf	(_photo_result+1)^(0+128)
  6755  142A                     l3581:
  6756                           
  6757                           ;PhotoResistor.c: 42:     photo_result = photo_result | ADRESL;
  6758  142A  0820               	movf	_photo_result^(0+128),w
  6759  142B  041E               	iorwf	30,w	;volatile
  6760  142C  00F0               	movwf	??_ReadPhoto
  6761  142D  0821               	movf	(_photo_result+1)^(0+128),w
  6762  142E  00F1               	movwf	??_ReadPhoto+1
  6763  142F  0870               	movf	??_ReadPhoto,w
  6764  1430  00A0               	movwf	_photo_result^(0+128)
  6765  1431  0871               	movf	??_ReadPhoto+1,w
  6766  1432  00A1               	movwf	(_photo_result+1)^(0+128)
  6767  1433                     l3583:
  6768                           
  6769                           ;PhotoResistor.c: 44:     PIR1bits.ADIF = 0;
  6770  1433  1283               	bcf	3,5	;RP0=0, select bank0
  6771  1434  1303               	bcf	3,6	;RP1=0, select bank0
  6772  1435  130C               	bcf	12,6	;volatile
  6773  1436                     l538:
  6774  1436  0008               	return
  6775  1437                     __end_of_ReadPhoto:
  6776                           
  6777                           	psect	text17
  6778  1334                     __ptext17:	
  6779 ;; *************** function _RTC_Clock_Write *****************
  6780 ;; Defined at:
  6781 ;;		line 39 in file "RTC.c"
  6782 ;; Parameters:    Size  Location     Type
  6783 ;;  sec             1    wreg     unsigned char 
  6784 ;;  min             1    2[COMMON] unsigned char 
  6785 ;;  hour            1    3[COMMON] unsigned char 
  6786 ;;  AM_PM           1    4[COMMON] unsigned char 
  6787 ;; Auto vars:     Size  Location     Type
  6788 ;;  sec             1    6[COMMON] unsigned char 
  6789 ;; Return value:  Size  Location     Type
  6790 ;;                  1    wreg      void 
  6791 ;; Registers used:
  6792 ;;		wreg, status,2, status,0, pclath, cstack
  6793 ;; Tracked objects:
  6794 ;;		On entry : 0/0
  6795 ;;		On exit  : 0/0
  6796 ;;		Unchanged: 0/0
  6797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6798 ;;      Params:         3       0       0       0       0
  6799 ;;      Locals:         1       0       0       0       0
  6800 ;;      Temps:          1       0       0       0       0
  6801 ;;      Totals:         5       0       0       0       0
  6802 ;;Total ram usage:        5 bytes
  6803 ;; Hardware stack levels used: 1
  6804 ;; Hardware stack levels required when called: 3
  6805 ;; This function calls:
  6806 ;;		_I2C_Start
  6807 ;;		_I2C_Stop
  6808 ;;		_I2C_Write
  6809 ;; This function is called by:
  6810 ;;		_main
  6811 ;; This function uses a non-reentrant model
  6812 ;;
  6813                           
  6814  1334                     _RTC_Clock_Write:	
  6815                           ;psect for function _RTC_Clock_Write
  6816                           
  6817                           
  6818                           ;incstack = 0
  6819                           ; Regs used in _RTC_Clock_Write: [wreg+status,2+status,0+pclath+cstack]
  6820                           ;RTC_Clock_Write@sec stored from wreg
  6821  1334  00F6               	movwf	RTC_Clock_Write@sec
  6822  1335                     l3489:
  6823                           
  6824                           ;RTC.c: 39: void RTC_Clock_Write(char sec, char min, char hour, char AM_PM);RTC.c: 40: {
      +                          ;RTC.c: 41:     hour = (hour | AM_PM);
  6825  1335  0873               	movf	RTC_Clock_Write@hour,w
  6826  1336  0474               	iorwf	RTC_Clock_Write@AM_PM,w
  6827  1337  00F5               	movwf	??_RTC_Clock_Write
  6828  1338  0875               	movf	??_RTC_Clock_Write,w
  6829  1339  00F3               	movwf	RTC_Clock_Write@hour
  6830  133A                     l3491:
  6831                           
  6832                           ;RTC.c: 42:  I2C_Start(0xD0);
  6833  133A  30D0               	movlw	208
  6834  133B  160A  118A  2258  160A  118A  	fcall	_I2C_Start
  6835  1340                     l3493:
  6836                           
  6837                           ;RTC.c: 43:  I2C_Write(0);
  6838  1340  3000               	movlw	0
  6839  1341  160A  118A  2203  160A  118A  	fcall	_I2C_Write
  6840  1346                     l3495:
  6841                           
  6842                           ;RTC.c: 44:  I2C_Write(sec);
  6843  1346  0876               	movf	RTC_Clock_Write@sec,w
  6844  1347  160A  118A  2203  160A  118A  	fcall	_I2C_Write
  6845  134C                     l3497:
  6846                           
  6847                           ;RTC.c: 45:  I2C_Write(min);
  6848  134C  0872               	movf	RTC_Clock_Write@min,w
  6849  134D  160A  118A  2203  160A  118A  	fcall	_I2C_Write
  6850  1352                     l3499:
  6851                           
  6852                           ;RTC.c: 46:  I2C_Write(hour);
  6853  1352  0873               	movf	RTC_Clock_Write@hour,w
  6854  1353  160A  118A  2203  160A  118A  	fcall	_I2C_Write
  6855  1358                     l3501:
  6856                           
  6857                           ;RTC.c: 47:  I2C_Stop();
  6858  1358  160A  118A  21B5  160A  118A  	fcall	_I2C_Stop
  6859  135D                     l360:
  6860  135D  0008               	return
  6861  135E                     __end_of_RTC_Clock_Write:
  6862                           
  6863                           	psect	text18
  6864  135E                     __ptext18:	
  6865 ;; *************** function _RTC_Calendar_Write *****************
  6866 ;; Defined at:
  6867 ;;		line 50 in file "RTC.c"
  6868 ;; Parameters:    Size  Location     Type
  6869 ;;  day             1    wreg     unsigned char 
  6870 ;;  date            1    2[COMMON] unsigned char 
  6871 ;;  month           1    3[COMMON] unsigned char 
  6872 ;;  year            1    4[COMMON] unsigned char 
  6873 ;; Auto vars:     Size  Location     Type
  6874 ;;  day             1    5[COMMON] unsigned char 
  6875 ;; Return value:  Size  Location     Type
  6876 ;;                  1    wreg      void 
  6877 ;; Registers used:
  6878 ;;		wreg, status,2, status,0, pclath, cstack
  6879 ;; Tracked objects:
  6880 ;;		On entry : 0/0
  6881 ;;		On exit  : 0/0
  6882 ;;		Unchanged: 0/0
  6883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6884 ;;      Params:         3       0       0       0       0
  6885 ;;      Locals:         1       0       0       0       0
  6886 ;;      Temps:          0       0       0       0       0
  6887 ;;      Totals:         4       0       0       0       0
  6888 ;;Total ram usage:        4 bytes
  6889 ;; Hardware stack levels used: 1
  6890 ;; Hardware stack levels required when called: 3
  6891 ;; This function calls:
  6892 ;;		_I2C_Start
  6893 ;;		_I2C_Stop
  6894 ;;		_I2C_Write
  6895 ;; This function is called by:
  6896 ;;		_main
  6897 ;; This function uses a non-reentrant model
  6898 ;;
  6899                           
  6900  135E                     _RTC_Calendar_Write:	
  6901                           ;psect for function _RTC_Calendar_Write
  6902                           
  6903                           
  6904                           ;incstack = 0
  6905                           ; Regs used in _RTC_Calendar_Write: [wreg+status,2+status,0+pclath+cstack]
  6906                           ;RTC_Calendar_Write@day stored from wreg
  6907  135E  00F5               	movwf	RTC_Calendar_Write@day
  6908  135F                     l3503:
  6909                           
  6910                           ;RTC.c: 50: void RTC_Calendar_Write(char day, char date, char month, char year);RTC.c: 5
      +                          1: {;RTC.c: 52:  I2C_Start(0xD0);
  6911  135F  30D0               	movlw	208
  6912  1360  160A  118A  2258  160A  118A  	fcall	_I2C_Start
  6913                           
  6914                           ;RTC.c: 53:  I2C_Write(3);
  6915  1365  3003               	movlw	3
  6916  1366  160A  118A  2203  160A  118A  	fcall	_I2C_Write
  6917                           
  6918                           ;RTC.c: 54:  I2C_Write(day);
  6919  136B  0875               	movf	RTC_Calendar_Write@day,w
  6920  136C  160A  118A  2203  160A  118A  	fcall	_I2C_Write
  6921                           
  6922                           ;RTC.c: 55:  I2C_Write(date);
  6923  1371  0872               	movf	RTC_Calendar_Write@date,w
  6924  1372  160A  118A  2203  160A  118A  	fcall	_I2C_Write
  6925                           
  6926                           ;RTC.c: 56:  I2C_Write(month);
  6927  1377  0873               	movf	RTC_Calendar_Write@month,w
  6928  1378  160A  118A  2203  160A  118A  	fcall	_I2C_Write
  6929                           
  6930                           ;RTC.c: 57:  I2C_Write(year);
  6931  137D  0874               	movf	RTC_Calendar_Write@year,w
  6932  137E  160A  118A  2203  160A  118A  	fcall	_I2C_Write
  6933                           
  6934                           ;RTC.c: 58:  I2C_Stop();
  6935  1383  160A  118A  21B5  160A  118A  	fcall	_I2C_Stop
  6936  1388                     l363:
  6937  1388  0008               	return
  6938  1389                     __end_of_RTC_Calendar_Write:
  6939                           
  6940                           	psect	text19
  6941  118F                     __ptext19:	
  6942 ;; *************** function _LED_Init *****************
  6943 ;; Defined at:
  6944 ;;		line 4 in file "LED.c"
  6945 ;; Parameters:    Size  Location     Type
  6946 ;;		None
  6947 ;; Auto vars:     Size  Location     Type
  6948 ;;		None
  6949 ;; Return value:  Size  Location     Type
  6950 ;;                  1    wreg      void 
  6951 ;; Registers used:
  6952 ;;		wreg
  6953 ;; Tracked objects:
  6954 ;;		On entry : 0/0
  6955 ;;		On exit  : 0/0
  6956 ;;		Unchanged: 0/0
  6957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6958 ;;      Params:         0       0       0       0       0
  6959 ;;      Locals:         0       0       0       0       0
  6960 ;;      Temps:          0       0       0       0       0
  6961 ;;      Totals:         0       0       0       0       0
  6962 ;;Total ram usage:        0 bytes
  6963 ;; Hardware stack levels used: 1
  6964 ;; This function calls:
  6965 ;;		Nothing
  6966 ;; This function is called by:
  6967 ;;		_main
  6968 ;; This function uses a non-reentrant model
  6969 ;;
  6970                           
  6971  118F                     _LED_Init:	
  6972                           ;psect for function _LED_Init
  6973                           
  6974  118F                     l3469:	
  6975                           ;incstack = 0
  6976                           ; Regs used in _LED_Init: [wreg]
  6977                           
  6978                           
  6979                           ;LED.c: 6:     TRISB |= (0 << 1);
  6980  118F  1683               	bsf	3,5	;RP0=1, select bank1
  6981  1190  1303               	bcf	3,6	;RP1=0, select bank1
  6982  1191  0806               	movf	6,w	;volatile
  6983  1192                     l437:
  6984  1192  0008               	return
  6985  1193                     __end_of_LED_Init:
  6986                           
  6987                           	psect	text20
  6988  16DB                     __ptext20:	
  6989 ;; *************** function _LCD_Init *****************
  6990 ;; Defined at:
  6991 ;;		line 27 in file "LCD.c"
  6992 ;; Parameters:    Size  Location     Type
  6993 ;;		None
  6994 ;; Auto vars:     Size  Location     Type
  6995 ;;		None
  6996 ;; Return value:  Size  Location     Type
  6997 ;;                  1    wreg      void 
  6998 ;; Registers used:
  6999 ;;		wreg, status,2, status,0, pclath, cstack
  7000 ;; Tracked objects:
  7001 ;;		On entry : 0/0
  7002 ;;		On exit  : 0/0
  7003 ;;		Unchanged: 0/0
  7004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7005 ;;      Params:         0       0       0       0       0
  7006 ;;      Locals:         0       0       0       0       0
  7007 ;;      Temps:          2       0       0       0       0
  7008 ;;      Totals:         2       0       0       0       0
  7009 ;;Total ram usage:        2 bytes
  7010 ;; Hardware stack levels used: 1
  7011 ;; Hardware stack levels required when called: 6
  7012 ;; This function calls:
  7013 ;;		_IO_Expander_Write
  7014 ;;		_LCD_CMD
  7015 ;; This function is called by:
  7016 ;;		_main
  7017 ;; This function uses a non-reentrant model
  7018 ;;
  7019                           
  7020  16DB                     _LCD_Init:	
  7021                           ;psect for function _LCD_Init
  7022                           
  7023  16DB                     l3389:	
  7024                           ;incstack = 0
  7025                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  7026                           
  7027                           
  7028                           ;LCD.c: 29:   IO_Expander_Write(0x00);
  7029  16DB  3000               	movlw	0
  7030  16DC  160A  118A  222B  160A  118A  	fcall	_IO_Expander_Write
  7031  16E1                     l3391:
  7032                           
  7033                           ;LCD.c: 30:   _delay((unsigned long)((30)*(8000000/4000.0)));
  7034  16E1  304E               	movlw	78
  7035  16E2  00F8               	movwf	??_LCD_Init+1
  7036  16E3  30EB               	movlw	235
  7037  16E4  00F7               	movwf	??_LCD_Init
  7038  16E5                     u4387:
  7039  16E5  0BF7               	decfsz	??_LCD_Init,f
  7040  16E6  2EE5               	goto	u4387
  7041  16E7  0BF8               	decfsz	??_LCD_Init+1,f
  7042  16E8  2EE5               	goto	u4387
  7043  16E9                     l3393:
  7044                           
  7045                           ;LCD.c: 31:   LCD_CMD(0x03);
  7046  16E9  3003               	movlw	3
  7047  16EA  160A  118A  228A  160A  118A  	fcall	_LCD_CMD
  7048                           
  7049                           ;LCD.c: 32:   _delay((unsigned long)((5)*(8000000/4000.0)));
  7050  16EF  300D               	movlw	13
  7051  16F0  00F8               	movwf	??_LCD_Init+1
  7052  16F1  30FB               	movlw	251
  7053  16F2  00F7               	movwf	??_LCD_Init
  7054  16F3                     u4397:
  7055  16F3  0BF7               	decfsz	??_LCD_Init,f
  7056  16F4  2EF3               	goto	u4397
  7057  16F5  0BF8               	decfsz	??_LCD_Init+1,f
  7058  16F6  2EF3               	goto	u4397
  7059  16F7  2EF8               	nop2
  7060  16F8                     l3395:
  7061                           
  7062                           ;LCD.c: 33:   LCD_CMD(0x03);
  7063  16F8  3003               	movlw	3
  7064  16F9  160A  118A  228A  160A  118A  	fcall	_LCD_CMD
  7065  16FE                     l3397:
  7066                           
  7067                           ;LCD.c: 34:   _delay((unsigned long)((5)*(8000000/4000.0)));
  7068  16FE  300D               	movlw	13
  7069  16FF  00F8               	movwf	??_LCD_Init+1
  7070  1700  30FB               	movlw	251
  7071  1701  00F7               	movwf	??_LCD_Init
  7072  1702                     u4407:
  7073  1702  0BF7               	decfsz	??_LCD_Init,f
  7074  1703  2F02               	goto	u4407
  7075  1704  0BF8               	decfsz	??_LCD_Init+1,f
  7076  1705  2F02               	goto	u4407
  7077  1706  2F07               	nop2
  7078                           
  7079                           ;LCD.c: 35:   LCD_CMD(0x03);
  7080  1707  3003               	movlw	3
  7081  1708  160A  118A  228A  160A  118A  	fcall	_LCD_CMD
  7082  170D                     l3399:
  7083                           
  7084                           ;LCD.c: 36:   _delay((unsigned long)((5)*(8000000/4000.0)));
  7085  170D  300D               	movlw	13
  7086  170E  00F8               	movwf	??_LCD_Init+1
  7087  170F  30FB               	movlw	251
  7088  1710  00F7               	movwf	??_LCD_Init
  7089  1711                     u4417:
  7090  1711  0BF7               	decfsz	??_LCD_Init,f
  7091  1712  2F11               	goto	u4417
  7092  1713  0BF8               	decfsz	??_LCD_Init+1,f
  7093  1714  2F11               	goto	u4417
  7094  1715  2F16               	nop2
  7095  1716                     l3401:
  7096                           
  7097                           ;LCD.c: 37:   LCD_CMD(0x02);
  7098  1716  3002               	movlw	2
  7099  1717  160A  118A  228A  160A  118A  	fcall	_LCD_CMD
  7100                           
  7101                           ;LCD.c: 38:   _delay((unsigned long)((5)*(8000000/4000.0)));
  7102  171C  300D               	movlw	13
  7103  171D  00F8               	movwf	??_LCD_Init+1
  7104  171E  30FB               	movlw	251
  7105  171F  00F7               	movwf	??_LCD_Init
  7106  1720                     u4427:
  7107  1720  0BF7               	decfsz	??_LCD_Init,f
  7108  1721  2F20               	goto	u4427
  7109  1722  0BF8               	decfsz	??_LCD_Init+1,f
  7110  1723  2F20               	goto	u4427
  7111  1724  2F25               	nop2
  7112  1725                     l3403:
  7113                           
  7114                           ;LCD.c: 39:   LCD_CMD(0x20 | (2 << 2));
  7115  1725  3028               	movlw	40
  7116  1726  160A  118A  228A  160A  118A  	fcall	_LCD_CMD
  7117  172B                     l3405:
  7118                           
  7119                           ;LCD.c: 40:   _delay((unsigned long)((50)*(8000000/4000.0)));
  7120  172B  3082               	movlw	130
  7121  172C  00F8               	movwf	??_LCD_Init+1
  7122  172D  30DD               	movlw	221
  7123  172E  00F7               	movwf	??_LCD_Init
  7124  172F                     u4437:
  7125  172F  0BF7               	decfsz	??_LCD_Init,f
  7126  1730  2F2F               	goto	u4437
  7127  1731  0BF8               	decfsz	??_LCD_Init+1,f
  7128  1732  2F2F               	goto	u4437
  7129  1733  2F34               	nop2
  7130                           
  7131                           ;LCD.c: 41:   LCD_CMD(0x0C);
  7132  1734  300C               	movlw	12
  7133  1735  160A  118A  228A  160A  118A  	fcall	_LCD_CMD
  7134  173A                     l3407:
  7135                           
  7136                           ;LCD.c: 42:   _delay((unsigned long)((50)*(8000000/4000.0)));
  7137  173A  3082               	movlw	130
  7138  173B  00F8               	movwf	??_LCD_Init+1
  7139  173C  30DD               	movlw	221
  7140  173D  00F7               	movwf	??_LCD_Init
  7141  173E                     u4447:
  7142  173E  0BF7               	decfsz	??_LCD_Init,f
  7143  173F  2F3E               	goto	u4447
  7144  1740  0BF8               	decfsz	??_LCD_Init+1,f
  7145  1741  2F3E               	goto	u4447
  7146  1742  2F43               	nop2
  7147  1743                     l3409:
  7148                           
  7149                           ;LCD.c: 43:   LCD_CMD(0x01);
  7150  1743  3001               	movlw	1
  7151  1744  160A  118A  228A  160A  118A  	fcall	_LCD_CMD
  7152                           
  7153                           ;LCD.c: 44:   _delay((unsigned long)((50)*(8000000/4000.0)));
  7154  1749  3082               	movlw	130
  7155  174A  00F8               	movwf	??_LCD_Init+1
  7156  174B  30DD               	movlw	221
  7157  174C  00F7               	movwf	??_LCD_Init
  7158  174D                     u4457:
  7159  174D  0BF7               	decfsz	??_LCD_Init,f
  7160  174E  2F4D               	goto	u4457
  7161  174F  0BF8               	decfsz	??_LCD_Init+1,f
  7162  1750  2F4D               	goto	u4457
  7163  1751  2F52               	nop2
  7164  1752                     l3411:
  7165                           
  7166                           ;LCD.c: 45:   LCD_CMD(0x04 | 0x02);
  7167  1752  3006               	movlw	6
  7168  1753  160A  118A  228A  160A  118A  	fcall	_LCD_CMD
  7169  1758                     l3413:
  7170                           
  7171                           ;LCD.c: 46:   _delay((unsigned long)((50)*(8000000/4000.0)));
  7172  1758  3082               	movlw	130
  7173  1759  00F8               	movwf	??_LCD_Init+1
  7174  175A  30DD               	movlw	221
  7175  175B  00F7               	movwf	??_LCD_Init
  7176  175C                     u4467:
  7177  175C  0BF7               	decfsz	??_LCD_Init,f
  7178  175D  2F5C               	goto	u4467
  7179  175E  0BF8               	decfsz	??_LCD_Init+1,f
  7180  175F  2F5C               	goto	u4467
  7181  1760  2F61               	nop2
  7182  1761                     l138:
  7183  1761  0008               	return
  7184  1762                     __end_of_LCD_Init:
  7185                           
  7186                           	psect	text21
  7187  11D0                     __ptext21:	
  7188 ;; *************** function _LCD_Clear *****************
  7189 ;; Defined at:
  7190 ;;		line 128 in file "LCD.c"
  7191 ;; Parameters:    Size  Location     Type
  7192 ;;		None
  7193 ;; Auto vars:     Size  Location     Type
  7194 ;;		None
  7195 ;; Return value:  Size  Location     Type
  7196 ;;                  1    wreg      void 
  7197 ;; Registers used:
  7198 ;;		wreg, status,2, status,0, pclath, cstack
  7199 ;; Tracked objects:
  7200 ;;		On entry : 0/0
  7201 ;;		On exit  : 0/0
  7202 ;;		Unchanged: 0/0
  7203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7204 ;;      Params:         0       0       0       0       0
  7205 ;;      Locals:         0       0       0       0       0
  7206 ;;      Temps:          1       0       0       0       0
  7207 ;;      Totals:         1       0       0       0       0
  7208 ;;Total ram usage:        1 bytes
  7209 ;; Hardware stack levels used: 1
  7210 ;; Hardware stack levels required when called: 6
  7211 ;; This function calls:
  7212 ;;		_LCD_CMD
  7213 ;; This function is called by:
  7214 ;;		_main
  7215 ;; This function uses a non-reentrant model
  7216 ;;
  7217                           
  7218  11D0                     _LCD_Clear:	
  7219                           ;psect for function _LCD_Clear
  7220                           
  7221  11D0                     l3415:	
  7222                           ;incstack = 0
  7223                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  7224                           
  7225                           
  7226                           ;LCD.c: 130:   LCD_CMD(0x01);
  7227  11D0  3001               	movlw	1
  7228  11D1  160A  118A  228A  160A  118A  	fcall	_LCD_CMD
  7229  11D6                     l3417:
  7230                           
  7231                           ;LCD.c: 131:   _delay((unsigned long)((40)*(8000000/4000000.0)));
  7232  11D6  301A               	movlw	26
  7233  11D7  00F7               	movwf	??_LCD_Clear
  7234  11D8                     u4477:
  7235  11D8  0BF7               	decfsz	??_LCD_Clear,f
  7236  11D9  29D8               	goto	u4477
  7237  11DA  0000               	nop
  7238  11DB                     l180:
  7239  11DB  0008               	return
  7240  11DC                     __end_of_LCD_Clear:
  7241                           
  7242                           	psect	text22
  7243  1217                     __ptext22:	
  7244 ;; *************** function _I2C_Init *****************
  7245 ;; Defined at:
  7246 ;;		line 27 in file "I2C_Master.c"
  7247 ;; Parameters:    Size  Location     Type
  7248 ;;		None
  7249 ;; Auto vars:     Size  Location     Type
  7250 ;;		None
  7251 ;; Return value:  Size  Location     Type
  7252 ;;                  1    wreg      void 
  7253 ;; Registers used:
  7254 ;;		wreg, status,2
  7255 ;; Tracked objects:
  7256 ;;		On entry : 0/0
  7257 ;;		On exit  : 0/0
  7258 ;;		Unchanged: 0/0
  7259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7260 ;;      Params:         0       0       0       0       0
  7261 ;;      Locals:         0       0       0       0       0
  7262 ;;      Temps:          0       0       0       0       0
  7263 ;;      Totals:         0       0       0       0       0
  7264 ;;Total ram usage:        0 bytes
  7265 ;; Hardware stack levels used: 1
  7266 ;; This function calls:
  7267 ;;		Nothing
  7268 ;; This function is called by:
  7269 ;;		_main
  7270 ;; This function uses a non-reentrant model
  7271 ;;
  7272                           
  7273  1217                     _I2C_Init:	
  7274                           ;psect for function _I2C_Init
  7275                           
  7276  1217                     l3377:	
  7277                           ;incstack = 0
  7278                           ; Regs used in _I2C_Init: [wreg+status,2]
  7279                           
  7280                           
  7281                           ;I2C_Master.c: 29:     TRISB0=1;
  7282  1217  1683               	bsf	3,5	;RP0=1, select bank1
  7283  1218  1303               	bcf	3,6	;RP1=0, select bank1
  7284  1219  1406               	bsf	6,0	;volatile
  7285                           
  7286                           ;I2C_Master.c: 30:  TRISB1=1;
  7287  121A  1486               	bsf	6,1	;volatile
  7288  121B                     l3379:
  7289                           
  7290                           ;I2C_Master.c: 31:  SSPSTAT=80;
  7291  121B  3050               	movlw	80
  7292  121C  0094               	movwf	20	;volatile
  7293                           
  7294                           ;I2C_Master.c: 32:     SSPCON=0x28;
  7295  121D  3028               	movlw	40
  7296  121E  1283               	bcf	3,5	;RP0=0, select bank0
  7297  121F  1303               	bcf	3,6	;RP1=0, select bank0
  7298  1220  0094               	movwf	20	;volatile
  7299  1221                     l3381:
  7300                           
  7301                           ;I2C_Master.c: 34:  SSPCON2=0;
  7302  1221  1683               	bsf	3,5	;RP0=1, select bank1
  7303  1222  1303               	bcf	3,6	;RP1=0, select bank1
  7304  1223  0191               	clrf	17	;volatile
  7305  1224                     l3383:
  7306                           
  7307                           ;I2C_Master.c: 35:     SSPADD=((8000000/(4*100000))-1);
  7308  1224  3013               	movlw	19
  7309  1225  0093               	movwf	19	;volatile
  7310  1226                     l3385:
  7311                           
  7312                           ;I2C_Master.c: 36:     SSPIE=1;
  7313  1226  158C               	bsf	12,3	;volatile
  7314  1227                     l3387:
  7315                           
  7316                           ;I2C_Master.c: 37:     SSPIF=0;
  7317  1227  1283               	bcf	3,5	;RP0=0, select bank0
  7318  1228  1303               	bcf	3,6	;RP1=0, select bank0
  7319  1229  118C               	bcf	12,3	;volatile
  7320  122A                     l55:
  7321  122A  0008               	return
  7322  122B                     __end_of_I2C_Init:
  7323                           
  7324                           	psect	text23
  7325  14FB                     __ptext23:	
  7326 ;; *************** function _DisplayTemp *****************
  7327 ;; Defined at:
  7328 ;;		line 59 in file "Temp.c"
  7329 ;; Parameters:    Size  Location     Type
  7330 ;;		None
  7331 ;; Auto vars:     Size  Location     Type
  7332 ;;  buffer2        16   40[BANK0 ] unsigned char [16]
  7333 ;;  buffer1        16   24[BANK0 ] unsigned char [16]
  7334 ;; Return value:  Size  Location     Type
  7335 ;;                  1    wreg      void 
  7336 ;; Registers used:
  7337 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7338 ;; Tracked objects:
  7339 ;;		On entry : 0/0
  7340 ;;		On exit  : 0/0
  7341 ;;		Unchanged: 0/0
  7342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7343 ;;      Params:         0       0       0       0       0
  7344 ;;      Locals:         0      32       0       0       0
  7345 ;;      Temps:          0       3       0       0       0
  7346 ;;      Totals:         0      35       0       0       0
  7347 ;;Total ram usage:       35 bytes
  7348 ;; Hardware stack levels used: 1
  7349 ;; Hardware stack levels required when called: 7
  7350 ;; This function calls:
  7351 ;;		_LCD_Set_Cursor
  7352 ;;		_LCD_Write_String
  7353 ;;		_sprintf
  7354 ;; This function is called by:
  7355 ;;		_main
  7356 ;; This function uses a non-reentrant model
  7357 ;;
  7358                           
  7359  14FB                     _DisplayTemp:	
  7360                           ;psect for function _DisplayTemp
  7361                           
  7362  14FB                     l3455:	
  7363                           ;incstack = 0
  7364                           ; Regs used in _DisplayTemp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7365                           
  7366                           
  7367                           ;Temp.c: 61:     char buffer1[16], buffer2[16];;Temp.c: 62:     sprintf(buffer1, "Temp:%
      +                          3d*C", temperature_c);
  7368  14FB  3038               	movlw	(low (DisplayTemp@buffer1| 0))& (0+255)
  7369  14FC  1283               	bcf	3,5	;RP0=0, select bank0
  7370  14FD  1303               	bcf	3,6	;RP1=0, select bank0
  7371  14FE  00A0               	movwf	sprintf@sp
  7372  14FF  3000               	movlw	0
  7373  1500  00A1               	movwf	sprintf@sp+1
  7374  1501  3030               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  7375  1502  00B5               	movwf	??_DisplayTemp
  7376  1503  0835               	movf	??_DisplayTemp,w
  7377  1504  00A2               	movwf	sprintf@f
  7378  1505  1683               	bsf	3,5	;RP0=1, select bank1
  7379  1506  1303               	bcf	3,6	;RP1=0, select bank1
  7380  1507  0835               	movf	(_temperature_c+1)^(0+128),w
  7381  1508  1283               	bcf	3,5	;RP0=0, select bank0
  7382  1509  1303               	bcf	3,6	;RP1=0, select bank0
  7383  150A  00A4               	movwf	?_sprintf+4
  7384  150B  1683               	bsf	3,5	;RP0=1, select bank1
  7385  150C  1303               	bcf	3,6	;RP1=0, select bank1
  7386  150D  0834               	movf	_temperature_c^(0+128),w
  7387  150E  1283               	bcf	3,5	;RP0=0, select bank0
  7388  150F  1303               	bcf	3,6	;RP1=0, select bank0
  7389  1510  00A3               	movwf	?_sprintf+3
  7390  1511  120A  118A  219C  160A  118A  	fcall	_sprintf
  7391  1516                     l3457:
  7392                           
  7393                           ;Temp.c: 63:     _delay((unsigned long)((1)*(8000000/4000.0)));
  7394  1516  3003               	movlw	3
  7395  1517  1283               	bcf	3,5	;RP0=0, select bank0
  7396  1518  1303               	bcf	3,6	;RP1=0, select bank0
  7397  1519  00B6               	movwf	??_DisplayTemp+1
  7398  151A  3097               	movlw	151
  7399  151B  00B5               	movwf	??_DisplayTemp
  7400  151C                     u4487:
  7401  151C  0BB5               	decfsz	??_DisplayTemp,f
  7402  151D  2D1C               	goto	u4487
  7403  151E  0BB6               	decfsz	??_DisplayTemp+1,f
  7404  151F  2D1C               	goto	u4487
  7405  1520                     l3459:
  7406                           
  7407                           ;Temp.c: 64:     LCD_Write_String(buffer1);
  7408  1520  3038               	movlw	(low (DisplayTemp@buffer1| 0))& (0+255)
  7409  1521  00F7               	movwf	LCD_Write_String@Str
  7410  1522  3000               	movlw	0
  7411  1523  00F8               	movwf	LCD_Write_String@Str+1
  7412  1524  160A  118A  2475  160A  118A  	fcall	_LCD_Write_String
  7413  1529                     l3461:
  7414                           
  7415                           ;Temp.c: 65:     LCD_Set_Cursor('2','0');
  7416  1529  3030               	movlw	48
  7417  152A  1283               	bcf	3,5	;RP0=0, select bank0
  7418  152B  1303               	bcf	3,6	;RP1=0, select bank0
  7419  152C  00B5               	movwf	??_DisplayTemp
  7420  152D  0835               	movf	??_DisplayTemp,w
  7421  152E  00F7               	movwf	LCD_Set_Cursor@COL
  7422  152F  3032               	movlw	50
  7423  1530  160A  118A  2389  160A  118A  	fcall	_LCD_Set_Cursor
  7424  1535                     l3463:
  7425                           
  7426                           ;Temp.c: 66:     sprintf(buffer2, "Temp:%3d*F", temperature_f);
  7427  1535  3048               	movlw	(low (DisplayTemp@buffer2| 0))& (0+255)
  7428  1536  1283               	bcf	3,5	;RP0=0, select bank0
  7429  1537  1303               	bcf	3,6	;RP1=0, select bank0
  7430  1538  00A0               	movwf	sprintf@sp
  7431  1539  3000               	movlw	0
  7432  153A  00A1               	movwf	sprintf@sp+1
  7433  153B  303B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  7434  153C  00B5               	movwf	??_DisplayTemp
  7435  153D  0835               	movf	??_DisplayTemp,w
  7436  153E  00A2               	movwf	sprintf@f
  7437  153F  1683               	bsf	3,5	;RP0=1, select bank1
  7438  1540  1303               	bcf	3,6	;RP1=0, select bank1
  7439  1541  0833               	movf	(_temperature_f+1)^(0+128),w
  7440  1542  1283               	bcf	3,5	;RP0=0, select bank0
  7441  1543  1303               	bcf	3,6	;RP1=0, select bank0
  7442  1544  00A4               	movwf	?_sprintf+4
  7443  1545  1683               	bsf	3,5	;RP0=1, select bank1
  7444  1546  1303               	bcf	3,6	;RP1=0, select bank1
  7445  1547  0832               	movf	_temperature_f^(0+128),w
  7446  1548  1283               	bcf	3,5	;RP0=0, select bank0
  7447  1549  1303               	bcf	3,6	;RP1=0, select bank0
  7448  154A  00A3               	movwf	?_sprintf+3
  7449  154B  120A  118A  219C  160A  118A  	fcall	_sprintf
  7450  1550                     l3465:
  7451                           
  7452                           ;Temp.c: 67:     LCD_Write_String(buffer2);
  7453  1550  3048               	movlw	(low (DisplayTemp@buffer2| 0))& (0+255)
  7454  1551  00F7               	movwf	LCD_Write_String@Str
  7455  1552  3000               	movlw	0
  7456  1553  00F8               	movwf	LCD_Write_String@Str+1
  7457  1554  160A  118A  2475  160A  118A  	fcall	_LCD_Write_String
  7458  1559                     l3467:
  7459                           
  7460                           ;Temp.c: 68:     _delay((unsigned long)((200)*(8000000/4000.0)));
  7461  1559  3003               	movlw	3
  7462  155A  1283               	bcf	3,5	;RP0=0, select bank0
  7463  155B  1303               	bcf	3,6	;RP1=0, select bank0
  7464  155C  00B7               	movwf	??_DisplayTemp+2
  7465  155D  3008               	movlw	8
  7466  155E  00B6               	movwf	??_DisplayTemp+1
  7467  155F  3076               	movlw	118
  7468  1560  00B5               	movwf	??_DisplayTemp
  7469  1561                     u4497:
  7470  1561  0BB5               	decfsz	??_DisplayTemp,f
  7471  1562  2D61               	goto	u4497
  7472  1563  0BB6               	decfsz	??_DisplayTemp+1,f
  7473  1564  2D61               	goto	u4497
  7474  1565  0BB7               	decfsz	??_DisplayTemp+2,f
  7475  1566  2D61               	goto	u4497
  7476  1567  0000               	nop
  7477  1568                     l219:
  7478  1568  0008               	return
  7479  1569                     __end_of_DisplayTemp:
  7480                           
  7481                           	psect	text24
  7482  019C                     __ptext24:	
  7483 ;; *************** function _sprintf *****************
  7484 ;; Defined at:
  7485 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c"
  7486 ;; Parameters:    Size  Location     Type
  7487 ;;  sp              2    0[BANK0 ] PTR unsigned char 
  7488 ;;		 -> year(10), month(10), date(10), hours(10), 
  7489 ;;		 -> mins(10), secs(10), main@buffer3(16), DisplayTemp@buffer2(16), 
  7490 ;;		 -> DisplayTemp@buffer1(16), 
  7491 ;;  f               1    2[BANK0 ] PTR const unsigned char 
  7492 ;;		 -> STR_15(4), STR_14(4), STR_13(8), STR_12(8), 
  7493 ;;		 -> STR_11(4), STR_10(4), STR_9(8), STR_8(4), 
  7494 ;;		 -> STR_7(4), STR_3(3), STR_2(11), STR_1(11), 
  7495 ;; Auto vars:     Size  Location     Type
  7496 ;;  idx             1    8[BANK0 ] unsigned char 
  7497 ;;  tmpval          4    0        struct .
  7498 ;;  width           2   18[BANK0 ] int 
  7499 ;;  val             2   16[BANK0 ] unsigned int 
  7500 ;;  len             2   13[BANK0 ] unsigned int 
  7501 ;;  cp              2   10[BANK0 ] PTR const unsigned char 
  7502 ;;		 -> STR_24(7), ?_sprintf(2), STR_4(12), result(2), 
  7503 ;;  c               1   20[BANK0 ] unsigned char 
  7504 ;;  flag            1   15[BANK0 ] unsigned char 
  7505 ;;  ap              1   12[BANK0 ] PTR void [1]
  7506 ;;		 -> ?_sprintf(2), 
  7507 ;;  prec            1    9[BANK0 ] char 
  7508 ;; Return value:  Size  Location     Type
  7509 ;;                  2    0[BANK0 ] int 
  7510 ;; Registers used:
  7511 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7512 ;; Tracked objects:
  7513 ;;		On entry : 0/0
  7514 ;;		On exit  : 0/0
  7515 ;;		Unchanged: 0/0
  7516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7517 ;;      Params:         0       5       0       0       0
  7518 ;;      Locals:         0      13       0       0       0
  7519 ;;      Temps:          0       3       0       0       0
  7520 ;;      Totals:         0      21       0       0       0
  7521 ;;Total ram usage:       21 bytes
  7522 ;; Hardware stack levels used: 1
  7523 ;; Hardware stack levels required when called: 1
  7524 ;; This function calls:
  7525 ;;		___lwdiv
  7526 ;;		___lwmod
  7527 ;;		___wmul
  7528 ;;		_isdigit
  7529 ;; This function is called by:
  7530 ;;		_DisplayTemp
  7531 ;;		_main
  7532 ;;		_printClock
  7533 ;; This function uses a non-reentrant model
  7534 ;;
  7535                           
  7536  019C                     _sprintf:	
  7537                           ;psect for function _sprintf
  7538                           
  7539  019C                     l2793:	
  7540                           ;incstack = 0
  7541                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7542                           
  7543                           
  7544                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 521:  
      +                          signed char prec;
  7545  019C  3023               	movlw	(low ((?_sprintf| 0+3)))& (0+255)
  7546  019D  1283               	bcf	3,5	;RP0=0, select bank0
  7547  019E  1303               	bcf	3,6	;RP1=0, select bank0
  7548  019F  00A5               	movwf	??_sprintf
  7549  01A0  0825               	movf	??_sprintf,w
  7550  01A1  00AC               	movwf	sprintf@ap
  7551                           
  7552                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  7553  01A2  2C3E               	goto	l2933
  7554  01A3                     l2795:
  7555                           
  7556                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  7557  01A3  3025               	movlw	37
  7558  01A4  0634               	xorwf	sprintf@c,w
  7559  01A5  1903               	btfsc	3,2
  7560  01A6  29A8               	goto	u2641
  7561  01A7  29A9               	goto	u2640
  7562  01A8                     u2641:
  7563  01A8  29B9               	goto	l2801
  7564  01A9                     u2640:
  7565  01A9                     l2797:
  7566                           
  7567                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  7568  01A9  0834               	movf	sprintf@c,w
  7569  01AA  00A5               	movwf	??_sprintf
  7570  01AB  0820               	movf	sprintf@sp,w
  7571  01AC  0084               	movwf	4
  7572  01AD  1783               	bsf	3,7
  7573  01AE  1C21               	btfss	sprintf@sp+1,0
  7574  01AF  1383               	bcf	3,7
  7575  01B0  0825               	movf	??_sprintf,w
  7576  01B1  0080               	movwf	0
  7577  01B2                     l2799:
  7578  01B2  3001               	movlw	1
  7579  01B3  07A0               	addwf	sprintf@sp,f
  7580  01B4  1803               	skipnc
  7581  01B5  0AA1               	incf	sprintf@sp+1,f
  7582  01B6  3000               	movlw	0
  7583  01B7  07A1               	addwf	sprintf@sp+1,f
  7584                           
  7585                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 559:    continue;
  7586  01B8  2C3E               	goto	l2933
  7587  01B9                     l2801:
  7588                           
  7589                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  7590  01B9  01B2               	clrf	sprintf@width
  7591  01BA  01B3               	clrf	sprintf@width+1
  7592                           
  7593                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  7594  01BB  01AF               	clrf	sprintf@flag
  7595  01BC                     l2803:
  7596                           
  7597                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  7598  01BC  0822               	movf	sprintf@f,w
  7599  01BD  0084               	movwf	4
  7600  01BE  160A  118A  200A  120A  118A  	fcall	stringdir
  7601  01C3  120A  118A  2003  120A  118A  	fcall	_isdigit
  7602  01C8  1C03               	btfss	3,0
  7603  01C9  29CB               	goto	u2651
  7604  01CA  29CC               	goto	u2650
  7605  01CB                     u2651:
  7606  01CB  2A9E               	goto	l2851
  7607  01CC                     u2650:
  7608  01CC                     l2805:
  7609                           
  7610                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  7611  01CC  1283               	bcf	3,5	;RP0=0, select bank0
  7612  01CD  1303               	bcf	3,6	;RP1=0, select bank0
  7613  01CE  01B2               	clrf	sprintf@width
  7614  01CF  01B3               	clrf	sprintf@width+1
  7615  01D0                     l2807:
  7616                           
  7617                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  7618  01D0  300A               	movlw	10
  7619  01D1  00F0               	movwf	___wmul@multiplier
  7620  01D2  3000               	movlw	0
  7621  01D3  00F1               	movwf	___wmul@multiplier+1
  7622  01D4  1283               	bcf	3,5	;RP0=0, select bank0
  7623  01D5  1303               	bcf	3,6	;RP1=0, select bank0
  7624  01D6  0833               	movf	sprintf@width+1,w
  7625  01D7  00F3               	movwf	___wmul@multiplicand+1
  7626  01D8  0832               	movf	sprintf@width,w
  7627  01D9  00F2               	movwf	___wmul@multiplicand
  7628  01DA  160A  118A  22C3  120A  118A  	fcall	___wmul
  7629  01DF  0871               	movf	?___wmul+1,w
  7630  01E0  1283               	bcf	3,5	;RP0=0, select bank0
  7631  01E1  1303               	bcf	3,6	;RP1=0, select bank0
  7632  01E2  00B3               	movwf	sprintf@width+1
  7633  01E3  0870               	movf	?___wmul,w
  7634  01E4  00B2               	movwf	sprintf@width
  7635  01E5                     l2809:
  7636                           
  7637                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  7638  01E5  0822               	movf	sprintf@f,w
  7639  01E6  0084               	movwf	4
  7640  01E7  160A  118A  200A  120A  118A  	fcall	stringdir
  7641  01EC  3ED0               	addlw	208
  7642  01ED  00A5               	movwf	??_sprintf
  7643  01EE  30FF               	movlw	255
  7644  01EF  1803               	skipnc
  7645  01F0  3000               	movlw	0
  7646  01F1  00A6               	movwf	??_sprintf+1
  7647  01F2  0825               	movf	??_sprintf,w
  7648  01F3  07B2               	addwf	sprintf@width,f
  7649  01F4  1803               	skipnc
  7650  01F5  0AB3               	incf	sprintf@width+1,f
  7651  01F6  0826               	movf	??_sprintf+1,w
  7652  01F7  07B3               	addwf	sprintf@width+1,f
  7653  01F8                     l2811:
  7654  01F8  3001               	movlw	1
  7655  01F9  00A5               	movwf	??_sprintf
  7656  01FA  0825               	movf	??_sprintf,w
  7657  01FB  07A2               	addwf	sprintf@f,f
  7658  01FC                     l2813:
  7659                           
  7660                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  7661  01FC  0822               	movf	sprintf@f,w
  7662  01FD  0084               	movwf	4
  7663  01FE  160A  118A  200A  120A  118A  	fcall	stringdir
  7664  0203  120A  118A  2003  120A  118A  	fcall	_isdigit
  7665  0208  1803               	btfsc	3,0
  7666  0209  2A0B               	goto	u2661
  7667  020A  2A0C               	goto	u2660
  7668  020B                     u2661:
  7669  020B  29D0               	goto	l2807
  7670  020C                     u2660:
  7671  020C  2A9E               	goto	l2851
  7672  020D                     l645:	
  7673                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 744:   case 'x':
  7674                           
  7675                           
  7676                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 747:    flag |= 0
      +                          x80;
  7677  020D  17AF               	bsf	sprintf@flag,7
  7678                           
  7679                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 749:    break;
  7680  020E  2AC3               	goto	l644
  7681  020F                     l2815:
  7682                           
  7683                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 760:     cp = (*(
      +                          const char * *)__va_arg((*(const char * **)ap), (const char *)0));
  7684  020F  082C               	movf	sprintf@ap,w
  7685  0210  0084               	movwf	4
  7686  0211  1383               	bcf	3,7	;select IRP bank0
  7687  0212  0800               	movf	0,w
  7688  0213  00AA               	movwf	sprintf@cp
  7689  0214  0A84               	incf	4,f
  7690  0215  0800               	movf	0,w
  7691  0216  0384               	decf	4,f
  7692  0217  00AB               	movwf	sprintf@cp+1
  7693  0218                     l2817:
  7694  0218  3002               	movlw	2
  7695  0219  00A5               	movwf	??_sprintf
  7696  021A  0825               	movf	??_sprintf,w
  7697  021B  07AC               	addwf	sprintf@ap,f
  7698  021C                     l2819:
  7699                           
  7700                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 766:    if(!cp)
  7701  021C  082A               	movf	sprintf@cp,w
  7702  021D  042B               	iorwf	sprintf@cp+1,w
  7703  021E  1D03               	btfss	3,2
  7704  021F  2A21               	goto	u2671
  7705  0220  2A22               	goto	u2670
  7706  0221                     u2671:
  7707  0221  2A26               	goto	l2823
  7708  0222                     u2670:
  7709  0222                     l2821:
  7710                           
  7711                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 767:     cp = "(n
      +                          ull)";
  7712  0222  3056               	movlw	(low ((STR_24-__stringbase)| (0+32768)))& (0+255)
  7713  0223  00AA               	movwf	sprintf@cp
  7714  0224  3080               	movlw	128
  7715  0225  00AB               	movwf	sprintf@cp+1
  7716  0226                     l2823:
  7717                           
  7718                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 771:    len = 0;
  7719  0226  01AD               	clrf	sprintf@len
  7720  0227  01AE               	clrf	sprintf@len+1
  7721                           
  7722                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 772:    while(cp[
      +                          len])
  7723  0228  2A2F               	goto	l2827
  7724  0229                     l2825:
  7725                           
  7726                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 773:     len++;
  7727  0229  3001               	movlw	1
  7728  022A  07AD               	addwf	sprintf@len,f
  7729  022B  1803               	skipnc
  7730  022C  0AAE               	incf	sprintf@len+1,f
  7731  022D  3000               	movlw	0
  7732  022E  07AE               	addwf	sprintf@len+1,f
  7733  022F                     l2827:
  7734                           
  7735                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 772:    while(cp[
      +                          len])
  7736  022F  082D               	movf	sprintf@len,w
  7737  0230  072A               	addwf	sprintf@cp,w
  7738  0231  0084               	movwf	4
  7739  0232  082B               	movf	sprintf@cp+1,w
  7740  0233  1803               	skipnc
  7741  0234  0A2B               	incf	sprintf@cp+1,w
  7742  0235  00FF               	movwf	btemp+1
  7743  0236  160A  118A  2000  120A  118A  	fcall	stringtab
  7744  023B  3A00               	xorlw	0
  7745  023C  1D03               	skipz
  7746  023D  2A3F               	goto	u2681
  7747  023E  2A40               	goto	u2680
  7748  023F                     u2681:
  7749  023F  2A29               	goto	l2825
  7750  0240                     u2680:
  7751  0240                     l2829:
  7752                           
  7753                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 783:    if(((unsi
      +                          gned)width) > len)
  7754  0240  0833               	movf	sprintf@width+1,w
  7755  0241  022E               	subwf	sprintf@len+1,w
  7756  0242  1D03               	skipz
  7757  0243  2A46               	goto	u2695
  7758  0244  0832               	movf	sprintf@width,w
  7759  0245  022D               	subwf	sprintf@len,w
  7760  0246                     u2695:
  7761  0246  1803               	skipnc
  7762  0247  2A49               	goto	u2691
  7763  0248  2A4A               	goto	u2690
  7764  0249                     u2691:
  7765  0249  2A51               	goto	l2833
  7766  024A                     u2690:
  7767  024A                     l2831:
  7768                           
  7769                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 784:     width -=
      +                           len;
  7770  024A  082D               	movf	sprintf@len,w
  7771  024B  02B2               	subwf	sprintf@width,f
  7772  024C  082E               	movf	sprintf@len+1,w
  7773  024D  1C03               	skipc
  7774  024E  03B3               	decf	sprintf@width+1,f
  7775  024F  02B3               	subwf	sprintf@width+1,f
  7776  0250  2A63               	goto	l2839
  7777  0251                     l2833:
  7778                           
  7779                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 786:     width = 
      +                          0;
  7780  0251  01B2               	clrf	sprintf@width
  7781  0252  01B3               	clrf	sprintf@width+1
  7782  0253  2A63               	goto	l2839
  7783  0254                     l2835:
  7784                           
  7785                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 791:      ((*sp++
      +                           = (' ')));
  7786  0254  3020               	movlw	32
  7787  0255  00A5               	movwf	??_sprintf
  7788  0256  0820               	movf	sprintf@sp,w
  7789  0257  0084               	movwf	4
  7790  0258  1783               	bsf	3,7
  7791  0259  1C21               	btfss	sprintf@sp+1,0
  7792  025A  1383               	bcf	3,7
  7793  025B  0825               	movf	??_sprintf,w
  7794  025C  0080               	movwf	0
  7795  025D                     l2837:
  7796  025D  3001               	movlw	1
  7797  025E  07A0               	addwf	sprintf@sp,f
  7798  025F  1803               	skipnc
  7799  0260  0AA1               	incf	sprintf@sp+1,f
  7800  0261  3000               	movlw	0
  7801  0262  07A1               	addwf	sprintf@sp+1,f
  7802  0263                     l2839:
  7803                           
  7804                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 790:     while(wi
      +                          dth--)
  7805  0263  30FF               	movlw	255
  7806  0264  07B2               	addwf	sprintf@width,f
  7807  0265  1803               	skipnc
  7808  0266  0AB3               	incf	sprintf@width+1,f
  7809  0267  30FF               	movlw	255
  7810  0268  07B3               	addwf	sprintf@width+1,f
  7811  0269  0A32               	incf	sprintf@width,w
  7812  026A  1D03               	skipz
  7813  026B  2A70               	goto	u2701
  7814  026C  0A33               	incf	sprintf@width+1,w
  7815  026D  1D03               	btfss	3,2
  7816  026E  2A70               	goto	u2701
  7817  026F  2A71               	goto	u2700
  7818  0270                     u2701:
  7819  0270  2A54               	goto	l2835
  7820  0271                     u2700:
  7821  0271  2A8F               	goto	l2847
  7822  0272                     l2841:
  7823                           
  7824                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 794:     ((*sp++ 
      +                          = (*cp++)));
  7825  0272  082B               	movf	sprintf@cp+1,w
  7826  0273  00FF               	movwf	btemp+1
  7827  0274  082A               	movf	sprintf@cp,w
  7828  0275  0084               	movwf	4
  7829  0276  160A  118A  2000  120A  118A  	fcall	stringtab
  7830  027B  00A5               	movwf	??_sprintf
  7831  027C  0820               	movf	sprintf@sp,w
  7832  027D  0084               	movwf	4
  7833  027E  1783               	bsf	3,7
  7834  027F  1C21               	btfss	sprintf@sp+1,0
  7835  0280  1383               	bcf	3,7
  7836  0281  0825               	movf	??_sprintf,w
  7837  0282  0080               	movwf	0
  7838  0283                     l2843:
  7839  0283  3001               	movlw	1
  7840  0284  07AA               	addwf	sprintf@cp,f
  7841  0285  1803               	skipnc
  7842  0286  0AAB               	incf	sprintf@cp+1,f
  7843  0287  3000               	movlw	0
  7844  0288  07AB               	addwf	sprintf@cp+1,f
  7845  0289                     l2845:
  7846  0289  3001               	movlw	1
  7847  028A  07A0               	addwf	sprintf@sp,f
  7848  028B  1803               	skipnc
  7849  028C  0AA1               	incf	sprintf@sp+1,f
  7850  028D  3000               	movlw	0
  7851  028E  07A1               	addwf	sprintf@sp+1,f
  7852  028F                     l2847:
  7853                           
  7854                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 793:    while(len
      +                          --)
  7855  028F  3001               	movlw	1
  7856  0290  02AD               	subwf	sprintf@len,f
  7857  0291  3000               	movlw	0
  7858  0292  1C03               	skipc
  7859  0293  03AE               	decf	sprintf@len+1,f
  7860  0294  02AE               	subwf	sprintf@len+1,f
  7861  0295  0A2D               	incf	sprintf@len,w
  7862  0296  1D03               	skipz
  7863  0297  2A9C               	goto	u2711
  7864  0298  0A2E               	incf	sprintf@len+1,w
  7865  0299  1D03               	btfss	3,2
  7866  029A  2A9C               	goto	u2711
  7867  029B  2A9D               	goto	u2710
  7868  029C                     u2711:
  7869  029C  2A72               	goto	l2841
  7870  029D                     u2710:
  7871  029D  2C3E               	goto	l2933
  7872  029E                     l2851:
  7873  029E  3001               	movlw	1
  7874  029F  1283               	bcf	3,5	;RP0=0, select bank0
  7875  02A0  1303               	bcf	3,6	;RP1=0, select bank0
  7876  02A1  07A2               	addwf	sprintf@f,f
  7877  02A2  30FF               	movlw	-1
  7878  02A3  0722               	addwf	sprintf@f,w
  7879  02A4  0084               	movwf	4
  7880  02A5  160A  118A  200A  120A  118A  	fcall	stringdir
  7881  02AA  00B4               	movwf	sprintf@c
  7882  02AB  00A5               	movwf	??_sprintf
  7883  02AC  01A6               	clrf	??_sprintf+1
  7884                           
  7885                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7886                           ; Switch size 1, requested type "simple"
  7887                           ; Number of cases is 1, Range of values is 0 to 0
  7888                           ; switch strategies available:
  7889                           ; Name         Instructions Cycles
  7890                           ; simple_byte            4     3 (average)
  7891                           ; direct_byte           11     8 (fixed)
  7892                           ; jumptable            260     6 (fixed)
  7893                           ;	Chosen strategy is simple_byte
  7894  02AD  0826               	movf	??_sprintf+1,w
  7895  02AE  3A00               	xorlw	0	; case 0
  7896  02AF  1903               	skipnz
  7897  02B0  2AB2               	goto	l3979
  7898  02B1  2C3E               	goto	l2933
  7899  02B2                     l3979:
  7900                           
  7901                           ; Switch size 1, requested type "simple"
  7902                           ; Number of cases is 5, Range of values is 0 to 120
  7903                           ; switch strategies available:
  7904                           ; Name         Instructions Cycles
  7905                           ; simple_byte           16     9 (average)
  7906                           ; jumptable            260     6 (fixed)
  7907                           ;	Chosen strategy is simple_byte
  7908  02B2  0825               	movf	??_sprintf,w
  7909  02B3  3A00               	xorlw	0	; case 0
  7910  02B4  1903               	skipnz
  7911  02B5  2C50               	goto	l2935
  7912  02B6  3A64               	xorlw	100	; case 100
  7913  02B7  1903               	skipnz
  7914  02B8  2AC3               	goto	l644
  7915  02B9  3A0D               	xorlw	13	; case 105
  7916  02BA  1903               	skipnz
  7917  02BB  2AC3               	goto	l644
  7918  02BC  3A1A               	xorlw	26	; case 115
  7919  02BD  1903               	skipnz
  7920  02BE  2A0F               	goto	l2815
  7921  02BF  3A0B               	xorlw	11	; case 120
  7922  02C0  1903               	skipnz
  7923  02C1  2A0D               	goto	l645
  7924  02C2  2C3E               	goto	l2933
  7925  02C3                     l644:
  7926                           
  7927                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1277:   if((flag 
      +                          & 0x80) == 0x00)
  7928  02C3  1BAF               	btfsc	sprintf@flag,7
  7929  02C4  2AC6               	goto	u2721
  7930  02C5  2AC7               	goto	u2720
  7931  02C6                     u2721:
  7932  02C6  2AE1               	goto	l2863
  7933  02C7                     u2720:
  7934  02C7                     l2853:
  7935                           
  7936                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  7937  02C7  082C               	movf	sprintf@ap,w
  7938  02C8  0084               	movwf	4
  7939  02C9  1383               	bcf	3,7	;select IRP bank0
  7940  02CA  0800               	movf	0,w
  7941  02CB  00B0               	movwf	sprintf@val
  7942  02CC  0A84               	incf	4,f
  7943  02CD  0800               	movf	0,w
  7944  02CE  00B1               	movwf	sprintf@val+1
  7945  02CF                     l2855:
  7946  02CF  3002               	movlw	2
  7947  02D0  00A5               	movwf	??_sprintf
  7948  02D1  0825               	movf	??_sprintf,w
  7949  02D2  07AC               	addwf	sprintf@ap,f
  7950  02D3                     l2857:
  7951                           
  7952                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  7953  02D3  1FB1               	btfss	sprintf@val+1,7
  7954  02D4  2AD6               	goto	u2731
  7955  02D5  2AD7               	goto	u2730
  7956  02D6                     u2731:
  7957  02D6  2B40               	goto	l2889
  7958  02D7                     u2730:
  7959  02D7                     l2859:
  7960                           
  7961                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  7962  02D7  3003               	movlw	3
  7963  02D8  00A5               	movwf	??_sprintf
  7964  02D9  0825               	movf	??_sprintf,w
  7965  02DA  04AF               	iorwf	sprintf@flag,f
  7966  02DB                     l2861:
  7967                           
  7968                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  7969  02DB  09B0               	comf	sprintf@val,f
  7970  02DC  09B1               	comf	sprintf@val+1,f
  7971  02DD  0AB0               	incf	sprintf@val,f
  7972  02DE  1903               	skipnz
  7973  02DF  0AB1               	incf	sprintf@val+1,f
  7974  02E0  2B40               	goto	l2889
  7975  02E1                     l2863:
  7976                           
  7977                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  7978  02E1  082C               	movf	sprintf@ap,w
  7979  02E2  0084               	movwf	4
  7980  02E3  1383               	bcf	3,7	;select IRP bank0
  7981  02E4  0800               	movf	0,w
  7982  02E5  00B0               	movwf	sprintf@val
  7983  02E6  0A84               	incf	4,f
  7984  02E7  0800               	movf	0,w
  7985  02E8  00B1               	movwf	sprintf@val+1
  7986  02E9                     l2865:
  7987  02E9  3002               	movlw	2
  7988  02EA  00A5               	movwf	??_sprintf
  7989  02EB  0825               	movf	??_sprintf,w
  7990  02EC  07AC               	addwf	sprintf@ap,f
  7991  02ED  2B40               	goto	l2889
  7992  02EE                     l664:	
  7993                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1325:   case 0x00
      +                          :
  7994                           
  7995                           
  7996                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  7997  02EE  01B4               	clrf	sprintf@c
  7998  02EF  0AB4               	incf	sprintf@c,f
  7999  02F0                     l2871:
  8000                           
  8001                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  8002  02F0  0834               	movf	sprintf@c,w
  8003  02F1  00A5               	movwf	??_sprintf
  8004  02F2  0725               	addwf	??_sprintf,w
  8005  02F3  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  8006  02F4  0084               	movwf	4
  8007  02F5  160A  118A  200A  120A  118A  	fcall	stringdir
  8008  02FA  00A6               	movwf	??_sprintf+1
  8009  02FB  160A  118A  200A  120A  118A  	fcall	stringdir
  8010  0300  00A7               	movwf	??_sprintf+2
  8011  0301  0827               	movf	??_sprintf+2,w
  8012  0302  0231               	subwf	sprintf@val+1,w
  8013  0303  1D03               	skipz
  8014  0304  2B07               	goto	u2745
  8015  0305  0826               	movf	??_sprintf+1,w
  8016  0306  0230               	subwf	sprintf@val,w
  8017  0307                     u2745:
  8018  0307  1803               	skipnc
  8019  0308  2B0A               	goto	u2741
  8020  0309  2B0B               	goto	u2740
  8021  030A                     u2741:
  8022  030A  2B0C               	goto	l2875
  8023  030B                     u2740:
  8024  030B  2B51               	goto	l2891
  8025  030C                     l2875:
  8026  030C  3001               	movlw	1
  8027  030D  00A5               	movwf	??_sprintf
  8028  030E  0825               	movf	??_sprintf,w
  8029  030F  07B4               	addwf	sprintf@c,f
  8030  0310  3005               	movlw	5
  8031  0311  0634               	xorwf	sprintf@c,w
  8032  0312  1D03               	btfss	3,2
  8033  0313  2B15               	goto	u2751
  8034  0314  2B16               	goto	u2750
  8035  0315                     u2751:
  8036  0315  2AF0               	goto	l2871
  8037  0316                     u2750:
  8038  0316  2B51               	goto	l2891
  8039  0317                     l669:	
  8040                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1340:   case 0x80
      +                          :
  8041                           
  8042                           
  8043                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1342:    for(c = 
      +                          1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  8044  0317  01B4               	clrf	sprintf@c
  8045  0318  0AB4               	incf	sprintf@c,f
  8046  0319                     l2881:
  8047                           
  8048                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1343:     if(val 
      +                          < hexpowers[c])
  8049  0319  0834               	movf	sprintf@c,w
  8050  031A  00A5               	movwf	??_sprintf
  8051  031B  0725               	addwf	??_sprintf,w
  8052  031C  3E0B               	addlw	low ((_hexpowers-__stringbase)| (0+32768))
  8053  031D  0084               	movwf	4
  8054  031E  160A  118A  200A  120A  118A  	fcall	stringdir
  8055  0323  00A6               	movwf	??_sprintf+1
  8056  0324  160A  118A  200A  120A  118A  	fcall	stringdir
  8057  0329  00A7               	movwf	??_sprintf+2
  8058  032A  0827               	movf	??_sprintf+2,w
  8059  032B  0231               	subwf	sprintf@val+1,w
  8060  032C  1D03               	skipz
  8061  032D  2B30               	goto	u2765
  8062  032E  0826               	movf	??_sprintf+1,w
  8063  032F  0230               	subwf	sprintf@val,w
  8064  0330                     u2765:
  8065  0330  1803               	skipnc
  8066  0331  2B33               	goto	u2761
  8067  0332  2B34               	goto	u2760
  8068  0333                     u2761:
  8069  0333  2B35               	goto	l2885
  8070  0334                     u2760:
  8071  0334  2B51               	goto	l2891
  8072  0335                     l2885:
  8073  0335  3001               	movlw	1
  8074  0336  00A5               	movwf	??_sprintf
  8075  0337  0825               	movf	??_sprintf,w
  8076  0338  07B4               	addwf	sprintf@c,f
  8077  0339  3004               	movlw	4
  8078  033A  0634               	xorwf	sprintf@c,w
  8079  033B  1D03               	btfss	3,2
  8080  033C  2B3E               	goto	u2771
  8081  033D  2B3F               	goto	u2770
  8082  033E                     u2771:
  8083  033E  2B19               	goto	l2881
  8084  033F                     u2770:
  8085  033F  2B51               	goto	l2891
  8086  0340                     l2889:
  8087  0340  082F               	movf	sprintf@flag,w
  8088  0341  3980               	andlw	128
  8089  0342  00A5               	movwf	??_sprintf
  8090  0343  01A6               	clrf	??_sprintf+1
  8091                           
  8092                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8093                           ; Switch size 1, requested type "simple"
  8094                           ; Number of cases is 1, Range of values is 0 to 0
  8095                           ; switch strategies available:
  8096                           ; Name         Instructions Cycles
  8097                           ; simple_byte            4     3 (average)
  8098                           ; direct_byte           11     8 (fixed)
  8099                           ; jumptable            260     6 (fixed)
  8100                           ;	Chosen strategy is simple_byte
  8101  0344  0826               	movf	??_sprintf+1,w
  8102  0345  3A00               	xorlw	0	; case 0
  8103  0346  1903               	skipnz
  8104  0347  2B49               	goto	l3981
  8105  0348  2B51               	goto	l2891
  8106  0349                     l3981:
  8107                           
  8108                           ; Switch size 1, requested type "simple"
  8109                           ; Number of cases is 2, Range of values is 0 to 128
  8110                           ; switch strategies available:
  8111                           ; Name         Instructions Cycles
  8112                           ; simple_byte            7     4 (average)
  8113                           ; jumptable            260     6 (fixed)
  8114                           ;	Chosen strategy is simple_byte
  8115  0349  0825               	movf	??_sprintf,w
  8116  034A  3A00               	xorlw	0	; case 0
  8117  034B  1903               	skipnz
  8118  034C  2AEE               	goto	l664
  8119  034D  3A80               	xorlw	128	; case 128
  8120  034E  1903               	skipnz
  8121  034F  2B17               	goto	l669
  8122  0350  2B51               	goto	l2891
  8123  0351                     l2891:
  8124                           
  8125                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
  8126  0351  0832               	movf	sprintf@width,w
  8127  0352  0433               	iorwf	sprintf@width+1,w
  8128  0353  1903               	btfsc	3,2
  8129  0354  2B56               	goto	u2781
  8130  0355  2B57               	goto	u2780
  8131  0356                     u2781:
  8132  0356  2B63               	goto	l673
  8133  0357                     u2780:
  8134  0357                     l2893:
  8135  0357  082F               	movf	sprintf@flag,w
  8136  0358  3903               	andlw	3
  8137  0359  1903               	btfsc	3,2
  8138  035A  2B5C               	goto	u2791
  8139  035B  2B5D               	goto	u2790
  8140  035C                     u2791:
  8141  035C  2B63               	goto	l673
  8142  035D                     u2790:
  8143  035D                     l2895:
  8144                           
  8145                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1372:    width--;
  8146  035D  30FF               	movlw	255
  8147  035E  07B2               	addwf	sprintf@width,f
  8148  035F  1803               	skipnc
  8149  0360  0AB3               	incf	sprintf@width+1,f
  8150  0361  30FF               	movlw	255
  8151  0362  07B3               	addwf	sprintf@width+1,f
  8152  0363                     l673:
  8153                           
  8154                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  8155  0363  0833               	movf	sprintf@width+1,w
  8156  0364  3A80               	xorlw	128
  8157  0365  3C80               	sublw	128
  8158  0366  1D03               	skipz
  8159  0367  2B6A               	goto	u2805
  8160  0368  0832               	movf	sprintf@width,w
  8161  0369  0234               	subwf	sprintf@c,w
  8162  036A                     u2805:
  8163  036A  1803               	skipnc
  8164  036B  2B6D               	goto	u2801
  8165  036C  2B6E               	goto	u2800
  8166  036D                     u2801:
  8167  036D  2B7A               	goto	l2899
  8168  036E                     u2800:
  8169  036E                     l2897:
  8170                           
  8171                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  8172  036E  1283               	bcf	3,5	;RP0=0, select bank0
  8173  036F  1303               	bcf	3,6	;RP1=0, select bank0
  8174  0370  0834               	movf	sprintf@c,w
  8175  0371  00A5               	movwf	??_sprintf
  8176  0372  01A6               	clrf	??_sprintf+1
  8177  0373  0825               	movf	??_sprintf,w
  8178  0374  02B2               	subwf	sprintf@width,f
  8179  0375  0826               	movf	??_sprintf+1,w
  8180  0376  1C03               	skipc
  8181  0377  03B3               	decf	sprintf@width+1,f
  8182  0378  02B3               	subwf	sprintf@width+1,f
  8183  0379  2B7E               	goto	l2901
  8184  037A                     l2899:
  8185                           
  8186                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  8187  037A  1283               	bcf	3,5	;RP0=0, select bank0
  8188  037B  1303               	bcf	3,6	;RP1=0, select bank0
  8189  037C  01B2               	clrf	sprintf@width
  8190  037D  01B3               	clrf	sprintf@width+1
  8191  037E                     l2901:
  8192                           
  8193                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1450:    if(width
  8194  037E  0832               	movf	sprintf@width,w
  8195  037F  0433               	iorwf	sprintf@width+1,w
  8196  0380  1903               	btfsc	3,2
  8197  0381  2B83               	goto	u2811
  8198  0382  2B84               	goto	u2810
  8199  0383                     u2811:
  8200  0383  2B9F               	goto	l2909
  8201  0384                     u2810:
  8202  0384                     l2903:
  8203                           
  8204                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  8205  0384  3020               	movlw	32
  8206  0385  00A5               	movwf	??_sprintf
  8207  0386  0820               	movf	sprintf@sp,w
  8208  0387  0084               	movwf	4
  8209  0388  1783               	bsf	3,7
  8210  0389  1C21               	btfss	sprintf@sp+1,0
  8211  038A  1383               	bcf	3,7
  8212  038B  0825               	movf	??_sprintf,w
  8213  038C  0080               	movwf	0
  8214  038D                     l2905:
  8215  038D  3001               	movlw	1
  8216  038E  07A0               	addwf	sprintf@sp,f
  8217  038F  1803               	skipnc
  8218  0390  0AA1               	incf	sprintf@sp+1,f
  8219  0391  3000               	movlw	0
  8220  0392  07A1               	addwf	sprintf@sp+1,f
  8221  0393                     l2907:
  8222  0393  30FF               	movlw	255
  8223  0394  07B2               	addwf	sprintf@width,f
  8224  0395  1803               	skipnc
  8225  0396  0AB3               	incf	sprintf@width+1,f
  8226  0397  30FF               	movlw	255
  8227  0398  07B3               	addwf	sprintf@width+1,f
  8228  0399  0832               	movf	sprintf@width,w
  8229  039A  0433               	iorwf	sprintf@width+1,w
  8230  039B  1D03               	btfss	3,2
  8231  039C  2B9E               	goto	u2821
  8232  039D  2B9F               	goto	u2820
  8233  039E                     u2821:
  8234  039E  2B84               	goto	l2903
  8235  039F                     u2820:
  8236  039F                     l2909:
  8237                           
  8238                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
  8239  039F  082F               	movf	sprintf@flag,w
  8240  03A0  3903               	andlw	3
  8241  03A1  1903               	btfsc	3,2
  8242  03A2  2BA4               	goto	u2831
  8243  03A3  2BA5               	goto	u2830
  8244  03A4                     u2831:
  8245  03A4  2BB4               	goto	l2915
  8246  03A5                     u2830:
  8247  03A5                     l2911:
  8248                           
  8249                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  8250  03A5  302D               	movlw	45
  8251  03A6  00A5               	movwf	??_sprintf
  8252  03A7  0820               	movf	sprintf@sp,w
  8253  03A8  0084               	movwf	4
  8254  03A9  1783               	bsf	3,7
  8255  03AA  1C21               	btfss	sprintf@sp+1,0
  8256  03AB  1383               	bcf	3,7
  8257  03AC  0825               	movf	??_sprintf,w
  8258  03AD  0080               	movwf	0
  8259  03AE                     l2913:
  8260  03AE  3001               	movlw	1
  8261  03AF  07A0               	addwf	sprintf@sp,f
  8262  03B0  1803               	skipnc
  8263  03B1  0AA1               	incf	sprintf@sp+1,f
  8264  03B2  3000               	movlw	0
  8265  03B3  07A1               	addwf	sprintf@sp+1,f
  8266  03B4                     l2915:
  8267                           
  8268                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  8269  03B4  0834               	movf	sprintf@c,w
  8270  03B5  00A5               	movwf	??_sprintf
  8271  03B6  0825               	movf	??_sprintf,w
  8272  03B7  00A9               	movwf	sprintf@prec
  8273                           
  8274                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  8275  03B8  2C35               	goto	l2931
  8276  03B9                     l2917:
  8277                           
  8278                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1515:     c = (va
      +                          l / dpowers[(unsigned char)prec]) % 10 + '0';
  8279  03B9  300A               	movlw	10
  8280  03BA  00F8               	movwf	___lwmod@divisor
  8281  03BB  3000               	movlw	0
  8282  03BC  00F9               	movwf	___lwmod@divisor+1
  8283  03BD  0829               	movf	sprintf@prec,w
  8284  03BE  00A5               	movwf	??_sprintf
  8285  03BF  0725               	addwf	??_sprintf,w
  8286  03C0  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  8287  03C1  0084               	movwf	4
  8288  03C2  160A  118A  200A  120A  118A  	fcall	stringdir
  8289  03C7  00F0               	movwf	___lwdiv@divisor
  8290  03C8  160A  118A  200A  120A  118A  	fcall	stringdir
  8291  03CD  00F1               	movwf	___lwdiv@divisor+1
  8292  03CE  0831               	movf	sprintf@val+1,w
  8293  03CF  00F3               	movwf	___lwdiv@dividend+1
  8294  03D0  0830               	movf	sprintf@val,w
  8295  03D1  00F2               	movwf	___lwdiv@dividend
  8296  03D2  160A  118A  24B7  120A  118A  	fcall	___lwdiv
  8297  03D7  0871               	movf	?___lwdiv+1,w
  8298  03D8  00FB               	movwf	___lwmod@dividend+1
  8299  03D9  0870               	movf	?___lwdiv,w
  8300  03DA  00FA               	movwf	___lwmod@dividend
  8301  03DB  160A  118A  23BF  120A  118A  	fcall	___lwmod
  8302  03E0  0878               	movf	?___lwmod,w
  8303  03E1  3E30               	addlw	48
  8304  03E2  1283               	bcf	3,5	;RP0=0, select bank0
  8305  03E3  1303               	bcf	3,6	;RP1=0, select bank0
  8306  03E4  00A6               	movwf	??_sprintf+1
  8307  03E5  0826               	movf	??_sprintf+1,w
  8308  03E6  00B4               	movwf	sprintf@c
  8309                           
  8310                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1517:     break;
  8311  03E7  2C26               	goto	l2927
  8312  03E8                     l2919:
  8313                           
  8314                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1525:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1526:     unsigned char 
      +                          idx = (val / hexpowers[(unsigned char)prec]) & 0xF;
  8315  03E8  0829               	movf	sprintf@prec,w
  8316  03E9  00A5               	movwf	??_sprintf
  8317  03EA  0725               	addwf	??_sprintf,w
  8318  03EB  3E0B               	addlw	low ((_hexpowers-__stringbase)| (0+32768))
  8319  03EC  0084               	movwf	4
  8320  03ED  160A  118A  200A  120A  118A  	fcall	stringdir
  8321  03F2  00F0               	movwf	___lwdiv@divisor
  8322  03F3  160A  118A  200A  120A  118A  	fcall	stringdir
  8323  03F8  00F1               	movwf	___lwdiv@divisor+1
  8324  03F9  0831               	movf	sprintf@val+1,w
  8325  03FA  00F3               	movwf	___lwdiv@dividend+1
  8326  03FB  0830               	movf	sprintf@val,w
  8327  03FC  00F2               	movwf	___lwdiv@dividend
  8328  03FD  160A  118A  24B7  120A  118A  	fcall	___lwdiv
  8329  0402  0870               	movf	?___lwdiv,w
  8330  0403  390F               	andlw	15
  8331  0404  1283               	bcf	3,5	;RP0=0, select bank0
  8332  0405  1303               	bcf	3,6	;RP1=0, select bank0
  8333  0406  00A6               	movwf	??_sprintf+1
  8334  0407  0826               	movf	??_sprintf+1,w
  8335  0408  00A8               	movwf	sprintf@idx
  8336  0409                     l2921:
  8337                           
  8338                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1532:     c = "01
      +                          23456789abcdef"[idx];
  8339  0409  0828               	movf	sprintf@idx,w
  8340  040A  3E13               	addlw	low ((STR_25-__stringbase)| (0+32768))
  8341  040B  0084               	movwf	4
  8342  040C  160A  118A  200A  120A  118A  	fcall	stringdir
  8343  0411  00A5               	movwf	??_sprintf
  8344  0412  0825               	movf	??_sprintf,w
  8345  0413  00B4               	movwf	sprintf@c
  8346                           
  8347                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1534:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1536:     break;
  8348  0414  2C26               	goto	l2927
  8349  0415                     l2925:
  8350  0415  082F               	movf	sprintf@flag,w
  8351  0416  3980               	andlw	128
  8352  0417  00A5               	movwf	??_sprintf
  8353  0418  01A6               	clrf	??_sprintf+1
  8354                           
  8355                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8356                           ; Switch size 1, requested type "simple"
  8357                           ; Number of cases is 1, Range of values is 0 to 0
  8358                           ; switch strategies available:
  8359                           ; Name         Instructions Cycles
  8360                           ; simple_byte            4     3 (average)
  8361                           ; direct_byte           11     8 (fixed)
  8362                           ; jumptable            260     6 (fixed)
  8363                           ;	Chosen strategy is simple_byte
  8364  0419  0826               	movf	??_sprintf+1,w
  8365  041A  3A00               	xorlw	0	; case 0
  8366  041B  1903               	skipnz
  8367  041C  2C1E               	goto	l3983
  8368  041D  2C26               	goto	l2927
  8369  041E                     l3983:
  8370                           
  8371                           ; Switch size 1, requested type "simple"
  8372                           ; Number of cases is 2, Range of values is 0 to 128
  8373                           ; switch strategies available:
  8374                           ; Name         Instructions Cycles
  8375                           ; simple_byte            7     4 (average)
  8376                           ; jumptable            260     6 (fixed)
  8377                           ;	Chosen strategy is simple_byte
  8378  041E  0825               	movf	??_sprintf,w
  8379  041F  3A00               	xorlw	0	; case 0
  8380  0420  1903               	skipnz
  8381  0421  2BB9               	goto	l2917
  8382  0422  3A80               	xorlw	128	; case 128
  8383  0423  1903               	skipnz
  8384  0424  2BE8               	goto	l2919
  8385  0425  2C26               	goto	l2927
  8386  0426                     l2927:
  8387                           
  8388                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ 
      +                          = (c)));
  8389  0426  0834               	movf	sprintf@c,w
  8390  0427  00A5               	movwf	??_sprintf
  8391  0428  0820               	movf	sprintf@sp,w
  8392  0429  0084               	movwf	4
  8393  042A  1783               	bsf	3,7
  8394  042B  1C21               	btfss	sprintf@sp+1,0
  8395  042C  1383               	bcf	3,7
  8396  042D  0825               	movf	??_sprintf,w
  8397  042E  0080               	movwf	0
  8398  042F                     l2929:
  8399  042F  3001               	movlw	1
  8400  0430  07A0               	addwf	sprintf@sp,f
  8401  0431  1803               	skipnc
  8402  0432  0AA1               	incf	sprintf@sp+1,f
  8403  0433  3000               	movlw	0
  8404  0434  07A1               	addwf	sprintf@sp+1,f
  8405  0435                     l2931:
  8406                           
  8407                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  8408  0435  30FF               	movlw	255
  8409  0436  00A5               	movwf	??_sprintf
  8410  0437  0825               	movf	??_sprintf,w
  8411  0438  07A9               	addwf	sprintf@prec,f
  8412  0439  0A29               	incf	sprintf@prec,w
  8413  043A  1D03               	btfss	3,2
  8414  043B  2C3D               	goto	u2841
  8415  043C  2C3E               	goto	u2840
  8416  043D                     u2841:
  8417  043D  2C15               	goto	l2925
  8418  043E                     u2840:
  8419  043E                     l2933:
  8420                           
  8421                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  8422  043E  3001               	movlw	1
  8423  043F  07A2               	addwf	sprintf@f,f
  8424  0440  30FF               	movlw	-1
  8425  0441  0722               	addwf	sprintf@f,w
  8426  0442  0084               	movwf	4
  8427  0443  160A  118A  200A  120A  118A  	fcall	stringdir
  8428  0448  00A5               	movwf	??_sprintf
  8429  0449  0825               	movf	??_sprintf,w
  8430  044A  00B4               	movwf	sprintf@c
  8431  044B  0834               	movf	sprintf@c,w
  8432  044C  1D03               	btfss	3,2
  8433  044D  2C4F               	goto	u2851
  8434  044E  2C50               	goto	u2850
  8435  044F                     u2851:
  8436  044F  29A3               	goto	l2795
  8437  0450                     u2850:
  8438  0450                     l2935:
  8439                           
  8440                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  8441  0450  0820               	movf	sprintf@sp,w
  8442  0451  0084               	movwf	4
  8443  0452  1783               	bsf	3,7
  8444  0453  1C21               	btfss	sprintf@sp+1,0
  8445  0454  1383               	bcf	3,7
  8446  0455  0180               	clrf	0
  8447  0456                     l688:
  8448  0456  0008               	return
  8449  0457                     __end_of_sprintf:
  8450                           
  8451                           	psect	text25
  8452  0003                     __ptext25:	
  8453 ;; *************** function _isdigit *****************
  8454 ;; Defined at:
  8455 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\isdigit.c"
  8456 ;; Parameters:    Size  Location     Type
  8457 ;;  c               1    wreg     unsigned char 
  8458 ;; Auto vars:     Size  Location     Type
  8459 ;;  c               1    1[COMMON] unsigned char 
  8460 ;; Return value:  Size  Location     Type
  8461 ;;		None               void
  8462 ;; Registers used:
  8463 ;;		wreg, status,2, status,0
  8464 ;; Tracked objects:
  8465 ;;		On entry : 0/0
  8466 ;;		On exit  : 0/0
  8467 ;;		Unchanged: 0/0
  8468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8469 ;;      Params:         0       0       0       0       0
  8470 ;;      Locals:         2       0       0       0       0
  8471 ;;      Temps:          0       0       0       0       0
  8472 ;;      Totals:         2       0       0       0       0
  8473 ;;Total ram usage:        2 bytes
  8474 ;; Hardware stack levels used: 1
  8475 ;; This function calls:
  8476 ;;		Nothing
  8477 ;; This function is called by:
  8478 ;;		_sprintf
  8479 ;; This function uses a non-reentrant model
  8480 ;;
  8481                           
  8482  0003                     _isdigit:	
  8483                           ;psect for function _isdigit
  8484                           
  8485                           
  8486                           ;incstack = 0
  8487                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  8488                           ;isdigit@c stored from wreg
  8489  0003  00F1               	movwf	isdigit@c
  8490  0004                     l2681:
  8491  0004  01F0               	clrf	_isdigit$1347
  8492  0005                     l2683:
  8493  0005  303A               	movlw	58
  8494  0006  0271               	subwf	isdigit@c,w
  8495  0007  1803               	skipnc
  8496  0008  280A               	goto	u2391
  8497  0009  280B               	goto	u2390
  8498  000A                     u2391:
  8499  000A  2813               	goto	l2689
  8500  000B                     u2390:
  8501  000B                     l2685:
  8502  000B  3030               	movlw	48
  8503  000C  0271               	subwf	isdigit@c,w
  8504  000D  1C03               	skipc
  8505  000E  2810               	goto	u2401
  8506  000F  2811               	goto	u2400
  8507  0010                     u2401:
  8508  0010  2813               	goto	l2689
  8509  0011                     u2400:
  8510  0011                     l2687:
  8511  0011  01F0               	clrf	_isdigit$1347
  8512  0012  0AF0               	incf	_isdigit$1347,f
  8513  0013                     l2689:
  8514  0013  0C70               	rrf	_isdigit$1347,w
  8515  0014                     l1145:
  8516  0014  0008               	return
  8517  0015                     __end_of_isdigit:
  8518                           
  8519                           	psect	text26
  8520  12C3                     __ptext26:	
  8521 ;; *************** function ___wmul *****************
  8522 ;; Defined at:
  8523 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\Umul16.c"
  8524 ;; Parameters:    Size  Location     Type
  8525 ;;  multiplier      2    0[COMMON] unsigned int 
  8526 ;;  multiplicand    2    2[COMMON] unsigned int 
  8527 ;; Auto vars:     Size  Location     Type
  8528 ;;  product         2    4[COMMON] unsigned int 
  8529 ;; Return value:  Size  Location     Type
  8530 ;;                  2    0[COMMON] unsigned int 
  8531 ;; Registers used:
  8532 ;;		wreg, status,2, status,0
  8533 ;; Tracked objects:
  8534 ;;		On entry : 0/0
  8535 ;;		On exit  : 0/0
  8536 ;;		Unchanged: 0/0
  8537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8538 ;;      Params:         4       0       0       0       0
  8539 ;;      Locals:         2       0       0       0       0
  8540 ;;      Temps:          0       0       0       0       0
  8541 ;;      Totals:         6       0       0       0       0
  8542 ;;Total ram usage:        6 bytes
  8543 ;; Hardware stack levels used: 1
  8544 ;; This function calls:
  8545 ;;		Nothing
  8546 ;; This function is called by:
  8547 ;;		_sprintf
  8548 ;; This function uses a non-reentrant model
  8549 ;;
  8550                           
  8551  12C3                     ___wmul:	
  8552                           ;psect for function ___wmul
  8553                           
  8554  12C3                     l2693:	
  8555                           ;incstack = 0
  8556                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  8557                           
  8558  12C3  01F4               	clrf	___wmul@product
  8559  12C4  01F5               	clrf	___wmul@product+1
  8560  12C5                     l2695:
  8561  12C5  1C70               	btfss	___wmul@multiplier,0
  8562  12C6  2AC8               	goto	u2411
  8563  12C7  2AC9               	goto	u2410
  8564  12C8                     u2411:
  8565  12C8  2ACF               	goto	l692
  8566  12C9                     u2410:
  8567  12C9                     l2697:
  8568  12C9  0872               	movf	___wmul@multiplicand,w
  8569  12CA  07F4               	addwf	___wmul@product,f
  8570  12CB  1803               	skipnc
  8571  12CC  0AF5               	incf	___wmul@product+1,f
  8572  12CD  0873               	movf	___wmul@multiplicand+1,w
  8573  12CE  07F5               	addwf	___wmul@product+1,f
  8574  12CF                     l692:
  8575  12CF  3001               	movlw	1
  8576  12D0                     u2425:
  8577  12D0  1003               	clrc
  8578  12D1  0DF2               	rlf	___wmul@multiplicand,f
  8579  12D2  0DF3               	rlf	___wmul@multiplicand+1,f
  8580  12D3  3EFF               	addlw	-1
  8581  12D4  1D03               	skipz
  8582  12D5  2AD0               	goto	u2425
  8583  12D6                     l2699:
  8584  12D6  3001               	movlw	1
  8585  12D7                     u2435:
  8586  12D7  1003               	clrc
  8587  12D8  0CF1               	rrf	___wmul@multiplier+1,f
  8588  12D9  0CF0               	rrf	___wmul@multiplier,f
  8589  12DA  3EFF               	addlw	-1
  8590  12DB  1D03               	skipz
  8591  12DC  2AD7               	goto	u2435
  8592  12DD                     l2701:
  8593  12DD  0870               	movf	___wmul@multiplier,w
  8594  12DE  0471               	iorwf	___wmul@multiplier+1,w
  8595  12DF  1D03               	btfss	3,2
  8596  12E0  2AE2               	goto	u2441
  8597  12E1  2AE3               	goto	u2440
  8598  12E2                     u2441:
  8599  12E2  2AC5               	goto	l2695
  8600  12E3                     u2440:
  8601  12E3                     l2703:
  8602  12E3  0875               	movf	___wmul@product+1,w
  8603  12E4  00F1               	movwf	?___wmul+1
  8604  12E5  0874               	movf	___wmul@product,w
  8605  12E6  00F0               	movwf	?___wmul
  8606  12E7                     l694:
  8607  12E7  0008               	return
  8608  12E8                     __end_of___wmul:
  8609                           
  8610                           	psect	text27
  8611  13BF                     __ptext27:	
  8612 ;; *************** function ___lwmod *****************
  8613 ;; Defined at:
  8614 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\lwmod.c"
  8615 ;; Parameters:    Size  Location     Type
  8616 ;;  divisor         2    8[COMMON] unsigned int 
  8617 ;;  dividend        2   10[COMMON] unsigned int 
  8618 ;; Auto vars:     Size  Location     Type
  8619 ;;  counter         1   13[COMMON] unsigned char 
  8620 ;; Return value:  Size  Location     Type
  8621 ;;                  2    8[COMMON] unsigned int 
  8622 ;; Registers used:
  8623 ;;		wreg, status,2, status,0
  8624 ;; Tracked objects:
  8625 ;;		On entry : 0/0
  8626 ;;		On exit  : 0/0
  8627 ;;		Unchanged: 0/0
  8628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8629 ;;      Params:         4       0       0       0       0
  8630 ;;      Locals:         1       0       0       0       0
  8631 ;;      Temps:          1       0       0       0       0
  8632 ;;      Totals:         6       0       0       0       0
  8633 ;;Total ram usage:        6 bytes
  8634 ;; Hardware stack levels used: 1
  8635 ;; This function calls:
  8636 ;;		Nothing
  8637 ;; This function is called by:
  8638 ;;		_sprintf
  8639 ;; This function uses a non-reentrant model
  8640 ;;
  8641                           
  8642  13BF                     ___lwmod:	
  8643                           ;psect for function ___lwmod
  8644                           
  8645  13BF                     l2733:	
  8646                           ;incstack = 0
  8647                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  8648                           
  8649  13BF  0878               	movf	___lwmod@divisor,w
  8650  13C0  0479               	iorwf	___lwmod@divisor+1,w
  8651  13C1  1903               	btfsc	3,2
  8652  13C2  2BC4               	goto	u2521
  8653  13C3  2BC5               	goto	u2520
  8654  13C4                     u2521:
  8655  13C4  2BF4               	goto	l2751
  8656  13C5                     u2520:
  8657  13C5                     l2735:
  8658  13C5  01FD               	clrf	___lwmod@counter
  8659  13C6  0AFD               	incf	___lwmod@counter,f
  8660  13C7  2BD3               	goto	l2741
  8661  13C8                     l2737:
  8662  13C8  3001               	movlw	1
  8663  13C9                     u2535:
  8664  13C9  1003               	clrc
  8665  13CA  0DF8               	rlf	___lwmod@divisor,f
  8666  13CB  0DF9               	rlf	___lwmod@divisor+1,f
  8667  13CC  3EFF               	addlw	-1
  8668  13CD  1D03               	skipz
  8669  13CE  2BC9               	goto	u2535
  8670  13CF                     l2739:
  8671  13CF  3001               	movlw	1
  8672  13D0  00FC               	movwf	??___lwmod
  8673  13D1  087C               	movf	??___lwmod,w
  8674  13D2  07FD               	addwf	___lwmod@counter,f
  8675  13D3                     l2741:
  8676  13D3  1FF9               	btfss	___lwmod@divisor+1,7
  8677  13D4  2BD6               	goto	u2541
  8678  13D5  2BD7               	goto	u2540
  8679  13D6                     u2541:
  8680  13D6  2BC8               	goto	l2737
  8681  13D7                     u2540:
  8682  13D7                     l2743:
  8683  13D7  0879               	movf	___lwmod@divisor+1,w
  8684  13D8  027B               	subwf	___lwmod@dividend+1,w
  8685  13D9  1D03               	skipz
  8686  13DA  2BDD               	goto	u2555
  8687  13DB  0878               	movf	___lwmod@divisor,w
  8688  13DC  027A               	subwf	___lwmod@dividend,w
  8689  13DD                     u2555:
  8690  13DD  1C03               	skipc
  8691  13DE  2BE0               	goto	u2551
  8692  13DF  2BE1               	goto	u2550
  8693  13E0                     u2551:
  8694  13E0  2BE7               	goto	l2747
  8695  13E1                     u2550:
  8696  13E1                     l2745:
  8697  13E1  0878               	movf	___lwmod@divisor,w
  8698  13E2  02FA               	subwf	___lwmod@dividend,f
  8699  13E3  0879               	movf	___lwmod@divisor+1,w
  8700  13E4  1C03               	skipc
  8701  13E5  03FB               	decf	___lwmod@dividend+1,f
  8702  13E6  02FB               	subwf	___lwmod@dividend+1,f
  8703  13E7                     l2747:
  8704  13E7  3001               	movlw	1
  8705  13E8                     u2565:
  8706  13E8  1003               	clrc
  8707  13E9  0CF9               	rrf	___lwmod@divisor+1,f
  8708  13EA  0CF8               	rrf	___lwmod@divisor,f
  8709  13EB  3EFF               	addlw	-1
  8710  13EC  1D03               	skipz
  8711  13ED  2BE8               	goto	u2565
  8712  13EE                     l2749:
  8713  13EE  3001               	movlw	1
  8714  13EF  02FD               	subwf	___lwmod@counter,f
  8715  13F0  1D03               	btfss	3,2
  8716  13F1  2BF3               	goto	u2571
  8717  13F2  2BF4               	goto	u2570
  8718  13F3                     u2571:
  8719  13F3  2BD7               	goto	l2743
  8720  13F4                     u2570:
  8721  13F4                     l2751:
  8722  13F4  087B               	movf	___lwmod@dividend+1,w
  8723  13F5  00F9               	movwf	?___lwmod+1
  8724  13F6  087A               	movf	___lwmod@dividend,w
  8725  13F7  00F8               	movwf	?___lwmod
  8726  13F8                     l974:
  8727  13F8  0008               	return
  8728  13F9                     __end_of___lwmod:
  8729                           
  8730                           	psect	text28
  8731  14B7                     __ptext28:	
  8732 ;; *************** function ___lwdiv *****************
  8733 ;; Defined at:
  8734 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\lwdiv.c"
  8735 ;; Parameters:    Size  Location     Type
  8736 ;;  divisor         2    0[COMMON] unsigned int 
  8737 ;;  dividend        2    2[COMMON] unsigned int 
  8738 ;; Auto vars:     Size  Location     Type
  8739 ;;  quotient        2    5[COMMON] unsigned int 
  8740 ;;  counter         1    7[COMMON] unsigned char 
  8741 ;; Return value:  Size  Location     Type
  8742 ;;                  2    0[COMMON] unsigned int 
  8743 ;; Registers used:
  8744 ;;		wreg, status,2, status,0
  8745 ;; Tracked objects:
  8746 ;;		On entry : 0/0
  8747 ;;		On exit  : 0/0
  8748 ;;		Unchanged: 0/0
  8749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8750 ;;      Params:         4       0       0       0       0
  8751 ;;      Locals:         3       0       0       0       0
  8752 ;;      Temps:          1       0       0       0       0
  8753 ;;      Totals:         8       0       0       0       0
  8754 ;;Total ram usage:        8 bytes
  8755 ;; Hardware stack levels used: 1
  8756 ;; This function calls:
  8757 ;;		Nothing
  8758 ;; This function is called by:
  8759 ;;		_sprintf
  8760 ;; This function uses a non-reentrant model
  8761 ;;
  8762                           
  8763  14B7                     ___lwdiv:	
  8764                           ;psect for function ___lwdiv
  8765                           
  8766  14B7                     l2707:	
  8767                           ;incstack = 0
  8768                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  8769                           
  8770  14B7  01F5               	clrf	___lwdiv@quotient
  8771  14B8  01F6               	clrf	___lwdiv@quotient+1
  8772  14B9                     l2709:
  8773  14B9  0870               	movf	___lwdiv@divisor,w
  8774  14BA  0471               	iorwf	___lwdiv@divisor+1,w
  8775  14BB  1903               	btfsc	3,2
  8776  14BC  2CBE               	goto	u2451
  8777  14BD  2CBF               	goto	u2450
  8778  14BE                     u2451:
  8779  14BE  2CF6               	goto	l2729
  8780  14BF                     u2450:
  8781  14BF                     l2711:
  8782  14BF  01F7               	clrf	___lwdiv@counter
  8783  14C0  0AF7               	incf	___lwdiv@counter,f
  8784  14C1  2CCD               	goto	l2717
  8785  14C2                     l2713:
  8786  14C2  3001               	movlw	1
  8787  14C3                     u2465:
  8788  14C3  1003               	clrc
  8789  14C4  0DF0               	rlf	___lwdiv@divisor,f
  8790  14C5  0DF1               	rlf	___lwdiv@divisor+1,f
  8791  14C6  3EFF               	addlw	-1
  8792  14C7  1D03               	skipz
  8793  14C8  2CC3               	goto	u2465
  8794  14C9                     l2715:
  8795  14C9  3001               	movlw	1
  8796  14CA  00F4               	movwf	??___lwdiv
  8797  14CB  0874               	movf	??___lwdiv,w
  8798  14CC  07F7               	addwf	___lwdiv@counter,f
  8799  14CD                     l2717:
  8800  14CD  1FF1               	btfss	___lwdiv@divisor+1,7
  8801  14CE  2CD0               	goto	u2471
  8802  14CF  2CD1               	goto	u2470
  8803  14D0                     u2471:
  8804  14D0  2CC2               	goto	l2713
  8805  14D1                     u2470:
  8806  14D1                     l2719:
  8807  14D1  3001               	movlw	1
  8808  14D2                     u2485:
  8809  14D2  1003               	clrc
  8810  14D3  0DF5               	rlf	___lwdiv@quotient,f
  8811  14D4  0DF6               	rlf	___lwdiv@quotient+1,f
  8812  14D5  3EFF               	addlw	-1
  8813  14D6  1D03               	skipz
  8814  14D7  2CD2               	goto	u2485
  8815  14D8  0871               	movf	___lwdiv@divisor+1,w
  8816  14D9  0273               	subwf	___lwdiv@dividend+1,w
  8817  14DA  1D03               	skipz
  8818  14DB  2CDE               	goto	u2495
  8819  14DC  0870               	movf	___lwdiv@divisor,w
  8820  14DD  0272               	subwf	___lwdiv@dividend,w
  8821  14DE                     u2495:
  8822  14DE  1C03               	skipc
  8823  14DF  2CE1               	goto	u2491
  8824  14E0  2CE2               	goto	u2490
  8825  14E1                     u2491:
  8826  14E1  2CE9               	goto	l2725
  8827  14E2                     u2490:
  8828  14E2                     l2721:
  8829  14E2  0870               	movf	___lwdiv@divisor,w
  8830  14E3  02F2               	subwf	___lwdiv@dividend,f
  8831  14E4  0871               	movf	___lwdiv@divisor+1,w
  8832  14E5  1C03               	skipc
  8833  14E6  03F3               	decf	___lwdiv@dividend+1,f
  8834  14E7  02F3               	subwf	___lwdiv@dividend+1,f
  8835  14E8                     l2723:
  8836  14E8  1475               	bsf	___lwdiv@quotient,0
  8837  14E9                     l2725:
  8838  14E9  3001               	movlw	1
  8839  14EA                     u2505:
  8840  14EA  1003               	clrc
  8841  14EB  0CF1               	rrf	___lwdiv@divisor+1,f
  8842  14EC  0CF0               	rrf	___lwdiv@divisor,f
  8843  14ED  3EFF               	addlw	-1
  8844  14EE  1D03               	skipz
  8845  14EF  2CEA               	goto	u2505
  8846  14F0                     l2727:
  8847  14F0  3001               	movlw	1
  8848  14F1  02F7               	subwf	___lwdiv@counter,f
  8849  14F2  1D03               	btfss	3,2
  8850  14F3  2CF5               	goto	u2511
  8851  14F4  2CF6               	goto	u2510
  8852  14F5                     u2511:
  8853  14F5  2CD1               	goto	l2719
  8854  14F6                     u2510:
  8855  14F6                     l2729:
  8856  14F6  0876               	movf	___lwdiv@quotient+1,w
  8857  14F7  00F1               	movwf	?___lwdiv+1
  8858  14F8  0875               	movf	___lwdiv@quotient,w
  8859  14F9  00F0               	movwf	?___lwdiv
  8860  14FA                     l964:
  8861  14FA  0008               	return
  8862  14FB                     __end_of___lwdiv:
  8863                           
  8864                           	psect	text29
  8865  1475                     __ptext29:	
  8866 ;; *************** function _LCD_Write_String *****************
  8867 ;; Defined at:
  8868 ;;		line 79 in file "LCD.c"
  8869 ;; Parameters:    Size  Location     Type
  8870 ;;  Str             2    7[COMMON] PTR const unsigned char 
  8871 ;;		 -> STR_23(4), STR_22(4), STR_21(4), STR_20(4), 
  8872 ;;		 -> STR_19(4), STR_18(4), STR_17(4), STR_16(4), 
  8873 ;;		 -> year(10), month(10), date(10), hours(10), 
  8874 ;;		 -> mins(10), secs(10), STR_6(3), STR_5(3), 
  8875 ;;		 -> main@buffer3(16), DisplayTemp@buffer2(16), DisplayTemp@buffer1(16), 
  8876 ;; Auto vars:     Size  Location     Type
  8877 ;;  i               2   12[COMMON] int 
  8878 ;; Return value:  Size  Location     Type
  8879 ;;                  1    wreg      void 
  8880 ;; Registers used:
  8881 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8882 ;; Tracked objects:
  8883 ;;		On entry : 0/0
  8884 ;;		On exit  : 0/0
  8885 ;;		Unchanged: 0/0
  8886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8887 ;;      Params:         2       0       0       0       0
  8888 ;;      Locals:         2       0       0       0       0
  8889 ;;      Temps:          3       0       0       0       0
  8890 ;;      Totals:         7       0       0       0       0
  8891 ;;Total ram usage:        7 bytes
  8892 ;; Hardware stack levels used: 1
  8893 ;; Hardware stack levels required when called: 6
  8894 ;; This function calls:
  8895 ;;		_LCD_Write_Char
  8896 ;; This function is called by:
  8897 ;;		_DisplayTemp
  8898 ;;		_main
  8899 ;;		_printClock
  8900 ;;		_LCD_String_xy
  8901 ;; This function uses a non-reentrant model
  8902 ;;
  8903                           
  8904  1475                     _LCD_Write_String:	
  8905                           ;psect for function _LCD_Write_String
  8906                           
  8907  1475                     l2769:	
  8908                           ;incstack = 0
  8909 ;; using string table level
  8910                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8911                           
  8912                           
  8913                           ;LCD.c: 79: void LCD_Write_String(const char* Str);LCD.c: 80: {;LCD.c: 81:   for(int i=0
      +                          ; Str[i]!='\0'; i++)
  8914  1475  01FC               	clrf	LCD_Write_String@i
  8915  1476  01FD               	clrf	LCD_Write_String@i+1
  8916  1477  2C9A               	goto	l2775
  8917  1478                     l2771:
  8918                           
  8919                           ;LCD.c: 82:     LCD_Write_Char(Str[i]);
  8920  1478  087C               	movf	LCD_Write_String@i,w
  8921  1479  0777               	addwf	LCD_Write_String@Str,w
  8922  147A  00FA               	movwf	??_LCD_Write_String+1
  8923  147B  0878               	movf	LCD_Write_String@Str+1,w
  8924  147C  00F9               	movwf	??_LCD_Write_String
  8925  147D  1803               	skipnc
  8926  147E  0AF9               	incf	??_LCD_Write_String,f
  8927  147F  1FFC               	btfss	LCD_Write_String@i,7
  8928  1480  2C82               	goto	u2610
  8929  1481  03F9               	decf	??_LCD_Write_String,f
  8930  1482                     u2610:
  8931  1482  0879               	movf	??_LCD_Write_String,w
  8932  1483  00FB               	movwf	??_LCD_Write_String+2
  8933  1484  087B               	movf	??_LCD_Write_String+2,w
  8934  1485  1283               	bcf	3,5	;RP0=0, select bank0
  8935  1486  1303               	bcf	3,6	;RP1=0, select bank0
  8936  1487  00FF               	movwf	btemp+1
  8937  1488  087A               	movf	??_LCD_Write_String+1,w
  8938  1489  0084               	movwf	4
  8939  148A  160A  118A  2000  160A  118A  	fcall	stringtab
  8940  148F  160A  118A  22A6  160A  118A  	fcall	_LCD_Write_Char
  8941  1494                     l2773:
  8942  1494  3001               	movlw	1
  8943  1495  07FC               	addwf	LCD_Write_String@i,f
  8944  1496  1803               	skipnc
  8945  1497  0AFD               	incf	LCD_Write_String@i+1,f
  8946  1498  3000               	movlw	0
  8947  1499  07FD               	addwf	LCD_Write_String@i+1,f
  8948  149A                     l2775:
  8949  149A  087C               	movf	LCD_Write_String@i,w
  8950  149B  0777               	addwf	LCD_Write_String@Str,w
  8951  149C  00FA               	movwf	??_LCD_Write_String+1
  8952  149D  0878               	movf	LCD_Write_String@Str+1,w
  8953  149E  00F9               	movwf	??_LCD_Write_String
  8954  149F  1803               	skipnc
  8955  14A0  0AF9               	incf	??_LCD_Write_String,f
  8956  14A1  1FFC               	btfss	LCD_Write_String@i,7
  8957  14A2  2CA4               	goto	u2620
  8958  14A3  03F9               	decf	??_LCD_Write_String,f
  8959  14A4                     u2620:
  8960  14A4  0879               	movf	??_LCD_Write_String,w
  8961  14A5  00FB               	movwf	??_LCD_Write_String+2
  8962  14A6  087B               	movf	??_LCD_Write_String+2,w
  8963  14A7  1283               	bcf	3,5	;RP0=0, select bank0
  8964  14A8  1303               	bcf	3,6	;RP1=0, select bank0
  8965  14A9  00FF               	movwf	btemp+1
  8966  14AA  087A               	movf	??_LCD_Write_String+1,w
  8967  14AB  0084               	movwf	4
  8968  14AC  160A  118A  2000  160A  118A  	fcall	stringtab
  8969  14B1  3A00               	xorlw	0
  8970  14B2  1D03               	skipz
  8971  14B3  2CB5               	goto	u2631
  8972  14B4  2CB6               	goto	u2630
  8973  14B5                     u2631:
  8974  14B5  2C78               	goto	l2771
  8975  14B6                     u2630:
  8976  14B6                     l156:
  8977  14B6  0008               	return
  8978  14B7                     __end_of_LCD_Write_String:
  8979                           
  8980                           	psect	text30
  8981  12A6                     __ptext30:	
  8982 ;; *************** function _LCD_Write_Char *****************
  8983 ;; Defined at:
  8984 ;;		line 72 in file "LCD.c"
  8985 ;; Parameters:    Size  Location     Type
  8986 ;;  Data            1    wreg     const unsigned char 
  8987 ;; Auto vars:     Size  Location     Type
  8988 ;;  Data            1    6[COMMON] const unsigned char 
  8989 ;; Return value:  Size  Location     Type
  8990 ;;                  1    wreg      void 
  8991 ;; Registers used:
  8992 ;;		wreg, status,2, status,0, pclath, cstack
  8993 ;; Tracked objects:
  8994 ;;		On entry : 0/0
  8995 ;;		On exit  : 0/0
  8996 ;;		Unchanged: 0/0
  8997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8998 ;;      Params:         0       0       0       0       0
  8999 ;;      Locals:         1       0       0       0       0
  9000 ;;      Temps:          1       0       0       0       0
  9001 ;;      Totals:         2       0       0       0       0
  9002 ;;Total ram usage:        2 bytes
  9003 ;; Hardware stack levels used: 1
  9004 ;; Hardware stack levels required when called: 5
  9005 ;; This function calls:
  9006 ;;		_LCD_Write_4Bit
  9007 ;; This function is called by:
  9008 ;;		_LCD_Write_String
  9009 ;; This function uses a non-reentrant model
  9010 ;;
  9011                           
  9012  12A6                     _LCD_Write_Char:	
  9013                           ;psect for function _LCD_Write_Char
  9014                           
  9015                           
  9016                           ;incstack = 0
  9017                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  9018                           ;LCD_Write_Char@Data stored from wreg
  9019  12A6  00F6               	movwf	LCD_Write_Char@Data
  9020  12A7                     l2675:
  9021                           
  9022                           ;LCD.c: 72: void LCD_Write_Char(const char Data);LCD.c: 73: {;LCD.c: 74:   RS = 1;
  9023  12A7  1283               	bcf	3,5	;RP0=0, select bank0
  9024  12A8  1303               	bcf	3,6	;RP1=0, select bank0
  9025  12A9  01E8               	clrf	_RS
  9026  12AA  0AE8               	incf	_RS,f
  9027  12AB                     l2677:
  9028                           
  9029                           ;LCD.c: 75:   LCD_Write_4Bit(Data & 0xF0);
  9030  12AB  0876               	movf	LCD_Write_Char@Data,w
  9031  12AC  39F0               	andlw	240
  9032  12AD  120A  158A  2000  160A  118A  	fcall	_LCD_Write_4Bit
  9033                           
  9034                           ;LCD.c: 76:   LCD_Write_4Bit((Data << 4) & 0xF0);
  9035  12B2  0876               	movf	LCD_Write_Char@Data,w
  9036  12B3  00F5               	movwf	??_LCD_Write_Char
  9037  12B4  3003               	movlw	3
  9038  12B5                     u2385:
  9039  12B5  1003               	clrc
  9040  12B6  0DF5               	rlf	??_LCD_Write_Char,f
  9041  12B7  3EFF               	addlw	-1
  9042  12B8  1D03               	skipz
  9043  12B9  2AB5               	goto	u2385
  9044  12BA  1003               	clrc
  9045  12BB  0D75               	rlf	??_LCD_Write_Char,w
  9046  12BC  39F0               	andlw	240
  9047  12BD  120A  158A  2000  160A  118A  	fcall	_LCD_Write_4Bit
  9048  12C2                     l150:
  9049  12C2  0008               	return
  9050  12C3                     __end_of_LCD_Write_Char:
  9051                           
  9052                           	psect	text31
  9053  1389                     __ptext31:	
  9054 ;; *************** function _LCD_Set_Cursor *****************
  9055 ;; Defined at:
  9056 ;;		line 85 in file "LCD.c"
  9057 ;; Parameters:    Size  Location     Type
  9058 ;;  ROW             1    wreg     unsigned char 
  9059 ;;  COL             1    7[COMMON] unsigned char 
  9060 ;; Auto vars:     Size  Location     Type
  9061 ;;  ROW             1   10[COMMON] unsigned char 
  9062 ;; Return value:  Size  Location     Type
  9063 ;;                  1    wreg      void 
  9064 ;; Registers used:
  9065 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9066 ;; Tracked objects:
  9067 ;;		On entry : 0/0
  9068 ;;		On exit  : 0/0
  9069 ;;		Unchanged: 0/0
  9070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9071 ;;      Params:         1       0       0       0       0
  9072 ;;      Locals:         1       0       0       0       0
  9073 ;;      Temps:          2       0       0       0       0
  9074 ;;      Totals:         4       0       0       0       0
  9075 ;;Total ram usage:        4 bytes
  9076 ;; Hardware stack levels used: 1
  9077 ;; Hardware stack levels required when called: 6
  9078 ;; This function calls:
  9079 ;;		_LCD_CMD
  9080 ;; This function is called by:
  9081 ;;		_DisplayTemp
  9082 ;;		_printClock
  9083 ;; This function uses a non-reentrant model
  9084 ;;
  9085                           
  9086  1389                     _LCD_Set_Cursor:	
  9087                           ;psect for function _LCD_Set_Cursor
  9088                           
  9089                           
  9090                           ;incstack = 0
  9091                           ; Regs used in _LCD_Set_Cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9092                           ;LCD_Set_Cursor@ROW stored from wreg
  9093  1389  00FA               	movwf	LCD_Set_Cursor@ROW
  9094  138A                     l2777:
  9095                           
  9096                           ;LCD.c: 85: void LCD_Set_Cursor(unsigned char ROW, unsigned char COL);LCD.c: 86: {;LCD.c
      +                          : 87:   switch(ROW)
  9097  138A  2BAB               	goto	l2787
  9098  138B                     l2779:
  9099                           
  9100                           ;LCD.c: 90:       LCD_CMD(0xC0 + COL-1);
  9101  138B  0877               	movf	LCD_Set_Cursor@COL,w
  9102  138C  3EBF               	addlw	191
  9103  138D  160A  118A  228A  160A  118A  	fcall	_LCD_CMD
  9104                           
  9105                           ;LCD.c: 91:       break;
  9106  1392  2BBE               	goto	l165
  9107  1393                     l2781:
  9108                           
  9109                           ;LCD.c: 93:       LCD_CMD(0x94 + COL-1);
  9110  1393  0877               	movf	LCD_Set_Cursor@COL,w
  9111  1394  3E93               	addlw	147
  9112  1395  160A  118A  228A  160A  118A  	fcall	_LCD_CMD
  9113                           
  9114                           ;LCD.c: 94:       break;
  9115  139A  2BBE               	goto	l165
  9116  139B                     l2783:
  9117                           
  9118                           ;LCD.c: 96:       LCD_CMD(0xD4 + COL-1);
  9119  139B  0877               	movf	LCD_Set_Cursor@COL,w
  9120  139C  3ED3               	addlw	211
  9121  139D  160A  118A  228A  160A  118A  	fcall	_LCD_CMD
  9122                           
  9123                           ;LCD.c: 97:       break;
  9124  13A2  2BBE               	goto	l165
  9125  13A3                     l2785:
  9126                           
  9127                           ;LCD.c: 100:       LCD_CMD(0x80 + COL-1);
  9128  13A3  0877               	movf	LCD_Set_Cursor@COL,w
  9129  13A4  3E7F               	addlw	127
  9130  13A5  160A  118A  228A  160A  118A  	fcall	_LCD_CMD
  9131                           
  9132                           ;LCD.c: 101:   }
  9133  13AA  2BBE               	goto	l165
  9134  13AB                     l2787:
  9135  13AB  087A               	movf	LCD_Set_Cursor@ROW,w
  9136  13AC  00F8               	movwf	??_LCD_Set_Cursor
  9137  13AD  01F9               	clrf	??_LCD_Set_Cursor+1
  9138                           
  9139                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9140                           ; Switch size 1, requested type "simple"
  9141                           ; Number of cases is 1, Range of values is 0 to 0
  9142                           ; switch strategies available:
  9143                           ; Name         Instructions Cycles
  9144                           ; simple_byte            4     3 (average)
  9145                           ; direct_byte           11     8 (fixed)
  9146                           ; jumptable            260     6 (fixed)
  9147                           ;	Chosen strategy is simple_byte
  9148  13AE  0879               	movf	??_LCD_Set_Cursor+1,w
  9149  13AF  3A00               	xorlw	0	; case 0
  9150  13B0  1903               	skipnz
  9151  13B1  2BB3               	goto	l3985
  9152  13B2  2BA3               	goto	l2785
  9153  13B3                     l3985:
  9154                           
  9155                           ; Switch size 1, requested type "simple"
  9156                           ; Number of cases is 3, Range of values is 2 to 4
  9157                           ; switch strategies available:
  9158                           ; Name         Instructions Cycles
  9159                           ; simple_byte           10     6 (average)
  9160                           ; direct_byte           20    11 (fixed)
  9161                           ; jumptable            263     9 (fixed)
  9162                           ;	Chosen strategy is simple_byte
  9163  13B3  0878               	movf	??_LCD_Set_Cursor,w
  9164  13B4  3A02               	xorlw	2	; case 2
  9165  13B5  1903               	skipnz
  9166  13B6  2B8B               	goto	l2779
  9167  13B7  3A01               	xorlw	1	; case 3
  9168  13B8  1903               	skipnz
  9169  13B9  2B93               	goto	l2781
  9170  13BA  3A07               	xorlw	7	; case 4
  9171  13BB  1903               	skipnz
  9172  13BC  2B9B               	goto	l2783
  9173  13BD  2BA3               	goto	l2785
  9174  13BE                     l165:
  9175  13BE  0008               	return
  9176  13BF                     __end_of_LCD_Set_Cursor:
  9177                           
  9178                           	psect	text32
  9179  128A                     __ptext32:	
  9180 ;; *************** function _LCD_CMD *****************
  9181 ;; Defined at:
  9182 ;;		line 65 in file "LCD.c"
  9183 ;; Parameters:    Size  Location     Type
  9184 ;;  CMD             1    wreg     unsigned char 
  9185 ;; Auto vars:     Size  Location     Type
  9186 ;;  CMD             1    6[COMMON] unsigned char 
  9187 ;; Return value:  Size  Location     Type
  9188 ;;                  1    wreg      void 
  9189 ;; Registers used:
  9190 ;;		wreg, status,2, status,0, pclath, cstack
  9191 ;; Tracked objects:
  9192 ;;		On entry : 0/0
  9193 ;;		On exit  : 0/0
  9194 ;;		Unchanged: 0/0
  9195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9196 ;;      Params:         0       0       0       0       0
  9197 ;;      Locals:         1       0       0       0       0
  9198 ;;      Temps:          1       0       0       0       0
  9199 ;;      Totals:         2       0       0       0       0
  9200 ;;Total ram usage:        2 bytes
  9201 ;; Hardware stack levels used: 1
  9202 ;; Hardware stack levels required when called: 5
  9203 ;; This function calls:
  9204 ;;		_LCD_Write_4Bit
  9205 ;; This function is called by:
  9206 ;;		_LCD_Init
  9207 ;;		_LCD_Set_Cursor
  9208 ;;		_LCD_Clear
  9209 ;;		_LCD_String_xy
  9210 ;;		_LCD_SL
  9211 ;;		_LCD_SR
  9212 ;; This function uses a non-reentrant model
  9213 ;;
  9214                           
  9215  128A                     _LCD_CMD:	
  9216                           ;psect for function _LCD_CMD
  9217                           
  9218                           
  9219                           ;incstack = 0
  9220                           ; Regs used in _LCD_CMD: [wreg+status,2+status,0+pclath+cstack]
  9221                           ;LCD_CMD@CMD stored from wreg
  9222  128A  00F6               	movwf	LCD_CMD@CMD
  9223  128B                     l2669:
  9224                           
  9225                           ;LCD.c: 65: void LCD_CMD(unsigned char CMD);LCD.c: 66: {;LCD.c: 67:   RS = 0;
  9226  128B  1283               	bcf	3,5	;RP0=0, select bank0
  9227  128C  1303               	bcf	3,6	;RP1=0, select bank0
  9228  128D  01E8               	clrf	_RS
  9229  128E                     l2671:
  9230                           
  9231                           ;LCD.c: 68:   LCD_Write_4Bit(CMD & 0xF0);
  9232  128E  0876               	movf	LCD_CMD@CMD,w
  9233  128F  39F0               	andlw	240
  9234  1290  120A  158A  2000  160A  118A  	fcall	_LCD_Write_4Bit
  9235  1295                     l2673:
  9236                           
  9237                           ;LCD.c: 69:   LCD_Write_4Bit((CMD << 4) & 0xF0);
  9238  1295  0876               	movf	LCD_CMD@CMD,w
  9239  1296  00F5               	movwf	??_LCD_CMD
  9240  1297  3003               	movlw	3
  9241  1298                     u2375:
  9242  1298  1003               	clrc
  9243  1299  0DF5               	rlf	??_LCD_CMD,f
  9244  129A  3EFF               	addlw	-1
  9245  129B  1D03               	skipz
  9246  129C  2A98               	goto	u2375
  9247  129D  1003               	clrc
  9248  129E  0D75               	rlf	??_LCD_CMD,w
  9249  129F  39F0               	andlw	240
  9250  12A0  120A  158A  2000  160A  118A  	fcall	_LCD_Write_4Bit
  9251  12A5                     l147:
  9252  12A5  0008               	return
  9253  12A6                     __end_of_LCD_CMD:
  9254                           
  9255                           	psect	text33
  9256  0800                     __ptext33:	
  9257 ;; *************** function _LCD_Write_4Bit *****************
  9258 ;; Defined at:
  9259 ;;		line 56 in file "LCD.c"
  9260 ;; Parameters:    Size  Location     Type
  9261 ;;  Nibble          1    wreg     unsigned char 
  9262 ;; Auto vars:     Size  Location     Type
  9263 ;;  Nibble          1    4[COMMON] unsigned char 
  9264 ;; Return value:  Size  Location     Type
  9265 ;;                  1    wreg      void 
  9266 ;; Registers used:
  9267 ;;		wreg, status,2, status,0, pclath, cstack
  9268 ;; Tracked objects:
  9269 ;;		On entry : 0/0
  9270 ;;		On exit  : 0/0
  9271 ;;		Unchanged: 0/0
  9272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9273 ;;      Params:         0       0       0       0       0
  9274 ;;      Locals:         1       0       0       0       0
  9275 ;;      Temps:          1       0       0       0       0
  9276 ;;      Totals:         2       0       0       0       0
  9277 ;;Total ram usage:        2 bytes
  9278 ;; Hardware stack levels used: 1
  9279 ;; Hardware stack levels required when called: 4
  9280 ;; This function calls:
  9281 ;;		_IO_Expander_Write
  9282 ;; This function is called by:
  9283 ;;		_LCD_CMD
  9284 ;;		_LCD_Write_Char
  9285 ;; This function uses a non-reentrant model
  9286 ;;
  9287                           
  9288  0800                     _LCD_Write_4Bit:	
  9289                           ;psect for function _LCD_Write_4Bit
  9290                           
  9291                           
  9292                           ;incstack = 0
  9293                           ; Regs used in _LCD_Write_4Bit: [wreg+status,2+status,0+pclath+cstack]
  9294                           ;LCD_Write_4Bit@Nibble stored from wreg
  9295  0800  00F4               	movwf	LCD_Write_4Bit@Nibble
  9296  0801                     l2619:
  9297                           
  9298                           ;LCD.c: 56: void LCD_Write_4Bit(unsigned char Nibble);LCD.c: 57: {;LCD.c: 59:   Nibble |
      +                          = RS;
  9299  0801  1283               	bcf	3,5	;RP0=0, select bank0
  9300  0802  1303               	bcf	3,6	;RP1=0, select bank0
  9301  0803  0868               	movf	_RS,w
  9302  0804  00F3               	movwf	??_LCD_Write_4Bit
  9303  0805  0873               	movf	??_LCD_Write_4Bit,w
  9304  0806  04F4               	iorwf	LCD_Write_4Bit@Nibble,f
  9305  0807                     l2621:
  9306                           
  9307                           ;LCD.c: 60:   IO_Expander_Write(Nibble | 0x04);
  9308  0807  0874               	movf	LCD_Write_4Bit@Nibble,w
  9309  0808  3804               	iorlw	4
  9310  0809  160A  118A  222B  120A  158A  	fcall	_IO_Expander_Write
  9311  080E                     l2623:
  9312                           
  9313                           ;LCD.c: 61:   IO_Expander_Write(Nibble & 0xFB);
  9314  080E  0874               	movf	LCD_Write_4Bit@Nibble,w
  9315  080F  39FB               	andlw	251
  9316  0810  160A  118A  222B  120A  158A  	fcall	_IO_Expander_Write
  9317                           
  9318                           ;LCD.c: 62:   _delay((unsigned long)((50)*(8000000/4000000.0)));
  9319  0815  3021               	movlw	33
  9320  0816  00F3               	movwf	??_LCD_Write_4Bit
  9321  0817                     u4507:
  9322  0817  0BF3               	decfsz	??_LCD_Write_4Bit,f
  9323  0818  2817               	goto	u4507
  9324  0819                     l144:
  9325  0819  0008               	return
  9326  081A                     __end_of_LCD_Write_4Bit:
  9327                           
  9328                           	psect	text34
  9329  122B                     __ptext34:	
  9330 ;; *************** function _IO_Expander_Write *****************
  9331 ;; Defined at:
  9332 ;;		line 49 in file "LCD.c"
  9333 ;; Parameters:    Size  Location     Type
  9334 ;;  Data            1    wreg     unsigned char 
  9335 ;; Auto vars:     Size  Location     Type
  9336 ;;  Data            1    2[COMMON] unsigned char 
  9337 ;; Return value:  Size  Location     Type
  9338 ;;                  1    wreg      void 
  9339 ;; Registers used:
  9340 ;;		wreg, status,2, status,0, pclath, cstack
  9341 ;; Tracked objects:
  9342 ;;		On entry : 0/0
  9343 ;;		On exit  : 0/0
  9344 ;;		Unchanged: 0/0
  9345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9346 ;;      Params:         0       0       0       0       0
  9347 ;;      Locals:         1       0       0       0       0
  9348 ;;      Temps:          0       0       0       0       0
  9349 ;;      Totals:         1       0       0       0       0
  9350 ;;Total ram usage:        1 bytes
  9351 ;; Hardware stack levels used: 1
  9352 ;; Hardware stack levels required when called: 3
  9353 ;; This function calls:
  9354 ;;		_I2C_Start
  9355 ;;		_I2C_Stop
  9356 ;;		_I2C_Write
  9357 ;; This function is called by:
  9358 ;;		_LCD_Init
  9359 ;;		_LCD_Write_4Bit
  9360 ;;		_Backlight
  9361 ;;		_noBacklight
  9362 ;; This function uses a non-reentrant model
  9363 ;;
  9364                           
  9365  122B                     _IO_Expander_Write:	
  9366                           ;psect for function _IO_Expander_Write
  9367                           
  9368                           
  9369                           ;incstack = 0
  9370                           ; Regs used in _IO_Expander_Write: [wreg+status,2+status,0+pclath+cstack]
  9371                           ;IO_Expander_Write@Data stored from wreg
  9372  122B  00F2               	movwf	IO_Expander_Write@Data
  9373  122C                     l2613:
  9374                           
  9375                           ;LCD.c: 49: void IO_Expander_Write(unsigned char Data);LCD.c: 50: {;LCD.c: 51:   I2C_Sta
      +                          rt(0x4E);
  9376  122C  304E               	movlw	78
  9377  122D  160A  118A  2258  160A  118A  	fcall	_I2C_Start
  9378                           
  9379                           ;LCD.c: 52:   I2C_Write(Data | BackLight_State);
  9380  1232  0872               	movf	IO_Expander_Write@Data,w
  9381  1233  1283               	bcf	3,5	;RP0=0, select bank0
  9382  1234  1303               	bcf	3,6	;RP1=0, select bank0
  9383  1235  046E               	iorwf	_BackLight_State,w
  9384  1236  160A  118A  2203  160A  118A  	fcall	_I2C_Write
  9385                           
  9386                           ;LCD.c: 53:   I2C_Stop();
  9387  123B  160A  118A  21B5  160A  118A  	fcall	_I2C_Stop
  9388  1240                     l141:
  9389  1240  0008               	return
  9390  1241                     __end_of_IO_Expander_Write:
  9391                           
  9392                           	psect	text35
  9393  11B5                     __ptext35:	
  9394 ;; *************** function _I2C_Stop *****************
  9395 ;; Defined at:
  9396 ;;		line 91 in file "I2C_Master.c"
  9397 ;; Parameters:    Size  Location     Type
  9398 ;;		None
  9399 ;; Auto vars:     Size  Location     Type
  9400 ;;		None
  9401 ;; Return value:  Size  Location     Type
  9402 ;;                  1    wreg      unsigned char 
  9403 ;; Registers used:
  9404 ;;		wreg
  9405 ;; Tracked objects:
  9406 ;;		On entry : 0/0
  9407 ;;		On exit  : 0/0
  9408 ;;		Unchanged: 0/0
  9409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9410 ;;      Params:         0       0       0       0       0
  9411 ;;      Locals:         0       0       0       0       0
  9412 ;;      Temps:          0       0       0       0       0
  9413 ;;      Totals:         0       0       0       0       0
  9414 ;;Total ram usage:        0 bytes
  9415 ;; Hardware stack levels used: 1
  9416 ;; This function calls:
  9417 ;;		Nothing
  9418 ;; This function is called by:
  9419 ;;		_IO_Expander_Write
  9420 ;;		_RTC_Read_Calendar
  9421 ;;		_RTC_Clock_Write
  9422 ;;		_RTC_Calendar_Write
  9423 ;;		_printClock
  9424 ;;		_I2C_Start_Wait
  9425 ;; This function uses a non-reentrant model
  9426 ;;
  9427                           
  9428  11B5                     _I2C_Stop:	
  9429                           ;psect for function _I2C_Stop
  9430                           
  9431  11B5                     l2603:	
  9432                           ;incstack = 0
  9433                           ; Regs used in _I2C_Stop: [wreg]
  9434                           
  9435                           
  9436                           ;I2C_Master.c: 93:     PEN = 1;
  9437  11B5  1683               	bsf	3,5	;RP0=1, select bank1
  9438  11B6  1303               	bcf	3,6	;RP1=0, select bank1
  9439  11B7  1511               	bsf	17,2	;volatile
  9440  11B8                     l91:	
  9441                           ;I2C_Master.c: 94:     while(PEN);
  9442                           
  9443  11B8  1911               	btfsc	17,2	;volatile
  9444  11B9  29BB               	goto	u2201
  9445  11BA  29BC               	goto	u2200
  9446  11BB                     u2201:
  9447  11BB  29B8               	goto	l91
  9448  11BC                     u2200:
  9449  11BC                     l93:
  9450                           
  9451                           ;I2C_Master.c: 95:     if(!SSPSTATbits.P)
  9452  11BC  0814               	movf	20,w	;volatile
  9453  11BD                     l95:
  9454  11BD  0008               	return
  9455  11BE                     __end_of_I2C_Stop:
  9456                           
  9457                           	psect	text36
  9458  1258                     __ptext36:	
  9459 ;; *************** function _I2C_Start *****************
  9460 ;; Defined at:
  9461 ;;		line 66 in file "I2C_Master.c"
  9462 ;; Parameters:    Size  Location     Type
  9463 ;;  slave_write_    1    wreg     unsigned char 
  9464 ;; Auto vars:     Size  Location     Type
  9465 ;;  slave_write_    1    1[COMMON] unsigned char 
  9466 ;; Return value:  Size  Location     Type
  9467 ;;                  1    wreg      unsigned char 
  9468 ;; Registers used:
  9469 ;;		wreg, status,2, status,0, pclath, cstack
  9470 ;; Tracked objects:
  9471 ;;		On entry : 0/0
  9472 ;;		On exit  : 0/0
  9473 ;;		Unchanged: 0/0
  9474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9475 ;;      Params:         0       0       0       0       0
  9476 ;;      Locals:         1       0       0       0       0
  9477 ;;      Temps:          0       0       0       0       0
  9478 ;;      Totals:         1       0       0       0       0
  9479 ;;Total ram usage:        1 bytes
  9480 ;; Hardware stack levels used: 1
  9481 ;; Hardware stack levels required when called: 2
  9482 ;; This function calls:
  9483 ;;		_I2C_Write
  9484 ;; This function is called by:
  9485 ;;		_IO_Expander_Write
  9486 ;;		_RTC_Read_Clock
  9487 ;;		_RTC_Read_Calendar
  9488 ;;		_RTC_Clock_Write
  9489 ;;		_RTC_Calendar_Write
  9490 ;; This function uses a non-reentrant model
  9491 ;;
  9492                           
  9493  1258                     _I2C_Start:	
  9494                           ;psect for function _I2C_Start
  9495                           
  9496                           
  9497                           ;incstack = 0
  9498                           ; Regs used in _I2C_Start: [wreg+status,2+status,0+pclath+cstack]
  9499                           ;I2C_Start@slave_write_address stored from wreg
  9500  1258  00F1               	movwf	I2C_Start@slave_write_address
  9501  1259                     l2605:
  9502                           
  9503                           ;I2C_Master.c: 66: char I2C_Start(char slave_write_address);I2C_Master.c: 67: {;I2C_Mast
      +                          er.c: 68:     SSPCON2bits.SEN=1;
  9504  1259  1683               	bsf	3,5	;RP0=1, select bank1
  9505  125A  1303               	bcf	3,6	;RP1=0, select bank1
  9506  125B  1411               	bsf	17,0	;volatile
  9507  125C                     l75:	
  9508                           ;I2C_Master.c: 69:     while(SSPCON2bits.SEN);
  9509                           
  9510  125C  1811               	btfsc	17,0	;volatile
  9511  125D  2A5F               	goto	u2211
  9512  125E  2A60               	goto	u2210
  9513  125F                     u2211:
  9514  125F  2A5C               	goto	l75
  9515  1260                     u2210:
  9516  1260                     l77:
  9517                           
  9518                           ;I2C_Master.c: 70:  SSPIF=0;
  9519  1260  1283               	bcf	3,5	;RP0=0, select bank0
  9520  1261  1303               	bcf	3,6	;RP1=0, select bank0
  9521  1262  118C               	bcf	12,3	;volatile
  9522                           
  9523                           ;I2C_Master.c: 71:     if(!SSPSTATbits.S)
  9524  1263  1683               	bsf	3,5	;RP0=1, select bank1
  9525  1264  1303               	bcf	3,6	;RP1=0, select bank1
  9526  1265  1994               	btfsc	20,3	;volatile
  9527  1266  2A68               	goto	u2221
  9528  1267  2A69               	goto	u2220
  9529  1268                     u2221:
  9530  1268  2A6A               	goto	l2609
  9531  1269                     u2220:
  9532  1269  2A70               	goto	l79
  9533  126A                     l2609:
  9534                           
  9535                           ;I2C_Master.c: 73:     return (I2C_Write(slave_write_address));;	Return value of _I2C_St
      +                          art is never used
  9536  126A  0871               	movf	I2C_Start@slave_write_address,w
  9537  126B  160A  118A  2203  160A  118A  	fcall	_I2C_Write
  9538  1270                     l79:
  9539  1270  0008               	return
  9540  1271                     __end_of_I2C_Start:
  9541                           
  9542                           	psect	text37
  9543  1203                     __ptext37:	
  9544 ;; *************** function _I2C_Write *****************
  9545 ;; Defined at:
  9546 ;;		line 100 in file "I2C_Master.c"
  9547 ;; Parameters:    Size  Location     Type
  9548 ;;  data            1    wreg     unsigned char 
  9549 ;; Auto vars:     Size  Location     Type
  9550 ;;  data            1    0[COMMON] unsigned char 
  9551 ;; Return value:  Size  Location     Type
  9552 ;;                  1    wreg      unsigned char 
  9553 ;; Registers used:
  9554 ;;		wreg, status,2, status,0, pclath, cstack
  9555 ;; Tracked objects:
  9556 ;;		On entry : 0/0
  9557 ;;		On exit  : 0/0
  9558 ;;		Unchanged: 0/0
  9559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9560 ;;      Params:         0       0       0       0       0
  9561 ;;      Locals:         1       0       0       0       0
  9562 ;;      Temps:          0       0       0       0       0
  9563 ;;      Totals:         1       0       0       0       0
  9564 ;;Total ram usage:        1 bytes
  9565 ;; Hardware stack levels used: 1
  9566 ;; Hardware stack levels required when called: 1
  9567 ;; This function calls:
  9568 ;;		_I2C_Ready
  9569 ;; This function is called by:
  9570 ;;		_I2C_Start
  9571 ;;		_I2C_Repeated_Start
  9572 ;;		_IO_Expander_Write
  9573 ;;		_RTC_Read_Clock
  9574 ;;		_RTC_Read_Calendar
  9575 ;;		_RTC_Clock_Write
  9576 ;;		_RTC_Calendar_Write
  9577 ;;		_I2C_Start_Wait
  9578 ;; This function uses a non-reentrant model
  9579 ;;
  9580                           
  9581  1203                     _I2C_Write:	
  9582                           ;psect for function _I2C_Write
  9583                           
  9584                           
  9585                           ;incstack = 0
  9586                           ; Regs used in _I2C_Write: [wreg+status,2+status,0+pclath+cstack]
  9587                           ;I2C_Write@data stored from wreg
  9588  1203  00F0               	movwf	I2C_Write@data
  9589  1204                     l2587:
  9590                           
  9591                           ;I2C_Master.c: 100: char I2C_Write(unsigned char data);I2C_Master.c: 101: {;I2C_Master.c
      +                          : 102:       SSPBUF = data;
  9592  1204  0870               	movf	I2C_Write@data,w
  9593  1205  1283               	bcf	3,5	;RP0=0, select bank0
  9594  1206  1303               	bcf	3,6	;RP1=0, select bank0
  9595  1207  0093               	movwf	19	;volatile
  9596  1208                     l2589:
  9597                           
  9598                           ;I2C_Master.c: 103:       I2C_Ready();
  9599  1208  160A  118A  21A5  160A  118A  	fcall	_I2C_Ready
  9600  120D                     l2591:
  9601                           
  9602                           ;I2C_Master.c: 104:       if (ACKSTAT)
  9603  120D  1683               	bsf	3,5	;RP0=1, select bank1
  9604  120E  1303               	bcf	3,6	;RP1=0, select bank1
  9605  120F  1F11               	btfss	17,6	;volatile
  9606  1210  2A12               	goto	u2191
  9607  1211  2A13               	goto	u2190
  9608  1212                     u2191:
  9609  1212  2A15               	goto	l2599
  9610  1213                     u2190:
  9611  1213                     l2593:
  9612                           
  9613                           ;I2C_Master.c: 105:         return 1;
  9614  1213  3001               	movlw	1
  9615  1214  2A16               	goto	l99
  9616  1215                     l2599:
  9617                           
  9618                           ;I2C_Master.c: 107:         return 2;
  9619  1215  3002               	movlw	2
  9620  1216                     l99:
  9621  1216  0008               	return
  9622  1217                     __end_of_I2C_Write:
  9623                           
  9624                           	psect	text38
  9625  11A5                     __ptext38:	
  9626 ;; *************** function _I2C_Ready *****************
  9627 ;; Defined at:
  9628 ;;		line 41 in file "I2C_Master.c"
  9629 ;; Parameters:    Size  Location     Type
  9630 ;;		None
  9631 ;; Auto vars:     Size  Location     Type
  9632 ;;		None
  9633 ;; Return value:  Size  Location     Type
  9634 ;;                  1    wreg      void 
  9635 ;; Registers used:
  9636 ;;		None
  9637 ;; Tracked objects:
  9638 ;;		On entry : 0/0
  9639 ;;		On exit  : 0/0
  9640 ;;		Unchanged: 0/0
  9641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9642 ;;      Params:         0       0       0       0       0
  9643 ;;      Locals:         0       0       0       0       0
  9644 ;;      Temps:          0       0       0       0       0
  9645 ;;      Totals:         0       0       0       0       0
  9646 ;;Total ram usage:        0 bytes
  9647 ;; Hardware stack levels used: 1
  9648 ;; This function calls:
  9649 ;;		Nothing
  9650 ;; This function is called by:
  9651 ;;		_I2C_Read
  9652 ;;		_I2C_Write
  9653 ;; This function uses a non-reentrant model
  9654 ;;
  9655                           
  9656  11A5                     _I2C_Ready:	
  9657                           ;psect for function _I2C_Ready
  9658                           
  9659  11A5                     l2585:	
  9660                           ;incstack = 0
  9661                           ; Regs used in _I2C_Ready: []
  9662                           
  9663  11A5                     l58:	
  9664                           ;I2C_Master.c: 43:     while(!SSPIF);
  9665                           
  9666  11A5  1283               	bcf	3,5	;RP0=0, select bank0
  9667  11A6  1303               	bcf	3,6	;RP1=0, select bank0
  9668  11A7  1D8C               	btfss	12,3	;volatile
  9669  11A8  29AA               	goto	u2181
  9670  11A9  29AB               	goto	u2180
  9671  11AA                     u2181:
  9672  11AA  29A5               	goto	l58
  9673  11AB                     u2180:
  9674  11AB                     l60:
  9675                           
  9676                           ;I2C_Master.c: 44:     SSPIF=0;
  9677  11AB  118C               	bcf	12,3	;volatile
  9678  11AC                     l61:
  9679  11AC  0008               	return
  9680  11AD                     __end_of_I2C_Ready:
  9681                           
  9682                           	psect	text39
  9683  1197                     __ptext39:	
  9684 ;; *************** function _ChangeColor *****************
  9685 ;; Defined at:
  9686 ;;		line 53 in file "RotaryEncoder.c"
  9687 ;; Parameters:    Size  Location     Type
  9688 ;;		None
  9689 ;; Auto vars:     Size  Location     Type
  9690 ;;		None
  9691 ;; Return value:  Size  Location     Type
  9692 ;;                  1    wreg      void 
  9693 ;; Registers used:
  9694 ;;		wreg, status,2, status,0, pclath, cstack
  9695 ;; Tracked objects:
  9696 ;;		On entry : 0/0
  9697 ;;		On exit  : 0/0
  9698 ;;		Unchanged: 0/0
  9699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9700 ;;      Params:         0       0       0       0       0
  9701 ;;      Locals:         0       0       0       0       0
  9702 ;;      Temps:          0       0       0       0       0
  9703 ;;      Totals:         0       0       0       0       0
  9704 ;;Total ram usage:        0 bytes
  9705 ;; Hardware stack levels used: 1
  9706 ;; Hardware stack levels required when called: 3
  9707 ;; This function calls:
  9708 ;;		_LED_Color
  9709 ;; This function is called by:
  9710 ;;		_main
  9711 ;; This function uses a non-reentrant model
  9712 ;;
  9713                           
  9714  1197                     _ChangeColor:	
  9715                           ;psect for function _ChangeColor
  9716                           
  9717  1197                     l3531:	
  9718                           ;incstack = 0
  9719                           ; Regs used in _ChangeColor: [wreg+status,2+status,0+pclath+cstack]
  9720                           
  9721                           
  9722                           ;RotaryEncoder.c: 55:     LED_Color(1);
  9723  1197  3001               	movlw	1
  9724  1198  160A  118A  2657  160A  118A  	fcall	_LED_Color
  9725  119D                     l499:
  9726  119D  0008               	return
  9727  119E                     __end_of_ChangeColor:
  9728                           
  9729                           	psect	text40
  9730  1657                     __ptext40:	
  9731 ;; *************** function _LED_Color *****************
  9732 ;; Defined at:
  9733 ;;		line 10 in file "LED.c"
  9734 ;; Parameters:    Size  Location     Type
  9735 ;;  brt             1    wreg     unsigned char 
  9736 ;; Auto vars:     Size  Location     Type
  9737 ;;  brt             1    6[COMMON] unsigned char 
  9738 ;; Return value:  Size  Location     Type
  9739 ;;                  1    wreg      void 
  9740 ;; Registers used:
  9741 ;;		wreg, status,2, status,0, pclath, cstack
  9742 ;; Tracked objects:
  9743 ;;		On entry : 0/0
  9744 ;;		On exit  : 0/0
  9745 ;;		Unchanged: 0/0
  9746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9747 ;;      Params:         0       0       0       0       0
  9748 ;;      Locals:         1       0       0       0       0
  9749 ;;      Temps:          2       0       0       0       0
  9750 ;;      Totals:         3       0       0       0       0
  9751 ;;Total ram usage:        3 bytes
  9752 ;; Hardware stack levels used: 1
  9753 ;; Hardware stack levels required when called: 2
  9754 ;; This function calls:
  9755 ;;		_sendRGB
  9756 ;; This function is called by:
  9757 ;;		_ChangeColor
  9758 ;; This function uses a non-reentrant model
  9759 ;;
  9760                           
  9761  1657                     _LED_Color:	
  9762                           ;psect for function _LED_Color
  9763                           
  9764                           
  9765                           ;incstack = 0
  9766                           ; Regs used in _LED_Color: [wreg+status,2+status,0+pclath+cstack]
  9767                           ;LED_Color@brt stored from wreg
  9768  1657  00F6               	movwf	LED_Color@brt
  9769  1658                     l2961:
  9770                           
  9771                           ;LED.c: 11:     sendRGB(brt,brt,brt); sendRGB(brt,brt,brt); sendRGB(brt,brt,brt);
  9772  1658  0876               	movf	LED_Color@brt,w
  9773  1659  00F4               	movwf	??_LED_Color
  9774  165A  0874               	movf	??_LED_Color,w
  9775  165B  00F1               	movwf	sendRGB@g
  9776  165C  0876               	movf	LED_Color@brt,w
  9777  165D  00F5               	movwf	??_LED_Color+1
  9778  165E  0875               	movf	??_LED_Color+1,w
  9779  165F  00F2               	movwf	sendRGB@b
  9780  1660  0876               	movf	LED_Color@brt,w
  9781  1661  160A  118A  21EF  160A  118A  	fcall	_sendRGB
  9782  1666  0876               	movf	LED_Color@brt,w
  9783  1667  00F4               	movwf	??_LED_Color
  9784  1668  0874               	movf	??_LED_Color,w
  9785  1669  00F1               	movwf	sendRGB@g
  9786  166A  0876               	movf	LED_Color@brt,w
  9787  166B  00F5               	movwf	??_LED_Color+1
  9788  166C  0875               	movf	??_LED_Color+1,w
  9789  166D  00F2               	movwf	sendRGB@b
  9790  166E  0876               	movf	LED_Color@brt,w
  9791  166F  160A  118A  21EF  160A  118A  	fcall	_sendRGB
  9792  1674  0876               	movf	LED_Color@brt,w
  9793  1675  00F4               	movwf	??_LED_Color
  9794  1676  0874               	movf	??_LED_Color,w
  9795  1677  00F1               	movwf	sendRGB@g
  9796  1678  0876               	movf	LED_Color@brt,w
  9797  1679  00F5               	movwf	??_LED_Color+1
  9798  167A  0875               	movf	??_LED_Color+1,w
  9799  167B  00F2               	movwf	sendRGB@b
  9800  167C  0876               	movf	LED_Color@brt,w
  9801  167D  160A  118A  21EF  160A  118A  	fcall	_sendRGB
  9802                           
  9803                           ;LED.c: 12:     sendRGB(brt,0,0); sendRGB(0,brt,0); sendRGB(0,0,brt); sendRGB(brt,brt,0)
      +                          ; sendRGB(brt,0,brt); sendRGB(0,brt,brt); sendRGB(brt,brt,brt); sendRGB(0,0,0);
  9804  1682  01F1               	clrf	sendRGB@g
  9805  1683  01F2               	clrf	sendRGB@b
  9806  1684  0876               	movf	LED_Color@brt,w
  9807  1685  160A  118A  21EF  160A  118A  	fcall	_sendRGB
  9808  168A  0876               	movf	LED_Color@brt,w
  9809  168B  00F4               	movwf	??_LED_Color
  9810  168C  0874               	movf	??_LED_Color,w
  9811  168D  00F1               	movwf	sendRGB@g
  9812  168E  01F2               	clrf	sendRGB@b
  9813  168F  3000               	movlw	0
  9814  1690  160A  118A  21EF  160A  118A  	fcall	_sendRGB
  9815  1695  01F1               	clrf	sendRGB@g
  9816  1696  0876               	movf	LED_Color@brt,w
  9817  1697  00F4               	movwf	??_LED_Color
  9818  1698  0874               	movf	??_LED_Color,w
  9819  1699  00F2               	movwf	sendRGB@b
  9820  169A  3000               	movlw	0
  9821  169B  160A  118A  21EF  160A  118A  	fcall	_sendRGB
  9822  16A0  0876               	movf	LED_Color@brt,w
  9823  16A1  00F4               	movwf	??_LED_Color
  9824  16A2  0874               	movf	??_LED_Color,w
  9825  16A3  00F1               	movwf	sendRGB@g
  9826  16A4  01F2               	clrf	sendRGB@b
  9827  16A5  0876               	movf	LED_Color@brt,w
  9828  16A6  160A  118A  21EF  160A  118A  	fcall	_sendRGB
  9829  16AB  01F1               	clrf	sendRGB@g
  9830  16AC  0876               	movf	LED_Color@brt,w
  9831  16AD  00F4               	movwf	??_LED_Color
  9832  16AE  0874               	movf	??_LED_Color,w
  9833  16AF  00F2               	movwf	sendRGB@b
  9834  16B0  0876               	movf	LED_Color@brt,w
  9835  16B1  160A  118A  21EF  160A  118A  	fcall	_sendRGB
  9836  16B6  0876               	movf	LED_Color@brt,w
  9837  16B7  00F4               	movwf	??_LED_Color
  9838  16B8  0874               	movf	??_LED_Color,w
  9839  16B9  00F1               	movwf	sendRGB@g
  9840  16BA  0876               	movf	LED_Color@brt,w
  9841  16BB  00F5               	movwf	??_LED_Color+1
  9842  16BC  0875               	movf	??_LED_Color+1,w
  9843  16BD  00F2               	movwf	sendRGB@b
  9844  16BE  3000               	movlw	0
  9845  16BF  160A  118A  21EF  160A  118A  	fcall	_sendRGB
  9846  16C4  0876               	movf	LED_Color@brt,w
  9847  16C5  00F4               	movwf	??_LED_Color
  9848  16C6  0874               	movf	??_LED_Color,w
  9849  16C7  00F1               	movwf	sendRGB@g
  9850  16C8  0876               	movf	LED_Color@brt,w
  9851  16C9  00F5               	movwf	??_LED_Color+1
  9852  16CA  0875               	movf	??_LED_Color+1,w
  9853  16CB  00F2               	movwf	sendRGB@b
  9854  16CC  0876               	movf	LED_Color@brt,w
  9855  16CD  160A  118A  21EF  160A  118A  	fcall	_sendRGB
  9856  16D2  01F1               	clrf	sendRGB@g
  9857  16D3  01F2               	clrf	sendRGB@b
  9858  16D4  3000               	movlw	0
  9859  16D5  160A  118A  21EF  160A  118A  	fcall	_sendRGB
  9860  16DA                     l440:
  9861  16DA  0008               	return
  9862  16DB                     __end_of_LED_Color:
  9863                           
  9864                           	psect	text41
  9865  11EF                     __ptext41:	
  9866 ;; *************** function _sendRGB *****************
  9867 ;; Defined at:
  9868 ;;		line 30 in file "LED.c"
  9869 ;; Parameters:    Size  Location     Type
  9870 ;;  r               1    wreg     unsigned char 
  9871 ;;  g               1    1[COMMON] unsigned char 
  9872 ;;  b               1    2[COMMON] unsigned char 
  9873 ;; Auto vars:     Size  Location     Type
  9874 ;;  r               1    3[COMMON] unsigned char 
  9875 ;; Return value:  Size  Location     Type
  9876 ;;                  1    wreg      void 
  9877 ;; Registers used:
  9878 ;;		wreg, status,2, status,0, pclath, cstack
  9879 ;; Tracked objects:
  9880 ;;		On entry : 0/0
  9881 ;;		On exit  : 0/0
  9882 ;;		Unchanged: 0/0
  9883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9884 ;;      Params:         2       0       0       0       0
  9885 ;;      Locals:         1       0       0       0       0
  9886 ;;      Temps:          0       0       0       0       0
  9887 ;;      Totals:         3       0       0       0       0
  9888 ;;Total ram usage:        3 bytes
  9889 ;; Hardware stack levels used: 1
  9890 ;; Hardware stack levels required when called: 1
  9891 ;; This function calls:
  9892 ;;		_sendByte
  9893 ;; This function is called by:
  9894 ;;		_LED_Color
  9895 ;; This function uses a non-reentrant model
  9896 ;;
  9897                           
  9898  11EF                     _sendRGB:	
  9899                           ;psect for function _sendRGB
  9900                           
  9901                           
  9902                           ;incstack = 0
  9903                           ; Regs used in _sendRGB: [wreg+status,2+status,0+pclath+cstack]
  9904                           ;sendRGB@r stored from wreg
  9905  11EF  00F3               	movwf	sendRGB@r
  9906  11F0                     l2679:
  9907                           
  9908                           ;LED.c: 32:     sendByte(g);
  9909  11F0  0871               	movf	sendRGB@g,w
  9910  11F1  120A  158A  2216  160A  118A  	fcall	_sendByte
  9911                           
  9912                           ;LED.c: 33:     sendByte(r);
  9913  11F6  0873               	movf	sendRGB@r,w
  9914  11F7  120A  158A  2216  160A  118A  	fcall	_sendByte
  9915                           
  9916                           ;LED.c: 34:     sendByte(b);
  9917  11FC  0872               	movf	sendRGB@b,w
  9918  11FD  120A  158A  2216  160A  118A  	fcall	_sendByte
  9919  1202                     l462:
  9920  1202  0008               	return
  9921  1203                     __end_of_sendRGB:
  9922                           
  9923                           	psect	text42
  9924  0A16                     __ptext42:	
  9925 ;; *************** function _sendByte *****************
  9926 ;; Defined at:
  9927 ;;		line 16 in file "LED.c"
  9928 ;; Parameters:    Size  Location     Type
  9929 ;;  b               1    wreg     unsigned char 
  9930 ;; Auto vars:     Size  Location     Type
  9931 ;;  b               1    0[COMMON] unsigned char 
  9932 ;; Return value:  Size  Location     Type
  9933 ;;                  1    wreg      void 
  9934 ;; Registers used:
  9935 ;;		wreg
  9936 ;; Tracked objects:
  9937 ;;		On entry : 0/0
  9938 ;;		On exit  : 0/0
  9939 ;;		Unchanged: 0/0
  9940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9941 ;;      Params:         0       0       0       0       0
  9942 ;;      Locals:         1       0       0       0       0
  9943 ;;      Temps:          0       0       0       0       0
  9944 ;;      Totals:         1       0       0       0       0
  9945 ;;Total ram usage:        1 bytes
  9946 ;; Hardware stack levels used: 1
  9947 ;; This function calls:
  9948 ;;		Nothing
  9949 ;; This function is called by:
  9950 ;;		_sendRGB
  9951 ;; This function uses a non-reentrant model
  9952 ;;
  9953                           
  9954  0A16                     _sendByte:	
  9955                           ;psect for function _sendByte
  9956                           
  9957                           
  9958                           ;incstack = 0
  9959                           ; Regs used in _sendByte: [wreg]
  9960                           ;sendByte@b stored from wreg
  9961  0A16  00F0               	movwf	sendByte@b
  9962  0A17                     l2625:
  9963                           
  9964                           ;LED.c: 18:     if (b & 0b10000000) { RC3=1; __nop(); __nop(); __nop(); RC3=1; __nop(); 
      +                          __nop(); __nop(); __nop(); RC3=0; __nop(); __nop(); __nop(); __nop();; } else { RC3=1; _
      +                          _nop(); __nop(); __nop(); RC3=0; __nop(); __nop(); __nop(); __nop(); RC3=0; __nop(); __n
      +                          op(); __nop(); __nop();; }
  9965  0A17  1FF0               	btfss	sendByte@b,7
  9966  0A18  2A1A               	goto	u2251
  9967  0A19  2A1B               	goto	u2250
  9968  0A1A                     u2251:
  9969  0A1A  2A30               	goto	l443
  9970  0A1B                     u2250:
  9971  0A1B                     l2627:
  9972  0A1B  1283               	bcf	3,5	;RP0=0, select bank0
  9973  0A1C  1303               	bcf	3,6	;RP1=0, select bank0
  9974  0A1D  1587               	bsf	7,3	;volatile
  9975  0A1E  0000               	nop
  9976  0A1F  0000               	nop
  9977  0A20  0000               	nop
  9978  0A21  1283               	bcf	3,5	;RP0=0, select bank0
  9979  0A22  1303               	bcf	3,6	;RP1=0, select bank0
  9980  0A23  1587               	bsf	7,3	;volatile
  9981  0A24  0000               	nop
  9982  0A25  0000               	nop
  9983  0A26  0000               	nop
  9984  0A27  0000               	nop
  9985  0A28  1283               	bcf	3,5	;RP0=0, select bank0
  9986  0A29  1303               	bcf	3,6	;RP1=0, select bank0
  9987  0A2A  1187               	bcf	7,3	;volatile
  9988  0A2B  0000               	nop
  9989  0A2C  0000               	nop
  9990  0A2D  0000               	nop
  9991  0A2E  0000               	nop
  9992  0A2F  2A44               	goto	l444
  9993  0A30                     l443:
  9994  0A30  1283               	bcf	3,5	;RP0=0, select bank0
  9995  0A31  1303               	bcf	3,6	;RP1=0, select bank0
  9996  0A32  1587               	bsf	7,3	;volatile
  9997  0A33  0000               	nop
  9998  0A34  0000               	nop
  9999  0A35  0000               	nop
 10000  0A36  1283               	bcf	3,5	;RP0=0, select bank0
 10001  0A37  1303               	bcf	3,6	;RP1=0, select bank0
 10002  0A38  1187               	bcf	7,3	;volatile
 10003  0A39  0000               	nop
 10004  0A3A  0000               	nop
 10005  0A3B  0000               	nop
 10006  0A3C  0000               	nop
 10007  0A3D  1283               	bcf	3,5	;RP0=0, select bank0
 10008  0A3E  1303               	bcf	3,6	;RP1=0, select bank0
 10009  0A3F  1187               	bcf	7,3	;volatile
 10010  0A40  0000               	nop
 10011  0A41  0000               	nop
 10012  0A42  0000               	nop
 10013  0A43  0000               	nop
 10014  0A44                     l444:
 10015                           
 10016                           ;LED.c: 19:     if (b & 0b01000000) { RC3=1; __nop(); __nop(); __nop(); RC3=1; __nop(); 
      +                          __nop(); __nop(); __nop(); RC3=0; __nop(); __nop(); __nop(); __nop();; } else { RC3=1; _
      +                          _nop(); __nop(); __nop(); RC3=0; __nop(); __nop(); __nop(); __nop(); RC3=0; __nop(); __n
      +                          op(); __nop(); __nop();; }
 10017  0A44  1F70               	btfss	sendByte@b,6
 10018  0A45  2A47               	goto	u2261
 10019  0A46  2A48               	goto	u2260
 10020  0A47                     u2261:
 10021  0A47  2A5D               	goto	l445
 10022  0A48                     u2260:
 10023  0A48                     l2629:
 10024  0A48  1283               	bcf	3,5	;RP0=0, select bank0
 10025  0A49  1303               	bcf	3,6	;RP1=0, select bank0
 10026  0A4A  1587               	bsf	7,3	;volatile
 10027  0A4B  0000               	nop
 10028  0A4C  0000               	nop
 10029  0A4D  0000               	nop
 10030  0A4E  1283               	bcf	3,5	;RP0=0, select bank0
 10031  0A4F  1303               	bcf	3,6	;RP1=0, select bank0
 10032  0A50  1587               	bsf	7,3	;volatile
 10033  0A51  0000               	nop
 10034  0A52  0000               	nop
 10035  0A53  0000               	nop
 10036  0A54  0000               	nop
 10037  0A55  1283               	bcf	3,5	;RP0=0, select bank0
 10038  0A56  1303               	bcf	3,6	;RP1=0, select bank0
 10039  0A57  1187               	bcf	7,3	;volatile
 10040  0A58  0000               	nop
 10041  0A59  0000               	nop
 10042  0A5A  0000               	nop
 10043  0A5B  0000               	nop
 10044  0A5C  2A71               	goto	l446
 10045  0A5D                     l445:
 10046  0A5D  1283               	bcf	3,5	;RP0=0, select bank0
 10047  0A5E  1303               	bcf	3,6	;RP1=0, select bank0
 10048  0A5F  1587               	bsf	7,3	;volatile
 10049  0A60  0000               	nop
 10050  0A61  0000               	nop
 10051  0A62  0000               	nop
 10052  0A63  1283               	bcf	3,5	;RP0=0, select bank0
 10053  0A64  1303               	bcf	3,6	;RP1=0, select bank0
 10054  0A65  1187               	bcf	7,3	;volatile
 10055  0A66  0000               	nop
 10056  0A67  0000               	nop
 10057  0A68  0000               	nop
 10058  0A69  0000               	nop
 10059  0A6A  1283               	bcf	3,5	;RP0=0, select bank0
 10060  0A6B  1303               	bcf	3,6	;RP1=0, select bank0
 10061  0A6C  1187               	bcf	7,3	;volatile
 10062  0A6D  0000               	nop
 10063  0A6E  0000               	nop
 10064  0A6F  0000               	nop
 10065  0A70  0000               	nop
 10066  0A71                     l446:
 10067                           
 10068                           ;LED.c: 20:     if (b & 0b00100000) { RC3=1; __nop(); __nop(); __nop(); RC3=1; __nop(); 
      +                          __nop(); __nop(); __nop(); RC3=0; __nop(); __nop(); __nop(); __nop();; } else { RC3=1; _
      +                          _nop(); __nop(); __nop(); RC3=0; __nop(); __nop(); __nop(); __nop(); RC3=0; __nop(); __n
      +                          op(); __nop(); __nop();; }
 10069  0A71  1EF0               	btfss	sendByte@b,5
 10070  0A72  2A74               	goto	u2271
 10071  0A73  2A75               	goto	u2270
 10072  0A74                     u2271:
 10073  0A74  2A8A               	goto	l447
 10074  0A75                     u2270:
 10075  0A75                     l2631:
 10076  0A75  1283               	bcf	3,5	;RP0=0, select bank0
 10077  0A76  1303               	bcf	3,6	;RP1=0, select bank0
 10078  0A77  1587               	bsf	7,3	;volatile
 10079  0A78  0000               	nop
 10080  0A79  0000               	nop
 10081  0A7A  0000               	nop
 10082  0A7B  1283               	bcf	3,5	;RP0=0, select bank0
 10083  0A7C  1303               	bcf	3,6	;RP1=0, select bank0
 10084  0A7D  1587               	bsf	7,3	;volatile
 10085  0A7E  0000               	nop
 10086  0A7F  0000               	nop
 10087  0A80  0000               	nop
 10088  0A81  0000               	nop
 10089  0A82  1283               	bcf	3,5	;RP0=0, select bank0
 10090  0A83  1303               	bcf	3,6	;RP1=0, select bank0
 10091  0A84  1187               	bcf	7,3	;volatile
 10092  0A85  0000               	nop
 10093  0A86  0000               	nop
 10094  0A87  0000               	nop
 10095  0A88  0000               	nop
 10096  0A89  2A9E               	goto	l448
 10097  0A8A                     l447:
 10098  0A8A  1283               	bcf	3,5	;RP0=0, select bank0
 10099  0A8B  1303               	bcf	3,6	;RP1=0, select bank0
 10100  0A8C  1587               	bsf	7,3	;volatile
 10101  0A8D  0000               	nop
 10102  0A8E  0000               	nop
 10103  0A8F  0000               	nop
 10104  0A90  1283               	bcf	3,5	;RP0=0, select bank0
 10105  0A91  1303               	bcf	3,6	;RP1=0, select bank0
 10106  0A92  1187               	bcf	7,3	;volatile
 10107  0A93  0000               	nop
 10108  0A94  0000               	nop
 10109  0A95  0000               	nop
 10110  0A96  0000               	nop
 10111  0A97  1283               	bcf	3,5	;RP0=0, select bank0
 10112  0A98  1303               	bcf	3,6	;RP1=0, select bank0
 10113  0A99  1187               	bcf	7,3	;volatile
 10114  0A9A  0000               	nop
 10115  0A9B  0000               	nop
 10116  0A9C  0000               	nop
 10117  0A9D  0000               	nop
 10118  0A9E                     l448:
 10119                           
 10120                           ;LED.c: 21:     if (b & 0b00010000) { RC3=1; __nop(); __nop(); __nop(); RC3=1; __nop(); 
      +                          __nop(); __nop(); __nop(); RC3=0; __nop(); __nop(); __nop(); __nop();; } else { RC3=1; _
      +                          _nop(); __nop(); __nop(); RC3=0; __nop(); __nop(); __nop(); __nop(); RC3=0; __nop(); __n
      +                          op(); __nop(); __nop();; }
 10121  0A9E  1E70               	btfss	sendByte@b,4
 10122  0A9F  2AA1               	goto	u2281
 10123  0AA0  2AA2               	goto	u2280
 10124  0AA1                     u2281:
 10125  0AA1  2AB7               	goto	l449
 10126  0AA2                     u2280:
 10127  0AA2                     l2633:
 10128  0AA2  1283               	bcf	3,5	;RP0=0, select bank0
 10129  0AA3  1303               	bcf	3,6	;RP1=0, select bank0
 10130  0AA4  1587               	bsf	7,3	;volatile
 10131  0AA5  0000               	nop
 10132  0AA6  0000               	nop
 10133  0AA7  0000               	nop
 10134  0AA8  1283               	bcf	3,5	;RP0=0, select bank0
 10135  0AA9  1303               	bcf	3,6	;RP1=0, select bank0
 10136  0AAA  1587               	bsf	7,3	;volatile
 10137  0AAB  0000               	nop
 10138  0AAC  0000               	nop
 10139  0AAD  0000               	nop
 10140  0AAE  0000               	nop
 10141  0AAF  1283               	bcf	3,5	;RP0=0, select bank0
 10142  0AB0  1303               	bcf	3,6	;RP1=0, select bank0
 10143  0AB1  1187               	bcf	7,3	;volatile
 10144  0AB2  0000               	nop
 10145  0AB3  0000               	nop
 10146  0AB4  0000               	nop
 10147  0AB5  0000               	nop
 10148  0AB6  2ACB               	goto	l450
 10149  0AB7                     l449:
 10150  0AB7  1283               	bcf	3,5	;RP0=0, select bank0
 10151  0AB8  1303               	bcf	3,6	;RP1=0, select bank0
 10152  0AB9  1587               	bsf	7,3	;volatile
 10153  0ABA  0000               	nop
 10154  0ABB  0000               	nop
 10155  0ABC  0000               	nop
 10156  0ABD  1283               	bcf	3,5	;RP0=0, select bank0
 10157  0ABE  1303               	bcf	3,6	;RP1=0, select bank0
 10158  0ABF  1187               	bcf	7,3	;volatile
 10159  0AC0  0000               	nop
 10160  0AC1  0000               	nop
 10161  0AC2  0000               	nop
 10162  0AC3  0000               	nop
 10163  0AC4  1283               	bcf	3,5	;RP0=0, select bank0
 10164  0AC5  1303               	bcf	3,6	;RP1=0, select bank0
 10165  0AC6  1187               	bcf	7,3	;volatile
 10166  0AC7  0000               	nop
 10167  0AC8  0000               	nop
 10168  0AC9  0000               	nop
 10169  0ACA  0000               	nop
 10170  0ACB                     l450:
 10171                           
 10172                           ;LED.c: 22:     if (b & 0b00001000) { RC3=1; __nop(); __nop(); __nop(); RC3=1; __nop(); 
      +                          __nop(); __nop(); __nop(); RC3=0; __nop(); __nop(); __nop(); __nop();; } else { RC3=1; _
      +                          _nop(); __nop(); __nop(); RC3=0; __nop(); __nop(); __nop(); __nop(); RC3=0; __nop(); __n
      +                          op(); __nop(); __nop();; }
 10173  0ACB  1DF0               	btfss	sendByte@b,3
 10174  0ACC  2ACE               	goto	u2291
 10175  0ACD  2ACF               	goto	u2290
 10176  0ACE                     u2291:
 10177  0ACE  2AE4               	goto	l451
 10178  0ACF                     u2290:
 10179  0ACF                     l2635:
 10180  0ACF  1283               	bcf	3,5	;RP0=0, select bank0
 10181  0AD0  1303               	bcf	3,6	;RP1=0, select bank0
 10182  0AD1  1587               	bsf	7,3	;volatile
 10183  0AD2  0000               	nop
 10184  0AD3  0000               	nop
 10185  0AD4  0000               	nop
 10186  0AD5  1283               	bcf	3,5	;RP0=0, select bank0
 10187  0AD6  1303               	bcf	3,6	;RP1=0, select bank0
 10188  0AD7  1587               	bsf	7,3	;volatile
 10189  0AD8  0000               	nop
 10190  0AD9  0000               	nop
 10191  0ADA  0000               	nop
 10192  0ADB  0000               	nop
 10193  0ADC  1283               	bcf	3,5	;RP0=0, select bank0
 10194  0ADD  1303               	bcf	3,6	;RP1=0, select bank0
 10195  0ADE  1187               	bcf	7,3	;volatile
 10196  0ADF  0000               	nop
 10197  0AE0  0000               	nop
 10198  0AE1  0000               	nop
 10199  0AE2  0000               	nop
 10200  0AE3  2AF8               	goto	l452
 10201  0AE4                     l451:
 10202  0AE4  1283               	bcf	3,5	;RP0=0, select bank0
 10203  0AE5  1303               	bcf	3,6	;RP1=0, select bank0
 10204  0AE6  1587               	bsf	7,3	;volatile
 10205  0AE7  0000               	nop
 10206  0AE8  0000               	nop
 10207  0AE9  0000               	nop
 10208  0AEA  1283               	bcf	3,5	;RP0=0, select bank0
 10209  0AEB  1303               	bcf	3,6	;RP1=0, select bank0
 10210  0AEC  1187               	bcf	7,3	;volatile
 10211  0AED  0000               	nop
 10212  0AEE  0000               	nop
 10213  0AEF  0000               	nop
 10214  0AF0  0000               	nop
 10215  0AF1  1283               	bcf	3,5	;RP0=0, select bank0
 10216  0AF2  1303               	bcf	3,6	;RP1=0, select bank0
 10217  0AF3  1187               	bcf	7,3	;volatile
 10218  0AF4  0000               	nop
 10219  0AF5  0000               	nop
 10220  0AF6  0000               	nop
 10221  0AF7  0000               	nop
 10222  0AF8                     l452:
 10223                           
 10224                           ;LED.c: 23:     if (b & 0b00000100) { RC3=1; __nop(); __nop(); __nop(); RC3=1; __nop(); 
      +                          __nop(); __nop(); __nop(); RC3=0; __nop(); __nop(); __nop(); __nop();; } else { RC3=1; _
      +                          _nop(); __nop(); __nop(); RC3=0; __nop(); __nop(); __nop(); __nop(); RC3=0; __nop(); __n
      +                          op(); __nop(); __nop();; }
 10225  0AF8  1D70               	btfss	sendByte@b,2
 10226  0AF9  2AFB               	goto	u2301
 10227  0AFA  2AFC               	goto	u2300
 10228  0AFB                     u2301:
 10229  0AFB  2B11               	goto	l453
 10230  0AFC                     u2300:
 10231  0AFC                     l2637:
 10232  0AFC  1283               	bcf	3,5	;RP0=0, select bank0
 10233  0AFD  1303               	bcf	3,6	;RP1=0, select bank0
 10234  0AFE  1587               	bsf	7,3	;volatile
 10235  0AFF  0000               	nop
 10236  0B00  0000               	nop
 10237  0B01  0000               	nop
 10238  0B02  1283               	bcf	3,5	;RP0=0, select bank0
 10239  0B03  1303               	bcf	3,6	;RP1=0, select bank0
 10240  0B04  1587               	bsf	7,3	;volatile
 10241  0B05  0000               	nop
 10242  0B06  0000               	nop
 10243  0B07  0000               	nop
 10244  0B08  0000               	nop
 10245  0B09  1283               	bcf	3,5	;RP0=0, select bank0
 10246  0B0A  1303               	bcf	3,6	;RP1=0, select bank0
 10247  0B0B  1187               	bcf	7,3	;volatile
 10248  0B0C  0000               	nop
 10249  0B0D  0000               	nop
 10250  0B0E  0000               	nop
 10251  0B0F  0000               	nop
 10252  0B10  2B25               	goto	l454
 10253  0B11                     l453:
 10254  0B11  1283               	bcf	3,5	;RP0=0, select bank0
 10255  0B12  1303               	bcf	3,6	;RP1=0, select bank0
 10256  0B13  1587               	bsf	7,3	;volatile
 10257  0B14  0000               	nop
 10258  0B15  0000               	nop
 10259  0B16  0000               	nop
 10260  0B17  1283               	bcf	3,5	;RP0=0, select bank0
 10261  0B18  1303               	bcf	3,6	;RP1=0, select bank0
 10262  0B19  1187               	bcf	7,3	;volatile
 10263  0B1A  0000               	nop
 10264  0B1B  0000               	nop
 10265  0B1C  0000               	nop
 10266  0B1D  0000               	nop
 10267  0B1E  1283               	bcf	3,5	;RP0=0, select bank0
 10268  0B1F  1303               	bcf	3,6	;RP1=0, select bank0
 10269  0B20  1187               	bcf	7,3	;volatile
 10270  0B21  0000               	nop
 10271  0B22  0000               	nop
 10272  0B23  0000               	nop
 10273  0B24  0000               	nop
 10274  0B25                     l454:
 10275                           
 10276                           ;LED.c: 24:     if (b & 0b00000010) { RC3=1; __nop(); __nop(); __nop(); RC3=1; __nop(); 
      +                          __nop(); __nop(); __nop(); RC3=0; __nop(); __nop(); __nop(); __nop();; } else { RC3=1; _
      +                          _nop(); __nop(); __nop(); RC3=0; __nop(); __nop(); __nop(); __nop(); RC3=0; __nop(); __n
      +                          op(); __nop(); __nop();; }
 10277  0B25  1CF0               	btfss	sendByte@b,1
 10278  0B26  2B28               	goto	u2311
 10279  0B27  2B29               	goto	u2310
 10280  0B28                     u2311:
 10281  0B28  2B3E               	goto	l455
 10282  0B29                     u2310:
 10283  0B29                     l2639:
 10284  0B29  1283               	bcf	3,5	;RP0=0, select bank0
 10285  0B2A  1303               	bcf	3,6	;RP1=0, select bank0
 10286  0B2B  1587               	bsf	7,3	;volatile
 10287  0B2C  0000               	nop
 10288  0B2D  0000               	nop
 10289  0B2E  0000               	nop
 10290  0B2F  1283               	bcf	3,5	;RP0=0, select bank0
 10291  0B30  1303               	bcf	3,6	;RP1=0, select bank0
 10292  0B31  1587               	bsf	7,3	;volatile
 10293  0B32  0000               	nop
 10294  0B33  0000               	nop
 10295  0B34  0000               	nop
 10296  0B35  0000               	nop
 10297  0B36  1283               	bcf	3,5	;RP0=0, select bank0
 10298  0B37  1303               	bcf	3,6	;RP1=0, select bank0
 10299  0B38  1187               	bcf	7,3	;volatile
 10300  0B39  0000               	nop
 10301  0B3A  0000               	nop
 10302  0B3B  0000               	nop
 10303  0B3C  0000               	nop
 10304  0B3D  2B52               	goto	l456
 10305  0B3E                     l455:
 10306  0B3E  1283               	bcf	3,5	;RP0=0, select bank0
 10307  0B3F  1303               	bcf	3,6	;RP1=0, select bank0
 10308  0B40  1587               	bsf	7,3	;volatile
 10309  0B41  0000               	nop
 10310  0B42  0000               	nop
 10311  0B43  0000               	nop
 10312  0B44  1283               	bcf	3,5	;RP0=0, select bank0
 10313  0B45  1303               	bcf	3,6	;RP1=0, select bank0
 10314  0B46  1187               	bcf	7,3	;volatile
 10315  0B47  0000               	nop
 10316  0B48  0000               	nop
 10317  0B49  0000               	nop
 10318  0B4A  0000               	nop
 10319  0B4B  1283               	bcf	3,5	;RP0=0, select bank0
 10320  0B4C  1303               	bcf	3,6	;RP1=0, select bank0
 10321  0B4D  1187               	bcf	7,3	;volatile
 10322  0B4E  0000               	nop
 10323  0B4F  0000               	nop
 10324  0B50  0000               	nop
 10325  0B51  0000               	nop
 10326  0B52                     l456:
 10327                           
 10328                           ;LED.c: 25:     if (b & 0b00000001) { RC3=1; __nop(); __nop(); __nop(); RC3=1; __nop(); 
      +                          __nop(); __nop(); __nop(); RC3=0; __nop(); __nop(); __nop(); __nop();; } else { RC3=1; _
      +                          _nop(); __nop(); __nop(); RC3=0; __nop(); __nop(); __nop(); __nop(); RC3=0; __nop(); __n
      +                          op(); __nop(); __nop();; }
 10329  0B52  1C70               	btfss	sendByte@b,0
 10330  0B53  2B55               	goto	u2321
 10331  0B54  2B56               	goto	u2320
 10332  0B55                     u2321:
 10333  0B55  2B6B               	goto	l457
 10334  0B56                     u2320:
 10335  0B56                     l2641:
 10336  0B56  1283               	bcf	3,5	;RP0=0, select bank0
 10337  0B57  1303               	bcf	3,6	;RP1=0, select bank0
 10338  0B58  1587               	bsf	7,3	;volatile
 10339  0B59  0000               	nop
 10340  0B5A  0000               	nop
 10341  0B5B  0000               	nop
 10342  0B5C  1283               	bcf	3,5	;RP0=0, select bank0
 10343  0B5D  1303               	bcf	3,6	;RP1=0, select bank0
 10344  0B5E  1587               	bsf	7,3	;volatile
 10345  0B5F  0000               	nop
 10346  0B60  0000               	nop
 10347  0B61  0000               	nop
 10348  0B62  0000               	nop
 10349  0B63  1283               	bcf	3,5	;RP0=0, select bank0
 10350  0B64  1303               	bcf	3,6	;RP1=0, select bank0
 10351  0B65  1187               	bcf	7,3	;volatile
 10352  0B66  0000               	nop
 10353  0B67  0000               	nop
 10354  0B68  0000               	nop
 10355  0B69  0000               	nop
 10356  0B6A  2B7F               	goto	l459
 10357  0B6B                     l457:
 10358  0B6B  1283               	bcf	3,5	;RP0=0, select bank0
 10359  0B6C  1303               	bcf	3,6	;RP1=0, select bank0
 10360  0B6D  1587               	bsf	7,3	;volatile
 10361  0B6E  0000               	nop
 10362  0B6F  0000               	nop
 10363  0B70  0000               	nop
 10364  0B71  1283               	bcf	3,5	;RP0=0, select bank0
 10365  0B72  1303               	bcf	3,6	;RP1=0, select bank0
 10366  0B73  1187               	bcf	7,3	;volatile
 10367  0B74  0000               	nop
 10368  0B75  0000               	nop
 10369  0B76  0000               	nop
 10370  0B77  0000               	nop
 10371  0B78  1283               	bcf	3,5	;RP0=0, select bank0
 10372  0B79  1303               	bcf	3,6	;RP1=0, select bank0
 10373  0B7A  1187               	bcf	7,3	;volatile
 10374  0B7B  0000               	nop
 10375  0B7C  0000               	nop
 10376  0B7D  0000               	nop
 10377  0B7E  0000               	nop
 10378  0B7F                     l459:
 10379  0B7F  0008               	return
 10380  0B80                     __end_of_sendByte:
 10381                           
 10382                           	psect	text43
 10383  1569                     __ptext43:	
 10384 ;; *************** function _ChangeBrightness *****************
 10385 ;; Defined at:
 10386 ;;		line 31 in file "RotaryEncoder.c"
 10387 ;; Parameters:    Size  Location     Type
 10388 ;;		None
 10389 ;; Auto vars:     Size  Location     Type
 10390 ;;		None
 10391 ;; Return value:  Size  Location     Type
 10392 ;;                  1    wreg      void 
 10393 ;; Registers used:
 10394 ;;		wreg, status,2, status,0
 10395 ;; Tracked objects:
 10396 ;;		On entry : 0/0
 10397 ;;		On exit  : 0/0
 10398 ;;		Unchanged: 0/0
 10399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10400 ;;      Params:         0       0       0       0       0
 10401 ;;      Locals:         0       0       0       0       0
 10402 ;;      Temps:          2       0       0       0       0
 10403 ;;      Totals:         2       0       0       0       0
 10404 ;;Total ram usage:        2 bytes
 10405 ;; Hardware stack levels used: 1
 10406 ;; This function calls:
 10407 ;;		Nothing
 10408 ;; This function is called by:
 10409 ;;		_main
 10410 ;; This function uses a non-reentrant model
 10411 ;;
 10412                           
 10413  1569                     _ChangeBrightness:	
 10414                           ;psect for function _ChangeBrightness
 10415                           
 10416  1569                     l3505:	
 10417                           ;incstack = 0
 10418                           ; Regs used in _ChangeBrightness: [wreg+status,2+status,0]
 10419                           
 10420                           
 10421                           ;RotaryEncoder.c: 33:     lastStateCLK = PORTBbits.RB7;
 10422  1569  1283               	bcf	3,5	;RP0=0, select bank0
 10423  156A  1303               	bcf	3,6	;RP1=0, select bank0
 10424  156B  0D06               	rlf	6,w	;volatile
 10425  156C  0D06               	rlf	6,w	;volatile
 10426  156D  3901               	andlw	1
 10427  156E  00F0               	movwf	??_ChangeBrightness
 10428  156F  01F1               	clrf	??_ChangeBrightness+1
 10429  1570  0870               	movf	??_ChangeBrightness,w
 10430  1571  1683               	bsf	3,5	;RP0=1, select bank1
 10431  1572  1303               	bcf	3,6	;RP1=0, select bank1
 10432  1573  00A4               	movwf	_lastStateCLK^(0+128)
 10433  1574  0871               	movf	??_ChangeBrightness+1,w
 10434  1575  00A5               	movwf	(_lastStateCLK+1)^(0+128)
 10435  1576                     l3507:
 10436                           
 10437                           ;RotaryEncoder.c: 34:     CCPR1L = brightness;
 10438  1576  1283               	bcf	3,5	;RP0=0, select bank0
 10439  1577  1303               	bcf	3,6	;RP1=0, select bank0
 10440  1578  086B               	movf	_brightness,w
 10441  1579  0095               	movwf	21	;volatile
 10442  157A                     l3509:
 10443                           
 10444                           ;RotaryEncoder.c: 36:     if(PORTBbits.RB7 != lastStateCLK && PORTBbits.RB7 == 1){
 10445  157A  0D06               	rlf	6,w	;volatile
 10446  157B  0D06               	rlf	6,w	;volatile
 10447  157C  3901               	andlw	1
 10448  157D  00F0               	movwf	??_ChangeBrightness
 10449  157E  01F1               	clrf	??_ChangeBrightness+1
 10450  157F  1683               	bsf	3,5	;RP0=1, select bank1
 10451  1580  1303               	bcf	3,6	;RP1=0, select bank1
 10452  1581  0825               	movf	(_lastStateCLK+1)^(0+128),w
 10453  1582  0671               	xorwf	??_ChangeBrightness+1,w
 10454  1583  1D03               	skipz
 10455  1584  2D87               	goto	u3955
 10456  1585  0824               	movf	_lastStateCLK^(0+128),w
 10457  1586  0670               	xorwf	??_ChangeBrightness,w
 10458  1587                     u3955:
 10459  1587  1903               	skipnz
 10460  1588  2D8A               	goto	u3951
 10461  1589  2D8B               	goto	u3950
 10462  158A                     u3951:
 10463  158A  2DCE               	goto	l3529
 10464  158B                     u3950:
 10465  158B                     l3511:
 10466  158B  1283               	bcf	3,5	;RP0=0, select bank0
 10467  158C  1303               	bcf	3,6	;RP1=0, select bank0
 10468  158D  1F86               	btfss	6,7	;volatile
 10469  158E  2D90               	goto	u3961
 10470  158F  2D91               	goto	u3960
 10471  1590                     u3961:
 10472  1590  2DCE               	goto	l3529
 10473  1591                     u3960:
 10474  1591                     l3513:
 10475                           
 10476                           ;RotaryEncoder.c: 38:         if(PORTBbits.RB0 != PORTBbits.RB7 && brightness > 0){
 10477  1591  1B86               	btfsc	6,7	;volatile
 10478  1592  2D94               	goto	u3971
 10479  1593  2D96               	goto	u3970
 10480  1594                     u3971:
 10481  1594  3001               	movlw	1
 10482  1595  2D97               	goto	u3972
 10483  1596                     u3970:
 10484  1596  3000               	movlw	0
 10485  1597                     u3972:
 10486  1597  00F0               	movwf	??_ChangeBrightness
 10487  1598  1806               	btfsc	6,0	;volatile
 10488  1599  2D9B               	goto	u3981
 10489  159A  2D9D               	goto	u3980
 10490  159B                     u3981:
 10491  159B  3001               	movlw	1
 10492  159C  2D9E               	goto	u3982
 10493  159D                     u3980:
 10494  159D  3000               	movlw	0
 10495  159E                     u3982:
 10496  159E  0670               	xorwf	??_ChangeBrightness,w
 10497  159F  1903               	skipnz
 10498  15A0  2DA2               	goto	u3991
 10499  15A1  2DA3               	goto	u3990
 10500  15A2                     u3991:
 10501  15A2  2DB0               	goto	l3521
 10502  15A3                     u3990:
 10503  15A3                     l3515:
 10504  15A3  086B               	movf	_brightness,w
 10505  15A4  1903               	btfsc	3,2
 10506  15A5  2DA7               	goto	u4001
 10507  15A6  2DA8               	goto	u4000
 10508  15A7                     u4001:
 10509  15A7  2DB0               	goto	l3521
 10510  15A8                     u4000:
 10511  15A8                     l3517:
 10512                           
 10513                           ;RotaryEncoder.c: 39:             brightness = brightness - 10;
 10514  15A8  086B               	movf	_brightness,w
 10515  15A9  3EF6               	addlw	246
 10516  15AA  00F0               	movwf	??_ChangeBrightness
 10517  15AB  0870               	movf	??_ChangeBrightness,w
 10518  15AC  00EB               	movwf	_brightness
 10519  15AD                     l3519:
 10520                           
 10521                           ;RotaryEncoder.c: 40:             CCPR1L = brightness;
 10522  15AD  086B               	movf	_brightness,w
 10523  15AE  0095               	movwf	21	;volatile
 10524                           
 10525                           ;RotaryEncoder.c: 41:         }
 10526  15AF  2DCE               	goto	l3529
 10527  15B0                     l3521:
 10528  15B0  1B86               	btfsc	6,7	;volatile
 10529  15B1  2DB3               	goto	u4011
 10530  15B2  2DB5               	goto	u4010
 10531  15B3                     u4011:
 10532  15B3  3001               	movlw	1
 10533  15B4  2DB6               	goto	u4012
 10534  15B5                     u4010:
 10535  15B5  3000               	movlw	0
 10536  15B6                     u4012:
 10537  15B6  00F0               	movwf	??_ChangeBrightness
 10538  15B7  1806               	btfsc	6,0	;volatile
 10539  15B8  2DBA               	goto	u4021
 10540  15B9  2DBC               	goto	u4020
 10541  15BA                     u4021:
 10542  15BA  3001               	movlw	1
 10543  15BB  2DBD               	goto	u4022
 10544  15BC                     u4020:
 10545  15BC  3000               	movlw	0
 10546  15BD                     u4022:
 10547  15BD  0670               	xorwf	??_ChangeBrightness,w
 10548  15BE  1D03               	skipz
 10549  15BF  2DC1               	goto	u4031
 10550  15C0  2DC2               	goto	u4030
 10551  15C1                     u4031:
 10552  15C1  2DCE               	goto	l3529
 10553  15C2                     u4030:
 10554  15C2                     l3523:
 10555  15C2  3064               	movlw	100
 10556  15C3  026B               	subwf	_brightness,w
 10557  15C4  1803               	skipnc
 10558  15C5  2DC7               	goto	u4041
 10559  15C6  2DC8               	goto	u4040
 10560  15C7                     u4041:
 10561  15C7  2DCE               	goto	l3529
 10562  15C8                     u4040:
 10563  15C8                     l3525:
 10564                           
 10565                           ;RotaryEncoder.c: 44:            brightness = brightness + 10;
 10566  15C8  086B               	movf	_brightness,w
 10567  15C9  3E0A               	addlw	10
 10568  15CA  00F0               	movwf	??_ChangeBrightness
 10569  15CB  0870               	movf	??_ChangeBrightness,w
 10570  15CC  00EB               	movwf	_brightness
 10571  15CD  2DAD               	goto	l3519
 10572  15CE                     l3529:
 10573                           
 10574                           ;RotaryEncoder.c: 49:     lastStateCLK = PORTBbits.RB7;
 10575  15CE  1283               	bcf	3,5	;RP0=0, select bank0
 10576  15CF  0D06               	rlf	6,w	;volatile
 10577  15D0  0D06               	rlf	6,w	;volatile
 10578  15D1  3901               	andlw	1
 10579  15D2  00F0               	movwf	??_ChangeBrightness
 10580  15D3  01F1               	clrf	??_ChangeBrightness+1
 10581  15D4  0870               	movf	??_ChangeBrightness,w
 10582  15D5  1683               	bsf	3,5	;RP0=1, select bank1
 10583  15D6  1303               	bcf	3,6	;RP1=0, select bank1
 10584  15D7  00A4               	movwf	_lastStateCLK^(0+128)
 10585  15D8  0871               	movf	??_ChangeBrightness+1,w
 10586  15D9  00A5               	movwf	(_lastStateCLK+1)^(0+128)
 10587  15DA                     l496:
 10588  15DA  0008               	return
 10589  15DB                     __end_of_ChangeBrightness:
 10590  007E                     btemp	set	126	;btemp
 10591  007E                     wtemp0	set	126
 10592                           
 10593                           	psect	idloc
 10594                           
 10595                           ;Config register IDLOC0 @ 0x2000
 10596                           ;	unspecified, using default values
 10597  2000                     	org	8192
 10598  2000  3FFF               	dw	16383
 10599                           
 10600                           ;Config register IDLOC1 @ 0x2001
 10601                           ;	unspecified, using default values
 10602  2001                     	org	8193
 10603  2001  3FFF               	dw	16383
 10604                           
 10605                           ;Config register IDLOC2 @ 0x2002
 10606                           ;	unspecified, using default values
 10607  2002                     	org	8194
 10608  2002  3FFF               	dw	16383
 10609                           
 10610                           ;Config register IDLOC3 @ 0x2003
 10611                           ;	unspecified, using default values
 10612  2003                     	org	8195
 10613  2003  3FFF               	dw	16383
 10614                           
 10615                           	psect	config
 10616                           
 10617                           ;Config register CONFIG1 @ 0x2007
 10618                           ;	Oscillator Selection bits
 10619                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
 10620                           ;	Watchdog Timer Enable bit
 10621                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 10622                           ;	Power-up Timer Enable bit
 10623                           ;	PWRTE = OFF, PWRT disabled
 10624                           ;	RE3/MCLR pin function select bit
 10625                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 10626                           ;	Code Protection bit
 10627                           ;	CP = OFF, Program memory code protection is disabled
 10628                           ;	Data Code Protection bit
 10629                           ;	CPD = OFF, Data memory code protection is disabled
 10630                           ;	Brown Out Reset Selection bits
 10631                           ;	BOREN = ON, BOR enabled
 10632                           ;	Internal External Switchover bit
 10633                           ;	IESO = ON, Internal/External Switchover mode is enabled
 10634                           ;	Fail-Safe Clock Monitor Enabled bit
 10635                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 10636                           ;	Low Voltage Programming Enable bit
 10637                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 10638                           ;	In-Circuit Debugger Mode bit
 10639                           ;	DEBUG = 0x1, unprogrammed default
 10640  2007                     	org	8199
 10641  2007  2FD2               	dw	12242
 10642                           
 10643                           ;Config register CONFIG2 @ 0x2008
 10644                           ;	Brown-out Reset Selection bit
 10645                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 10646                           ;	Flash Program Memory Self Write Enable bits
 10647                           ;	WRT = OFF, Write protection off
 10648  2008                     	org	8200
 10649  2008  3FFF               	dw	16383

Data Sizes:
    Strings     119
    Constant    18
    Data        13
    BSS         91
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     66      79
    BANK1            80     20      74
    BANK3            96      0      37
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_24(CODE[7]), ?_sprintf(BANK0[2]), STR_4(CODE[12]), result(BANK0[2]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 11
		 -> STR_15(CODE[4]), STR_14(CODE[4]), STR_13(CODE[8]), STR_12(CODE[8]), 
		 -> STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[8]), STR_8(CODE[4]), 
		 -> STR_7(CODE[4]), STR_3(CODE[3]), STR_2(CODE[11]), STR_1(CODE[11]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 16
		 -> year(BANK3[10]), month(BANK3[10]), date(BANK3[10]), hours(BANK1[10]), 
		 -> mins(BANK1[10]), secs(BANK1[10]), main@buffer3(BANK1[16]), DisplayTemp@buffer2(BANK0[16]), 
		 -> DisplayTemp@buffer1(BANK0[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    LCD_Write_String@Str	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_23(CODE[4]), STR_22(CODE[4]), STR_21(CODE[4]), STR_20(CODE[4]), 
		 -> STR_19(CODE[4]), STR_18(CODE[4]), STR_17(CODE[4]), STR_16(CODE[4]), 
		 -> year(BANK3[10]), month(BANK3[10]), date(BANK3[10]), hours(BANK1[10]), 
		 -> mins(BANK1[10]), secs(BANK1[10]), STR_6(CODE[3]), STR_5(CODE[3]), 
		 -> main@buffer3(BANK1[16]), DisplayTemp@buffer2(BANK0[16]), DisplayTemp@buffer1(BANK0[16]), 


Critical Paths under _main in COMMON

    _main->_LCD_Write_String
    _printClock->_LCD_Write_String
    _RTC_Read_Clock->_I2C_Read
    _RTC_Read_Calendar->_I2C_Read
    _I2C_Repeated_Start->_I2C_Write
    _Update_Farenheit->___xxtofl
    _Update_Celsius->___xxtofl
    ___fltol->___xxtofl
    ___flmul->___xxtofl
    ___fladd->___xxtofl
    _RTC_Clock_Write->_I2C_Start
    _RTC_Calendar_Write->_I2C_Start
    _LCD_Init->_LCD_CMD
    _LCD_Clear->_LCD_CMD
    _DisplayTemp->_LCD_Write_String
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Char->_LCD_Write_4Bit
    _LCD_Set_Cursor->_LCD_CMD
    _LCD_CMD->_LCD_Write_4Bit
    _LCD_Write_4Bit->_IO_Expander_Write
    _IO_Expander_Write->_I2C_Start
    _I2C_Start->_I2C_Write
    _ChangeColor->_LED_Color
    _LED_Color->_sendRGB
    _sendRGB->_sendByte

Critical Paths under _main in BANK0

    _main->_Update_Celsius
    _main->_Update_Farenheit
    _printClock->_sprintf
    _Update_Farenheit->___fltol
    _Update_Celsius->___fltol
    ___fltol->___fladd
    ___fladd->___flmul
    _DisplayTemp->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                23    23      0   36231
                                             63 BANK0      3     3      0
                                              0 BANK1     20    20      0
                   _ChangeBrightness
                        _ChangeColor
                        _DisplayTemp
                           _I2C_Init
                          _LCD_Clear
                           _LCD_Init
                   _LCD_Write_String
                           _LED_Init
                 _RTC_Calendar_Write
                    _RTC_Clock_Write
                          _ReadPhoto
                 _RotaryEncoder_Init
                     _Update_Celsius
                   _Update_Farenheit
                         _printClock
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _printClock                                           3     3      0    6794
                                             21 BANK0      3     3      0
                           _I2C_Stop
                     _LCD_Set_Cursor
                   _LCD_Write_String
                  _RTC_Read_Calendar
                     _RTC_Read_Clock
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _RTC_Read_Clock                                       3     3      0     177
                                              3 COMMON     3     3      0
                           _I2C_Read
                 _I2C_Repeated_Start
                          _I2C_Start
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _RTC_Read_Calendar                                    3     3      0     177
                                              3 COMMON     3     3      0
                           _I2C_Read
                 _I2C_Repeated_Start
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Repeated_Start                                   1     1      0      44
                                              1 COMMON     1     1      0
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Read                                             3     3      0      45
                                              0 COMMON     3     3      0
                            _I2C_Ack
                           _I2C_Nack
                          _I2C_Ready
 ---------------------------------------------------------------------------------
 (4) _I2C_Nack                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_Ack                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Update_Farenheit                                     6     6      0    6621
                                             57 BANK0      6     6      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _Update_Celsius                                       6     6      0    6621
                                             57 BANK0      6     6      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     550
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             46 BANK0     11     7      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    2721
                                              0 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             20    12      8    2870
                                             26 BANK0     20    12      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _RotaryEncoder_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ReadPhoto                                            2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _RTC_Clock_Write                                      5     2      3     405
                                              2 COMMON     5     2      3
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _RTC_Calendar_Write                                   4     1      3     382
                                              2 COMMON     4     1      3
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _LED_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     265
                                              7 COMMON     2     2      0
                  _IO_Expander_Write
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            1     1      0     177
                                              7 COMMON     1     1      0
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DisplayTemp                                         35    35      0    6560
                                             21 BANK0     35    35      0
                     _LCD_Set_Cursor
                   _LCD_Write_String
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             25    20      5    3682
                                              0 BANK0     21    16      5
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     466
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_String                                     7     5      2    2015
                                              7 COMMON     7     5      2
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Char                                       2     2      0     177
                                              5 COMMON     2     2      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (2) _LCD_Set_Cursor                                       4     3      1     743
                                              7 COMMON     4     3      1
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _LCD_CMD                                              2     2      0     177
                                              5 COMMON     2     2      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (4) _LCD_Write_4Bit                                       2     2      0     133
                                              3 COMMON     2     2      0
                  _IO_Expander_Write
 ---------------------------------------------------------------------------------
 (5) _IO_Expander_Write                                    1     1      0      88
                                              2 COMMON     1     1      0
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Start                                            1     1      0      44
                                              1 COMMON     1     1      0
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Write                                            1     1      0      22
                                              0 COMMON     1     1      0
                          _I2C_Ready
 ---------------------------------------------------------------------------------
 (4) _I2C_Ready                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ChangeColor                                          0     0      0    2376
                          _LED_Color
 ---------------------------------------------------------------------------------
 (2) _LED_Color                                            3     3      0    2376
                                              4 COMMON     3     3      0
                            _sendRGB
 ---------------------------------------------------------------------------------
 (3) _sendRGB                                              3     1      2    1914
                                              1 COMMON     3     1      2
                           _sendByte
 ---------------------------------------------------------------------------------
 (4) _sendByte                                             1     1      0     176
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ChangeBrightness                                     2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ChangeBrightness
   _ChangeColor
     _LED_Color
       _sendRGB
         _sendByte
   _DisplayTemp
     _LCD_Set_Cursor
       _LCD_CMD
         _LCD_Write_4Bit
           _IO_Expander_Write
             _I2C_Start
               _I2C_Write
                 _I2C_Ready
             _I2C_Stop
             _I2C_Write
     _LCD_Write_String
       _LCD_Write_Char
         _LCD_Write_4Bit
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _I2C_Init
   _LCD_Clear
     _LCD_CMD
   _LCD_Init
     _IO_Expander_Write
     _LCD_CMD
   _LCD_Write_String
   _LED_Init
   _RTC_Calendar_Write
     _I2C_Start
     _I2C_Stop
     _I2C_Write
   _RTC_Clock_Write
     _I2C_Start
     _I2C_Stop
     _I2C_Write
   _ReadPhoto
   _RotaryEncoder_Init
   _Update_Celsius
     ___fladd
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
     ___fltol
       ___fladd (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _Update_Farenheit
     ___fladd
     ___flmul
     ___fltol
     ___xxtofl
   _printClock
     _I2C_Stop
     _LCD_Set_Cursor
     _LCD_Write_String
     _RTC_Read_Calendar
       _I2C_Read
         _I2C_Ack
         _I2C_Nack
         _I2C_Ready
       _I2C_Repeated_Start
         _I2C_Write
       _I2C_Start
       _I2C_Stop
       _I2C_Write
     _RTC_Read_Clock
       _I2C_Read
       _I2C_Repeated_Start
       _I2C_Start
       _I2C_Write
     _sprintf
   _sprintf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      25       9       38.5%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     14      4A       7       92.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     42      4F       5       98.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      CC      12        0.0%
ABS                  0      0      CC       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Mon Apr 18 14:10:35 2022

                                     pc 0002                             _SSPSTATbits 0094  
                                    l51 1306                                      l60 11AB  
                                    l52 130C                                      l61 11AC  
                                    l55 122A                                      l47 12EC  
                                    l58 11A5                                      l82 1275  
                                    l75 125C                                      l91 11B8  
                                    l84 1279                                      l77 1260  
                                    l93 11BC                                      l86 1289  
                                    l79 1270                                      l95 11BD  
                                    l99 1216                                      _RS 0068  
                                    fsr 0004                     ___wmul@multiplicand 0072  
RTC_Read_Calendar@read_calendar_address 0075                     __Umul8_16@word_mpld 0076  
                                   l103 11C2                                     l112 11CF  
                                   l210 0A15                                     l106 11C6  
                                   l141 1240                                     l213 1765  
                                   l109 11CB                                     l150 12C2  
                                   l310 0115                                     l302 00E8  
                                   l207 0928                                     l144 0819  
                                   l216 17FF                                     l138 1761  
                                   l147 12A5                                     l219 1568  
                                   l156 14B6                                     l180 11DB  
                                   l165 13BE                                     l318 015C  
                                   l440 16DA                                     l360 135D  
                                   l450 0ACB                                     l354 1474  
                                   l426 0D77                                     l451 0AE4  
                                   l443 0A30                                     l363 1388  
                                   l291 0080                                     l452 0AF8  
                                   l444 0A44                                     l453 0B11  
                                   l445 0A5D                                     l437 1192  
                                   l357 086A                                     l454 0B25  
                                   l446 0A71                                     l462 1202  
                                   l294 00A6                                     l455 0B3E  
                                   l447 0A8A                                     l535 1410  
                                   l456 0B52                                     l448 0A9E  
                                   l457 0B6B                                     l449 0AB7  
                                   l297 00A1                                     l538 1436  
                                   l459 0B7F                                     l644 02C3  
                                   l645 020D                                     l496 15DA  
                                   l664 02EE                                     l673 0363  
                                   l489 1257                                     l499 119D  
                                   l692 12CF                                     l669 0317  
                                   l694 12E7                                     l688 0456  
                                   l964 14FA                                     l885 1641  
                                   l974 13F8                                     l878 1656  
                                   l991 0E59                        ??_Update_Celsius 0059  
                                   l888 1656                                     l985 0DDB  
                                   l989 0E82                                     l998 0FFF  
                                   _RB4 0034                                     _RB5 0035  
                                   _RC3 003B                                     _RE3 004B  
                                   _PR2 0092                                     _PEN 048A  
                                   _Day 00AC                         __end_of_I2C_Ack 11C7  
                                   _min 0064                                     _sec 0066  
                                   fsr0 0004                                     indf 0000  
                          ___flmul@aexp 0032                            ___flmul@bexp 0033  
                          ___flmul@sign 002D                            ___flmul@temp 0038  
                          ___flmul@prod 0034                         __end_of_LCD_CMD 12A6  
                           main@ledMode 00E4                             main@buffer3 00D4  
                   LCD_Write_String@Str 0077                          _LCD_Set_Cursor 1389  
                          ___fltol@exp1 0058                                    l1010 0F71  
                                  l1100 1321                                    l1006 0F4D  
                                  l1102 1333                                    l1016 0F93  
                                  l1027 0FF3                                    l1019 0FD1  
                                  l1131 08D2                                    l1028 0FFF  
                                  l1125 088D                                    l1127 0924  
                                  l1145 0014                                    l3001 0D7F  
                                  l1081 07B7                                    l1138 08EE  
                                  l3011 0D94                                    l3003 0D85  
                                  l1139 08FA                                    l3021 0DAC  
                                  l3013 0D9C                                    l3005 0D89  
                                  l1093 07AB                                    l3111 0EBC  
                                  l3103 0E94                                    l3031 0DBE  
                                  l3023 0DB2                                    l3015 0D9D  
                                  l3007 0D8A                                    l1087 0723  
                                  l3113 0EBE                                    l3105 0EAB  
                                  l3121 0ED1                                    l3033 0DC3  
                                  l3041 0DD3                                    l3025 0DB3  
                                  l3009 0D8F                                    l3017 0D9F  
                                  l3201 0469                                    l3123 0EE7  
                                  l3131 0F3F                                    l3115 0EC2  
                                  l3107 0EAF                                    l3051 0DF1  
                                  l3043 0DE1                                    l3035 0DC8  
                                  l3027 0DB9                                    l3019 0DA7  
                                  l3211 0485                                    l3203 046E  
                                  l3141 0F6C                                    l3133 0F55  
                                  l3125 0F25                                    l3117 0EC3  
                                  l3109 0EB3                                    l3061 0E05  
                                  l3053 0DF5                                    l3045 0DE5  
                                  l3037 0DD0                                    l3029 0DBD  
                                  l3301 0728                                    l3221 049A  
                                  l3213 048A                                    l3205 0473  
                                  l3151 0F7F                                    l3143 0F70  
                                  l3135 0F5A                                    l3127 0F2B  
                                  l3119 0ECC                                    l3071 0E19  
                                  l3063 0E09                                    l3055 0DF9  
                                  l3047 0DE9                                    l3039 0DD1  
                                  l3303 072D                                    l3311 075E  
                                  l3231 04B6                                    l3223 049F  
                                  l3215 0490                                    l3207 047B  
                                  l3401 1716                                    l3161 0F90  
                                  l3145 0F75                                    l3153 0F81  
                                  l3129 0F30                                    l3081 0E3D  
                                  l3073 0E1D                                    l3065 0E0D  
                                  l3057 0DFD                                    l3049 0DED  
                                  l3321 0791                                    l3313 076B  
                                  l3305 073B                                    l3241 04E1  
                                  l3233 04BB                                    l3225 04A7  
                                  l3217 0494                                    l3209 047D  
                                  l2603 11B5                                    l3411 1752  
                                  l3403 1725                                    l3171 0FAF  
                                  l3147 0F78                                    l3139 0F63  
                                  l3155 0F85                                    l3091 0E6D  
                                  l3083 0E5D                                    l3075 0E21  
                                  l3067 0E11                                    l3059 0E01  
                                  l3323 079F                                    l3315 0776  
                                  l3307 073F                                    l3251 057E  
                                  l3243 04FE                                    l3227 04A9  
                                  l3219 0495                                    l2605 1259  
                                  l2613 122C                                    l2621 0807  
                                  l2701 12DD                                    l3413 1758  
                                  l3405 172B                                    l3501 1358  
                                  l3181 0FE8                                    l3173 0FCD  
                                  l3165 0F98                                    l3157 0F86  
                                  l3149 0F7A                                    l3093 0E76  
                                  l3085 0E66                                    l3069 0E15  
                                  l3077 0E25                                    l3325 07A3  
                                  l3317 0785                                    l3309 0758  
                                  l3261 05E1                                    l3253 0587  
                                  l3245 051A                                    l3237 04C4  
                                  l3229 04B1                                    l3341 0895  
                                  l3333 086C                                    l3421 092C  
                                  l3511 158B                                    l2631 0A75  
                                  l2623 080E                                    l2711 14BF  
                                  l2703 12E3                                    l3415 11D0  
                                  l3407 173A                                    l3503 135F  
                                  l3191 0FFE                                    l3183 0FE9  
                                  l3175 0FD6                                    l3167 0F9D  
                                  l3159 0F8A                                    l3087 0E68  
                                  l3095 0E7A                                    l3079 0E26  
                                  l3327 07A4                                    l3319 078F  
                                  l3271 0681                                    l3263 05FA  
                                  l3255 0597                                    l3247 0546  
                                  l3239 04D4                                    l3351 08B7  
                                  l3335 0871                                    l3431 099E  
                                  l3423 092E                                    l2615 11BE  
                                  l3521 15B0                                    l3513 1591  
                                  l3505 1569                                    l2641 0B56  
                                  l2633 0AA2                                    l2625 0A17  
                                  l2609 126A                                    l2721 14E2  
                                  l2713 14C2                                    l2801 01B9  
                                  l3417 11D6                                    l3409 1743  
                                  l3185 0FED                                    l3177 0FDB  
                                  l3169 0FAB                                    l3097 0E86  
                                  l3089 0E6C                                    l3329 07AF  
                                  l3281 06EF                                    l3273 06A7  
                                  l3265 0617                                    l3257 05B4  
                                  l3249 0562                                    l3193 0457  
                                  l3361 08E8                                    l3353 08BB  
                                  l3345 089E                                    l3337 0875  
                                  l3441 176B                                    l3433 09A1  
                                  l3425 0935                                    l2617 11C7  
                                  l3601 0BC4                                    l3523 15C2  
                                  l3515 15A3                                    l3507 1576  
                                  l2635 0ACF                                    l2627 0A1B  
                                  l3531 1197                                    l2619 0801  
                                  l2723 14E8                                    l2715 14C9  
                                  l2707 14B7                                    l2811 01F8  
                                  l2803 01BC                                    l3187 0FEF  
                                  l3179 0FE3                                    l3099 0E8B  
                                  l3291 0707                                    l3283 06F3  
                                  l3275 06CF                                    l3267 0644  
                                  l3259 05C4                                    l3195 045E  
                                  l3371 091B                                    l3363 08F2  
                                  l3355 08C9                                    l3347 08A3  
                                  l3339 0885                                    l3451 17CB  
                                  l3443 1772                                    l3435 09E5  
                                  l3427 093C                                    l3419 0925  
                                  l2651 1301                                    l2643 12E9  
                                  l3611 0C10                                    l3603 0BD5  
                                  l3525 15C8                                    l3517 15A8  
                                  l3509 157A                                    l2637 0AFC  
                                  l2629 0A48                                    l2725 14E9  
                                  l2717 14CD                                    l2709 14B9  
                                  l2741 13D3                                    l2733 13BF  
                                  l2901 037E                                    l2821 0222  
                                  l2813 01FC                                    l2805 01CC  
                                  l3461 1529                                    l3381 1221  
                                  l3189 0FFA                                    l3293 0708  
                                  l3285 06F4                                    l3277 06D8  
                                  l3269 0654                                    l3197 0464  
                                  l3373 091C                                    l3365 08FC  
                                  l3357 08D9                                    l3349 08B0  
                                  l3453 17FB                                    l3445 1779  
                                  l3437 1762                                    l3429 0949  
                                  l2653 130B                                    l2645 12F0  
                                  l2661 1283                                    l3621 0C4D  
                                  l3613 0C19                                    l3605 0BE8  
                                  l3519 15AD                                    l2639 0B29  
                                  l2591 120D                                    l2671 128E  
                                  l2727 14F0                                    l2719 14D1  
                                  l2743 13D7                                    l2735 13C5  
                                  l2751 13F4                                    l2911 03A5  
                                  l2903 0384                                    l2831 024A  
                                  l2823 0226                                    l2815 020F  
                                  l2807 01D0                                    l3463 1535  
                                  l3455 14FB                                    l3383 1224  
                                  l3391 16E1                                    l3471 1241  
                                  l3295 070C                                    l3287 06FD  
                                  l3279 06E6                                    l3199 0468  
                                  l3367 0912                                    l3359 08E4  
                                  l3447 1786                                    l3439 1769  
                                  l2647 12F6                                    l2663 1289  
                                  l3623 0C60                                    l3631 0C6D  
                                  l3607 0BFB                                    l3615 0C23  
                                  l3529 15CE                                    l2585 11A5  
                                  l2593 1213                                    l2673 1295  
                                  l2729 14F6                                    l2745 13E1  
                                  l2737 13C8                                    l2681 0004  
                                  l2921 0409                                    l2913 03AE  
                                  l2905 038D                                    l2841 0272  
                                  l2833 0251                                    l2825 0229  
                                  l2817 0218                                    l2809 01E5  
                                  l3465 1550                                    l3457 1516  
                                  l3385 1226                                    l3377 1217  
                                  l3393 16E9                                    l3561 1401  
                                  l3481 124D                                    l3473 1249  
                                  l2761 131B                                    l3297 0720  
                                  l3289 0703                                    l3369 0917  
                                  l3449 1787                                    l2649 12FB  
                                  l2657 1272                                    l3641 0CC9  
                                  l3633 0C73                                    l3617 0C29  
                                  l3609 0C07                                    l3801 0134  
                                  l3721 0021                                    l2587 1204  
                                  l2675 12A7                                    l2771 1478  
                                  l2747 13E7                                    l2739 13CF  
                                  l2683 0005                                    l2931 0435  
                                  l2915 03B4                                    l2907 0393  
                                  l2843 0283                                    l2835 0254  
                                  l2827 022F                                    l2819 021C  
                                  l2851 029E                                    l3467 1559  
                                  l3459 1520                                    l3387 1227  
                                  l3379 121B                                    l3395 16F8  
                                  l3491 133A                                    l3571 140C  
                                  l3563 1404                                    l3483 124E  
                                  l3475 124A                                    l2763 132A  
                                  l2755 130E                                    l3651 0CFB  
                                  l3643 0CD5                                    l3635 0C78  
                                  l3619 0C3A                                    l3811 0143  
                                  l3803 0135                                    l3731 0038  
                                  l3723 0024                                    l3715 0015  
                                  l2589 1208                                    l2669 128B  
                                  l2781 1393                                    l2677 12AB  
                                  l2773 1494                                    l2749 13EE  
                                  l2693 12C3                                    l2685 000B  
                                  l2925 0415                                    l2917 03B9  
                                  l2909 039F                                    l2861 02DB  
                                  l2853 02C7                                    l2845 0289  
                                  l2837 025D                                    l2829 0240  
                                  l2933 043E                                    l3397 16FE  
                                  l3389 16DB                                    l3469 118F  
                                  l3493 1340                                    l3581 142A  
                                  l3573 140F                                    l3565 1405  
                                  l3485 124F                                    l3477 124B  
                                  l2765 132F                                    l2757 1310  
                                  l3661 0D2D                                    l3653 0D05  
                                  l3645 0CDE                                    l3637 0C93  
                                  l3813 0148                                    l3805 0138  
                                  l3741 007A                                    l3733 004C  
                                  l3725 0029                                    l3717 0019  
                                  l2679 11F0                                    l2599 1215  
                                  l2783 139B                                    l2775 149A  
                                  l2695 12C5                                    l2687 0011  
                                  l2919 03E8                                    l2927 0426  
                                  l2871 02F0                                    l2855 02CF  
                                  l2863 02E1                                    l2935 0450  
                                  l2847 028F                                    l2839 0263  
                                  l3399 170D                                    l3495 1346  
                                  l3583 1433                                    l3575 1414  
                                  l3567 1406                                    l3559 13F9  
                                  l3487 1253                                    l3479 124C  
                                  l2759 1317                                    l3663 0D37  
                                  l3655 0D0F                                    l3647 0CE7  
                                  l3639 0CAE                                    l3591 0B95  
                                  l3831 017F                                    l3823 0160  
                                  l3815 014D                                    l3807 013B  
                                  l3751 009B                                    l3735 0060  
                                  l3727 002E                                    l3719 001C  
                                  l2961 1658                                    l2785 13A3  
                                  l2777 138A                                    l2769 1475  
                                  l2697 12C9                                    l2689 0013  
                                  l2929 042F                                    l2881 0319  
                                  l2865 02E9                                    l2857 02D3  
                                  l2793 019C                                    l3497 134C  
                                  l3489 1335                                    l3577 1418  
                                  l3569 1409                                    l3657 0D19  
                                  l3649 0CF1                                    l3593 0B9F  
                                  l3585 0B80                                    l3833 0183  
                                  l3817 0152                                    l3809 013E  
                                  l3761 00C6                                    l3745 0084  
                                  l3737 0068                                    l3729 0033  
                                  l2779 138B                                    l2787 13AB  
                                  l2699 12D6                                    l2891 0351  
                                  l2875 030C                                    l2859 02D7  
                                  l2795 01A3                                    l3499 1352  
                                  l3579 1423                                    l2971 1606  
                                  l2963 15DB                                    l3659 0D23  
                                  l3667 0D41                                    l3595 0BA9  
                                  l3587 0B8B                                    l3835 0192  
                                  l3819 0158                                    l3771 00EC  
                                  l3827 0165                                    l3763 00CF  
                                  l3739 0070                                    l3747 008F  
                                  l2893 0357                                    l2885 0335  
                                  l2797 01A9                                    l2973 1607  
                                  l2965 15E8                                    l2957 1438  
                                  l3669 0D68                                    l3597 0BB3  
                                  l3589 0B91                                    l3829 0170  
                                  l3781 010B                                    l3773 00F0  
                                  l3765 00DE                                    l3757 00AE  
                                  l3749 0096                                    l2895 035D  
                                  l2799 01B2                                    l2975 160F  
                                  l2959 081B                                    l3599 0BBC  
                                  l3783 0111                                    l3791 011E  
                                  l3767 00E4                                    l3759 00B3  
                                  l3775 00FB                                    l2897 036E  
                                  l2889 0340                                    l2993 1636  
                                  l2985 161D                                    l2977 1611  
                                  l2969 15F1                                    l3793 0125  
                                  l3777 0101                                    l2899 037A  
                                  l2995 1646                                    l2979 1615  
                                  l2987 162F                                    l3795 0128  
                                  l3787 0119                                    l3779 0106  
                                  l3981 0349                                    l2997 164B  
                                  l3797 0130                                    l3983 041E  
                                  l2999 0D78                                    l3799 0133  
                                  l3985 13B3                                    l3977 0D51  
                                  l3979 02B2                                    STR_1 103F  
                                  STR_2 104A                                    STR_3 1096  
                                  STR_4 1033                                    STR_5 1093  
                                  STR_6 1090                                    STR_7 106C  
                                  STR_8 1061                                    STR_9 105D  
                                  u2200 11BC                                    u3000 0DBD  
                                  u2201 11BB                                    u3001 0DBC  
                                  u2210 1260                                    u3010 0DC3  
                                  u2211 125F                                    u3011 0DC2  
                                  u2300 0AFC                                    u2220 1269  
                                  u3020 0DC8                                    u2301 0AFB  
                                  u2221 1268                                    u3021 0DC7  
                                  u2310 0B29                                    u3110 0E82  
                                  u3030 0DE1                                    u2230 11C6  
                                  u2311 0B28                                    u3111 0E81  
                                  u3031 0DE0                                    u2231 11C5  
                                  u4000 15A8                                    u2320 0B56  
                                  u2400 0011                                    u3120 0E86  
                                  u3040 0DE5                                    u2240 11CF  
                                  u4001 15A7                                    u2321 0B55  
                                  u2401 0010                                    u3201 0EFE  
                                  u3121 0E85                                    u3105 0E6F  
                                  u3041 0DE4                                    u2241 11CE  
                                  u4010 15B5                                    u2250 0A1B  
                                  u2410 12C9                                    u3210 0F12  
                                  u3202 0EFF                                    u3130 0E8B  
                                  u3050 0E3D                                    u2330 12F0  
                                  u4011 15B3                                    u2251 0A1A  
                                  u2411 12C8                                    u3211 0F13  
                                  u3203 0F04                                    u3131 0E8A  
                                  u3051 0E3C                                    u2331 12EF  
                                  u4020 15BC                                    u4012 15B6  
                                  u2260 0A48                                    u2180 11AB  
                                  u3300 0F8A                                    u3220 0F30  
                                  u3212 0F18                                    u3204 0F05  
                                  u3060 0E48                                    u2340 12FB  
                                  u4021 15BA                                    u2261 0A47  
                                  u2181 11AA                                    u3301 0F89  
                                  u3221 0F2F                                    u3213 0F19  
                                  u3205 0F0A                                    u3141 0E9D  
                                  u3061 0E46                                    u2341 12FA  
                                  u4030 15C2                                    u4022 15BD  
                                  u2270 0A75                                    u2190 1213  
                                  u2510 14F6                                    u3310 0F90  
                                  u3230 0F55                                    u3206 0F0B  
                                  u3150 0EAF                                    u3142 0EA4  
                                  u3070 0E49                                    u2350 1279  
                                  u4031 15C1                                    u2271 0A74  
                                  u2191 1212                                    u2511 14F5  
                                  u3311 0F8F                                    u3231 0F54  
                                  u3151 0EAE                                    u3143 0EAB  
                                  u3055 0E39                                    u2351 1278  
                                  u4040 15C8                                    u2280 0AA2  
                                  u2520 13C5                                    u2440 12E3  
                                  u3400 0FED                                    u3320 0F97  
                                  u3240 0F5A                                    u3160 0EB3  
                                  u3080 0E5D                                    u2600 132F  
                                  u2360 1282                                    u4200 00E8  
                                  u4120 0070                                    u4041 15C7  
                                  u2281 0AA1                                    u2505 14EA  
                                  u2521 13C4                                    u2441 12E2  
                                  u2425 12D0                                    u3401 0FEC  
                                  u3321 0F96                                    u3241 0F59  
                                  u3161 0EB2                                    u3081 0E5C  
                                  u2601 132E                                    u2361 1281  
                                  u4201 00E7                                    u4121 006F  
                                  u2290 0ACF                                    u2610 1482  
                                  u2450 14BF                                    u4050 1414  
                                  u3410 0FFE                                    u3330 0F9D  
                                  u3170 0EC2                                    u3090 0E6C  
                                  u4210 00EC                                    u4130 0080  
                                  u2291 0ACE                                    u2451 14BE  
                                  u2435 12D7                                    u4051 1413  
                                  u3411 0FFD                                    u3331 0F9C  
                                  u3171 0EC1                                    u3091 0E6B  
                                  u4211 00EB                                    u4131 007F  
                                  u2620 14A4                                    u2540 13D7  
                                  u2700 0271                                    u3340 0FAF  
                                  u3260 0F70                                    u3420 0468  
                                  u4060 0B91                                    u4300 015C  
                                  u4220 00F0                                    u4140 0084  
                                  u2541 13D6                                    u2701 0270  
                                  u3341 0FAE                                    u3261 0F6F  
                                  u3501 050C                                    u3421 0467  
                                  u4061 0B90                                    u4301 015B  
                                  u4221 00EF                                    u4141 0083  
                                  u2630 14B6                                    u2470 14D1  
                                  u2550 13E1                                    u2390 000B  
                                  u2710 029D                                    u3350 0FBE  
                                  u3270 0F75                                    u3190 0EE7  
                                  u3502 0513                                    u3430 046E  
                                  u4070 0B95                                    u4310 0160  
                                  u4230 0101                                    u4150 0096  
                                  u2375 1298                                    u2631 14B5  
                                  u2471 14D0                                    u2551 13E0  
                                  u2535 13C9                                    u2391 000A  
                                  u2711 029C                                    u3271 0F74  
                                  u3255 0F65                                    u3191 0EE6  
                                  u3511 0528                                    u3503 051A  
                                  u3431 046D                                    u4071 0B94  
                                  u4311 015F                                    u4231 0100  
                                  u4151 0095                                    u2800 036E  
                                  u2720 02C7                                    u2640 01A9  
                                  u3360 0FCD                                    u3280 0F7F  
                                  u3512 052F                                    u3440 0473  
                                  u4320 0164                                    u4240 0111  
                                  u4160 00A1                                    u2385 12B5  
                                  u2465 14C3                                    u2801 036D  
                                  u2721 02C6                                    u2641 01A8  
                                  u3361 0FCC                                    u3281 0F7E  
                                  u3193 0EE3                                    u3185 0EC5  
                                  u3601 0663                                    u3521 0554  
                                  u3513 0536                                    u3441 0472  
                                  u4321 0163                                    u4241 0110  
                                  u4161 00A0                                    u2490 14E2  
                                  u2570 13F4                                    u2810 0384  
                                  u2730 02D7                                    u2650 01CC  
                                  u3370 0FD6                                    u3290 0F85  
                                  u3610 068D                                    u3602 066A  
                                  u3522 055B                                    u3450 0494  
                                  u4330 017F                                    u4250 0115  
                                  u4170 00A5                                    u2491 14E1  
                                  u2571 13F3                                    u2555 13DD  
                                  u2811 0383                                    u2731 02D6  
                                  u2651 01CB                                    u3371 0FD5  
                                  u3355 0FB9                                    u3291 0F84  
                                  u3603 0671                                    u3531 0570  
                                  u3523 0562                                    u3451 0493  
                                  u4331 017E                                    u4251 0114  
                                  u4171 00A4                                    u2820 039F  
                                  u2740 030B                                    u2660 020C  
                                  u3380 0FDB                                    u2580 131B  
                                  u3700 070C                                    u3532 0577  
                                  u3460 049A                                    u4340 0192  
                                  u4260 0119                                    u4180 00AE  
                                  u2485 14D2                                    u2565 13E8  
                                  u2821 039E                                    u2805 036A  
                                  u2741 030A                                    u2661 020B  
                                  u3381 0FDA                                    u2581 131A  
                                  u3701 070B                                    u3621 0699  
                                  u3533 057E                                    u3461 0499  
                                  u4341 0191                                    u4261 0118  
                                  u4181 00AD                                    u2830 03A5  
                                  u2750 0316                                    u2670 0222  
                                  u3390 0FE8                                    u3710 0720  
                                  u3630 06B5                                    u3622 06A0  
                                  u3470 049F                                    u2910 162E  
                                  u4270 011D                                    u4190 00E4  
                                  u2495 14DE                                    u2831 03A4  
                                  u2751 0315                                    u2671 0221  
                                  u4407 1702                                    u3391 0FE7  
                                  u3711 071F                                    u3623 06A7  
                                  u3615 0688                                    u3551 05A6  
                                  u3471 049E                                    u2911 162D  
                                  u4335 017B                                    u4271 011C  
                                  u4191 00E3                                    u2840 043E  
                                  u2760 0334                                    u2680 0240  
                                  u3720 0727                                    u3552 05AD  
                                  u3480 04B6                                    u2920 1635  
                                  u3800 0875                                    u4280 0125  
                                  u2841 043D                                    u2761 0333  
                                  u2745 0307                                    u2681 023F  
                                  u4417 1711                                    u3721 0726  
                                  u3641 06C1                                    u3561 05D3  
                                  u3553 05B4                                    u3545 0580  
                                  u3481 04B5                                    u2921 1634  
                                  u2905 161E                                    u3801 0874  
                                  u4345 018E                                    u4281 0124  
                                  u2850 0450                                    u2770 033F  
                                  u2690 024A                                    u3730 072D  
                                  u3642 06C8                                    u3562 05DA  
                                  u3490 04BB                                    u3810 0895  
                                  u4290 0158                                    u4507 0817  
                                  u2851 044F                                    u2771 033E  
                                  u2691 0249                                    u4427 1720  
                                  u2595 1322                                    u3731 072C  
                                  u3643 06CF                                    u3635 06B0  
                                  u3563 05E1                                    u3491 04BA  
                                  u3811 0894                                    u4291 0157  
                                  u2780 0357                                    u3740 073F  
                                  u2940 1646                                    u2860 15E8  
                                  u3900 0907                                    u2781 0356  
                                  u2765 0330                                    u4437 172F  
                                  u3741 073E                                    u3581 0609  
                                  u2941 1645                                    u2861 15E7  
                                  u4357 00D7                                    u2790 035D  
                                  u3750 074E                                    u3670 06F3  
                                  u3582 0610                                    u2950 164B  
                                  u2870 15FF                                    u3910 0917  
                                  u3830 08B6                                    u2791 035C  
                                  u2695 0246                                    u4447 173E  
                                  u3671 06F2                                    u3655 06D1  
                                  u3591 0636                                    u3583 0617  
                                  u3575 05E3                                    u2951 164A  
                                  u2935 1638                                    u3911 0916  
                                  u3831 08B5                                    u4367 016B  
                                  u2960 0D89                                    u3760 076B  
                                  u3592 063D                                    u2880 1615  
                                  u3920 091B                                    u4457 174D  
                                  u2961 0D88                                    u3761 076A  
                                  u3665 06E8                                    u3593 0644  
                                  u2881 1614                                    u3921 091A  
                                  u3905 0902                                    u3825 08A8  
                                  u4377 0D70                                    u2970 0D8F  
                                  u3770 0785                                    u3690 0707  
                                  u2890 161C                                    u3850 08D8  
                                  u3930 092C                                    u4467 175C  
                                  u4387 16E5                                    u2971 0D8E  
                                  u3771 0784                                    u3755 0749  
                                  u3691 0706                                    u2891 161B  
                                  u2875 15FA                                    u3851 08D7  
                                  u3931 092B                                    u2980 0D94  
                                  u3780 07A3                                    u3940 1769  
                                  _RCEN 048B                                    u4477 11D8  
                                  u4397 16F3                                    u2981 0D93  
                                  u3781 07A2                                    u3765 0767  
                                  u3685 06F6                                    u3845 08CA  
                                  u3941 1768                                    u3950 158B  
                                  u2990 0DB2                                    u3870 08E8  
                                  u3790 0871                                    u3951 158A  
                                  u4487 151C                                    u2991 0DB1  
                                  u3775 0781                                    u3871 08E7  
                                  u3791 0870                                    u3960 1591  
                                  u3880 08EE                                    u3961 1590  
                                  u4497 1561                                    u3881 08ED  
                                  u3865 08DD                                    u3970 1596  
                                  u3890 08F2                                    u3971 1594  
                                  u3955 1587                                    u3891 08F1  
                                  u3980 159D                                    u3972 1597  
                                  u3981 159B                                    u3990 15A3  
                                  u3982 159E                                    u3991 15A2  
                                  _RSEN 0489                                    _Date 00AA  
                                  _Year 00A6                       ?_LCD_Write_String 0077  
                                  _date 01A4                                    _days 01AE  
                                  _main 0015                         ?_RTC_Read_Clock 0070  
                                  _hour 0062                        __end_of_I2C_Nack 11D0  
                                  _mins 00C0                                    _secs 00CA  
                      __end_of_I2C_Init 122B                        __end_of_I2C_Read 130D  
                                  _year 0190                                    btemp 007E  
                      __end_of_I2C_Stop 11BE                                    start 0000  
                    ??_LCD_Write_String 0079                    LCD_Write_4Bit@Nibble 0074  
      RTC_Read_Clock@read_clock_address 0075                        __end_of_LCD_Init 1762  
                      __end_of_LED_Init 1193                             _ChangeColor 1197  
                     ?_Update_Farenheit 0070                              _Clock_type 006D  
                   __end_of_DisplayTemp 1569                           ___fltol@sign1 0057  
                       __end_of___fladd 1000                                   ?_main 0070  
                                 _ACKEN 048C                                   _ACKDT 048D  
                                 STR_10 106C                                   STR_11 1061  
                                 STR_12 105D                                   STR_20 1088  
                                 STR_21 1078                                   STR_13 1055  
                                 STR_14 1059                                   STR_22 1084  
                                 STR_15 106C                                   STR_23 108C  
                                 STR_16 1080                                   STR_24 1065  
                                 STR_17 107C                                   STR_25 1022  
                                 STR_18 1074                                   STR_19 1070  
                       __end_of___flmul 07B8                         __end_of___fltol 1657  
                                 _ANSEL 0188                                   _T2CON 0012  
                                 _AM_PM 006C                         __end_of___lwdiv 14FB  
                       __end_of___lwmod 13F9                      ??_Update_Farenheit 0059  
                                 _PORTB 0006                                   _TRISB 0086  
                                 _SSPIE 0463                                   _TRISE 0089  
                                 _SSPIF 0063                  __end_of_LCD_Set_Cursor 13BF  
                                 _Month 00A8                         __end_of_dpowers 101A  
                       __end_of_isdigit 0015                                   _hours 00B6  
                                 _month 019A                       __end_of_I2C_Ready 11AD  
                       __end_of_sendRGB 1203                       __end_of_I2C_Start 1271  
                     __end_of_I2C_Write 1217                                   pclath 000A  
                                 status 0003                                   wtemp0 007E  
                       __end_of_sprintf 0457                          _LCD_Write_4Bit 0800  
                        _LCD_Write_Char 12A6                         __initialization 07B8  
                          __end_of_main 019C                 RTC_Calendar_Write@month 0073  
                     _IO_Expander_Write 122B                               ??_I2C_Ack 0070  
                    ?_IO_Expander_Write 0070                       ?_ChangeBrightness 0070  
                                ??_main 005F                       __end_of_LCD_Clear 11DC  
                             ??_LCD_CMD 0075                      ??_ChangeBrightness 0070  
                     __end_of_LED_Color 16DB                      _RTC_Calendar_Write 135E  
                   ??_IO_Expander_Write 0072                         ?_LCD_Set_Cursor 0077  
                                _ADRESH 001E                                  _ADRESL 009E  
                                _CCPR1L 0015                                  _ANSELH 0189  
                          LED_Color@brt 0076                     ?_RTC_Calendar_Write 0072  
                                _SSPADD 0093                                  _TRISB0 0430  
                                _TRISB1 0431                                  _SSPBUF 0013  
                                _SSPCON 0014                  __end_of_LCD_Write_4Bit 081A  
                      __end_of___xxtofl 0925                  __end_of_LCD_Write_Char 12C3  
             __end_of_IO_Expander_Write 1241                             _DisplayTemp 14FB  
                             ??___fladd 0042                                  ___wmul 12C3  
                             ??___flmul 0028                               ??___fltol 0052  
                             ??___lwdiv 0074                               ??___lwmod 007C  
                  ??_RTC_Calendar_Write 0075                                  _result 0069  
                    _I2C_Repeated_Start 1271                        __end_of_sendByte 0B80  
                             ?_I2C_Nack 0070                               ??_isdigit 0070  
                             ?_I2C_Init 0070                               ?_I2C_Read 0070  
                             ??_sendRGB 0073                               ?_I2C_Stop 0070  
                   ?_I2C_Repeated_Start 0070                               ??_sprintf 0025  
                          ___xxtofl@arg 007A                            ___xxtofl@exp 0079  
                          ___xxtofl@val 0070                 __end_of__initialization 07FC  
                             ?_LCD_Init 0070                               ?_LED_Init 0070  
                       ?_LCD_Write_4Bit 0070                              ___fltol@f1 004E  
                       ?_LCD_Write_Char 0070                    ??_I2C_Repeated_Start 0071  
                        __pcstackCOMMON 0070                            __pidataBANK0 1193  
                          __pidataBANK1 118D                            __pidataBANK3 119E  
                    _RotaryEncoder_Init 1241                       __end_of_ReadPhoto 1437  
                   ?_RotaryEncoder_Init 0070                              ??_I2C_Nack 0070  
                            ??_I2C_Init 0070                              ??_I2C_Read 0070  
                            ??_I2C_Stop 0070                        ??_RTC_Read_Clock 0073  
                          sprintf@width 0032                              __pbssBANK0 0062  
                            __pbssBANK1 00A0                              __pbssBANK3 0190  
                            ??_LCD_Init 0077                              ??_LED_Init 0070  
                    DisplayTemp@buffer1 0038                      DisplayTemp@buffer2 0048  
                  ??_RotaryEncoder_Init 0070                       __end_of__Umul8_16 1334  
                            __pmaintext 0015                            I2C_Read@flag 0071  
                        I2C_Read@buffer 0072                                 ?___wmul 0070  
                               _I2C_Ack 11BE                                 _ACKSTAT 048E  
                          ?_ChangeColor 0070                                 _LCD_CMD 128A  
                             ?___xxtofl 0070                              _brightness 006B  
                               _SSPCON2 0091                                 _SSPSTAT 0094  
                            __stringtab 1000                               _I2C_Ready 11A5  
                             _I2C_Start 1258                               _I2C_Write 1203  
                             ?_sendByte 0070                                 ___fladd 0D78  
                     _RTC_Read_Calendar 081A                                 ___flmul 0457  
                               ___fltol 15DB                                 ___lwdiv 14B7  
                               ___lwmod 13BF                      ?_RTC_Read_Calendar 0070  
                             _ANSELbits 0188                        ??_LCD_Set_Cursor 0078  
                               __ptext1 0B80                                 __ptext2 1437  
                               __ptext3 081A                                 __ptext4 1271  
                               __ptext5 12E8                                 __ptext6 11C7  
                               __ptext7 11BE                                 __ptext8 0925  
                               __ptext9 1762                       __end_of_hexpowers 1022  
                               _dpowers 1010                                 _isdigit 0003  
                            ??___xxtofl 0074                                 _sendRGB 11EF  
                   ??_RTC_Read_Calendar 0073                               _LCD_Clear 11D0  
                               _sprintf 019C                               _LED_Color 1657  
                               clrloop0 11AE                    end_of_initialization 07FC  
                            ?_I2C_Ready 0070                              ?_I2C_Start 0070  
                            ?_I2C_Write 0070                              ??_sendByte 0070  
             __end_of_RTC_Read_Calendar 086B                            ?_DisplayTemp 0070  
                    RTC_Clock_Write@min 0072                      RTC_Clock_Write@sec 0076  
                            _printClock 0B80                               _PORTBbits 0006  
                            LCD_CMD@CMD 0076                             ___fladd@grs 004D  
                     ??_RTC_Clock_Write 0075                           ___xxtofl@sign 0078  
                             _TRISBbits 0086                              ?_LCD_Clear 0070  
                            ?_LED_Color 0070                        ??_LCD_Write_4Bit 0073  
                     LCD_Write_String@i 007C                        ??_LCD_Write_Char 0075  
                           ___flmul@grs 002E                             _CCP1CONbits 0017  
                 _Update_Farenheit$1560 005B                          __end_of___wmul 12E8  
                      _LCD_Write_String 1475                     start_initialization 07B8  
                RTC_Calendar_Write@date 0072                               _ReadPhoto 13F9  
                RTC_Calendar_Write@year 0074    I2C_Repeated_Start@slave_read_address 0071  
                      _Update_Farenheit 0925                             ??_I2C_Ready 0070  
                           ??_I2C_Start 0071                             ??_I2C_Write 0070  
                   _Update_Celsius$1561 005B                               _Temp_Mode 00B0  
                          _lastStateCLK 00A4                                ??___wmul 0074  
                            init_fetch0 11DC                               __Umul8_16 130D  
                           __pdataBANK0 006B                             __pdataBANK1 00E8  
                           __pdataBANK3 01AE                                ?_I2C_Ack 0070  
                           ?_printClock 0070                               ___fladd@a 003E  
                             ___fladd@b 003A                                ?_LCD_CMD 0070  
                             ___flmul@a 0024                               ___flmul@b 0020  
                             ___latbits 0002                           __pcstackBANK0 0020  
                         __pcstackBANK1 00D4                             ??_LCD_Clear 0077  
                            ?_ReadPhoto 0070                            _isdigit$1347 0070  
                           ??_LED_Color 0074                          _Update_Celsius 1762  
                      _ChangeBrightness 1569                             sprintf@flag 002F  
                           sprintf@prec 0029                               _alarmTime 00AE  
                      ___lwdiv@dividend 0072                   IO_Expander_Write@Data 0072  
                              ?___fladd 003A                                ?___flmul 0020  
                              ?___fltol 004E                         main@displayMode 00E6  
                            ?__Umul8_16 0070                                ?___lwdiv 0070  
                              ?___lwmod 0078                               __pstrings 1000  
                              _I2C_Nack 11C7                                ?_isdigit 0070  
                              _I2C_Init 1217                                _I2C_Read 12E8  
                              ?_sendRGB 0071                                _I2C_Stop 11B5  
                __end_of_Update_Celsius 1800                               _hexpowers 101A  
                      ___lwdiv@quotient 0075                                ?_sprintf 0020  
                              _LCD_Init 16DB                          ___wmul@product 0074  
                              _LED_Init 118F                               clear_ram0 11AD  
                              _PIE1bits 008C                                _PIR1bits 000C  
                       _RTC_Clock_Write 1334                              _ADCON0bits 001F  
                           __stringbase 100F                              _ADCON1bits 009F  
                     ___wmul@multiplier 0070                             ??_ReadPhoto 0070  
                       ?_Update_Celsius 0070            I2C_Start@slave_write_address 0071  
              __end_of_LCD_Write_String 14B7                   RTC_Calendar_Write@day 0075  
                         I2C_Write@data 0070                             ??__Umul8_16 0072  
              __end_of_Update_Farenheit 0A16                      __end_of__stringtab 1010  
                            _ANSELHbits 0189                           _temperature_c 00B4  
                         _temperature_f 00B2                              sprintf@idx 0028  
                            sprintf@len 002D                              sprintf@val 0030  
                              ___xxtofl 086B                               sendByte@b 0070  
                       ___lwdiv@divisor 0070                         ___lwdiv@counter 0077  
                              __ptext10 086B                                __ptext11 15DB  
                              __ptext20 16DB                                __ptext12 0457  
                              __ptext21 11D0                                __ptext13 130D  
                              __ptext30 12A6                                __ptext22 1217  
                              __ptext14 0D78                                __ptext31 1389  
                              __ptext23 14FB                                __ptext15 1241  
                              __ptext40 1657                                __ptext32 128A  
                              __ptext24 019C                                __ptext16 13F9  
                              __ptext41 11EF                                __ptext33 0800  
                              __ptext25 0003                                __ptext17 1334  
                              __ptext42 0A16                                __ptext34 122B  
                              __ptext26 12C3                                __ptext18 135E  
                              __ptext43 1569                                __ptext35 11B5  
                              __ptext27 13BF                                __ptext19 118F  
                              __ptext36 1258                                __ptext28 14B7  
                              __ptext37 1203                                __ptext29 1475  
                              __ptext38 11A5                                __ptext39 1197  
                              _btnState 00A2                         _BackLight_State 006E  
               __end_of_RTC_Clock_Write 135E                                _sendByte 0A16  
                          _photo_result 00A0              __end_of_RTC_Calendar_Write 1389  
                         ??_ChangeColor 0077                __end_of_ChangeBrightness 15DB  
                          ??_printClock 0035                      LCD_Write_Char@Data 0076  
                              init_ram0 11E0                    RTC_Clock_Write@AM_PM 0074  
                              isdigit@c 0071                                sendRGB@b 0072  
                              sendRGB@g 0071                                sendRGB@r 0073  
                             sprintf@ap 002C                               sprintf@cp 002A  
                             sprintf@sp 0020                          _colorIncrement 00E8  
                      ___lwmod@dividend 007A              __end_of_I2C_Repeated_Start 128A  
                    __end_of_printClock 0D78                          _RTC_Read_Clock 1437  
                             stringcode 100A                  __Umul8_16@multiplicand 0070  
                              sprintf@c 0034                                sprintf@f 0022  
                   RTC_Clock_Write@hour 0073                         ___lwmod@divisor 0078  
                           _PSTRCONbits 009D                         ___lwmod@counter 007D  
                              stringdir 100A                                stringtab 1000  
                   __end_of_ChangeColor 119E                       LCD_Set_Cursor@COL 0077  
                     LCD_Set_Cursor@ROW 007A                             _SSPCON2bits 0091  
                         ___fladd@signs 004A              __end_of_RotaryEncoder_Init 1258  
                          ___fladd@aexp 004B                            ___fladd@bexp 004C  
                __end_of_RTC_Read_Clock 1475                    __Umul8_16@multiplier 0078  
                      ?_RTC_Clock_Write 0072                       __Umul8_16@product 0074  
                         ??_DisplayTemp 0035  
